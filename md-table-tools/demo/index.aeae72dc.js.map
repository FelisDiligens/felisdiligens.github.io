{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,S,E,C,C,C,E,O,O,I,C,G,O,C,S,C,E,Y,G,A,e,G,E,c,C,I,O,c,C,E,E,C,W,C,E,I,W,O,C,C,E,A,C,E,G,C,C,S,E,C,E,O,G,E,U,C,E,O,C,C,C,IkHgBE,E9EfS,E,EMUA,EAkBC,EAmCD,EAQC,EF9DA,EAOA,EyB2BM,EQmDP,EM/FA,EA4BA,EqCxBX,ECHA,EAiCA,EW3BW,ECPA,ECAA,EEWA,EAkBC,EAmCD,EAQC,ECvED,EASA,EAgBA,EAMA,EAkIA,EP7HP,ESnCO,EVcP,EuBRO,EA+BA,EA2EC,EM3GD,EA+BA,EA4DC,EC6hBR,ElJ9nBQ,EAQA,EAOA,ECmEA,EEvEPqlF,EE2GO,EC1GPA,ECkFA,E,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,Q,S,C,C,C,E,a,O,c,C,E,O,C,a,C,M,C,C,Gd7FL,EAAA,OAAA,CAAA,OAAA,CAAe,IAAI,YAEf,ugkBACK,KAAA,CAAM,IACN,GAAA,CAAI,SAAC,CAAC,EAAK,OAAA,EAAE,UAAA,CAAW,EAAb,G,G,E,Q,C,Q,S,C,C,C,E,a,O,c,C,E,O,C,a,C,M,C,C,GEJpB,EAAA,OAAA,CAAA,OAAA,CAAe,IAAI,YAEf,wDACK,KAAA,CAAM,IACN,GAAA,CAAI,SAAC,CAAC,EAAK,OAAA,EAAE,UAAA,CAAW,EAAb,G,G,E,Q,C,Q,S,C,C,C,E,a,O,c,C,E,O,C,a,C,M,C,C,G,E,O,C,gB,C,E,O,C,a,C,K,EEJpB,I,EAAM,EAAY,IAAI,IAAI,CACtB,CAAC,EAAG,MAAM,CAEV,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,KAAK,CACX,CAAC,IAAK,IAAI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,SAAN,GACA,GAAK,QAAW,GAAK,QACrB,AAAM,SAAN,GACA,GAAK,QAAW,GAAK,QACrB,AAAM,SAAN,GACA,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,AAAM,SAAN,GACA,AAAM,SAAN,GACA,AAAM,SAAN,GACA,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,AAAM,SAAN,GACA,AAAM,SAAN,GACA,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,AAAM,SAAN,GACA,GAAK,QAAW,GAAK,QACrB,AAAM,SAAN,GACA,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,AAAM,SAAN,GACA,AAAM,SAAN,GACA,AAAM,SAAN,GACA,AAAM,SAAN,GACA,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,AAAM,SAAN,GACA,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,AAAM,SAAN,GACA,AAAM,SAAN,GACA,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,AAAM,SAAN,GACA,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QACrB,GAAK,QAAW,GAAK,QDpVpB,GCjBE,CAAA,AAAM,MDiBuB,GChBhC,AAAM,MDgB0B,GCfhC,AAAM,MDe0B,GCdhC,AAAM,MDc0B,GCbhC,AAAM,MDa0B,GCZhC,AAAM,MDY0B,GCXhC,AAAM,MDW0B,GCVhC,ADUgC,GCV3B,KAAQ,ADUmB,GCVd,KAClB,ADSgC,GCT3B,KAAQ,ADSmB,GCTd,KAClB,ADQgC,GCR3B,KAAQ,ADQmB,GCRd,KAClB,AAAM,MDO0B,GCNhC,AAAM,MDM0B,GCLhC,AAAM,MDK0B,GCJhC,AAAM,MDI0B,GCHhC,ADGgC,GCH3B,KAAQ,ADGmB,GCHd,KAClB,AAAM,MDE0B,GCDhC,ADCgC,GCD3B,KAAQ,ADCmB,GCDd,KAClB,AAAM,MDA0B,GCChC,AAAM,MDD0B,GCEhC,AAAM,MDF0B,GCGhC,AAAM,MDH0B,GCIhC,AAAM,MDJ0B,GCKhC,ADLgC,GCK3B,KAAQ,ADLmB,GCKd,KAClB,AAAM,MDN0B,GCOhC,AAAM,MDP0B,GCQhC,AAAM,MDR0B,GCShC,AAAM,MDT0B,GCUhC,AAAM,MDV0B,GCWhC,AAAM,MDX0B,GCYhC,AAAM,MDZ0B,GCahC,AAAM,MDb0B,GCchC,AAAM,MDd0B,GCehC,ADfgC,GCe3B,KAAS,ADfkB,GCeb,KACnB,AAAM,MDhB0B,GCiBhC,ADjBgC,GCiB3B,KAAS,ADjBkB,GCiBb,KACnB,AAAM,MDlB0B,GCmBhC,ADnBgC,GCmB3B,KAAS,ADnBkB,GCmBb,KACnB,AAAM,MDpB0B,GCqBhC,AAAM,MDrB0B,GCsBhC,AAAM,MDtB0B,GCuBhC,AAAM,MDvB0B,GCwBhC,AAAM,MDxB0B,GCyBhC,AAAM,MDzB0B,GC0BhC,AAAM,MD1B0B,GC2BhC,AAAM,MD3B0B,GC4BhC,AAAM,MD5B0B,GC6BhC,AAAM,MD7B0B,GC8BhC,AAAM,MD9B0B,GC+BhC,AAAM,MD/B0B,GCgChC,AAAM,MDhC0B,GCiChC,AAAM,MDjC0B,GCkChC,AAAM,MDlC0B,GCmChC,AAAM,MDnC0B,GCoChC,AAAM,MDpC0B,GCqChC,AAAM,MDrC0B,GCsChC,ADtCgC,GCsC3B,KAAS,ADtCkB,GCsCb,KACnB,AAAM,MDvC0B,GCwChC,AAAM,MDxC0B,GCyChC,ADzCgC,GCyC3B,KAAS,ADzCkB,GCyCb,KACnB,AAAM,MD1C0B,GC2ChC,AAAM,MD3C0B,GC4ChC,AD5CgC,GC4C3B,KAAS,AD5CkB,GC4Cb,KACnB,AD7CgC,GC6C3B,KAAS,AD7CkB,GC6Cb,KACnB,AD9CgC,GC8C3B,KAAS,AD9CkB,GC8Cb,KACnB,AD/CgC,GC+C3B,KAAS,AD/CkB,GC+Cb,KACnB,ADhDgC,GCgD3B,KAAS,ADhDkB,GCgDb,KACnB,AAAM,ODjD0B,GCkDhC,ADlDgC,GCkD3B,MAAS,ADlDkB,GCkDb,MACnB,AAAM,ODnD0B,GCoDhC,AAAM,ODpD0B,GCqDhC,ADrDgC,GCqD3B,MAAU,ADrDiB,GCqDZ,MACpB,AAAM,ODtD0B,GCuDhC,AAAM,ODvD0B,GCwDhC,AAAM,ODxD0B,GCyDhC,AAAM,ODzD0B,GC0DhC,AD1DgC,GC0D3B,MAAU,AD1DiB,GC0DZ,MACpB,AD3DgC,GC2D3B,MAAU,AD3DiB,GC2DZ,MACpB,AAAM,OD5D0B,GC6DhC,AAAM,OD7D0B,GC8DhC,AAAM,OD9D0B,GC+DhC,AAAM,OD/D0B,GCgEhC,AAAM,ODhE0B,GCiEhC,AAAM,ODjE0B,GCkEhC,AAAM,ODlE0B,GCmEhC,AAAM,ODnE0B,GCoEhC,ADpEgC,GCoE3B,MAAU,ADpEiB,GCoEZ,MACpB,AAAM,ODrE0B,GCsEhC,AAAM,ODtE0B,GCuEhC,AAAM,ODvE0B,GCwEhC,AAAM,ODxE0B,GCyEhC,AAAM,ODzE0B,GC0EhC,AAAM,OD1E0B,GC2EhC,AAAM,OD3E0B,GC4EhC,AAAM,OD5E0B,GC6EhC,AAAM,OD7E0B,GC8EhC,AAAM,OD9E0B,GC+EhC,AAAM,OD/E0B,GCgFhC,AAAM,ODhF0B,GCiFhC,ADjFgC,GCiF3B,MAAU,ADjFiB,GCiFZ,MACpB,ADlFgC,GCkF3B,MAAU,ADlFiB,GCkFZ,MACpB,ADnFgC,GCmF3B,MAAU,ADnFiB,GCmFZ,MACpB,AAAM,ODpF0B,GCqFhC,ADrFgC,GCqF3B,MAAU,ADrFiB,GCqFZ,MACpB,AAAM,ODtF0B,GCuFhC,AAAM,ODvF0B,GCwFhC,AAAM,ODxF0B,GCyFhC,AAAM,ODzF0B,GC0FhC,AAAM,OD1F0B,GC2FhC,AAAM,OD3F0B,GC4FhC,AAAM,OD5F0B,GC6FhC,AAAM,OD7F0B,GC8FhC,AAAM,OD9F0B,GC+FhC,AAAM,OD/F0B,GCgGhC,AAAM,ODhG0B,GCiGhC,AAAM,ODjG0B,GCkGhC,AAAM,ODlG0B,GCmGhC,AAAM,ODnG0B,GCoGhC,AAAM,ODpG0B,GCqGhC,ADrGgC,GCqG3B,MAAU,ADrGiB,GCqGZ,MACpB,AAAM,ODtG0B,GCuGhC,AAAM,ODvG0B,GCwGhC,ADxGgC,GCwG3B,MAAU,ADxGiB,GCwGZ,MACpB,AAAM,ODzG0B,GC0GhC,AD1GgC,GC0G3B,MAAU,AD1GiB,GC0GZ,MACpB,AAAM,OD3G0B,GC4GhC,AAAM,OD5G0B,GC6GhC,AAAM,OD7G0B,GC8GhC,AAAM,OD9G0B,GC+GhC,AAAM,OD/G0B,GCgHhC,AAAM,ODhH0B,GCiHhC,AAAM,ODjH0B,GCkHhC,ADlHgC,GCkH3B,MAAU,ADlHiB,GCkHZ,MACpB,AAAM,ODnH0B,GCoHhC,AAAM,ODpH0B,GCqHhC,AAAM,ODrH0B,GCsHhC,AAAM,ODtH0B,GCuHhC,AAAM,ODvH0B,GCwHhC,AAAM,ODxH0B,GCyHhC,AAAM,ODzH0B,GC0HhC,AAAM,OD1H0B,GC2HhC,AAAM,OD3H0B,GC4HhC,AAAM,OD5H0B,GC6HhC,AAAM,OD7H0B,GC8HhC,AAAM,OD9H0B,GC+HhC,AAAM,OD/H0B,GCgIhC,ADhIgC,GCgI3B,MAAU,ADhIiB,GCgIZ,MACpB,ADjIgC,GCiI3B,MAAU,ADjIiB,GCiIZ,MACpB,ADlIgC,GCkI3B,MAAU,ADlIiB,GCkIZ,MACpB,ADnIgC,GCmI3B,MAAU,ADnIiB,GCmIZ,MACpB,ADpIgC,GCoI3B,MAAU,ADpIiB,GCoIZ,MACpB,AAAM,ODrI0B,GCsIhC,AAAM,ODtI0B,GCuIhC,ADvIgC,GCuI3B,MAAU,ADvIiB,GCuIZ,MACpB,AAAM,ODxI0B,GCyIhC,AAAM,ODzI0B,GC0IhC,AAAM,OD1I0B,GC2IhC,AAAM,OD3I0B,GC4IhC,AAAM,OD5I0B,GC6IhC,AAAM,OD7I0B,GC8IhC,AAAM,OD9I0B,GC+IhC,AAAM,OD/I0B,GCgJhC,ADhJgC,GCgJ3B,MAAU,ADhJiB,GCgJZ,MACpB,AAAM,ODjJ0B,GCkJhC,ADlJgC,GCkJ3B,MAAU,ADlJiB,GCkJZ,MACpB,ADnJgC,GCmJ3B,MAAU,ADnJiB,GCmJZ,MACpB,AAAM,ODpJ0B,GCqJhC,AAAM,ODrJ0B,GCsJhC,AAAM,ODtJ0B,GCuJhC,AAAM,ODvJ0B,GCwJhC,AAAM,ODxJ0B,GCyJhC,AAAM,ODzJ0B,GC0JhC,AAAM,OD1J0B,GC2JhC,AAAM,OD3J0B,GC4JhC,AAAM,OD5J0B,GC6JhC,AAAM,OD7J0B,GC8JhC,AAAM,OD9J0B,GC+JhC,AAAM,OD/J0B,GCgKhC,ADhKgC,GCgK3B,MAAU,ADhKiB,GCgKZ,MACpB,ADjKgC,GCiK3B,MAAU,ADjKiB,GCiKZ,MACpB,AAAM,ODlK0B,GCmKhC,AAAM,ODnK0B,GCoKhC,AAAM,ODpK0B,GCqKhC,AAAM,ODrK0B,GCsKhC,AAAM,ODtK0B,GCuKhC,AAAM,ODvK0B,GCwKhC,ADxKgC,GCwK3B,MAAU,ADxKiB,GCwKZ,MACpB,ADzKgC,GCyK3B,MAAU,ADzKiB,GCyKZ,MACpB,AD1KgC,GC0K3B,MAAU,AD1KiB,GC0KZ,MACpB,AAAM,OD3K0B,GC4KhC,AAAM,OD5K0B,GC6KhC,AAAM,OD7K0B,GC8KhC,AD9KgC,GC8K3B,MAAU,AD9KiB,GC8KZ,MACpB,AAAM,OD/K0B,GCgLhC,ADhLgC,GCgL3B,MAAU,ADhLiB,GCgLZ,MACpB,AAAM,ODjL0B,GCkLhC,AAAM,ODlL0B,GCmLhC,AAAM,ODnL0B,GCoLhC,AAAM,ODpL0B,GCqLhC,AAAM,QDrL0B,GCsLhC,ADtLgC,GCsL3B,OAAU,ADtLiB,GCsLZ,OACpB,ADvLgC,GCuL3B,OAAU,ADvLiB,GCuLZ,OACpB,ADxLgC,GCwL3B,OAAU,ADxLiB,GCwLZ,OACpB,ADzLgC,GCyL3B,OAAU,ADzLiB,GCyLZ,OACpB,AD1LgC,GC0L3B,OAAU,AD1LiB,GC0LZ,OACpB,AAAM,QD3L0B,GC4LhC,AD5LgC,GC4L3B,QAAW,AD5LgB,GC4LX,QACrB,AD7LgC,GC6L3B,QAAW,AD7LgB,GC6LX,QACrB,AD9LgC,GC8L3B,QAAW,AD9LgB,GC8LX,QACrB,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CAAA,YAKA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MACJ,EA3BY,GAAA,CAAA,EAAY,CAAA,CAAA,GejBjB,MAAM,GAAe,IAAI,IAAI,CAChC,WACA,cACA,eACA,eACA,gBACA,mBACA,WACA,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,eACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,eACA,gBACA,WACA,iBACA,iBACA,WACH,CAAC,GAAA,CAAI,AAAC,GAAQ,CAAC,EAAI,WAAJ,GAAmB,EAAI,GAC1B,GAAiB,IAAI,IAAI,CAClC,gBACA,gBACA,gBACA,gBACA,cACA,WACA,gBACA,kBACA,WACA,cACA,WACA,oBACA,gBACA,eACA,mBACA,YACA,aACA,WACA,eACA,oBACA,eACA,cACA,cACA,mBACA,YACA,aACA,aACA,sBACA,mBACA,eACA,YACA,YACA,YACA,gBACA,sBACA,iBACA,OACA,OACA,cACA,YACA,qBACA,mBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,eACA,iBACA,cACA,UACA,UACA,aACA,UACA,aACA,mBACA,mBACA,aACH,CAAC,GAAA,CAAI,AAAC,GAAQ,CAAC,EAAI,WAAJ,GAAmB,EAAI,GjBvFjC,GAAoB,IAAI,IAAI,CAC9B,QACA,SACA,MACA,SACA,UACA,WACA,YACA,WACH,EACD,SAAS,GAAc,CAAK,EACxB,OAAO,EAAM,OAAA,CAAQ,KAAM,SAC/B,CA+BA,MAAM,GAAY,IAAI,IAAI,CACtB,OACA,OACA,WACA,KACA,MACA,UACA,QACA,QACA,KACA,MACA,QACA,UACA,SACA,OACA,OACA,QACA,SACA,QACA,MACH,EASM,SAAS,GAAO,CAAI,CAAE,EAAU,CAAC,CAAC,EACrC,IAAM,EAAQ,WAAY,EAAO,EAAO,CAAC,EAAK,CAC1C,EAAS,GACb,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAA,CAAQ,IAC9B,GAAU,AAKlB,SAAoB,CAAI,CAAE,CAAO,EAC7B,OAAQ,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,CAAA,IAAI,CAAC,KAAA,CAAQ,CAAA,CACjB,CACJ,CGrLO,SAAS,GAAa,CAAK,CAAE,CAAQ,EACxC,IAAK,IAAI,EAAI,EAAM,KAAA,CAAM,MAAA,CAAS,EAAG,GAAK,EAAG,IACzC,GAAI,EAAM,KAAK,CAAC,EAAE,CAAC,IAAA,GAAS,EACxB,OAAO,EAAM,KAAK,CAAC,EAAE,CAAC,KAD1B,CAIJ,OAAO,IACX,C,cAlBC,AAAA,SAAU,CAAS,EAChB,CAAS,CAAC,EAAU,SAAY,CAAG,EAAE,CAAG,YACxC,CAAS,CAAC,EAAU,cAAiB,CAAG,EAAE,CAAG,iBAC7C,CAAS,CAAC,EAAU,oBAAuB,CAAG,EAAE,CAAG,uBACnD,CAAS,CAAC,EAAU,SAAY,CAAG,EAAE,CAAG,YACxC,CAAS,CAAC,EAAU,OAAU,CAAG,EAAE,CAAG,UACtC,CAAS,CAAC,EAAU,OAAU,CAAG,EAAE,CAAG,UACtC,CAAS,CAAC,EAAU,OAAU,CAAG,EAAE,CAAG,UACtC,CAAS,CAAC,EAAU,GAAM,CAAG,EAAE,CAAG,MAClC,CAAS,CAAC,EAAU,WAAc,CAAG,EAAE,CAAG,aAC9C,EAAG,EAAY,GAAc,CAAA,EAAY,CAAC,CAAA,G,I,G,C,E,G,I,G,e,E,C,O,M,C,S,C,C,C,C,C,C,C,E,K,I,G,C,E,C,E,I,E,O,wB,C,E,G,C,C,G,C,Q,E,C,E,U,C,E,Q,E,E,Y,A,C,G,C,E,C,W,C,E,I,W,O,C,C,E,A,C,C,E,O,c,C,E,E,E,E,S,C,C,C,C,C,C,C,E,K,I,G,C,E,C,E,C,C,E,C,C,C,E,A,C,E,G,I,G,kB,E,C,O,M,C,S,C,C,C,E,O,c,C,E,U,C,W,C,E,M,C,E,E,S,C,C,C,E,E,O,C,C,C,E,G,I,G,Y,E,S,C,E,G,G,E,U,C,O,E,I,E,C,E,G,A,M,E,I,I,K,E,Y,G,O,S,C,c,C,I,C,E,I,G,E,E,G,O,G,E,G,C,E,G,I,G,e,E,S,C,E,O,G,E,U,C,E,C,Q,C,C,E,O,c,C,G,a,C,M,C,C,G,G,S,C,G,gB,C,G,mB,C,G,U,C,G,e,C,G,a,C,G,Y,C,G,Y,C,G,a,C,G,gB,C,G,e,C,G,a,C,G,c,C,K,EE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","sources":["<anon>","node_modules/entities/lib/generated/decode-data-html.js","node_modules/entities/lib/generated/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","node_modules/entities/lib/generated/decode-data-xml.js","node_modules/entities/lib/generated/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","node_modules/entities/lib/decode_codepoint.js","node_modules/entities/lib/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","src/main.js","node_modules/@felisdiligens/md-table-tools/dist/mjs/bundle.js","node_modules/@felisdiligens/md-table-tools/src/tables/table.ts","node_modules/@felisdiligens/md-table-tools/src/tables/csvTable.ts","node_modules/@felisdiligens/md-table-tools/src/tables/tableParser.ts","node_modules/@felisdiligens/md-table-tools/src/tables/gfmTable.ts","node_modules/@felisdiligens/md-table-tools/src/tables/common.ts","node_modules/@felisdiligens/md-table-tools/src/tables/htmlTable.ts","node_modules/@felisdiligens/md-table-tools/src/tables/multiMarkdownTable.ts","node_modules/@felisdiligens/md-table-tools/src/tables/dokuWikiTable.ts","node_modules/string-width/index.js","node_modules/strip-ansi/index.js","node_modules/ansi-regex/index.js","node_modules/get-east-asian-width/index.js","node_modules/get-east-asian-width/lookup.js","node_modules/emoji-regex/index.mjs","node_modules/cheerio/lib/esm/index.js","node_modules/cheerio/lib/esm/https:/raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/index.ts","node_modules/cheerio/lib/esm/https:/raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/types.ts","node_modules/cheerio/lib/esm/load.js","node_modules/cheerio/lib/esm/https:/raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/load.ts","node_modules/cheerio/lib/esm/options.js","node_modules/cheerio/lib/esm/https:/raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/options.ts","node_modules/cheerio/lib/esm/static.js","node_modules/cheerio/lib/esm/https:/raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/static.ts","node_modules/domutils/lib/esm/https:/raw.githubusercontent.com/fb55/domutils/96c989e159c98218958f375ea04210f2d1b43c0c/src/index.ts","node_modules/domutils/lib/esm/stringify.js","node_modules/domutils/lib/esm/https:/raw.githubusercontent.com/fb55/domutils/96c989e159c98218958f375ea04210f2d1b43c0c/src/stringify.ts","node_modules/domhandler/lib/esm/index.js","node_modules/domelementtype/lib/esm/index.js","node_modules/domhandler/lib/esm/node.js","node_modules/dom-serializer/lib/esm/index.js","node_modules/entities/lib/esm/index.js","node_modules/entities/lib/esm/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/index.ts","node_modules/entities/lib/esm/decode.js","node_modules/entities/lib/esm/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","node_modules/entities/lib/esm/generated/decode-data-html.js","node_modules/entities/lib/esm/generated/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","node_modules/entities/lib/esm/generated/decode-data-xml.js","node_modules/entities/lib/esm/generated/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","node_modules/entities/lib/esm/decode_codepoint.js","node_modules/entities/lib/esm/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","node_modules/entities/lib/esm/encode.js","node_modules/entities/lib/esm/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/encode.ts","node_modules/entities/lib/esm/generated/encode-html.js","node_modules/entities/lib/esm/generated/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/encode-html.ts","node_modules/entities/lib/esm/escape.js","node_modules/entities/lib/esm/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","node_modules/dom-serializer/lib/esm/foreignNames.js","node_modules/domutils/lib/esm/traversal.js","node_modules/domutils/lib/esm/https:/raw.githubusercontent.com/fb55/domutils/96c989e159c98218958f375ea04210f2d1b43c0c/src/traversal.ts","node_modules/domutils/lib/esm/manipulation.js","node_modules/domutils/lib/esm/https:/raw.githubusercontent.com/fb55/domutils/96c989e159c98218958f375ea04210f2d1b43c0c/src/manipulation.ts","node_modules/domutils/lib/esm/querying.js","node_modules/domutils/lib/esm/https:/raw.githubusercontent.com/fb55/domutils/96c989e159c98218958f375ea04210f2d1b43c0c/src/querying.ts","node_modules/domutils/lib/esm/legacy.js","node_modules/domutils/lib/esm/https:/raw.githubusercontent.com/fb55/domutils/96c989e159c98218958f375ea04210f2d1b43c0c/src/legacy.ts","node_modules/domutils/lib/esm/helpers.js","node_modules/domutils/lib/esm/https:/raw.githubusercontent.com/fb55/domutils/96c989e159c98218958f375ea04210f2d1b43c0c/src/helpers.ts","node_modules/domutils/lib/esm/feeds.js","node_modules/domutils/lib/esm/https:/raw.githubusercontent.com/fb55/domutils/96c989e159c98218958f375ea04210f2d1b43c0c/src/feeds.ts","node_modules/cheerio/lib/esm/cheerio.js","node_modules/cheerio/lib/esm/https:/raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/cheerio.ts","node_modules/cheerio/lib/esm/api/attributes.js","node_modules/cheerio/lib/esm/api/https:/raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/api/attributes.ts","node_modules/cheerio/lib/esm/utils.js","node_modules/cheerio/lib/esm/https:/raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/utils.ts","node_modules/cheerio/lib/esm/api/traversing.js","node_modules/cheerio/lib/esm/api/https:/raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/api/traversing.ts","node_modules/cheerio-select/lib/esm/index.js","node_modules/cheerio-select/lib/esm/https:/raw.githubusercontent.com/cheeriojs/cheerio-select/ef063a6ca4c3f0d02d2fc3505e750b6fb81c448d/src/index.ts","node_modules/css-what/lib/es/parse.js","node_modules/css-what/lib/es/types.js","node_modules/css-select/lib/esm/index.js","node_modules/css-select/lib/esm/https:/raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/index.ts","node_modules/boolbase/index.js","node_modules/css-select/lib/esm/compile.js","node_modules/css-select/lib/esm/https:/raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/compile.ts","node_modules/css-select/lib/esm/sort.js","node_modules/css-select/lib/esm/https:/raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/sort.ts","node_modules/css-select/lib/esm/general.js","node_modules/css-select/lib/esm/https:/raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/general.ts","node_modules/css-select/lib/esm/attributes.js","node_modules/css-select/lib/esm/https:/raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/attributes.ts","node_modules/css-select/lib/esm/pseudo-selectors/index.js","node_modules/css-select/lib/esm/pseudo-selectors/https:/raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/pseudo-selectors/index.ts","node_modules/css-select/lib/esm/pseudo-selectors/filters.js","node_modules/css-select/lib/esm/pseudo-selectors/https:/raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/pseudo-selectors/filters.ts","node_modules/nth-check/lib/esm/index.js","node_modules/nth-check/lib/esm/https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts","node_modules/nth-check/lib/esm/parse.js","node_modules/nth-check/lib/esm/https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/parse.ts","node_modules/nth-check/lib/esm/compile.js","node_modules/nth-check/lib/esm/https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/compile.ts","node_modules/css-select/lib/esm/pseudo-selectors/pseudos.js","node_modules/css-select/lib/esm/pseudo-selectors/https:/raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/pseudo-selectors/pseudos.ts","node_modules/css-select/lib/esm/pseudo-selectors/aliases.js","node_modules/css-select/lib/esm/pseudo-selectors/https:/raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/pseudo-selectors/aliases.ts","node_modules/css-select/lib/esm/pseudo-selectors/subselects.js","node_modules/css-select/lib/esm/pseudo-selectors/https:/raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/pseudo-selectors/subselects.ts","node_modules/cheerio-select/lib/esm/helpers.js","node_modules/cheerio-select/lib/esm/https:/raw.githubusercontent.com/cheeriojs/cheerio-select/ef063a6ca4c3f0d02d2fc3505e750b6fb81c448d/src/helpers.ts","node_modules/cheerio-select/lib/esm/positionals.js","node_modules/cheerio-select/lib/esm/https:/raw.githubusercontent.com/cheeriojs/cheerio-select/ef063a6ca4c3f0d02d2fc3505e750b6fb81c448d/src/positionals.ts","node_modules/cheerio/lib/esm/api/manipulation.js","node_modules/cheerio/lib/esm/api/https:/raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/api/manipulation.ts","node_modules/cheerio/lib/esm/parse.js","node_modules/cheerio/lib/esm/https:/raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/parse.ts","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/cheerio/lib/esm/api/css.js","node_modules/cheerio/lib/esm/api/https:/raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/api/css.ts","node_modules/cheerio/lib/esm/api/forms.js","node_modules/cheerio/lib/esm/api/https:/raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/api/forms.ts","node_modules/cheerio/lib/esm/parsers/parse5-adapter.js","node_modules/cheerio/lib/esm/parsers/https:/raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/parsers/parse5-adapter.ts","node_modules/parse5/dist/index.js","node_modules/parse5/dist/parser/index.js","node_modules/parse5/dist/tokenizer/index.js","node_modules/parse5/dist/tokenizer/preprocessor.js","node_modules/parse5/dist/common/unicode.js","node_modules/parse5/dist/common/error-codes.js","node_modules/parse5/dist/common/token.js","node_modules/entities/lib/decode.js","node_modules/entities/lib/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","node_modules/parse5/dist/common/html.js","node_modules/parse5/dist/parser/open-element-stack.js","node_modules/parse5/dist/parser/formatting-element-list.js","node_modules/parse5/dist/tree-adapters/default.js","node_modules/parse5/dist/common/doctype.js","node_modules/parse5/dist/common/foreign-content.js","node_modules/parse5/dist/serializer/index.js","node_modules/entities/lib/escape.js","node_modules/entities/lib/https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","node_modules/parse5-htmlparser2-tree-adapter/dist/index.js","node_modules/cheerio/node_modules/htmlparser2/lib/esm/index.js","node_modules/cheerio/node_modules/htmlparser2/lib/esm/https:/raw.githubusercontent.com/fb55/htmlparser2/c123610e003a1eaebc61febed01cabb6e41eb658/src/index.ts","node_modules/cheerio/node_modules/htmlparser2/lib/esm/Parser.js","node_modules/cheerio/node_modules/htmlparser2/lib/esm/https:/raw.githubusercontent.com/fb55/htmlparser2/c123610e003a1eaebc61febed01cabb6e41eb658/src/Parser.ts","node_modules/cheerio/node_modules/htmlparser2/lib/esm/Tokenizer.js","node_modules/cheerio/node_modules/htmlparser2/lib/esm/https:/raw.githubusercontent.com/fb55/htmlparser2/c123610e003a1eaebc61febed01cabb6e41eb658/src/Tokenizer.ts","node_modules/htmlparser2/lib/esm/index.js","node_modules/htmlparser2/lib/esm/https:/raw.githubusercontent.com/fb55/htmlparser2/7475934d4062d7eb86c534c035ddac6146e15780/src/index.ts","node_modules/htmlparser2/lib/esm/Parser.js","node_modules/htmlparser2/lib/esm/https:/raw.githubusercontent.com/fb55/htmlparser2/7475934d4062d7eb86c534c035ddac6146e15780/src/Parser.ts","node_modules/htmlparser2/lib/esm/Tokenizer.js","node_modules/htmlparser2/lib/esm/https:/raw.githubusercontent.com/fb55/htmlparser2/7475934d4062d7eb86c534c035ddac6146e15780/src/Tokenizer.ts","node_modules/turndown/lib/turndown.browser.es.js"],"sourcesContent":["function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      }\n    });\n  });\n\n  return dest;\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire654a\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire654a\"] = parcelRequire;\n}\nparcelRequire.register(\"jgmxs\", function(module, exports) {\n\"use strict\";\n// Generated using scripts/write-decode-map.ts\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.default = new Uint16Array(// prettier-ignore\n'ᵁ<\\xd5ıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\\x00\\x00\\x00\\x00\\x00\\x00ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig耻\\xc6䃆P耻&䀦cute耻\\xc1䃁reve;䄂Āiyx}rc耻\\xc2䃂;䐐r;쀀\\ud835\\udd04rave耻\\xc0䃀pha;䎑acr;䄀d;橓Āgp\\x9d\\xa1on;䄄f;쀀\\ud835\\udd38plyFunction;恡ing耻\\xc5䃅Ācs\\xbe\\xc3r;쀀\\ud835\\udc9cign;扔ilde耻\\xc3䃃ml耻\\xc4䃄Ѐaceforsu\\xe5\\xfb\\xfeėĜĢħĪĀcr\\xea\\xf2kslash;或Ŷ\\xf6\\xf8;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀\\ud835\\udd05pf;쀀\\ud835\\udd39eve;䋘c\\xf2ēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻\\xa9䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻\\xc7䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷\\xf2ſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀\\ud835\\udc9epĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀\\ud835\\udd07Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\\x00\\x00\\x00͔͂\\x00Ѕf;쀀\\ud835\\udd3bƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegra\\xecȹoɴ͹\\x00\\x00ͻ\\xbb͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔e\\xe5ˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\\x00\\x00ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\\x00ц\\x00ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\\x00ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀\\ud835\\udc9frok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻\\xd0䃐cute耻\\xc9䃉ƀaiyӒӗӜron;䄚rc耻\\xca䃊;䐭ot;䄖r;쀀\\ud835\\udd08rave耻\\xc8䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\\x00\\x00ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀\\ud835\\udd3csilon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻\\xcb䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀\\ud835\\udd09lledɓ֗\\x00\\x00֣mallSquare;旼erySmallSquare;斪Ͱֺ\\x00ֿ\\x00\\x00ׄf;쀀\\ud835\\udd3dAll;戀riertrf;愱c\\xf2׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀\\ud835\\udd0a;拙pf;쀀\\ud835\\udd3eeater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀\\ud835\\udca2;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\\x00ڲf;愍izontalLine;攀Āctۃۅ\\xf2کrok;䄦mpńېۘownHum\\xf0įqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻\\xcd䃍Āiyܓܘrc耻\\xce䃎;䐘ot;䄰r;愑rave耻\\xcc䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lie\\xf3ϝǴ݉\\x00ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀\\ud835\\udd40a;䎙cr;愐ilde;䄨ǫޚ\\x00ޞcy;䐆l耻\\xcf䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀\\ud835\\udd0dpf;쀀\\ud835\\udd41ǣ߇\\x00ߌr;쀀\\ud835\\udca5rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀\\ud835\\udd0epf;쀀\\ud835\\udd42cr;쀀\\ud835\\udca6րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\\x00ࣃbleBracket;柦nǔࣈ\\x00࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ight\\xe1Μs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀\\ud835\\udd0fĀ;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊight\\xe1οight\\xe1ϊf;쀀\\ud835\\udd43erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂ\\xf2ࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀\\ud835\\udd10nusPlus;戓pf;쀀\\ud835\\udd44c\\xf2੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘\\xeb૙eryThi\\xee૙tedĀGL૸ଆreaterGreate\\xf2ٳessLes\\xf3ੈLine;䀊r;쀀\\ud835\\udd11ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀\\ud835\\udca9ilde耻\\xd1䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻\\xd3䃓Āiy෎ීrc耻\\xd4䃔;䐞blac;䅐r;쀀\\ud835\\udd12rave耻\\xd2䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀\\ud835\\udd46enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀\\ud835\\udcaaash耻\\xd8䃘iŬื฼de耻\\xd5䃕es;樷ml耻\\xd6䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀\\ud835\\udd13i;䎦;䎠usMinus;䂱Āipຢອncareplan\\xe5ڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀\\ud835\\udcab;䎨ȀUfos༑༖༛༟OT耻\"䀢r;쀀\\ud835\\udd14pf;愚cr;쀀\\ud835\\udcac؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻\\xae䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r\\xbbཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\\x00စbleBracket;柧nǔည\\x00နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀\\ud835\\udd16ortȀDLRUᄪᄴᄾᅉownArrow\\xbbОeftArrow\\xbb࢚ightArrow\\xbb࿝pArrow;憑gma;䎣allCircle;战pf;쀀\\ud835\\udd4aɲᅭ\\x00\\x00ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀\\ud835\\udcaear;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Th\\xe1ྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et\\xbbሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻\\xde䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀\\ud835\\udd17Āeiቻ኉ǲኀ\\x00ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀\\ud835\\udd4bipleDot;惛Āctዖዛr;쀀\\ud835\\udcafrok;䅦ૡዷጎጚጦ\\x00ጬጱ\\x00\\x00\\x00\\x00\\x00ጸጽ፷ᎅ\\x00᏿ᐄᐊᐐĀcrዻጁute耻\\xda䃚rĀ;oጇገ憟cir;楉rǣጓ\\x00጖y;䐎ve;䅬Āiyጞጣrc耻\\xdb䃛;䐣blac;䅰r;쀀\\ud835\\udd18rave耻\\xd9䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀\\ud835\\udd4cЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥own\\xe1ϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀\\ud835\\udcb0ilde;䅨ml耻\\xdc䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀\\ud835\\udd19pf;쀀\\ud835\\udd4dcr;쀀\\ud835\\udcb1dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀\\ud835\\udd1apf;쀀\\ud835\\udd4ecr;쀀\\ud835\\udcb2Ȁfiosᓋᓐᓒᓘr;쀀\\ud835\\udd1b;䎞pf;쀀\\ud835\\udd4fcr;쀀\\ud835\\udcb3ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻\\xdd䃝Āiyᔉᔍrc;䅶;䐫r;쀀\\ud835\\udd1cpf;쀀\\ud835\\udd50cr;쀀\\ud835\\udcb4ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\\x00ᕛoWidt\\xe8૙a;䎖r;愨pf;愤cr;쀀\\ud835\\udcb5௡ᖃᖊᖐ\\x00ᖰᖶᖿ\\x00\\x00\\x00\\x00ᗆᗛᗫᙟ᙭\\x00ᚕ᚛ᚲᚹ\\x00ᚾcute耻\\xe1䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻\\xe2䃢te肻\\xb4̆;䐰lig耻\\xe6䃦Ā;r\\xb2ᖺ;쀀\\ud835\\udd1erave耻\\xe0䃠ĀepᗊᗖĀfpᗏᗔsym;愵\\xe8ᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\\x00\\x00ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e\\xbbᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢\\xbb\\xb9arr;捼Āgpᙣᙧon;䄅f;쀀\\ud835\\udd52΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒ\\xf1ᚃing耻\\xe5䃥ƀctyᚡᚦᚨr;쀀\\ud835\\udcb6;䀪mpĀ;e዁ᚯ\\xf1ʈilde耻\\xe3䃣ml耻\\xe4䃤Āciᛂᛈonin\\xf4ɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e\\xbbᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰s\\xe9ᜌno\\xf5ēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀\\ud835\\udd1fg΀costuvwឍឝឳេ៕៛៞ƀaiuបពរ\\xf0ݠrc;旯p\\xbb፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\\x00\\x00ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄e\\xe5ᑄ\\xe5ᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\\x00ᠳƲᠯ\\x00ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀\\ud835\\udd53Ā;tᏋᡣom\\xbbᏌtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻\\xa6䂦Ȁceioᥑᥖᥚᥠr;쀀\\ud835\\udcb7mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t\\xbb᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\\x00᧨ᨑᨕᨲ\\x00ᨷᩐ\\x00\\x00᪴\\x00\\x00᫁\\x00\\x00ᬡᬮ᭍᭒\\x00᯽\\x00ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁\\xeeړȀaeiu᧰᧻ᨁᨅǰ᧵\\x00᧸s;橍on;䄍dil耻\\xe7䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻\\xb8ƭptyv;榲t脀\\xa2;eᨭᨮ䂢r\\xe4Ʋr;쀀\\ud835\\udd20ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark\\xbbᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\\x00\\x00᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟\\xbbཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it\\xbb᪼ˬ᫇᫔᫺\\x00ᬊonĀ;eᫍᫎ䀺Ā;q\\xc7\\xc6ɭ᫙\\x00\\x00᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁\\xeeᅠeĀmx᫱᫶ent\\xbb᫩e\\xf3ɍǧ᫾\\x00ᬇĀ;dኻᬂot;橭n\\xf4Ɇƀfryᬐᬔᬗ;쀀\\ud835\\udd54o\\xe4ɔ脀\\xa9;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀\\ud835\\udcb8Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\\x00\\x00᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\\x00\\x00ᯒre\\xe3᭳u\\xe3᭵ee;拎edge;拏en耻\\xa4䂤earrowĀlrᯮ᯳eft\\xbbᮀight\\xbbᮽe\\xe4ᯝĀciᰁᰇonin\\xf4Ƿnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍r\\xf2΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸\\xf2ᄳhĀ;vᱚᱛ怐\\xbbऊūᱡᱧarow;椏a\\xe3̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻\\xb0䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀\\ud835\\udd21arĀlrᲳᲵ\\xbbࣜ\\xbbသʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀\\xf7;o᳧ᳰntimes;拇n\\xf8᳷cy;䑒cɯᴆ\\x00\\x00ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀\\ud835\\udd55ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedg\\xe5\\xfanƀadhᄮᵝᵧownarrow\\xf3ᲃarpoonĀlrᵲᵶef\\xf4Ჴigh\\xf4ᲶŢᵿᶅkaro\\xf7གɯᶊ\\x00\\x00ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀\\ud835\\udcb9;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃r\\xf2Щa\\xf2ྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴo\\xf4ᲉĀcsḎḔute耻\\xe9䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻\\xea䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀\\ud835\\udd22ƀ;rsṐṑṗ檚ave耻\\xe8䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et\\xbbẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀\\ud835\\udd56ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on\\xbbớ;䏵ȀcsuvỪỳἋἣĀioữḱrc\\xbbḮɩỹ\\x00\\x00ỻ\\xedՈantĀglἂἆtr\\xbbṝess\\xbbṺƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯o\\xf4͒ĀahὉὋ;䎷耻\\xf0䃰Āmrὓὗl耻\\xeb䃫o;悬ƀcipὡὤὧl;䀡s\\xf4ծĀeoὬὴctatio\\xeeՙnential\\xe5չৡᾒ\\x00ᾞ\\x00ᾡᾧ\\x00\\x00ῆῌ\\x00ΐ\\x00ῦῪ \\x00 ⁚llingdotse\\xf1Ṅy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\\x00\\x00᾽g;耀ﬀig;耀ﬄ;쀀\\ud835\\udd23lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\\x00ῳf;쀀\\ud835\\udd57ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\\x00⁐β•‥‧‪‬\\x00‮耻\\xbd䂽;慓耻\\xbc䂼;慕;慙;慛Ƴ‴\\x00‶;慔;慖ʴ‾⁁\\x00\\x00⁃耻\\xbe䂾;慗;慜5;慘ƶ⁌\\x00⁎;慚;慝8;慞l;恄wn;挢cr;쀀\\ud835\\udcbbࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lan\\xf4٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀\\ud835\\udd24Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox\\xbbℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀\\ud835\\udd58Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\\x00↎pro\\xf8₞r;楸qĀlqؿ↖les\\xf3₈i\\xed٫Āen↣↭rtneqq;쀀≩︀\\xc5↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽r\\xf2ΠȀilmr⇐⇔⇗⇛rs\\xf0ᒄf\\xbb․il\\xf4کĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it\\xbb∊lip;怦con;抹r;쀀\\ud835\\udd25sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀\\ud835\\udd59bar;怕ƀclt≯≴≸r;쀀\\ud835\\udcbdas\\xe8⇴rok;䄧Ābp⊂⊇ull;恃hen\\xbbᱛૡ⊣\\x00⊪\\x00⊸⋅⋎\\x00⋕⋳\\x00\\x00⋸⌢⍧⍢⍿\\x00⎆⎪⎴cute耻\\xed䃭ƀ;iyݱ⊰⊵rc耻\\xee䃮;䐸Ācx⊼⊿y;䐵cl耻\\xa1䂡ĀfrΟ⋉;쀀\\ud835\\udd26rave耻\\xec䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓in\\xe5ގar\\xf4ܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝do\\xf4⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙er\\xf3ᕣ\\xe3⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀\\ud835\\udd5aa;䎹uest耻\\xbf䂿Āci⎊⎏r;쀀\\ud835\\udcbenʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\\x00⎼cy;䑖l耻\\xef䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀\\ud835\\udd27ath;䈷pf;쀀\\ud835\\udd5bǣ⏬\\x00⏱r;쀀\\ud835\\udcbfrcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀\\ud835\\udd28reen;䄸cy;䑅cy;䑜pf;쀀\\ud835\\udd5ccr;쀀\\ud835\\udcc0஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼r\\xf2৆\\xf2Εail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\\x00⒪\\x00⒱\\x00\\x00\\x00\\x00\\x00⒵Ⓔ\\x00ⓆⓈⓍ\\x00⓹ute;䄺mptyv;榴ra\\xeeࡌbda;䎻gƀ;dlࢎⓁⓃ;榑\\xe5ࢎ;檅uo耻\\xab䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝\\xeb≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼\\xecࢰ\\xe2┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□a\\xe9⓶arpoonĀdu▯▴own\\xbbњp\\xbb०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoon\\xf3྘quigarro\\xf7⇰hreetimes;拋ƀ;qs▋ও◺lan\\xf4বʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋ppro\\xf8Ⓠot;拖qĀgq♃♅\\xf4উgt\\xf2⒌\\xf4ছi\\xedলƀilr♕࣡♚sht;楼;쀀\\ud835\\udd29Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖r\\xf2◁orne\\xf2ᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che\\xbb⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox\\xbb⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽r\\xebࣁgƀlmr⛿✍✔eftĀar০✇ight\\xe1৲apsto;柼ight\\xe1৽parrowĀlr✥✩ef\\xf4⓭ight;憬ƀafl✶✹✽r;榅;쀀\\ud835\\udd5dus;樭imes;樴š❋❏st;戗\\xe1ፎƀ;ef❗❘᠀旊nge\\xbb❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇r\\xf2ࢨorne\\xf2ᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀\\ud835\\udcc1mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹re\\xe5◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀\\xc5⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻\\xaf䂯Āet⡗⡙;時Ā;e⡞⡟朠se\\xbb⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻ow\\xeeҌef\\xf4ए\\xf0Ꮡker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle\\xbbᘦr;쀀\\ud835\\udd2ao;愧ƀcdn⢯⢴⣉ro耻\\xb5䂵Ȁ;acdᑤ⢽⣀⣄s\\xf4ᚧir;櫰ot肻\\xb7Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛\\xf2−\\xf0ઁĀdp⣩⣮els;抧f;쀀\\ud835\\udd5eĀct⣸⣽r;쀀\\ud835\\udcc2pos\\xbbᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la\\xbb˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉ro\\xf8඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\\x00⧣p肻\\xa0ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\\x00⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸ui\\xf6ୣĀei⩊⩎ar;椨\\xed஘istĀ;s஠டr;쀀\\ud835\\udd2bȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lan\\xf4௢i\\xed௪Ā;rஶ⪁\\xbbஷƀAap⪊⪍⪑r\\xf2⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹r\\xf2⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro\\xf7⫁ightarro\\xf7⪐ƀ;qs఻⪺⫪lan\\xf4ౕĀ;sౕ⫴\\xbbశi\\xedౝĀ;rవ⫾iĀ;eచథi\\xe4ඐĀpt⬌⬑f;쀀\\ud835\\udd5f膀\\xac;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lle\\xec୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳u\\xe5ಥĀ;cಘ⭸Ā;eಒ⭽\\xf1ಘȀAait⮈⮋⮝⮧r\\xf2⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow\\xbb⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉u\\xe5൅;쀀\\ud835\\udcc3ortɭ⬅\\x00\\x00⯖ar\\xe1⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭\\xe5೸\\xe5ഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗ\\xf1സȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇ\\xecௗlde耻\\xf1䃱\\xe7ృiangleĀlrⱒⱜeftĀ;eచⱚ\\xf1దightĀ;eೋⱥ\\xf1೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00ⴭ\\x00ⴸⵈⵠⵥ⵲ⶄᬇ\\x00\\x00ⶍⶫ\\x00ⷈⷎ\\x00ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻\\xf3䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻\\xf4䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀\\ud835\\udd2cͯ⵹\\x00\\x00⵼\\x00ⶂn;䋛ave耻\\xf2䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨr\\xf2᪀Āir⶝ⶠr;榾oss;榻n\\xe5๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀\\ud835\\udd60ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨r\\xf2᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f\\xbbⷿ耻\\xaa䂪耻\\xba䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧\\xf2⸁ash耻\\xf8䃸l;折iŬⸯ⸴de耻\\xf5䃵esĀ;aǛ⸺s;樶ml耻\\xf6䃶bar;挽ૡ⹞\\x00⹽\\x00⺀⺝\\x00⺢⺹\\x00\\x00⻋ຜ\\x00⼓\\x00\\x00⼫⾼\\x00⿈rȀ;astЃ⹧⹲຅脀\\xb6;l⹭⹮䂶le\\xecЃɩ⹸\\x00\\x00⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀\\ud835\\udd2dƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕ma\\xf4੶ne;明ƀ;tv⺿⻀⻈䏀chfork\\xbb´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎\\xf6⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻\\xb1ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀\\ud835\\udd61nd耻\\xa3䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷u\\xe5໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾ppro\\xf8⽃urlye\\xf1໙\\xf1໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨i\\xedໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺\\xf0⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴\\xef໻rel;抰Āci⿀⿅r;쀀\\ud835\\udcc5;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀\\ud835\\udd2epf;쀀\\ud835\\udd62rime;恗cr;쀀\\ud835\\udcc6ƀaeo⿸〉〓tĀei⿾々rnion\\xf3ڰnt;樖stĀ;e【】䀿\\xf1Ἑ\\xf4༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがr\\xf2Ⴓ\\xf2ϝail;検ar\\xf2ᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕i\\xe3ᅮmptyv;榳gȀ;del࿑らるろ;榒;榥\\xe5࿑uo耻\\xbb䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞\\xeb≝\\xf0✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶al\\xf3༞ƀabrョリヮr\\xf2៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗\\xec࿲\\xe2ヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜn\\xe5Ⴛar\\xf4ྩt;断ƀilrㅩဣㅮsht;楽;쀀\\ud835\\udd2fĀaoㅷㆆrĀduㅽㅿ\\xbbѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭa\\xe9トarpoonĀduㆻㆿow\\xeeㅾp\\xbb႒eftĀah㇊㇐rrow\\xf3࿪arpoon\\xf3Ցightarrows;應quigarro\\xf7ニhreetimes;拌g;䋚ingdotse\\xf1ἲƀahm㈍㈐㈓r\\xf2࿪a\\xf2Ց;怏oustĀ;a㈞㈟掱che\\xbb㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾r\\xebဃƀafl㉇㉊㉎r;榆;쀀\\ud835\\udd63us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒ar\\xf2㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀\\ud835\\udcc7Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠re\\xe5ㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\\x00㍺㎤\\x00\\x00㏬㏰\\x00㐨㑈㑚㒭㒱㓊㓱\\x00㘖\\x00\\x00㘳cute;䅛qu\\xef➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\\x00㋼;檸on;䅡u\\xe5ᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓i\\xedሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒\\xeb∨Ā;oਸ਼਴t耻\\xa7䂧i;䀻war;椩mĀin㍩\\xf0nu\\xf3\\xf1t;朶rĀ;o㍶⁕쀀\\ud835\\udd30Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\\x00\\x00㎜i\\xe4ᑤara\\xec⹯耻\\xad䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲ar\\xf2ᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetm\\xe9㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀\\ud835\\udd64aĀdr㑍ЂesĀ;u㑔㑕晠it\\xbb㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍\\xf1ᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝\\xf1ᆮƀ;afᅻ㒦ְrť㒫ֱ\\xbbᅼar\\xf2ᅈȀcemt㒹㒾㓂㓅r;쀀\\ud835\\udcc8tm\\xee\\xf1i\\xec㐕ar\\xe6ᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psilo\\xeeỠh\\xe9⺯s\\xbb⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦ppro\\xf8㋺urlye\\xf1ᇾ\\xf1ᇳƀaes㖂㖈㌛ppro\\xf8㌚q\\xf1㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻\\xb9䂹耻\\xb2䂲耻\\xb3䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨\\xeb∮Ā;oਫ਩war;椪lig耻\\xdf䃟௡㙑㙝㙠ዎ㙳㙹\\x00㙾㛂\\x00\\x00\\x00\\x00\\x00㛛㜃\\x00㜉㝬\\x00\\x00\\x00㞇ɲ㙖\\x00\\x00㙛get;挖;䏄r\\xeb๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀\\ud835\\udd31Ȁeiko㚆㚝㚵㚼ǲ㚋\\x00㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮ppro\\xf8዁im\\xbbኬs\\xf0ኞĀas㚺㚮\\xf0዁rn耻\\xfe䃾Ǭ̟㛆⋧es膀\\xd7;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀\\xe1⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀\\ud835\\udd65rk;櫚\\xe1㍢rime;怴ƀaip㜏㜒㝤d\\xe5ቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own\\xbbᶻeftĀ;e⠀㜾\\xf1म;扜ightĀ;e㊪㝋\\xf1ၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀\\ud835\\udcc9;䑆cy;䑛rok;䅧Āio㞋㞎x\\xf4᝷headĀlr㞗㞠eftarro\\xf7ࡏightarrow\\xbbཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶r\\xf2ϭar;楣Ācr㟜㟢ute耻\\xfa䃺\\xf2ᅐrǣ㟪\\x00㟭y;䑞ve;䅭Āiy㟵㟺rc耻\\xfb䃻;䑃ƀabh㠃㠆㠋r\\xf2Ꭽlac;䅱a\\xf2ᏃĀir㠓㠘sht;楾;쀀\\ud835\\udd32rave耻\\xf9䃹š㠧㠱rĀlr㠬㠮\\xbbॗ\\xbbႃlk;斀Āct㠹㡍ɯ㠿\\x00\\x00㡊rnĀ;e㡅㡆挜r\\xbb㡆op;挏ri;旸Āal㡖㡚cr;䅫肻\\xa8͉Āgp㡢㡦on;䅳f;쀀\\ud835\\udd66̀adhlsuᅋ㡸㡽፲㢑㢠own\\xe1ᎳarpoonĀlr㢈㢌ef\\xf4㠭igh\\xf4㠯iƀ;hl㢙㢚㢜䏅\\xbbᏺon\\xbb㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\\x00\\x00㣁rnĀ;e㢼㢽挝r\\xbb㢽op;挎ng;䅯ri;旹cr;쀀\\ud835\\udccaƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨\\xbb᠓Āam㣯㣲r\\xf2㢨l耻\\xfc䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠r\\xf2ϷarĀ;v㤦㤧櫨;櫩as\\xe8ϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖app\\xe1␕othin\\xe7ẖƀhir㓫⻈㥙op\\xf4⾵Ā;hᎷ㥢\\xefㆍĀiu㥩㥭gm\\xe1㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟et\\xe1㚜iangleĀlr㦪㦯eft\\xbbथight\\xbbၑy;䐲ash\\xbbံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨa\\xf2ᑩr;쀀\\ud835\\udd33tr\\xe9㦮suĀbp㧯㧱\\xbbജ\\xbb൙pf;쀀\\ud835\\udd67ro\\xf0໻tr\\xe9㦴Ācu㨆㨋r;쀀\\ud835\\udccbĀbp㨐㨘nĀEe㦀㨖\\xbb㥾nĀEe㦒㨞\\xbb㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀\\ud835\\udd34pf;쀀\\ud835\\udd68Ā;eᑹ㩦at\\xe8ᑹcr;쀀\\ud835\\udcccૣណ㪇\\x00㪋\\x00㪐㪛\\x00\\x00㪝㪨㪫㪯\\x00\\x00㫃㫎\\x00㫘ៜ៟tr\\xe9៑r;쀀\\ud835\\udd35ĀAa㪔㪗r\\xf2σr\\xf2৶;䎾ĀAa㪡㪤r\\xf2θr\\xf2৫a\\xf0✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀\\ud835\\udd69im\\xe5ឲĀAa㫇㫊r\\xf2ώr\\xf2ਁĀcq㫒ីr;쀀\\ud835\\udccdĀpt៖㫜r\\xe9។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻\\xfd䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻\\xa5䂥r;쀀\\ud835\\udd36cy;䑗pf;쀀\\ud835\\udd6acr;쀀\\ud835\\udcceĀcm㬦㬩y;䑎l耻\\xff䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡tr\\xe6ᕟa;䎶r;쀀\\ud835\\udd37cy;䐶grarr;懝pf;쀀\\ud835\\udd6bcr;쀀\\ud835\\udccfĀjn㮅㮇;怍j;怌'.split(\"\").map(function(c) {\n    return c.charCodeAt(0);\n}));\n\n});\n\nparcelRequire.register(\"h8iVR\", function(module, exports) {\n\"use strict\";\n// Generated using scripts/write-decode-map.ts\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.default = new Uint16Array(// prettier-ignore\n\"Ȁaglq\t\\x15\\x18\\x1bɭ\\x0f\\x00\\x00\\x12p;䀦os;䀧t;䀾t;䀼uot;䀢\".split(\"\").map(function(c) {\n    return c.charCodeAt(0);\n}));\n\n});\n\nparcelRequire.register(\"2Hmhp\", function(module, exports) {\n\"use strict\";\n// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar $1f70e136a18978e0$var$_a;\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.replaceCodePoint = module.exports.fromCodePoint = void 0;\nvar $1f70e136a18978e0$var$decodeMap = new Map([\n    [\n        0,\n        65533\n    ],\n    // C1 Unicode control character reference replacements\n    [\n        128,\n        8364\n    ],\n    [\n        130,\n        8218\n    ],\n    [\n        131,\n        402\n    ],\n    [\n        132,\n        8222\n    ],\n    [\n        133,\n        8230\n    ],\n    [\n        134,\n        8224\n    ],\n    [\n        135,\n        8225\n    ],\n    [\n        136,\n        710\n    ],\n    [\n        137,\n        8240\n    ],\n    [\n        138,\n        352\n    ],\n    [\n        139,\n        8249\n    ],\n    [\n        140,\n        338\n    ],\n    [\n        142,\n        381\n    ],\n    [\n        145,\n        8216\n    ],\n    [\n        146,\n        8217\n    ],\n    [\n        147,\n        8220\n    ],\n    [\n        148,\n        8221\n    ],\n    [\n        149,\n        8226\n    ],\n    [\n        150,\n        8211\n    ],\n    [\n        151,\n        8212\n    ],\n    [\n        152,\n        732\n    ],\n    [\n        153,\n        8482\n    ],\n    [\n        154,\n        353\n    ],\n    [\n        155,\n        8250\n    ],\n    [\n        156,\n        339\n    ],\n    [\n        158,\n        382\n    ],\n    [\n        159,\n        376\n    ]\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */ module.exports.fromCodePoint = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n($1f70e136a18978e0$var$_a = String.fromCodePoint) !== null && $1f70e136a18978e0$var$_a !== void 0 ? $1f70e136a18978e0$var$_a : function(codePoint) {\n    var output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(codePoint >>> 10 & 0x3ff | 0xd800);\n        codePoint = 0xdc00 | codePoint & 0x3ff;\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */ function $1f70e136a18978e0$var$replaceCodePoint(codePoint) {\n    var _a;\n    if (codePoint >= 0xd800 && codePoint <= 0xdfff || codePoint > 0x10ffff) return 0xfffd;\n    return (_a = $1f70e136a18978e0$var$decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\nmodule.exports.replaceCodePoint = $1f70e136a18978e0$var$replaceCodePoint;\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */ function $1f70e136a18978e0$var$decodeCodePoint(codePoint) {\n    return (0, module.exports.fromCodePoint)($1f70e136a18978e0$var$replaceCodePoint(codePoint));\n}\nmodule.exports.default = $1f70e136a18978e0$var$decodeCodePoint;\n\n});\n\n/*\n    Import all parsers/renderers from md-table-tools\n*/ function $feaaac27e129f60c$export$2e2bcd8739ae039({ onlyFirst: onlyFirst = false } = {}) {\n    const pattern = [\n        \"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\",\n        \"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))\"\n    ].join(\"|\");\n    return new RegExp(pattern, onlyFirst ? undefined : \"g\");\n}\n\n\nconst $b019e32c4fb40ff8$var$regex = (0, $feaaac27e129f60c$export$2e2bcd8739ae039)();\nfunction $b019e32c4fb40ff8$export$2e2bcd8739ae039(string) {\n    if (typeof string !== \"string\") throw new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n    // Even though the regex is global, we don't need to reset the `.lastIndex`\n    // because unlike `.exec()` and `.test()`, `.replace()` does it automatically\n    // and doing it manually has a performance penalty.\n    return string.replace($b019e32c4fb40ff8$var$regex, \"\");\n}\n\n\n// Generated code.\nfunction $06f4140613e2c8c4$export$1b18c1c9f84a2229(x) {\n    return x === 0xA1 || x === 0xA4 || x === 0xA7 || x === 0xA8 || x === 0xAA || x === 0xAD || x === 0xAE || x >= 0xB0 && x <= 0xB4 || x >= 0xB6 && x <= 0xBA || x >= 0xBC && x <= 0xBF || x === 0xC6 || x === 0xD0 || x === 0xD7 || x === 0xD8 || x >= 0xDE && x <= 0xE1 || x === 0xE6 || x >= 0xE8 && x <= 0xEA || x === 0xEC || x === 0xED || x === 0xF0 || x === 0xF2 || x === 0xF3 || x >= 0xF7 && x <= 0xFA || x === 0xFC || x === 0xFE || x === 0x101 || x === 0x111 || x === 0x113 || x === 0x11B || x === 0x126 || x === 0x127 || x === 0x12B || x >= 0x131 && x <= 0x133 || x === 0x138 || x >= 0x13F && x <= 0x142 || x === 0x144 || x >= 0x148 && x <= 0x14B || x === 0x14D || x === 0x152 || x === 0x153 || x === 0x166 || x === 0x167 || x === 0x16B || x === 0x1CE || x === 0x1D0 || x === 0x1D2 || x === 0x1D4 || x === 0x1D6 || x === 0x1D8 || x === 0x1DA || x === 0x1DC || x === 0x251 || x === 0x261 || x === 0x2C4 || x === 0x2C7 || x >= 0x2C9 && x <= 0x2CB || x === 0x2CD || x === 0x2D0 || x >= 0x2D8 && x <= 0x2DB || x === 0x2DD || x === 0x2DF || x >= 0x300 && x <= 0x36F || x >= 0x391 && x <= 0x3A1 || x >= 0x3A3 && x <= 0x3A9 || x >= 0x3B1 && x <= 0x3C1 || x >= 0x3C3 && x <= 0x3C9 || x === 0x401 || x >= 0x410 && x <= 0x44F || x === 0x451 || x === 0x2010 || x >= 0x2013 && x <= 0x2016 || x === 0x2018 || x === 0x2019 || x === 0x201C || x === 0x201D || x >= 0x2020 && x <= 0x2022 || x >= 0x2024 && x <= 0x2027 || x === 0x2030 || x === 0x2032 || x === 0x2033 || x === 0x2035 || x === 0x203B || x === 0x203E || x === 0x2074 || x === 0x207F || x >= 0x2081 && x <= 0x2084 || x === 0x20AC || x === 0x2103 || x === 0x2105 || x === 0x2109 || x === 0x2113 || x === 0x2116 || x === 0x2121 || x === 0x2122 || x === 0x2126 || x === 0x212B || x === 0x2153 || x === 0x2154 || x >= 0x215B && x <= 0x215E || x >= 0x2160 && x <= 0x216B || x >= 0x2170 && x <= 0x2179 || x === 0x2189 || x >= 0x2190 && x <= 0x2199 || x === 0x21B8 || x === 0x21B9 || x === 0x21D2 || x === 0x21D4 || x === 0x21E7 || x === 0x2200 || x === 0x2202 || x === 0x2203 || x === 0x2207 || x === 0x2208 || x === 0x220B || x === 0x220F || x === 0x2211 || x === 0x2215 || x === 0x221A || x >= 0x221D && x <= 0x2220 || x === 0x2223 || x === 0x2225 || x >= 0x2227 && x <= 0x222C || x === 0x222E || x >= 0x2234 && x <= 0x2237 || x === 0x223C || x === 0x223D || x === 0x2248 || x === 0x224C || x === 0x2252 || x === 0x2260 || x === 0x2261 || x >= 0x2264 && x <= 0x2267 || x === 0x226A || x === 0x226B || x === 0x226E || x === 0x226F || x === 0x2282 || x === 0x2283 || x === 0x2286 || x === 0x2287 || x === 0x2295 || x === 0x2299 || x === 0x22A5 || x === 0x22BF || x === 0x2312 || x >= 0x2460 && x <= 0x24E9 || x >= 0x24EB && x <= 0x254B || x >= 0x2550 && x <= 0x2573 || x >= 0x2580 && x <= 0x258F || x >= 0x2592 && x <= 0x2595 || x === 0x25A0 || x === 0x25A1 || x >= 0x25A3 && x <= 0x25A9 || x === 0x25B2 || x === 0x25B3 || x === 0x25B6 || x === 0x25B7 || x === 0x25BC || x === 0x25BD || x === 0x25C0 || x === 0x25C1 || x >= 0x25C6 && x <= 0x25C8 || x === 0x25CB || x >= 0x25CE && x <= 0x25D1 || x >= 0x25E2 && x <= 0x25E5 || x === 0x25EF || x === 0x2605 || x === 0x2606 || x === 0x2609 || x === 0x260E || x === 0x260F || x === 0x261C || x === 0x261E || x === 0x2640 || x === 0x2642 || x === 0x2660 || x === 0x2661 || x >= 0x2663 && x <= 0x2665 || x >= 0x2667 && x <= 0x266A || x === 0x266C || x === 0x266D || x === 0x266F || x === 0x269E || x === 0x269F || x === 0x26BF || x >= 0x26C6 && x <= 0x26CD || x >= 0x26CF && x <= 0x26D3 || x >= 0x26D5 && x <= 0x26E1 || x === 0x26E3 || x === 0x26E8 || x === 0x26E9 || x >= 0x26EB && x <= 0x26F1 || x === 0x26F4 || x >= 0x26F6 && x <= 0x26F9 || x === 0x26FB || x === 0x26FC || x === 0x26FE || x === 0x26FF || x === 0x273D || x >= 0x2776 && x <= 0x277F || x >= 0x2B56 && x <= 0x2B59 || x >= 0x3248 && x <= 0x324F || x >= 0xE000 && x <= 0xF8FF || x >= 0xFE00 && x <= 0xFE0F || x === 0xFFFD || x >= 0x1F100 && x <= 0x1F10A || x >= 0x1F110 && x <= 0x1F12D || x >= 0x1F130 && x <= 0x1F169 || x >= 0x1F170 && x <= 0x1F18D || x === 0x1F18F || x === 0x1F190 || x >= 0x1F19B && x <= 0x1F1AC || x >= 0xE0100 && x <= 0xE01EF || x >= 0xF0000 && x <= 0xFFFFD || x >= 0x100000 && x <= 0x10FFFD;\n}\nfunction $06f4140613e2c8c4$export$3af365c7c6aa54f1(x) {\n    return x === 0x3000 || x >= 0xFF01 && x <= 0xFF60 || x >= 0xFFE0 && x <= 0xFFE6;\n}\nfunction $06f4140613e2c8c4$export$5aa96c65591d2b44(x) {\n    return x >= 0x1100 && x <= 0x115F || x === 0x231A || x === 0x231B || x === 0x2329 || x === 0x232A || x >= 0x23E9 && x <= 0x23EC || x === 0x23F0 || x === 0x23F3 || x === 0x25FD || x === 0x25FE || x === 0x2614 || x === 0x2615 || x >= 0x2648 && x <= 0x2653 || x === 0x267F || x === 0x2693 || x === 0x26A1 || x === 0x26AA || x === 0x26AB || x === 0x26BD || x === 0x26BE || x === 0x26C4 || x === 0x26C5 || x === 0x26CE || x === 0x26D4 || x === 0x26EA || x === 0x26F2 || x === 0x26F3 || x === 0x26F5 || x === 0x26FA || x === 0x26FD || x === 0x2705 || x === 0x270A || x === 0x270B || x === 0x2728 || x === 0x274C || x === 0x274E || x >= 0x2753 && x <= 0x2755 || x === 0x2757 || x >= 0x2795 && x <= 0x2797 || x === 0x27B0 || x === 0x27BF || x === 0x2B1B || x === 0x2B1C || x === 0x2B50 || x === 0x2B55 || x >= 0x2E80 && x <= 0x2E99 || x >= 0x2E9B && x <= 0x2EF3 || x >= 0x2F00 && x <= 0x2FD5 || x >= 0x2FF0 && x <= 0x2FFF || x >= 0x3001 && x <= 0x303E || x >= 0x3041 && x <= 0x3096 || x >= 0x3099 && x <= 0x30FF || x >= 0x3105 && x <= 0x312F || x >= 0x3131 && x <= 0x318E || x >= 0x3190 && x <= 0x31E3 || x >= 0x31EF && x <= 0x321E || x >= 0x3220 && x <= 0x3247 || x >= 0x3250 && x <= 0x4DBF || x >= 0x4E00 && x <= 0xA48C || x >= 0xA490 && x <= 0xA4C6 || x >= 0xA960 && x <= 0xA97C || x >= 0xAC00 && x <= 0xD7A3 || x >= 0xF900 && x <= 0xFAFF || x >= 0xFE10 && x <= 0xFE19 || x >= 0xFE30 && x <= 0xFE52 || x >= 0xFE54 && x <= 0xFE66 || x >= 0xFE68 && x <= 0xFE6B || x >= 0x16FE0 && x <= 0x16FE4 || x === 0x16FF0 || x === 0x16FF1 || x >= 0x17000 && x <= 0x187F7 || x >= 0x18800 && x <= 0x18CD5 || x >= 0x18D00 && x <= 0x18D08 || x >= 0x1AFF0 && x <= 0x1AFF3 || x >= 0x1AFF5 && x <= 0x1AFFB || x === 0x1AFFD || x === 0x1AFFE || x >= 0x1B000 && x <= 0x1B122 || x === 0x1B132 || x >= 0x1B150 && x <= 0x1B152 || x === 0x1B155 || x >= 0x1B164 && x <= 0x1B167 || x >= 0x1B170 && x <= 0x1B2FB || x === 0x1F004 || x === 0x1F0CF || x === 0x1F18E || x >= 0x1F191 && x <= 0x1F19A || x >= 0x1F200 && x <= 0x1F202 || x >= 0x1F210 && x <= 0x1F23B || x >= 0x1F240 && x <= 0x1F248 || x === 0x1F250 || x === 0x1F251 || x >= 0x1F260 && x <= 0x1F265 || x >= 0x1F300 && x <= 0x1F320 || x >= 0x1F32D && x <= 0x1F335 || x >= 0x1F337 && x <= 0x1F37C || x >= 0x1F37E && x <= 0x1F393 || x >= 0x1F3A0 && x <= 0x1F3CA || x >= 0x1F3CF && x <= 0x1F3D3 || x >= 0x1F3E0 && x <= 0x1F3F0 || x === 0x1F3F4 || x >= 0x1F3F8 && x <= 0x1F43E || x === 0x1F440 || x >= 0x1F442 && x <= 0x1F4FC || x >= 0x1F4FF && x <= 0x1F53D || x >= 0x1F54B && x <= 0x1F54E || x >= 0x1F550 && x <= 0x1F567 || x === 0x1F57A || x === 0x1F595 || x === 0x1F596 || x === 0x1F5A4 || x >= 0x1F5FB && x <= 0x1F64F || x >= 0x1F680 && x <= 0x1F6C5 || x === 0x1F6CC || x >= 0x1F6D0 && x <= 0x1F6D2 || x >= 0x1F6D5 && x <= 0x1F6D7 || x >= 0x1F6DC && x <= 0x1F6DF || x === 0x1F6EB || x === 0x1F6EC || x >= 0x1F6F4 && x <= 0x1F6FC || x >= 0x1F7E0 && x <= 0x1F7EB || x === 0x1F7F0 || x >= 0x1F90C && x <= 0x1F93A || x >= 0x1F93C && x <= 0x1F945 || x >= 0x1F947 && x <= 0x1F9FF || x >= 0x1FA70 && x <= 0x1FA7C || x >= 0x1FA80 && x <= 0x1FA88 || x >= 0x1FA90 && x <= 0x1FABD || x >= 0x1FABF && x <= 0x1FAC5 || x >= 0x1FACE && x <= 0x1FADB || x >= 0x1FAE0 && x <= 0x1FAE8 || x >= 0x1FAF0 && x <= 0x1FAF8 || x >= 0x20000 && x <= 0x2FFFD || x >= 0x30000 && x <= 0x3FFFD;\n}\nfunction $06f4140613e2c8c4$export$410364bbb673ddbc(x) {\n    if ($06f4140613e2c8c4$export$1b18c1c9f84a2229(x)) return \"ambiguous\";\n    if ($06f4140613e2c8c4$export$3af365c7c6aa54f1(x)) return \"fullwidth\";\n    if (x === 0x20A9 || x >= 0xFF61 && x <= 0xFFBE || x >= 0xFFC2 && x <= 0xFFC7 || x >= 0xFFCA && x <= 0xFFCF || x >= 0xFFD2 && x <= 0xFFD7 || x >= 0xFFDA && x <= 0xFFDC || x >= 0xFFE8 && x <= 0xFFEE) return \"halfwidth\";\n    if (x >= 0x20 && x <= 0x7E || x === 0xA2 || x === 0xA3 || x === 0xA5 || x === 0xA6 || x === 0xAC || x === 0xAF || x >= 0x27E6 && x <= 0x27ED || x === 0x2985 || x === 0x2986) return \"narrow\";\n    if ($06f4140613e2c8c4$export$5aa96c65591d2b44(x)) return \"wide\";\n    return \"neutral\";\n}\n\n\nfunction $6a489aa68eaa6277$var$validate(codePoint) {\n    if (!Number.isSafeInteger(codePoint)) throw new TypeError(`Expected a code point, got \\`${typeof codePoint}\\`.`);\n}\nfunction $6a489aa68eaa6277$export$65a65a0864529ffb(codePoint) {\n    $6a489aa68eaa6277$var$validate(codePoint);\n    return (0, $06f4140613e2c8c4$export$410364bbb673ddbc)(codePoint);\n}\nfunction $6a489aa68eaa6277$export$6d6b4ce22709a137(codePoint, { ambiguousAsWide: ambiguousAsWide = false } = {}) {\n    $6a489aa68eaa6277$var$validate(codePoint);\n    if ((0, $06f4140613e2c8c4$export$3af365c7c6aa54f1)(codePoint) || (0, $06f4140613e2c8c4$export$5aa96c65591d2b44)(codePoint) || ambiguousAsWide && (0, $06f4140613e2c8c4$export$1b18c1c9f84a2229)(codePoint)) return 2;\n    return 1;\n}\nconst $6a489aa68eaa6277$export$af81f44ed446a227 = (codePoint)=>!((0, $06f4140613e2c8c4$export$3af365c7c6aa54f1)(codePoint) || (0, $06f4140613e2c8c4$export$5aa96c65591d2b44)(codePoint));\n\n\nvar $4f1a061ba92dfd42$export$2e2bcd8739ae039 = ()=>{\n    // https://mths.be/emoji\n    return /[#*0-9]\\uFE0F?\\u20E3|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26AA\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C8\\u26CF\\u26D1\\u26E9\\u26F0-\\u26F5\\u26F7\\u26F8\\u26FA\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B55\\u3030\\u303D\\u3297\\u3299]\\uFE0F?|[\\u261D\\u270C\\u270D](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\u270A\\u270B](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u2693\\u26A1\\u26AB\\u26C5\\u26CE\\u26D4\\u26EA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2795-\\u2797\\u27B0\\u27BF\\u2B50]|\\u26D3\\uFE0F?(?:\\u200D\\uD83D\\uDCA5)?|\\u26F9(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\u2764\\uFE0F?(?:\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79))?|\\uD83C(?:[\\uDC04\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]\\uFE0F?|[\\uDF85\\uDFC2\\uDFC7](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDFC4\\uDFCA](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDFCB\\uDFCC](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF43\\uDF45-\\uDF4A\\uDF4C-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF]|\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF]|\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uDF44(?:\\u200D\\uD83D\\uDFEB)?|\\uDF4B(?:\\u200D\\uD83D\\uDFE9)?|\\uDFC3(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?|\\uDFF3\\uFE0F?(?:\\u200D(?:\\u26A7\\uFE0F?|\\uD83C\\uDF08))?|\\uDFF4(?:\\u200D\\u2620\\uFE0F?|\\uDB40\\uDC67\\uDB40\\uDC62\\uDB40(?:\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F)?)|\\uD83D(?:[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3]\\uFE0F?|[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4\\uDEB5](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD74\\uDD90](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC25\\uDC27-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE41\\uDE43\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEDC-\\uDEDF\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB\\uDFF0]|\\uDC08(?:\\u200D\\u2B1B)?|\\uDC15(?:\\u200D\\uD83E\\uDDBA)?|\\uDC26(?:\\u200D(?:\\u2B1B|\\uD83D\\uDD25))?|\\uDC3B(?:\\u200D\\u2744\\uFE0F?)?|\\uDC41\\uFE0F?(?:\\u200D\\uD83D\\uDDE8\\uFE0F?)?|\\uDC68(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDC68\\uDC69]\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC69(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?[\\uDC68\\uDC69]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?|\\uDC69\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?))|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC6F(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDD75(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDE2E(?:\\u200D\\uD83D\\uDCA8)?|\\uDE35(?:\\u200D\\uD83D\\uDCAB)?|\\uDE36(?:\\u200D\\uD83C\\uDF2B\\uFE0F?)?|\\uDE42(?:\\u200D[\\u2194\\u2195]\\uFE0F?)?|\\uDEB6(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?)|\\uD83E(?:[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5\\uDEC3-\\uDEC5\\uDEF0\\uDEF2-\\uDEF8](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD\\uDDCF\\uDDD4\\uDDD6-\\uDDDD](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDDDE\\uDDDF](?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCC\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC2\\uDECE-\\uDEDB\\uDEE0-\\uDEE8]|\\uDD3C(?:\\u200D[\\u2640\\u2642]\\uFE0F?|\\uD83C[\\uDFFB-\\uDFFF])?|\\uDDCE(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?|\\uDDD1(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1|\\uDDD1\\u200D\\uD83E\\uDDD2(?:\\u200D\\uD83E\\uDDD2)?|\\uDDD2(?:\\u200D\\uD83E\\uDDD2)?))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFC-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFD-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFD\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFE]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?))?|\\uDEF1(?:\\uD83C(?:\\uDFFB(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFC-\\uDFFF])?|\\uDFFC(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])?|\\uDFFD(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])?|\\uDFFE(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])?|\\uDFFF(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFE])?))?)/g;\n};\n\n\nconst $e7b00ddbb5cafea0$var$segmenter = new Intl.Segmenter();\nfunction $e7b00ddbb5cafea0$export$2e2bcd8739ae039(string, options = {}) {\n    if (typeof string !== \"string\" || string.length === 0) return 0;\n    const { ambiguousIsNarrow: ambiguousIsNarrow = true, countAnsiEscapeCodes: countAnsiEscapeCodes = false } = options;\n    if (!countAnsiEscapeCodes) string = (0, $b019e32c4fb40ff8$export$2e2bcd8739ae039)(string);\n    if (string.length === 0) return 0;\n    let width = 0;\n    const eastAsianWidthOptions = {\n        ambiguousAsWide: !ambiguousIsNarrow\n    };\n    for (const { segment: character } of $e7b00ddbb5cafea0$var$segmenter.segment(string)){\n        const codePoint = character.codePointAt(0);\n        // Ignore control characters\n        if (codePoint <= 0x1F || codePoint >= 0x7F && codePoint <= 0x9F) continue;\n        // Ignore combining characters\n        if (codePoint >= 0x300 && codePoint <= 0x36F) continue;\n        if ((0, $4f1a061ba92dfd42$export$2e2bcd8739ae039)().test(character)) {\n            width += 2;\n            continue;\n        }\n        width += (0, $6a489aa68eaa6277$export$6d6b4ce22709a137)(codePoint, eastAsianWidthOptions);\n    }\n    return width;\n}\n\n\n/**\n * Types used in signatures of Cheerio methods.\n *\n * @category Cheerio\n */ \n\nconst $00a54fca6088e8eb$var$defaultOpts = {\n    xml: false,\n    decodeEntities: true\n};\nvar /** Cheerio default options. */ $00a54fca6088e8eb$export$2e2bcd8739ae039 = $00a54fca6088e8eb$var$defaultOpts;\nconst $00a54fca6088e8eb$var$xmlModeDefault = {\n    _useHtmlParser2: true,\n    xmlMode: true\n};\nfunction $00a54fca6088e8eb$export$bffa455ba8c619a6(options) {\n    return (options === null || options === void 0 ? void 0 : options.xml) ? typeof options.xml === \"boolean\" ? $00a54fca6088e8eb$var$xmlModeDefault : {\n        ...$00a54fca6088e8eb$var$xmlModeDefault,\n        ...options.xml\n    } : options !== null && options !== void 0 ? options : undefined;\n}\n\n\nvar $c1bcc44f974e65ab$exports = {};\n\n$parcel$export($c1bcc44f974e65ab$exports, \"html\", () => $c1bcc44f974e65ab$export$c0bb0b647f701bb5);\n$parcel$export($c1bcc44f974e65ab$exports, \"xml\", () => $c1bcc44f974e65ab$export$f2913fe8983302e);\n$parcel$export($c1bcc44f974e65ab$exports, \"text\", () => $c1bcc44f974e65ab$export$6f093cfa640b7166);\n$parcel$export($c1bcc44f974e65ab$exports, \"parseHTML\", () => $c1bcc44f974e65ab$export$8a49393be2d55148);\n$parcel$export($c1bcc44f974e65ab$exports, \"root\", () => $c1bcc44f974e65ab$export$e8e78c978b129247);\n$parcel$export($c1bcc44f974e65ab$exports, \"contains\", () => $c1bcc44f974e65ab$export$2344b14b097df817);\n$parcel$export($c1bcc44f974e65ab$exports, \"merge\", () => $c1bcc44f974e65ab$export$4950aa0f605343fb);\nvar $072f2bad516501ed$exports = {};\n\n$parcel$export($072f2bad516501ed$exports, \"isTag\", () => $298fc1d08428934f$export$3bf645f08efe3292);\n$parcel$export($072f2bad516501ed$exports, \"isCDATA\", () => $298fc1d08428934f$export$c2d65aed98d39b56);\n$parcel$export($072f2bad516501ed$exports, \"isText\", () => $298fc1d08428934f$export$1879817ac5c922b7);\n$parcel$export($072f2bad516501ed$exports, \"isComment\", () => $298fc1d08428934f$export$3ab01370f5e64ac8);\n$parcel$export($072f2bad516501ed$exports, \"isDocument\", () => $298fc1d08428934f$export$62858bae88b53fd0);\n$parcel$export($072f2bad516501ed$exports, \"hasChildren\", () => $298fc1d08428934f$export$bd5ff50f0e53d41c);\nvar $5e7710faf81de260$exports = {};\n\n$parcel$export($5e7710faf81de260$exports, \"getOuterHTML\", () => $5e7710faf81de260$export$39484b727cc2f324);\n$parcel$export($5e7710faf81de260$exports, \"getInnerHTML\", () => $5e7710faf81de260$export$7ed15b4d2218408);\n$parcel$export($5e7710faf81de260$exports, \"getText\", () => $5e7710faf81de260$export$c72d34660a162238);\n$parcel$export($5e7710faf81de260$exports, \"textContent\", () => $5e7710faf81de260$export$e0e0794250e9118f);\n$parcel$export($5e7710faf81de260$exports, \"innerText\", () => $5e7710faf81de260$export$5864bc2a45f1eb81);\n/** Types of elements found in htmlparser2's DOM */ var $d016a34ede83f3d0$export$b992dc138d950e31;\n(function(ElementType) {\n    /** Type for the root element of a document */ ElementType[\"Root\"] = \"root\";\n    /** Type for Text */ ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */ ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */ ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */ ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */ ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */ ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */ ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */ ElementType[\"Doctype\"] = \"doctype\";\n})($d016a34ede83f3d0$export$b992dc138d950e31 || ($d016a34ede83f3d0$export$b992dc138d950e31 = {}));\nfunction $d016a34ede83f3d0$export$3bf645f08efe3292(elem) {\n    return elem.type === $d016a34ede83f3d0$export$b992dc138d950e31.Tag || elem.type === $d016a34ede83f3d0$export$b992dc138d950e31.Script || elem.type === $d016a34ede83f3d0$export$b992dc138d950e31.Style;\n}\nconst $d016a34ede83f3d0$export$be92b6f5f03c0fe9 = $d016a34ede83f3d0$export$b992dc138d950e31.Root;\nconst $d016a34ede83f3d0$export$5f1af8db9871e1d6 = $d016a34ede83f3d0$export$b992dc138d950e31.Text;\nconst $d016a34ede83f3d0$export$befdefbdce210f91 = $d016a34ede83f3d0$export$b992dc138d950e31.Directive;\nconst $d016a34ede83f3d0$export$4d299b491347818a = $d016a34ede83f3d0$export$b992dc138d950e31.Comment;\nconst $d016a34ede83f3d0$export$2f8b47a141e57afc = $d016a34ede83f3d0$export$b992dc138d950e31.Script;\nconst $d016a34ede83f3d0$export$d9e45bc13d335801 = $d016a34ede83f3d0$export$b992dc138d950e31.Style;\nconst $d016a34ede83f3d0$export$3288d34c523a1192 = $d016a34ede83f3d0$export$b992dc138d950e31.Tag;\nconst $d016a34ede83f3d0$export$1f8b8f7e5c763232 = $d016a34ede83f3d0$export$b992dc138d950e31.CDATA;\nconst $d016a34ede83f3d0$export$31b44af36ff2c60f = $d016a34ede83f3d0$export$b992dc138d950e31.Doctype;\n\n\n\nclass $298fc1d08428934f$export$85c928794f8d04d4 {\n    constructor(){\n        /** Parent of the node */ this.parent = null;\n        /** Previous sibling */ this.prev = null;\n        /** Next sibling */ this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */ this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */ this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */ cloneNode(recursive = false) {\n        return $298fc1d08428934f$export$ae8e35ea29ddac22(this, recursive);\n    }\n}\nclass $298fc1d08428934f$export$c3569d91cd44d357 extends $298fc1d08428934f$export$85c928794f8d04d4 {\n    /**\n     * @param data The content of the data node\n     */ constructor(data){\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\nclass $298fc1d08428934f$export$5f1af8db9871e1d6 extends $298fc1d08428934f$export$c3569d91cd44d357 {\n    constructor(){\n        super(...arguments);\n        this.type = (0, $d016a34ede83f3d0$export$b992dc138d950e31).Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\nclass $298fc1d08428934f$export$4d299b491347818a extends $298fc1d08428934f$export$c3569d91cd44d357 {\n    constructor(){\n        super(...arguments);\n        this.type = (0, $d016a34ede83f3d0$export$b992dc138d950e31).Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\nclass $298fc1d08428934f$export$9269dce19ee35e96 extends $298fc1d08428934f$export$c3569d91cd44d357 {\n    constructor(name, data){\n        super(data);\n        this.name = name;\n        this.type = (0, $d016a34ede83f3d0$export$b992dc138d950e31).Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\nclass $298fc1d08428934f$export$62be934f90997196 extends $298fc1d08428934f$export$85c928794f8d04d4 {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */ constructor(children){\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */ get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */ get lastChild() {\n        return this.children.length > 0 ? this.children[this.children.length - 1] : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nclass $298fc1d08428934f$export$1f8b8f7e5c763232 extends $298fc1d08428934f$export$62be934f90997196 {\n    constructor(){\n        super(...arguments);\n        this.type = (0, $d016a34ede83f3d0$export$b992dc138d950e31).CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\nclass $298fc1d08428934f$export$b34a105447964f9f extends $298fc1d08428934f$export$62be934f90997196 {\n    constructor(){\n        super(...arguments);\n        this.type = (0, $d016a34ede83f3d0$export$b992dc138d950e31).Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\nclass $298fc1d08428934f$export$db77ccec0bb4ccac extends $298fc1d08428934f$export$62be934f90997196 {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */ constructor(name, attribs, children = [], type = name === \"script\" ? (0, $d016a34ede83f3d0$export$b992dc138d950e31).Script : name === \"style\" ? (0, $d016a34ede83f3d0$export$b992dc138d950e31).Style : (0, $d016a34ede83f3d0$export$b992dc138d950e31).Tag){\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name)=>{\n            var _a, _b;\n            return {\n                name: name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name]\n            };\n        });\n    }\n}\nfunction $298fc1d08428934f$export$3bf645f08efe3292(node) {\n    return (0, $d016a34ede83f3d0$export$3bf645f08efe3292)(node);\n}\nfunction $298fc1d08428934f$export$c2d65aed98d39b56(node) {\n    return node.type === (0, $d016a34ede83f3d0$export$b992dc138d950e31).CDATA;\n}\nfunction $298fc1d08428934f$export$1879817ac5c922b7(node) {\n    return node.type === (0, $d016a34ede83f3d0$export$b992dc138d950e31).Text;\n}\nfunction $298fc1d08428934f$export$3ab01370f5e64ac8(node) {\n    return node.type === (0, $d016a34ede83f3d0$export$b992dc138d950e31).Comment;\n}\nfunction $298fc1d08428934f$export$4b5d79f26e0e3ad5(node) {\n    return node.type === (0, $d016a34ede83f3d0$export$b992dc138d950e31).Directive;\n}\nfunction $298fc1d08428934f$export$62858bae88b53fd0(node) {\n    return node.type === (0, $d016a34ede83f3d0$export$b992dc138d950e31).Root;\n}\nfunction $298fc1d08428934f$export$bd5ff50f0e53d41c(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\nfunction $298fc1d08428934f$export$ae8e35ea29ddac22(node, recursive = false) {\n    let result;\n    if ($298fc1d08428934f$export$1879817ac5c922b7(node)) result = new $298fc1d08428934f$export$5f1af8db9871e1d6(node.data);\n    else if ($298fc1d08428934f$export$3ab01370f5e64ac8(node)) result = new $298fc1d08428934f$export$4d299b491347818a(node.data);\n    else if ($298fc1d08428934f$export$3bf645f08efe3292(node)) {\n        const children = recursive ? $298fc1d08428934f$var$cloneChildren(node.children) : [];\n        const clone = new $298fc1d08428934f$export$db77ccec0bb4ccac(node.name, {\n            ...node.attribs\n        }, children);\n        children.forEach((child)=>child.parent = clone);\n        if (node.namespace != null) clone.namespace = node.namespace;\n        if (node[\"x-attribsNamespace\"]) clone[\"x-attribsNamespace\"] = {\n            ...node[\"x-attribsNamespace\"]\n        };\n        if (node[\"x-attribsPrefix\"]) clone[\"x-attribsPrefix\"] = {\n            ...node[\"x-attribsPrefix\"]\n        };\n        result = clone;\n    } else if ($298fc1d08428934f$export$c2d65aed98d39b56(node)) {\n        const children = recursive ? $298fc1d08428934f$var$cloneChildren(node.children) : [];\n        const clone = new $298fc1d08428934f$export$1f8b8f7e5c763232(children);\n        children.forEach((child)=>child.parent = clone);\n        result = clone;\n    } else if ($298fc1d08428934f$export$62858bae88b53fd0(node)) {\n        const children = recursive ? $298fc1d08428934f$var$cloneChildren(node.children) : [];\n        const clone = new $298fc1d08428934f$export$b34a105447964f9f(children);\n        children.forEach((child)=>child.parent = clone);\n        if (node[\"x-mode\"]) clone[\"x-mode\"] = node[\"x-mode\"];\n        result = clone;\n    } else if ($298fc1d08428934f$export$4b5d79f26e0e3ad5(node)) {\n        const instruction = new $298fc1d08428934f$export$9269dce19ee35e96(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    } else throw new Error(`Not implemented yet: ${node.type}`);\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) result.sourceCodeLocation = node.sourceCodeLocation;\n    return result;\n}\nfunction $298fc1d08428934f$var$cloneChildren(childs) {\n    const children = childs.map((child)=>$298fc1d08428934f$export$ae8e35ea29ddac22(child, true));\n    for(let i = 1; i < children.length; i++){\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n\n\n// Default options\nconst $5d00ae21c5789654$var$defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false\n};\nclass $5d00ae21c5789654$export$ff8ccbac9225de62 {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */ constructor(callback, options, elementCB){\n        /** The elements of the DOM */ this.dom = [];\n        /** The root element for the DOM */ this.root = new (0, $298fc1d08428934f$export$b34a105447964f9f)(this.dom);\n        /** Indicated whether parsing has been completed. */ this.done = false;\n        /** Stack of open tags. */ this.tagStack = [\n            this.root\n        ];\n        /** A data node that is still being written to. */ this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */ this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = $5d00ae21c5789654$var$defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : $5d00ae21c5789654$var$defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    onparserinit(parser) {\n        this.parser = parser;\n    }\n    // Resets the handler back to starting state\n    onreset() {\n        this.dom = [];\n        this.root = new (0, $298fc1d08428934f$export$b34a105447964f9f)(this.dom);\n        this.done = false;\n        this.tagStack = [\n            this.root\n        ];\n        this.lastNode = null;\n        this.parser = null;\n    }\n    // Signals the handler that parsing is done\n    onend() {\n        if (this.done) return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    }\n    onerror(error) {\n        this.handleCallback(error);\n    }\n    onclosetag() {\n        this.lastNode = null;\n        const elem = this.tagStack.pop();\n        if (this.options.withEndIndices) elem.endIndex = this.parser.endIndex;\n        if (this.elementCB) this.elementCB(elem);\n    }\n    onopentag(name, attribs) {\n        const type = this.options.xmlMode ? (0, $d016a34ede83f3d0$export$b992dc138d950e31).Tag : undefined;\n        const element = new (0, $298fc1d08428934f$export$db77ccec0bb4ccac)(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    }\n    ontext(data) {\n        const { lastNode: lastNode } = this;\n        if (lastNode && lastNode.type === (0, $d016a34ede83f3d0$export$b992dc138d950e31).Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) lastNode.endIndex = this.parser.endIndex;\n        } else {\n            const node = new (0, $298fc1d08428934f$export$5f1af8db9871e1d6)(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    }\n    oncomment(data) {\n        if (this.lastNode && this.lastNode.type === (0, $d016a34ede83f3d0$export$b992dc138d950e31).Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        const node = new (0, $298fc1d08428934f$export$4d299b491347818a)(data);\n        this.addNode(node);\n        this.lastNode = node;\n    }\n    oncommentend() {\n        this.lastNode = null;\n    }\n    oncdatastart() {\n        const text = new (0, $298fc1d08428934f$export$5f1af8db9871e1d6)(\"\");\n        const node = new (0, $298fc1d08428934f$export$1f8b8f7e5c763232)([\n            text\n        ]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    }\n    oncdataend() {\n        this.lastNode = null;\n    }\n    onprocessinginstruction(name, data) {\n        const node = new (0, $298fc1d08428934f$export$9269dce19ee35e96)(name, data);\n        this.addNode(node);\n    }\n    handleCallback(error) {\n        if (typeof this.callback === \"function\") this.callback(error, this.dom);\n        else if (error) throw error;\n    }\n    addNode(node) {\n        const parent = this.tagStack[this.tagStack.length - 1];\n        const previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) node.startIndex = this.parser.startIndex;\n        if (this.options.withEndIndices) node.endIndex = this.parser.endIndex;\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    }\n}\nvar $5d00ae21c5789654$export$2e2bcd8739ae039 = $5d00ae21c5789654$export$ff8ccbac9225de62;\n\n\n/*\n * Module dependencies\n */ \n// Generated using scripts/write-decode-map.ts\nvar $955886d6453f1f75$export$2e2bcd8739ae039 = new Uint16Array(// prettier-ignore\n'ᵁ<\\xd5ıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\\x00\\x00\\x00\\x00\\x00\\x00ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig耻\\xc6䃆P耻&䀦cute耻\\xc1䃁reve;䄂Āiyx}rc耻\\xc2䃂;䐐r;쀀\\ud835\\udd04rave耻\\xc0䃀pha;䎑acr;䄀d;橓Āgp\\x9d\\xa1on;䄄f;쀀\\ud835\\udd38plyFunction;恡ing耻\\xc5䃅Ācs\\xbe\\xc3r;쀀\\ud835\\udc9cign;扔ilde耻\\xc3䃃ml耻\\xc4䃄Ѐaceforsu\\xe5\\xfb\\xfeėĜĢħĪĀcr\\xea\\xf2kslash;或Ŷ\\xf6\\xf8;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀\\ud835\\udd05pf;쀀\\ud835\\udd39eve;䋘c\\xf2ēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻\\xa9䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻\\xc7䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷\\xf2ſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀\\ud835\\udc9epĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀\\ud835\\udd07Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\\x00\\x00\\x00͔͂\\x00Ѕf;쀀\\ud835\\udd3bƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegra\\xecȹoɴ͹\\x00\\x00ͻ\\xbb͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔e\\xe5ˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\\x00\\x00ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\\x00ц\\x00ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\\x00ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀\\ud835\\udc9frok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻\\xd0䃐cute耻\\xc9䃉ƀaiyӒӗӜron;䄚rc耻\\xca䃊;䐭ot;䄖r;쀀\\ud835\\udd08rave耻\\xc8䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\\x00\\x00ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀\\ud835\\udd3csilon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻\\xcb䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀\\ud835\\udd09lledɓ֗\\x00\\x00֣mallSquare;旼erySmallSquare;斪Ͱֺ\\x00ֿ\\x00\\x00ׄf;쀀\\ud835\\udd3dAll;戀riertrf;愱c\\xf2׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀\\ud835\\udd0a;拙pf;쀀\\ud835\\udd3eeater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀\\ud835\\udca2;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\\x00ڲf;愍izontalLine;攀Āctۃۅ\\xf2کrok;䄦mpńېۘownHum\\xf0įqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻\\xcd䃍Āiyܓܘrc耻\\xce䃎;䐘ot;䄰r;愑rave耻\\xcc䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lie\\xf3ϝǴ݉\\x00ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀\\ud835\\udd40a;䎙cr;愐ilde;䄨ǫޚ\\x00ޞcy;䐆l耻\\xcf䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀\\ud835\\udd0dpf;쀀\\ud835\\udd41ǣ߇\\x00ߌr;쀀\\ud835\\udca5rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀\\ud835\\udd0epf;쀀\\ud835\\udd42cr;쀀\\ud835\\udca6րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\\x00ࣃbleBracket;柦nǔࣈ\\x00࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ight\\xe1Μs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀\\ud835\\udd0fĀ;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊight\\xe1οight\\xe1ϊf;쀀\\ud835\\udd43erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂ\\xf2ࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀\\ud835\\udd10nusPlus;戓pf;쀀\\ud835\\udd44c\\xf2੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘\\xeb૙eryThi\\xee૙tedĀGL૸ଆreaterGreate\\xf2ٳessLes\\xf3ੈLine;䀊r;쀀\\ud835\\udd11ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀\\ud835\\udca9ilde耻\\xd1䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻\\xd3䃓Āiy෎ීrc耻\\xd4䃔;䐞blac;䅐r;쀀\\ud835\\udd12rave耻\\xd2䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀\\ud835\\udd46enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀\\ud835\\udcaaash耻\\xd8䃘iŬื฼de耻\\xd5䃕es;樷ml耻\\xd6䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀\\ud835\\udd13i;䎦;䎠usMinus;䂱Āipຢອncareplan\\xe5ڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀\\ud835\\udcab;䎨ȀUfos༑༖༛༟OT耻\"䀢r;쀀\\ud835\\udd14pf;愚cr;쀀\\ud835\\udcac؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻\\xae䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r\\xbbཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\\x00စbleBracket;柧nǔည\\x00နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀\\ud835\\udd16ortȀDLRUᄪᄴᄾᅉownArrow\\xbbОeftArrow\\xbb࢚ightArrow\\xbb࿝pArrow;憑gma;䎣allCircle;战pf;쀀\\ud835\\udd4aɲᅭ\\x00\\x00ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀\\ud835\\udcaear;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Th\\xe1ྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et\\xbbሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻\\xde䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀\\ud835\\udd17Āeiቻ኉ǲኀ\\x00ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀\\ud835\\udd4bipleDot;惛Āctዖዛr;쀀\\ud835\\udcafrok;䅦ૡዷጎጚጦ\\x00ጬጱ\\x00\\x00\\x00\\x00\\x00ጸጽ፷ᎅ\\x00᏿ᐄᐊᐐĀcrዻጁute耻\\xda䃚rĀ;oጇገ憟cir;楉rǣጓ\\x00጖y;䐎ve;䅬Āiyጞጣrc耻\\xdb䃛;䐣blac;䅰r;쀀\\ud835\\udd18rave耻\\xd9䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀\\ud835\\udd4cЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥own\\xe1ϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀\\ud835\\udcb0ilde;䅨ml耻\\xdc䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀\\ud835\\udd19pf;쀀\\ud835\\udd4dcr;쀀\\ud835\\udcb1dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀\\ud835\\udd1apf;쀀\\ud835\\udd4ecr;쀀\\ud835\\udcb2Ȁfiosᓋᓐᓒᓘr;쀀\\ud835\\udd1b;䎞pf;쀀\\ud835\\udd4fcr;쀀\\ud835\\udcb3ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻\\xdd䃝Āiyᔉᔍrc;䅶;䐫r;쀀\\ud835\\udd1cpf;쀀\\ud835\\udd50cr;쀀\\ud835\\udcb4ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\\x00ᕛoWidt\\xe8૙a;䎖r;愨pf;愤cr;쀀\\ud835\\udcb5௡ᖃᖊᖐ\\x00ᖰᖶᖿ\\x00\\x00\\x00\\x00ᗆᗛᗫᙟ᙭\\x00ᚕ᚛ᚲᚹ\\x00ᚾcute耻\\xe1䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻\\xe2䃢te肻\\xb4̆;䐰lig耻\\xe6䃦Ā;r\\xb2ᖺ;쀀\\ud835\\udd1erave耻\\xe0䃠ĀepᗊᗖĀfpᗏᗔsym;愵\\xe8ᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\\x00\\x00ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e\\xbbᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢\\xbb\\xb9arr;捼Āgpᙣᙧon;䄅f;쀀\\ud835\\udd52΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒ\\xf1ᚃing耻\\xe5䃥ƀctyᚡᚦᚨr;쀀\\ud835\\udcb6;䀪mpĀ;e዁ᚯ\\xf1ʈilde耻\\xe3䃣ml耻\\xe4䃤Āciᛂᛈonin\\xf4ɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e\\xbbᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰s\\xe9ᜌno\\xf5ēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀\\ud835\\udd1fg΀costuvwឍឝឳេ៕៛៞ƀaiuបពរ\\xf0ݠrc;旯p\\xbb፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\\x00\\x00ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄e\\xe5ᑄ\\xe5ᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\\x00ᠳƲᠯ\\x00ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀\\ud835\\udd53Ā;tᏋᡣom\\xbbᏌtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻\\xa6䂦Ȁceioᥑᥖᥚᥠr;쀀\\ud835\\udcb7mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t\\xbb᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\\x00᧨ᨑᨕᨲ\\x00ᨷᩐ\\x00\\x00᪴\\x00\\x00᫁\\x00\\x00ᬡᬮ᭍᭒\\x00᯽\\x00ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁\\xeeړȀaeiu᧰᧻ᨁᨅǰ᧵\\x00᧸s;橍on;䄍dil耻\\xe7䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻\\xb8ƭptyv;榲t脀\\xa2;eᨭᨮ䂢r\\xe4Ʋr;쀀\\ud835\\udd20ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark\\xbbᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\\x00\\x00᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟\\xbbཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it\\xbb᪼ˬ᫇᫔᫺\\x00ᬊonĀ;eᫍᫎ䀺Ā;q\\xc7\\xc6ɭ᫙\\x00\\x00᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁\\xeeᅠeĀmx᫱᫶ent\\xbb᫩e\\xf3ɍǧ᫾\\x00ᬇĀ;dኻᬂot;橭n\\xf4Ɇƀfryᬐᬔᬗ;쀀\\ud835\\udd54o\\xe4ɔ脀\\xa9;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀\\ud835\\udcb8Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\\x00\\x00᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\\x00\\x00ᯒre\\xe3᭳u\\xe3᭵ee;拎edge;拏en耻\\xa4䂤earrowĀlrᯮ᯳eft\\xbbᮀight\\xbbᮽe\\xe4ᯝĀciᰁᰇonin\\xf4Ƿnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍r\\xf2΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸\\xf2ᄳhĀ;vᱚᱛ怐\\xbbऊūᱡᱧarow;椏a\\xe3̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻\\xb0䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀\\ud835\\udd21arĀlrᲳᲵ\\xbbࣜ\\xbbသʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀\\xf7;o᳧ᳰntimes;拇n\\xf8᳷cy;䑒cɯᴆ\\x00\\x00ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀\\ud835\\udd55ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedg\\xe5\\xfanƀadhᄮᵝᵧownarrow\\xf3ᲃarpoonĀlrᵲᵶef\\xf4Ჴigh\\xf4ᲶŢᵿᶅkaro\\xf7གɯᶊ\\x00\\x00ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀\\ud835\\udcb9;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃r\\xf2Щa\\xf2ྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴo\\xf4ᲉĀcsḎḔute耻\\xe9䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻\\xea䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀\\ud835\\udd22ƀ;rsṐṑṗ檚ave耻\\xe8䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et\\xbbẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀\\ud835\\udd56ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on\\xbbớ;䏵ȀcsuvỪỳἋἣĀioữḱrc\\xbbḮɩỹ\\x00\\x00ỻ\\xedՈantĀglἂἆtr\\xbbṝess\\xbbṺƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯o\\xf4͒ĀahὉὋ;䎷耻\\xf0䃰Āmrὓὗl耻\\xeb䃫o;悬ƀcipὡὤὧl;䀡s\\xf4ծĀeoὬὴctatio\\xeeՙnential\\xe5չৡᾒ\\x00ᾞ\\x00ᾡᾧ\\x00\\x00ῆῌ\\x00ΐ\\x00ῦῪ \\x00 ⁚llingdotse\\xf1Ṅy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\\x00\\x00᾽g;耀ﬀig;耀ﬄ;쀀\\ud835\\udd23lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\\x00ῳf;쀀\\ud835\\udd57ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\\x00⁐β•‥‧‪‬\\x00‮耻\\xbd䂽;慓耻\\xbc䂼;慕;慙;慛Ƴ‴\\x00‶;慔;慖ʴ‾⁁\\x00\\x00⁃耻\\xbe䂾;慗;慜5;慘ƶ⁌\\x00⁎;慚;慝8;慞l;恄wn;挢cr;쀀\\ud835\\udcbbࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lan\\xf4٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀\\ud835\\udd24Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox\\xbbℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀\\ud835\\udd58Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\\x00↎pro\\xf8₞r;楸qĀlqؿ↖les\\xf3₈i\\xed٫Āen↣↭rtneqq;쀀≩︀\\xc5↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽r\\xf2ΠȀilmr⇐⇔⇗⇛rs\\xf0ᒄf\\xbb․il\\xf4کĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it\\xbb∊lip;怦con;抹r;쀀\\ud835\\udd25sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀\\ud835\\udd59bar;怕ƀclt≯≴≸r;쀀\\ud835\\udcbdas\\xe8⇴rok;䄧Ābp⊂⊇ull;恃hen\\xbbᱛૡ⊣\\x00⊪\\x00⊸⋅⋎\\x00⋕⋳\\x00\\x00⋸⌢⍧⍢⍿\\x00⎆⎪⎴cute耻\\xed䃭ƀ;iyݱ⊰⊵rc耻\\xee䃮;䐸Ācx⊼⊿y;䐵cl耻\\xa1䂡ĀfrΟ⋉;쀀\\ud835\\udd26rave耻\\xec䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓in\\xe5ގar\\xf4ܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝do\\xf4⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙er\\xf3ᕣ\\xe3⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀\\ud835\\udd5aa;䎹uest耻\\xbf䂿Āci⎊⎏r;쀀\\ud835\\udcbenʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\\x00⎼cy;䑖l耻\\xef䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀\\ud835\\udd27ath;䈷pf;쀀\\ud835\\udd5bǣ⏬\\x00⏱r;쀀\\ud835\\udcbfrcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀\\ud835\\udd28reen;䄸cy;䑅cy;䑜pf;쀀\\ud835\\udd5ccr;쀀\\ud835\\udcc0஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼r\\xf2৆\\xf2Εail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\\x00⒪\\x00⒱\\x00\\x00\\x00\\x00\\x00⒵Ⓔ\\x00ⓆⓈⓍ\\x00⓹ute;䄺mptyv;榴ra\\xeeࡌbda;䎻gƀ;dlࢎⓁⓃ;榑\\xe5ࢎ;檅uo耻\\xab䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝\\xeb≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼\\xecࢰ\\xe2┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□a\\xe9⓶arpoonĀdu▯▴own\\xbbњp\\xbb०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoon\\xf3྘quigarro\\xf7⇰hreetimes;拋ƀ;qs▋ও◺lan\\xf4বʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋ppro\\xf8Ⓠot;拖qĀgq♃♅\\xf4উgt\\xf2⒌\\xf4ছi\\xedলƀilr♕࣡♚sht;楼;쀀\\ud835\\udd29Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖r\\xf2◁orne\\xf2ᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che\\xbb⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox\\xbb⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽r\\xebࣁgƀlmr⛿✍✔eftĀar০✇ight\\xe1৲apsto;柼ight\\xe1৽parrowĀlr✥✩ef\\xf4⓭ight;憬ƀafl✶✹✽r;榅;쀀\\ud835\\udd5dus;樭imes;樴š❋❏st;戗\\xe1ፎƀ;ef❗❘᠀旊nge\\xbb❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇r\\xf2ࢨorne\\xf2ᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀\\ud835\\udcc1mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹re\\xe5◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀\\xc5⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻\\xaf䂯Āet⡗⡙;時Ā;e⡞⡟朠se\\xbb⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻ow\\xeeҌef\\xf4ए\\xf0Ꮡker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle\\xbbᘦr;쀀\\ud835\\udd2ao;愧ƀcdn⢯⢴⣉ro耻\\xb5䂵Ȁ;acdᑤ⢽⣀⣄s\\xf4ᚧir;櫰ot肻\\xb7Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛\\xf2−\\xf0ઁĀdp⣩⣮els;抧f;쀀\\ud835\\udd5eĀct⣸⣽r;쀀\\ud835\\udcc2pos\\xbbᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la\\xbb˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉ro\\xf8඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\\x00⧣p肻\\xa0ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\\x00⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸ui\\xf6ୣĀei⩊⩎ar;椨\\xed஘istĀ;s஠டr;쀀\\ud835\\udd2bȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lan\\xf4௢i\\xed௪Ā;rஶ⪁\\xbbஷƀAap⪊⪍⪑r\\xf2⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹r\\xf2⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro\\xf7⫁ightarro\\xf7⪐ƀ;qs఻⪺⫪lan\\xf4ౕĀ;sౕ⫴\\xbbశi\\xedౝĀ;rవ⫾iĀ;eచథi\\xe4ඐĀpt⬌⬑f;쀀\\ud835\\udd5f膀\\xac;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lle\\xec୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳u\\xe5ಥĀ;cಘ⭸Ā;eಒ⭽\\xf1ಘȀAait⮈⮋⮝⮧r\\xf2⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow\\xbb⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉u\\xe5൅;쀀\\ud835\\udcc3ortɭ⬅\\x00\\x00⯖ar\\xe1⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭\\xe5೸\\xe5ഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗ\\xf1സȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇ\\xecௗlde耻\\xf1䃱\\xe7ృiangleĀlrⱒⱜeftĀ;eచⱚ\\xf1దightĀ;eೋⱥ\\xf1೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00ⴭ\\x00ⴸⵈⵠⵥ⵲ⶄᬇ\\x00\\x00ⶍⶫ\\x00ⷈⷎ\\x00ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻\\xf3䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻\\xf4䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀\\ud835\\udd2cͯ⵹\\x00\\x00⵼\\x00ⶂn;䋛ave耻\\xf2䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨr\\xf2᪀Āir⶝ⶠr;榾oss;榻n\\xe5๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀\\ud835\\udd60ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨r\\xf2᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f\\xbbⷿ耻\\xaa䂪耻\\xba䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧\\xf2⸁ash耻\\xf8䃸l;折iŬⸯ⸴de耻\\xf5䃵esĀ;aǛ⸺s;樶ml耻\\xf6䃶bar;挽ૡ⹞\\x00⹽\\x00⺀⺝\\x00⺢⺹\\x00\\x00⻋ຜ\\x00⼓\\x00\\x00⼫⾼\\x00⿈rȀ;astЃ⹧⹲຅脀\\xb6;l⹭⹮䂶le\\xecЃɩ⹸\\x00\\x00⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀\\ud835\\udd2dƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕ma\\xf4੶ne;明ƀ;tv⺿⻀⻈䏀chfork\\xbb´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎\\xf6⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻\\xb1ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀\\ud835\\udd61nd耻\\xa3䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷u\\xe5໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾ppro\\xf8⽃urlye\\xf1໙\\xf1໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨i\\xedໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺\\xf0⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴\\xef໻rel;抰Āci⿀⿅r;쀀\\ud835\\udcc5;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀\\ud835\\udd2epf;쀀\\ud835\\udd62rime;恗cr;쀀\\ud835\\udcc6ƀaeo⿸〉〓tĀei⿾々rnion\\xf3ڰnt;樖stĀ;e【】䀿\\xf1Ἑ\\xf4༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがr\\xf2Ⴓ\\xf2ϝail;検ar\\xf2ᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕i\\xe3ᅮmptyv;榳gȀ;del࿑らるろ;榒;榥\\xe5࿑uo耻\\xbb䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞\\xeb≝\\xf0✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶al\\xf3༞ƀabrョリヮr\\xf2៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗\\xec࿲\\xe2ヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜn\\xe5Ⴛar\\xf4ྩt;断ƀilrㅩဣㅮsht;楽;쀀\\ud835\\udd2fĀaoㅷㆆrĀduㅽㅿ\\xbbѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭa\\xe9トarpoonĀduㆻㆿow\\xeeㅾp\\xbb႒eftĀah㇊㇐rrow\\xf3࿪arpoon\\xf3Ցightarrows;應quigarro\\xf7ニhreetimes;拌g;䋚ingdotse\\xf1ἲƀahm㈍㈐㈓r\\xf2࿪a\\xf2Ց;怏oustĀ;a㈞㈟掱che\\xbb㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾r\\xebဃƀafl㉇㉊㉎r;榆;쀀\\ud835\\udd63us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒ar\\xf2㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀\\ud835\\udcc7Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠re\\xe5ㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\\x00㍺㎤\\x00\\x00㏬㏰\\x00㐨㑈㑚㒭㒱㓊㓱\\x00㘖\\x00\\x00㘳cute;䅛qu\\xef➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\\x00㋼;檸on;䅡u\\xe5ᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓i\\xedሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒\\xeb∨Ā;oਸ਼਴t耻\\xa7䂧i;䀻war;椩mĀin㍩\\xf0nu\\xf3\\xf1t;朶rĀ;o㍶⁕쀀\\ud835\\udd30Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\\x00\\x00㎜i\\xe4ᑤara\\xec⹯耻\\xad䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲ar\\xf2ᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetm\\xe9㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀\\ud835\\udd64aĀdr㑍ЂesĀ;u㑔㑕晠it\\xbb㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍\\xf1ᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝\\xf1ᆮƀ;afᅻ㒦ְrť㒫ֱ\\xbbᅼar\\xf2ᅈȀcemt㒹㒾㓂㓅r;쀀\\ud835\\udcc8tm\\xee\\xf1i\\xec㐕ar\\xe6ᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psilo\\xeeỠh\\xe9⺯s\\xbb⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦ppro\\xf8㋺urlye\\xf1ᇾ\\xf1ᇳƀaes㖂㖈㌛ppro\\xf8㌚q\\xf1㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻\\xb9䂹耻\\xb2䂲耻\\xb3䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨\\xeb∮Ā;oਫ਩war;椪lig耻\\xdf䃟௡㙑㙝㙠ዎ㙳㙹\\x00㙾㛂\\x00\\x00\\x00\\x00\\x00㛛㜃\\x00㜉㝬\\x00\\x00\\x00㞇ɲ㙖\\x00\\x00㙛get;挖;䏄r\\xeb๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀\\ud835\\udd31Ȁeiko㚆㚝㚵㚼ǲ㚋\\x00㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮ppro\\xf8዁im\\xbbኬs\\xf0ኞĀas㚺㚮\\xf0዁rn耻\\xfe䃾Ǭ̟㛆⋧es膀\\xd7;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀\\xe1⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀\\ud835\\udd65rk;櫚\\xe1㍢rime;怴ƀaip㜏㜒㝤d\\xe5ቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own\\xbbᶻeftĀ;e⠀㜾\\xf1म;扜ightĀ;e㊪㝋\\xf1ၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀\\ud835\\udcc9;䑆cy;䑛rok;䅧Āio㞋㞎x\\xf4᝷headĀlr㞗㞠eftarro\\xf7ࡏightarrow\\xbbཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶r\\xf2ϭar;楣Ācr㟜㟢ute耻\\xfa䃺\\xf2ᅐrǣ㟪\\x00㟭y;䑞ve;䅭Āiy㟵㟺rc耻\\xfb䃻;䑃ƀabh㠃㠆㠋r\\xf2Ꭽlac;䅱a\\xf2ᏃĀir㠓㠘sht;楾;쀀\\ud835\\udd32rave耻\\xf9䃹š㠧㠱rĀlr㠬㠮\\xbbॗ\\xbbႃlk;斀Āct㠹㡍ɯ㠿\\x00\\x00㡊rnĀ;e㡅㡆挜r\\xbb㡆op;挏ri;旸Āal㡖㡚cr;䅫肻\\xa8͉Āgp㡢㡦on;䅳f;쀀\\ud835\\udd66̀adhlsuᅋ㡸㡽፲㢑㢠own\\xe1ᎳarpoonĀlr㢈㢌ef\\xf4㠭igh\\xf4㠯iƀ;hl㢙㢚㢜䏅\\xbbᏺon\\xbb㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\\x00\\x00㣁rnĀ;e㢼㢽挝r\\xbb㢽op;挎ng;䅯ri;旹cr;쀀\\ud835\\udccaƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨\\xbb᠓Āam㣯㣲r\\xf2㢨l耻\\xfc䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠r\\xf2ϷarĀ;v㤦㤧櫨;櫩as\\xe8ϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖app\\xe1␕othin\\xe7ẖƀhir㓫⻈㥙op\\xf4⾵Ā;hᎷ㥢\\xefㆍĀiu㥩㥭gm\\xe1㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟et\\xe1㚜iangleĀlr㦪㦯eft\\xbbथight\\xbbၑy;䐲ash\\xbbံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨa\\xf2ᑩr;쀀\\ud835\\udd33tr\\xe9㦮suĀbp㧯㧱\\xbbജ\\xbb൙pf;쀀\\ud835\\udd67ro\\xf0໻tr\\xe9㦴Ācu㨆㨋r;쀀\\ud835\\udccbĀbp㨐㨘nĀEe㦀㨖\\xbb㥾nĀEe㦒㨞\\xbb㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀\\ud835\\udd34pf;쀀\\ud835\\udd68Ā;eᑹ㩦at\\xe8ᑹcr;쀀\\ud835\\udcccૣណ㪇\\x00㪋\\x00㪐㪛\\x00\\x00㪝㪨㪫㪯\\x00\\x00㫃㫎\\x00㫘ៜ៟tr\\xe9៑r;쀀\\ud835\\udd35ĀAa㪔㪗r\\xf2σr\\xf2৶;䎾ĀAa㪡㪤r\\xf2θr\\xf2৫a\\xf0✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀\\ud835\\udd69im\\xe5ឲĀAa㫇㫊r\\xf2ώr\\xf2ਁĀcq㫒ីr;쀀\\ud835\\udccdĀpt៖㫜r\\xe9។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻\\xfd䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻\\xa5䂥r;쀀\\ud835\\udd36cy;䑗pf;쀀\\ud835\\udd6acr;쀀\\ud835\\udcceĀcm㬦㬩y;䑎l耻\\xff䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡tr\\xe6ᕟa;䎶r;쀀\\ud835\\udd37cy;䐶grarr;懝pf;쀀\\ud835\\udd6bcr;쀀\\ud835\\udccfĀjn㮅㮇;怍j;怌'.split(\"\").map((c)=>c.charCodeAt(0)));\n\n\n// Generated using scripts/write-decode-map.ts\nvar $79538e6bbdd097a4$export$2e2bcd8739ae039 = new Uint16Array(// prettier-ignore\n\"Ȁaglq\t\\x15\\x18\\x1bɭ\\x0f\\x00\\x00\\x12p;䀦os;䀧t;䀾t;䀼uot;䀢\".split(\"\").map((c)=>c.charCodeAt(0)));\n\n\n// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar $10632aaf914d6bd1$var$_a;\nconst $10632aaf914d6bd1$var$decodeMap = new Map([\n    [\n        0,\n        65533\n    ],\n    // C1 Unicode control character reference replacements\n    [\n        128,\n        8364\n    ],\n    [\n        130,\n        8218\n    ],\n    [\n        131,\n        402\n    ],\n    [\n        132,\n        8222\n    ],\n    [\n        133,\n        8230\n    ],\n    [\n        134,\n        8224\n    ],\n    [\n        135,\n        8225\n    ],\n    [\n        136,\n        710\n    ],\n    [\n        137,\n        8240\n    ],\n    [\n        138,\n        352\n    ],\n    [\n        139,\n        8249\n    ],\n    [\n        140,\n        338\n    ],\n    [\n        142,\n        381\n    ],\n    [\n        145,\n        8216\n    ],\n    [\n        146,\n        8217\n    ],\n    [\n        147,\n        8220\n    ],\n    [\n        148,\n        8221\n    ],\n    [\n        149,\n        8226\n    ],\n    [\n        150,\n        8211\n    ],\n    [\n        151,\n        8212\n    ],\n    [\n        152,\n        732\n    ],\n    [\n        153,\n        8482\n    ],\n    [\n        154,\n        353\n    ],\n    [\n        155,\n        8250\n    ],\n    [\n        156,\n        339\n    ],\n    [\n        158,\n        382\n    ],\n    [\n        159,\n        376\n    ]\n]);\nconst $10632aaf914d6bd1$export$73bfc63873071f74 = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n($10632aaf914d6bd1$var$_a = String.fromCodePoint) !== null && $10632aaf914d6bd1$var$_a !== void 0 ? $10632aaf914d6bd1$var$_a : function(codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(codePoint >>> 10 & 0x3ff | 0xd800);\n        codePoint = 0xdc00 | codePoint & 0x3ff;\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\nfunction $10632aaf914d6bd1$export$b978ab756102108a(codePoint) {\n    var _a;\n    if (codePoint >= 0xd800 && codePoint <= 0xdfff || codePoint > 0x10ffff) return 0xfffd;\n    return (_a = $10632aaf914d6bd1$var$decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\nfunction $10632aaf914d6bd1$export$2e2bcd8739ae039(codePoint) {\n    return $10632aaf914d6bd1$export$73bfc63873071f74($10632aaf914d6bd1$export$b978ab756102108a(codePoint));\n}\n\n\nvar $21b54aeefac41b63$var$CharCodes;\n(function(CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})($21b54aeefac41b63$var$CharCodes || ($21b54aeefac41b63$var$CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */ const $21b54aeefac41b63$var$TO_LOWER_BIT = 32;\nvar $21b54aeefac41b63$export$6a4325c613e0faec;\n(function(BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})($21b54aeefac41b63$export$6a4325c613e0faec || ($21b54aeefac41b63$export$6a4325c613e0faec = {}));\nfunction $21b54aeefac41b63$var$isNumber(code) {\n    return code >= $21b54aeefac41b63$var$CharCodes.ZERO && code <= $21b54aeefac41b63$var$CharCodes.NINE;\n}\nfunction $21b54aeefac41b63$var$isHexadecimalCharacter(code) {\n    return code >= $21b54aeefac41b63$var$CharCodes.UPPER_A && code <= $21b54aeefac41b63$var$CharCodes.UPPER_F || code >= $21b54aeefac41b63$var$CharCodes.LOWER_A && code <= $21b54aeefac41b63$var$CharCodes.LOWER_F;\n}\nfunction $21b54aeefac41b63$var$isAsciiAlphaNumeric(code) {\n    return code >= $21b54aeefac41b63$var$CharCodes.UPPER_A && code <= $21b54aeefac41b63$var$CharCodes.UPPER_Z || code >= $21b54aeefac41b63$var$CharCodes.LOWER_A && code <= $21b54aeefac41b63$var$CharCodes.LOWER_Z || $21b54aeefac41b63$var$isNumber(code);\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */ function $21b54aeefac41b63$var$isEntityInAttributeInvalidEnd(code) {\n    return code === $21b54aeefac41b63$var$CharCodes.EQUALS || $21b54aeefac41b63$var$isAsciiAlphaNumeric(code);\n}\nvar $21b54aeefac41b63$var$EntityDecoderState;\n(function(EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})($21b54aeefac41b63$var$EntityDecoderState || ($21b54aeefac41b63$var$EntityDecoderState = {}));\nvar $21b54aeefac41b63$export$8c8f129ce60f53c;\n(function(DecodingMode) {\n    /** Entities in text nodes that can end with any character. */ DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */ DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */ DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})($21b54aeefac41b63$export$8c8f129ce60f53c || ($21b54aeefac41b63$export$8c8f129ce60f53c = {}));\nclass $21b54aeefac41b63$export$15263a93ff7ec8ba {\n    constructor(/** The tree used to decode entities. */ decodeTree, /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */ emitCodePoint, /** An object that is used to produce errors. */ errors){\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */ this.state = $21b54aeefac41b63$var$EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */ this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */ this.result = 0;\n        /** The current index in the decode tree. */ this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */ this.excess = 1;\n        /** The mode in which the decoder is operating. */ this.decodeMode = $21b54aeefac41b63$export$8c8f129ce60f53c.Strict;\n    }\n    /** Resets the instance to make it reusable. */ startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = $21b54aeefac41b63$var$EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ write(str, offset) {\n        switch(this.state){\n            case $21b54aeefac41b63$var$EntityDecoderState.EntityStart:\n                if (str.charCodeAt(offset) === $21b54aeefac41b63$var$CharCodes.NUM) {\n                    this.state = $21b54aeefac41b63$var$EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = $21b54aeefac41b63$var$EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            case $21b54aeefac41b63$var$EntityDecoderState.NumericStart:\n                return this.stateNumericStart(str, offset);\n            case $21b54aeefac41b63$var$EntityDecoderState.NumericDecimal:\n                return this.stateNumericDecimal(str, offset);\n            case $21b54aeefac41b63$var$EntityDecoderState.NumericHex:\n                return this.stateNumericHex(str, offset);\n            case $21b54aeefac41b63$var$EntityDecoderState.NamedEntity:\n                return this.stateNamedEntity(str, offset);\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ stateNumericStart(str, offset) {\n        if (offset >= str.length) return -1;\n        if ((str.charCodeAt(offset) | $21b54aeefac41b63$var$TO_LOWER_BIT) === $21b54aeefac41b63$var$CharCodes.LOWER_X) {\n            this.state = $21b54aeefac41b63$var$EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = $21b54aeefac41b63$var$EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result = this.result * Math.pow(base, digitCount) + parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while(offset < str.length){\n            const char = str.charCodeAt(offset);\n            if ($21b54aeefac41b63$var$isNumber(char) || $21b54aeefac41b63$var$isHexadecimalCharacter(char)) offset += 1;\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while(offset < str.length){\n            const char = str.charCodeAt(offset);\n            if ($21b54aeefac41b63$var$isNumber(char)) offset += 1;\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */ emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 || _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === $21b54aeefac41b63$var$CharCodes.SEMI) this.consumed += 1;\n        else if (this.decodeMode === $21b54aeefac41b63$export$8c8f129ce60f53c.Strict) return 0;\n        this.emitCodePoint((0, $10632aaf914d6bd1$export$b978ab756102108a)(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== $21b54aeefac41b63$var$CharCodes.SEMI) this.errors.missingSemicolonAfterCharacterReference();\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ stateNamedEntity(str, offset) {\n        const { decodeTree: decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & $21b54aeefac41b63$export$6a4325c613e0faec.VALUE_LENGTH) >> 14;\n        for(; offset < str.length; offset++, this.excess++){\n            const char = str.charCodeAt(offset);\n            this.treeIndex = $21b54aeefac41b63$export$44c08d99945e6276(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) return this.result === 0 || // If we are parsing an attribute\n            this.decodeMode === $21b54aeefac41b63$export$8c8f129ce60f53c.Attribute && // We shouldn't have consumed any characters after the entity,\n            (valueLength === 0 || // And there should be no invalid characters.\n            $21b54aeefac41b63$var$isEntityInAttributeInvalidEnd(char)) ? 0 : this.emitNotTerminatedNamedEntity();\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & $21b54aeefac41b63$export$6a4325c613e0faec.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === $21b54aeefac41b63$var$CharCodes.SEMI) return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== $21b54aeefac41b63$export$8c8f129ce60f53c.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */ emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result: result, decodeTree: decodeTree } = this;\n        const valueLength = (decodeTree[result] & $21b54aeefac41b63$export$6a4325c613e0faec.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 || _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */ emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree: decodeTree } = this;\n        this.emitCodePoint(valueLength === 1 ? decodeTree[result] & ~$21b54aeefac41b63$export$6a4325c613e0faec.VALUE_LENGTH : decodeTree[result + 1], consumed);\n        if (valueLength === 3) // For multi-byte values, we need to emit the second byte.\n        this.emitCodePoint(decodeTree[result + 2], consumed);\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */ end() {\n        var _a;\n        switch(this.state){\n            case $21b54aeefac41b63$var$EntityDecoderState.NamedEntity:\n                // Emit a named entity if we have one.\n                return this.result !== 0 && (this.decodeMode !== $21b54aeefac41b63$export$8c8f129ce60f53c.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;\n            // Otherwise, emit a numeric entity if we have one.\n            case $21b54aeefac41b63$var$EntityDecoderState.NumericDecimal:\n                return this.emitNumericEntity(0, 2);\n            case $21b54aeefac41b63$var$EntityDecoderState.NumericHex:\n                return this.emitNumericEntity(0, 3);\n            case $21b54aeefac41b63$var$EntityDecoderState.NumericStart:\n                (_a = this.errors) === null || _a === void 0 || _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            case $21b54aeefac41b63$var$EntityDecoderState.EntityStart:\n                // Return 0 if we have no entity.\n                return 0;\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */ function $21b54aeefac41b63$var$getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new $21b54aeefac41b63$export$15263a93ff7ec8ba(decodeTree, (str)=>ret += (0, $10632aaf914d6bd1$export$73bfc63873071f74)(str));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while((offset = str.indexOf(\"&\", offset)) >= 0){\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\nfunction $21b54aeefac41b63$export$44c08d99945e6276(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & $21b54aeefac41b63$export$6a4325c613e0faec.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & $21b54aeefac41b63$export$6a4325c613e0faec.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while(lo <= hi){\n        const mid = lo + hi >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) lo = mid + 1;\n        else if (midVal > char) hi = mid - 1;\n        else return decodeTree[mid + branchCount];\n    }\n    return -1;\n}\nconst $21b54aeefac41b63$var$htmlDecoder = $21b54aeefac41b63$var$getDecoder((0, $955886d6453f1f75$export$2e2bcd8739ae039));\nconst $21b54aeefac41b63$var$xmlDecoder = $21b54aeefac41b63$var$getDecoder((0, $79538e6bbdd097a4$export$2e2bcd8739ae039));\nfunction $21b54aeefac41b63$export$f045cb747ce77a19(str, mode = $21b54aeefac41b63$export$8c8f129ce60f53c.Legacy) {\n    return $21b54aeefac41b63$var$htmlDecoder(str, mode);\n}\nfunction $21b54aeefac41b63$export$49f5e8089adb006a(str) {\n    return $21b54aeefac41b63$var$htmlDecoder(str, $21b54aeefac41b63$export$8c8f129ce60f53c.Attribute);\n}\nfunction $21b54aeefac41b63$export$da52f4371b3f37de(str) {\n    return $21b54aeefac41b63$var$htmlDecoder(str, $21b54aeefac41b63$export$8c8f129ce60f53c.Strict);\n}\nfunction $21b54aeefac41b63$export$88e3b9643a8bd06e(str) {\n    return $21b54aeefac41b63$var$xmlDecoder(str, $21b54aeefac41b63$export$8c8f129ce60f53c.Strict);\n}\n\n\n// Generated using scripts/write-encode-map.ts\nfunction $70fecd720f63c751$var$restoreDiff(arr) {\n    for(let i = 1; i < arr.length; i++)arr[i][0] += arr[i - 1][0] + 1;\n    return arr;\n}\nvar // prettier-ignore\n$70fecd720f63c751$export$2e2bcd8739ae039 = new Map(/* #__PURE__ */ $70fecd720f63c751$var$restoreDiff([\n    [\n        9,\n        \"&Tab;\"\n    ],\n    [\n        0,\n        \"&NewLine;\"\n    ],\n    [\n        22,\n        \"&excl;\"\n    ],\n    [\n        0,\n        \"&quot;\"\n    ],\n    [\n        0,\n        \"&num;\"\n    ],\n    [\n        0,\n        \"&dollar;\"\n    ],\n    [\n        0,\n        \"&percnt;\"\n    ],\n    [\n        0,\n        \"&amp;\"\n    ],\n    [\n        0,\n        \"&apos;\"\n    ],\n    [\n        0,\n        \"&lpar;\"\n    ],\n    [\n        0,\n        \"&rpar;\"\n    ],\n    [\n        0,\n        \"&ast;\"\n    ],\n    [\n        0,\n        \"&plus;\"\n    ],\n    [\n        0,\n        \"&comma;\"\n    ],\n    [\n        1,\n        \"&period;\"\n    ],\n    [\n        0,\n        \"&sol;\"\n    ],\n    [\n        10,\n        \"&colon;\"\n    ],\n    [\n        0,\n        \"&semi;\"\n    ],\n    [\n        0,\n        {\n            v: \"&lt;\",\n            n: 8402,\n            o: \"&nvlt;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&equals;\",\n            n: 8421,\n            o: \"&bne;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&gt;\",\n            n: 8402,\n            o: \"&nvgt;\"\n        }\n    ],\n    [\n        0,\n        \"&quest;\"\n    ],\n    [\n        0,\n        \"&commat;\"\n    ],\n    [\n        26,\n        \"&lbrack;\"\n    ],\n    [\n        0,\n        \"&bsol;\"\n    ],\n    [\n        0,\n        \"&rbrack;\"\n    ],\n    [\n        0,\n        \"&Hat;\"\n    ],\n    [\n        0,\n        \"&lowbar;\"\n    ],\n    [\n        0,\n        \"&DiacriticalGrave;\"\n    ],\n    [\n        5,\n        {\n            n: 106,\n            o: \"&fjlig;\"\n        }\n    ],\n    [\n        20,\n        \"&lbrace;\"\n    ],\n    [\n        0,\n        \"&verbar;\"\n    ],\n    [\n        0,\n        \"&rbrace;\"\n    ],\n    [\n        34,\n        \"&nbsp;\"\n    ],\n    [\n        0,\n        \"&iexcl;\"\n    ],\n    [\n        0,\n        \"&cent;\"\n    ],\n    [\n        0,\n        \"&pound;\"\n    ],\n    [\n        0,\n        \"&curren;\"\n    ],\n    [\n        0,\n        \"&yen;\"\n    ],\n    [\n        0,\n        \"&brvbar;\"\n    ],\n    [\n        0,\n        \"&sect;\"\n    ],\n    [\n        0,\n        \"&die;\"\n    ],\n    [\n        0,\n        \"&copy;\"\n    ],\n    [\n        0,\n        \"&ordf;\"\n    ],\n    [\n        0,\n        \"&laquo;\"\n    ],\n    [\n        0,\n        \"&not;\"\n    ],\n    [\n        0,\n        \"&shy;\"\n    ],\n    [\n        0,\n        \"&circledR;\"\n    ],\n    [\n        0,\n        \"&macr;\"\n    ],\n    [\n        0,\n        \"&deg;\"\n    ],\n    [\n        0,\n        \"&PlusMinus;\"\n    ],\n    [\n        0,\n        \"&sup2;\"\n    ],\n    [\n        0,\n        \"&sup3;\"\n    ],\n    [\n        0,\n        \"&acute;\"\n    ],\n    [\n        0,\n        \"&micro;\"\n    ],\n    [\n        0,\n        \"&para;\"\n    ],\n    [\n        0,\n        \"&centerdot;\"\n    ],\n    [\n        0,\n        \"&cedil;\"\n    ],\n    [\n        0,\n        \"&sup1;\"\n    ],\n    [\n        0,\n        \"&ordm;\"\n    ],\n    [\n        0,\n        \"&raquo;\"\n    ],\n    [\n        0,\n        \"&frac14;\"\n    ],\n    [\n        0,\n        \"&frac12;\"\n    ],\n    [\n        0,\n        \"&frac34;\"\n    ],\n    [\n        0,\n        \"&iquest;\"\n    ],\n    [\n        0,\n        \"&Agrave;\"\n    ],\n    [\n        0,\n        \"&Aacute;\"\n    ],\n    [\n        0,\n        \"&Acirc;\"\n    ],\n    [\n        0,\n        \"&Atilde;\"\n    ],\n    [\n        0,\n        \"&Auml;\"\n    ],\n    [\n        0,\n        \"&angst;\"\n    ],\n    [\n        0,\n        \"&AElig;\"\n    ],\n    [\n        0,\n        \"&Ccedil;\"\n    ],\n    [\n        0,\n        \"&Egrave;\"\n    ],\n    [\n        0,\n        \"&Eacute;\"\n    ],\n    [\n        0,\n        \"&Ecirc;\"\n    ],\n    [\n        0,\n        \"&Euml;\"\n    ],\n    [\n        0,\n        \"&Igrave;\"\n    ],\n    [\n        0,\n        \"&Iacute;\"\n    ],\n    [\n        0,\n        \"&Icirc;\"\n    ],\n    [\n        0,\n        \"&Iuml;\"\n    ],\n    [\n        0,\n        \"&ETH;\"\n    ],\n    [\n        0,\n        \"&Ntilde;\"\n    ],\n    [\n        0,\n        \"&Ograve;\"\n    ],\n    [\n        0,\n        \"&Oacute;\"\n    ],\n    [\n        0,\n        \"&Ocirc;\"\n    ],\n    [\n        0,\n        \"&Otilde;\"\n    ],\n    [\n        0,\n        \"&Ouml;\"\n    ],\n    [\n        0,\n        \"&times;\"\n    ],\n    [\n        0,\n        \"&Oslash;\"\n    ],\n    [\n        0,\n        \"&Ugrave;\"\n    ],\n    [\n        0,\n        \"&Uacute;\"\n    ],\n    [\n        0,\n        \"&Ucirc;\"\n    ],\n    [\n        0,\n        \"&Uuml;\"\n    ],\n    [\n        0,\n        \"&Yacute;\"\n    ],\n    [\n        0,\n        \"&THORN;\"\n    ],\n    [\n        0,\n        \"&szlig;\"\n    ],\n    [\n        0,\n        \"&agrave;\"\n    ],\n    [\n        0,\n        \"&aacute;\"\n    ],\n    [\n        0,\n        \"&acirc;\"\n    ],\n    [\n        0,\n        \"&atilde;\"\n    ],\n    [\n        0,\n        \"&auml;\"\n    ],\n    [\n        0,\n        \"&aring;\"\n    ],\n    [\n        0,\n        \"&aelig;\"\n    ],\n    [\n        0,\n        \"&ccedil;\"\n    ],\n    [\n        0,\n        \"&egrave;\"\n    ],\n    [\n        0,\n        \"&eacute;\"\n    ],\n    [\n        0,\n        \"&ecirc;\"\n    ],\n    [\n        0,\n        \"&euml;\"\n    ],\n    [\n        0,\n        \"&igrave;\"\n    ],\n    [\n        0,\n        \"&iacute;\"\n    ],\n    [\n        0,\n        \"&icirc;\"\n    ],\n    [\n        0,\n        \"&iuml;\"\n    ],\n    [\n        0,\n        \"&eth;\"\n    ],\n    [\n        0,\n        \"&ntilde;\"\n    ],\n    [\n        0,\n        \"&ograve;\"\n    ],\n    [\n        0,\n        \"&oacute;\"\n    ],\n    [\n        0,\n        \"&ocirc;\"\n    ],\n    [\n        0,\n        \"&otilde;\"\n    ],\n    [\n        0,\n        \"&ouml;\"\n    ],\n    [\n        0,\n        \"&div;\"\n    ],\n    [\n        0,\n        \"&oslash;\"\n    ],\n    [\n        0,\n        \"&ugrave;\"\n    ],\n    [\n        0,\n        \"&uacute;\"\n    ],\n    [\n        0,\n        \"&ucirc;\"\n    ],\n    [\n        0,\n        \"&uuml;\"\n    ],\n    [\n        0,\n        \"&yacute;\"\n    ],\n    [\n        0,\n        \"&thorn;\"\n    ],\n    [\n        0,\n        \"&yuml;\"\n    ],\n    [\n        0,\n        \"&Amacr;\"\n    ],\n    [\n        0,\n        \"&amacr;\"\n    ],\n    [\n        0,\n        \"&Abreve;\"\n    ],\n    [\n        0,\n        \"&abreve;\"\n    ],\n    [\n        0,\n        \"&Aogon;\"\n    ],\n    [\n        0,\n        \"&aogon;\"\n    ],\n    [\n        0,\n        \"&Cacute;\"\n    ],\n    [\n        0,\n        \"&cacute;\"\n    ],\n    [\n        0,\n        \"&Ccirc;\"\n    ],\n    [\n        0,\n        \"&ccirc;\"\n    ],\n    [\n        0,\n        \"&Cdot;\"\n    ],\n    [\n        0,\n        \"&cdot;\"\n    ],\n    [\n        0,\n        \"&Ccaron;\"\n    ],\n    [\n        0,\n        \"&ccaron;\"\n    ],\n    [\n        0,\n        \"&Dcaron;\"\n    ],\n    [\n        0,\n        \"&dcaron;\"\n    ],\n    [\n        0,\n        \"&Dstrok;\"\n    ],\n    [\n        0,\n        \"&dstrok;\"\n    ],\n    [\n        0,\n        \"&Emacr;\"\n    ],\n    [\n        0,\n        \"&emacr;\"\n    ],\n    [\n        2,\n        \"&Edot;\"\n    ],\n    [\n        0,\n        \"&edot;\"\n    ],\n    [\n        0,\n        \"&Eogon;\"\n    ],\n    [\n        0,\n        \"&eogon;\"\n    ],\n    [\n        0,\n        \"&Ecaron;\"\n    ],\n    [\n        0,\n        \"&ecaron;\"\n    ],\n    [\n        0,\n        \"&Gcirc;\"\n    ],\n    [\n        0,\n        \"&gcirc;\"\n    ],\n    [\n        0,\n        \"&Gbreve;\"\n    ],\n    [\n        0,\n        \"&gbreve;\"\n    ],\n    [\n        0,\n        \"&Gdot;\"\n    ],\n    [\n        0,\n        \"&gdot;\"\n    ],\n    [\n        0,\n        \"&Gcedil;\"\n    ],\n    [\n        1,\n        \"&Hcirc;\"\n    ],\n    [\n        0,\n        \"&hcirc;\"\n    ],\n    [\n        0,\n        \"&Hstrok;\"\n    ],\n    [\n        0,\n        \"&hstrok;\"\n    ],\n    [\n        0,\n        \"&Itilde;\"\n    ],\n    [\n        0,\n        \"&itilde;\"\n    ],\n    [\n        0,\n        \"&Imacr;\"\n    ],\n    [\n        0,\n        \"&imacr;\"\n    ],\n    [\n        2,\n        \"&Iogon;\"\n    ],\n    [\n        0,\n        \"&iogon;\"\n    ],\n    [\n        0,\n        \"&Idot;\"\n    ],\n    [\n        0,\n        \"&imath;\"\n    ],\n    [\n        0,\n        \"&IJlig;\"\n    ],\n    [\n        0,\n        \"&ijlig;\"\n    ],\n    [\n        0,\n        \"&Jcirc;\"\n    ],\n    [\n        0,\n        \"&jcirc;\"\n    ],\n    [\n        0,\n        \"&Kcedil;\"\n    ],\n    [\n        0,\n        \"&kcedil;\"\n    ],\n    [\n        0,\n        \"&kgreen;\"\n    ],\n    [\n        0,\n        \"&Lacute;\"\n    ],\n    [\n        0,\n        \"&lacute;\"\n    ],\n    [\n        0,\n        \"&Lcedil;\"\n    ],\n    [\n        0,\n        \"&lcedil;\"\n    ],\n    [\n        0,\n        \"&Lcaron;\"\n    ],\n    [\n        0,\n        \"&lcaron;\"\n    ],\n    [\n        0,\n        \"&Lmidot;\"\n    ],\n    [\n        0,\n        \"&lmidot;\"\n    ],\n    [\n        0,\n        \"&Lstrok;\"\n    ],\n    [\n        0,\n        \"&lstrok;\"\n    ],\n    [\n        0,\n        \"&Nacute;\"\n    ],\n    [\n        0,\n        \"&nacute;\"\n    ],\n    [\n        0,\n        \"&Ncedil;\"\n    ],\n    [\n        0,\n        \"&ncedil;\"\n    ],\n    [\n        0,\n        \"&Ncaron;\"\n    ],\n    [\n        0,\n        \"&ncaron;\"\n    ],\n    [\n        0,\n        \"&napos;\"\n    ],\n    [\n        0,\n        \"&ENG;\"\n    ],\n    [\n        0,\n        \"&eng;\"\n    ],\n    [\n        0,\n        \"&Omacr;\"\n    ],\n    [\n        0,\n        \"&omacr;\"\n    ],\n    [\n        2,\n        \"&Odblac;\"\n    ],\n    [\n        0,\n        \"&odblac;\"\n    ],\n    [\n        0,\n        \"&OElig;\"\n    ],\n    [\n        0,\n        \"&oelig;\"\n    ],\n    [\n        0,\n        \"&Racute;\"\n    ],\n    [\n        0,\n        \"&racute;\"\n    ],\n    [\n        0,\n        \"&Rcedil;\"\n    ],\n    [\n        0,\n        \"&rcedil;\"\n    ],\n    [\n        0,\n        \"&Rcaron;\"\n    ],\n    [\n        0,\n        \"&rcaron;\"\n    ],\n    [\n        0,\n        \"&Sacute;\"\n    ],\n    [\n        0,\n        \"&sacute;\"\n    ],\n    [\n        0,\n        \"&Scirc;\"\n    ],\n    [\n        0,\n        \"&scirc;\"\n    ],\n    [\n        0,\n        \"&Scedil;\"\n    ],\n    [\n        0,\n        \"&scedil;\"\n    ],\n    [\n        0,\n        \"&Scaron;\"\n    ],\n    [\n        0,\n        \"&scaron;\"\n    ],\n    [\n        0,\n        \"&Tcedil;\"\n    ],\n    [\n        0,\n        \"&tcedil;\"\n    ],\n    [\n        0,\n        \"&Tcaron;\"\n    ],\n    [\n        0,\n        \"&tcaron;\"\n    ],\n    [\n        0,\n        \"&Tstrok;\"\n    ],\n    [\n        0,\n        \"&tstrok;\"\n    ],\n    [\n        0,\n        \"&Utilde;\"\n    ],\n    [\n        0,\n        \"&utilde;\"\n    ],\n    [\n        0,\n        \"&Umacr;\"\n    ],\n    [\n        0,\n        \"&umacr;\"\n    ],\n    [\n        0,\n        \"&Ubreve;\"\n    ],\n    [\n        0,\n        \"&ubreve;\"\n    ],\n    [\n        0,\n        \"&Uring;\"\n    ],\n    [\n        0,\n        \"&uring;\"\n    ],\n    [\n        0,\n        \"&Udblac;\"\n    ],\n    [\n        0,\n        \"&udblac;\"\n    ],\n    [\n        0,\n        \"&Uogon;\"\n    ],\n    [\n        0,\n        \"&uogon;\"\n    ],\n    [\n        0,\n        \"&Wcirc;\"\n    ],\n    [\n        0,\n        \"&wcirc;\"\n    ],\n    [\n        0,\n        \"&Ycirc;\"\n    ],\n    [\n        0,\n        \"&ycirc;\"\n    ],\n    [\n        0,\n        \"&Yuml;\"\n    ],\n    [\n        0,\n        \"&Zacute;\"\n    ],\n    [\n        0,\n        \"&zacute;\"\n    ],\n    [\n        0,\n        \"&Zdot;\"\n    ],\n    [\n        0,\n        \"&zdot;\"\n    ],\n    [\n        0,\n        \"&Zcaron;\"\n    ],\n    [\n        0,\n        \"&zcaron;\"\n    ],\n    [\n        19,\n        \"&fnof;\"\n    ],\n    [\n        34,\n        \"&imped;\"\n    ],\n    [\n        63,\n        \"&gacute;\"\n    ],\n    [\n        65,\n        \"&jmath;\"\n    ],\n    [\n        142,\n        \"&circ;\"\n    ],\n    [\n        0,\n        \"&caron;\"\n    ],\n    [\n        16,\n        \"&breve;\"\n    ],\n    [\n        0,\n        \"&DiacriticalDot;\"\n    ],\n    [\n        0,\n        \"&ring;\"\n    ],\n    [\n        0,\n        \"&ogon;\"\n    ],\n    [\n        0,\n        \"&DiacriticalTilde;\"\n    ],\n    [\n        0,\n        \"&dblac;\"\n    ],\n    [\n        51,\n        \"&DownBreve;\"\n    ],\n    [\n        127,\n        \"&Alpha;\"\n    ],\n    [\n        0,\n        \"&Beta;\"\n    ],\n    [\n        0,\n        \"&Gamma;\"\n    ],\n    [\n        0,\n        \"&Delta;\"\n    ],\n    [\n        0,\n        \"&Epsilon;\"\n    ],\n    [\n        0,\n        \"&Zeta;\"\n    ],\n    [\n        0,\n        \"&Eta;\"\n    ],\n    [\n        0,\n        \"&Theta;\"\n    ],\n    [\n        0,\n        \"&Iota;\"\n    ],\n    [\n        0,\n        \"&Kappa;\"\n    ],\n    [\n        0,\n        \"&Lambda;\"\n    ],\n    [\n        0,\n        \"&Mu;\"\n    ],\n    [\n        0,\n        \"&Nu;\"\n    ],\n    [\n        0,\n        \"&Xi;\"\n    ],\n    [\n        0,\n        \"&Omicron;\"\n    ],\n    [\n        0,\n        \"&Pi;\"\n    ],\n    [\n        0,\n        \"&Rho;\"\n    ],\n    [\n        1,\n        \"&Sigma;\"\n    ],\n    [\n        0,\n        \"&Tau;\"\n    ],\n    [\n        0,\n        \"&Upsilon;\"\n    ],\n    [\n        0,\n        \"&Phi;\"\n    ],\n    [\n        0,\n        \"&Chi;\"\n    ],\n    [\n        0,\n        \"&Psi;\"\n    ],\n    [\n        0,\n        \"&ohm;\"\n    ],\n    [\n        7,\n        \"&alpha;\"\n    ],\n    [\n        0,\n        \"&beta;\"\n    ],\n    [\n        0,\n        \"&gamma;\"\n    ],\n    [\n        0,\n        \"&delta;\"\n    ],\n    [\n        0,\n        \"&epsi;\"\n    ],\n    [\n        0,\n        \"&zeta;\"\n    ],\n    [\n        0,\n        \"&eta;\"\n    ],\n    [\n        0,\n        \"&theta;\"\n    ],\n    [\n        0,\n        \"&iota;\"\n    ],\n    [\n        0,\n        \"&kappa;\"\n    ],\n    [\n        0,\n        \"&lambda;\"\n    ],\n    [\n        0,\n        \"&mu;\"\n    ],\n    [\n        0,\n        \"&nu;\"\n    ],\n    [\n        0,\n        \"&xi;\"\n    ],\n    [\n        0,\n        \"&omicron;\"\n    ],\n    [\n        0,\n        \"&pi;\"\n    ],\n    [\n        0,\n        \"&rho;\"\n    ],\n    [\n        0,\n        \"&sigmaf;\"\n    ],\n    [\n        0,\n        \"&sigma;\"\n    ],\n    [\n        0,\n        \"&tau;\"\n    ],\n    [\n        0,\n        \"&upsi;\"\n    ],\n    [\n        0,\n        \"&phi;\"\n    ],\n    [\n        0,\n        \"&chi;\"\n    ],\n    [\n        0,\n        \"&psi;\"\n    ],\n    [\n        0,\n        \"&omega;\"\n    ],\n    [\n        7,\n        \"&thetasym;\"\n    ],\n    [\n        0,\n        \"&Upsi;\"\n    ],\n    [\n        2,\n        \"&phiv;\"\n    ],\n    [\n        0,\n        \"&piv;\"\n    ],\n    [\n        5,\n        \"&Gammad;\"\n    ],\n    [\n        0,\n        \"&digamma;\"\n    ],\n    [\n        18,\n        \"&kappav;\"\n    ],\n    [\n        0,\n        \"&rhov;\"\n    ],\n    [\n        3,\n        \"&epsiv;\"\n    ],\n    [\n        0,\n        \"&backepsilon;\"\n    ],\n    [\n        10,\n        \"&IOcy;\"\n    ],\n    [\n        0,\n        \"&DJcy;\"\n    ],\n    [\n        0,\n        \"&GJcy;\"\n    ],\n    [\n        0,\n        \"&Jukcy;\"\n    ],\n    [\n        0,\n        \"&DScy;\"\n    ],\n    [\n        0,\n        \"&Iukcy;\"\n    ],\n    [\n        0,\n        \"&YIcy;\"\n    ],\n    [\n        0,\n        \"&Jsercy;\"\n    ],\n    [\n        0,\n        \"&LJcy;\"\n    ],\n    [\n        0,\n        \"&NJcy;\"\n    ],\n    [\n        0,\n        \"&TSHcy;\"\n    ],\n    [\n        0,\n        \"&KJcy;\"\n    ],\n    [\n        1,\n        \"&Ubrcy;\"\n    ],\n    [\n        0,\n        \"&DZcy;\"\n    ],\n    [\n        0,\n        \"&Acy;\"\n    ],\n    [\n        0,\n        \"&Bcy;\"\n    ],\n    [\n        0,\n        \"&Vcy;\"\n    ],\n    [\n        0,\n        \"&Gcy;\"\n    ],\n    [\n        0,\n        \"&Dcy;\"\n    ],\n    [\n        0,\n        \"&IEcy;\"\n    ],\n    [\n        0,\n        \"&ZHcy;\"\n    ],\n    [\n        0,\n        \"&Zcy;\"\n    ],\n    [\n        0,\n        \"&Icy;\"\n    ],\n    [\n        0,\n        \"&Jcy;\"\n    ],\n    [\n        0,\n        \"&Kcy;\"\n    ],\n    [\n        0,\n        \"&Lcy;\"\n    ],\n    [\n        0,\n        \"&Mcy;\"\n    ],\n    [\n        0,\n        \"&Ncy;\"\n    ],\n    [\n        0,\n        \"&Ocy;\"\n    ],\n    [\n        0,\n        \"&Pcy;\"\n    ],\n    [\n        0,\n        \"&Rcy;\"\n    ],\n    [\n        0,\n        \"&Scy;\"\n    ],\n    [\n        0,\n        \"&Tcy;\"\n    ],\n    [\n        0,\n        \"&Ucy;\"\n    ],\n    [\n        0,\n        \"&Fcy;\"\n    ],\n    [\n        0,\n        \"&KHcy;\"\n    ],\n    [\n        0,\n        \"&TScy;\"\n    ],\n    [\n        0,\n        \"&CHcy;\"\n    ],\n    [\n        0,\n        \"&SHcy;\"\n    ],\n    [\n        0,\n        \"&SHCHcy;\"\n    ],\n    [\n        0,\n        \"&HARDcy;\"\n    ],\n    [\n        0,\n        \"&Ycy;\"\n    ],\n    [\n        0,\n        \"&SOFTcy;\"\n    ],\n    [\n        0,\n        \"&Ecy;\"\n    ],\n    [\n        0,\n        \"&YUcy;\"\n    ],\n    [\n        0,\n        \"&YAcy;\"\n    ],\n    [\n        0,\n        \"&acy;\"\n    ],\n    [\n        0,\n        \"&bcy;\"\n    ],\n    [\n        0,\n        \"&vcy;\"\n    ],\n    [\n        0,\n        \"&gcy;\"\n    ],\n    [\n        0,\n        \"&dcy;\"\n    ],\n    [\n        0,\n        \"&iecy;\"\n    ],\n    [\n        0,\n        \"&zhcy;\"\n    ],\n    [\n        0,\n        \"&zcy;\"\n    ],\n    [\n        0,\n        \"&icy;\"\n    ],\n    [\n        0,\n        \"&jcy;\"\n    ],\n    [\n        0,\n        \"&kcy;\"\n    ],\n    [\n        0,\n        \"&lcy;\"\n    ],\n    [\n        0,\n        \"&mcy;\"\n    ],\n    [\n        0,\n        \"&ncy;\"\n    ],\n    [\n        0,\n        \"&ocy;\"\n    ],\n    [\n        0,\n        \"&pcy;\"\n    ],\n    [\n        0,\n        \"&rcy;\"\n    ],\n    [\n        0,\n        \"&scy;\"\n    ],\n    [\n        0,\n        \"&tcy;\"\n    ],\n    [\n        0,\n        \"&ucy;\"\n    ],\n    [\n        0,\n        \"&fcy;\"\n    ],\n    [\n        0,\n        \"&khcy;\"\n    ],\n    [\n        0,\n        \"&tscy;\"\n    ],\n    [\n        0,\n        \"&chcy;\"\n    ],\n    [\n        0,\n        \"&shcy;\"\n    ],\n    [\n        0,\n        \"&shchcy;\"\n    ],\n    [\n        0,\n        \"&hardcy;\"\n    ],\n    [\n        0,\n        \"&ycy;\"\n    ],\n    [\n        0,\n        \"&softcy;\"\n    ],\n    [\n        0,\n        \"&ecy;\"\n    ],\n    [\n        0,\n        \"&yucy;\"\n    ],\n    [\n        0,\n        \"&yacy;\"\n    ],\n    [\n        1,\n        \"&iocy;\"\n    ],\n    [\n        0,\n        \"&djcy;\"\n    ],\n    [\n        0,\n        \"&gjcy;\"\n    ],\n    [\n        0,\n        \"&jukcy;\"\n    ],\n    [\n        0,\n        \"&dscy;\"\n    ],\n    [\n        0,\n        \"&iukcy;\"\n    ],\n    [\n        0,\n        \"&yicy;\"\n    ],\n    [\n        0,\n        \"&jsercy;\"\n    ],\n    [\n        0,\n        \"&ljcy;\"\n    ],\n    [\n        0,\n        \"&njcy;\"\n    ],\n    [\n        0,\n        \"&tshcy;\"\n    ],\n    [\n        0,\n        \"&kjcy;\"\n    ],\n    [\n        1,\n        \"&ubrcy;\"\n    ],\n    [\n        0,\n        \"&dzcy;\"\n    ],\n    [\n        7074,\n        \"&ensp;\"\n    ],\n    [\n        0,\n        \"&emsp;\"\n    ],\n    [\n        0,\n        \"&emsp13;\"\n    ],\n    [\n        0,\n        \"&emsp14;\"\n    ],\n    [\n        1,\n        \"&numsp;\"\n    ],\n    [\n        0,\n        \"&puncsp;\"\n    ],\n    [\n        0,\n        \"&ThinSpace;\"\n    ],\n    [\n        0,\n        \"&hairsp;\"\n    ],\n    [\n        0,\n        \"&NegativeMediumSpace;\"\n    ],\n    [\n        0,\n        \"&zwnj;\"\n    ],\n    [\n        0,\n        \"&zwj;\"\n    ],\n    [\n        0,\n        \"&lrm;\"\n    ],\n    [\n        0,\n        \"&rlm;\"\n    ],\n    [\n        0,\n        \"&dash;\"\n    ],\n    [\n        2,\n        \"&ndash;\"\n    ],\n    [\n        0,\n        \"&mdash;\"\n    ],\n    [\n        0,\n        \"&horbar;\"\n    ],\n    [\n        0,\n        \"&Verbar;\"\n    ],\n    [\n        1,\n        \"&lsquo;\"\n    ],\n    [\n        0,\n        \"&CloseCurlyQuote;\"\n    ],\n    [\n        0,\n        \"&lsquor;\"\n    ],\n    [\n        1,\n        \"&ldquo;\"\n    ],\n    [\n        0,\n        \"&CloseCurlyDoubleQuote;\"\n    ],\n    [\n        0,\n        \"&bdquo;\"\n    ],\n    [\n        1,\n        \"&dagger;\"\n    ],\n    [\n        0,\n        \"&Dagger;\"\n    ],\n    [\n        0,\n        \"&bull;\"\n    ],\n    [\n        2,\n        \"&nldr;\"\n    ],\n    [\n        0,\n        \"&hellip;\"\n    ],\n    [\n        9,\n        \"&permil;\"\n    ],\n    [\n        0,\n        \"&pertenk;\"\n    ],\n    [\n        0,\n        \"&prime;\"\n    ],\n    [\n        0,\n        \"&Prime;\"\n    ],\n    [\n        0,\n        \"&tprime;\"\n    ],\n    [\n        0,\n        \"&backprime;\"\n    ],\n    [\n        3,\n        \"&lsaquo;\"\n    ],\n    [\n        0,\n        \"&rsaquo;\"\n    ],\n    [\n        3,\n        \"&oline;\"\n    ],\n    [\n        2,\n        \"&caret;\"\n    ],\n    [\n        1,\n        \"&hybull;\"\n    ],\n    [\n        0,\n        \"&frasl;\"\n    ],\n    [\n        10,\n        \"&bsemi;\"\n    ],\n    [\n        7,\n        \"&qprime;\"\n    ],\n    [\n        7,\n        {\n            v: \"&MediumSpace;\",\n            n: 8202,\n            o: \"&ThickSpace;\"\n        }\n    ],\n    [\n        0,\n        \"&NoBreak;\"\n    ],\n    [\n        0,\n        \"&af;\"\n    ],\n    [\n        0,\n        \"&InvisibleTimes;\"\n    ],\n    [\n        0,\n        \"&ic;\"\n    ],\n    [\n        72,\n        \"&euro;\"\n    ],\n    [\n        46,\n        \"&tdot;\"\n    ],\n    [\n        0,\n        \"&DotDot;\"\n    ],\n    [\n        37,\n        \"&complexes;\"\n    ],\n    [\n        2,\n        \"&incare;\"\n    ],\n    [\n        4,\n        \"&gscr;\"\n    ],\n    [\n        0,\n        \"&hamilt;\"\n    ],\n    [\n        0,\n        \"&Hfr;\"\n    ],\n    [\n        0,\n        \"&Hopf;\"\n    ],\n    [\n        0,\n        \"&planckh;\"\n    ],\n    [\n        0,\n        \"&hbar;\"\n    ],\n    [\n        0,\n        \"&imagline;\"\n    ],\n    [\n        0,\n        \"&Ifr;\"\n    ],\n    [\n        0,\n        \"&lagran;\"\n    ],\n    [\n        0,\n        \"&ell;\"\n    ],\n    [\n        1,\n        \"&naturals;\"\n    ],\n    [\n        0,\n        \"&numero;\"\n    ],\n    [\n        0,\n        \"&copysr;\"\n    ],\n    [\n        0,\n        \"&weierp;\"\n    ],\n    [\n        0,\n        \"&Popf;\"\n    ],\n    [\n        0,\n        \"&Qopf;\"\n    ],\n    [\n        0,\n        \"&realine;\"\n    ],\n    [\n        0,\n        \"&real;\"\n    ],\n    [\n        0,\n        \"&reals;\"\n    ],\n    [\n        0,\n        \"&rx;\"\n    ],\n    [\n        3,\n        \"&trade;\"\n    ],\n    [\n        1,\n        \"&integers;\"\n    ],\n    [\n        2,\n        \"&mho;\"\n    ],\n    [\n        0,\n        \"&zeetrf;\"\n    ],\n    [\n        0,\n        \"&iiota;\"\n    ],\n    [\n        2,\n        \"&bernou;\"\n    ],\n    [\n        0,\n        \"&Cayleys;\"\n    ],\n    [\n        1,\n        \"&escr;\"\n    ],\n    [\n        0,\n        \"&Escr;\"\n    ],\n    [\n        0,\n        \"&Fouriertrf;\"\n    ],\n    [\n        1,\n        \"&Mellintrf;\"\n    ],\n    [\n        0,\n        \"&order;\"\n    ],\n    [\n        0,\n        \"&alefsym;\"\n    ],\n    [\n        0,\n        \"&beth;\"\n    ],\n    [\n        0,\n        \"&gimel;\"\n    ],\n    [\n        0,\n        \"&daleth;\"\n    ],\n    [\n        12,\n        \"&CapitalDifferentialD;\"\n    ],\n    [\n        0,\n        \"&dd;\"\n    ],\n    [\n        0,\n        \"&ee;\"\n    ],\n    [\n        0,\n        \"&ii;\"\n    ],\n    [\n        10,\n        \"&frac13;\"\n    ],\n    [\n        0,\n        \"&frac23;\"\n    ],\n    [\n        0,\n        \"&frac15;\"\n    ],\n    [\n        0,\n        \"&frac25;\"\n    ],\n    [\n        0,\n        \"&frac35;\"\n    ],\n    [\n        0,\n        \"&frac45;\"\n    ],\n    [\n        0,\n        \"&frac16;\"\n    ],\n    [\n        0,\n        \"&frac56;\"\n    ],\n    [\n        0,\n        \"&frac18;\"\n    ],\n    [\n        0,\n        \"&frac38;\"\n    ],\n    [\n        0,\n        \"&frac58;\"\n    ],\n    [\n        0,\n        \"&frac78;\"\n    ],\n    [\n        49,\n        \"&larr;\"\n    ],\n    [\n        0,\n        \"&ShortUpArrow;\"\n    ],\n    [\n        0,\n        \"&rarr;\"\n    ],\n    [\n        0,\n        \"&darr;\"\n    ],\n    [\n        0,\n        \"&harr;\"\n    ],\n    [\n        0,\n        \"&updownarrow;\"\n    ],\n    [\n        0,\n        \"&nwarr;\"\n    ],\n    [\n        0,\n        \"&nearr;\"\n    ],\n    [\n        0,\n        \"&LowerRightArrow;\"\n    ],\n    [\n        0,\n        \"&LowerLeftArrow;\"\n    ],\n    [\n        0,\n        \"&nlarr;\"\n    ],\n    [\n        0,\n        \"&nrarr;\"\n    ],\n    [\n        1,\n        {\n            v: \"&rarrw;\",\n            n: 824,\n            o: \"&nrarrw;\"\n        }\n    ],\n    [\n        0,\n        \"&Larr;\"\n    ],\n    [\n        0,\n        \"&Uarr;\"\n    ],\n    [\n        0,\n        \"&Rarr;\"\n    ],\n    [\n        0,\n        \"&Darr;\"\n    ],\n    [\n        0,\n        \"&larrtl;\"\n    ],\n    [\n        0,\n        \"&rarrtl;\"\n    ],\n    [\n        0,\n        \"&LeftTeeArrow;\"\n    ],\n    [\n        0,\n        \"&mapstoup;\"\n    ],\n    [\n        0,\n        \"&map;\"\n    ],\n    [\n        0,\n        \"&DownTeeArrow;\"\n    ],\n    [\n        1,\n        \"&hookleftarrow;\"\n    ],\n    [\n        0,\n        \"&hookrightarrow;\"\n    ],\n    [\n        0,\n        \"&larrlp;\"\n    ],\n    [\n        0,\n        \"&looparrowright;\"\n    ],\n    [\n        0,\n        \"&harrw;\"\n    ],\n    [\n        0,\n        \"&nharr;\"\n    ],\n    [\n        1,\n        \"&lsh;\"\n    ],\n    [\n        0,\n        \"&rsh;\"\n    ],\n    [\n        0,\n        \"&ldsh;\"\n    ],\n    [\n        0,\n        \"&rdsh;\"\n    ],\n    [\n        1,\n        \"&crarr;\"\n    ],\n    [\n        0,\n        \"&cularr;\"\n    ],\n    [\n        0,\n        \"&curarr;\"\n    ],\n    [\n        2,\n        \"&circlearrowleft;\"\n    ],\n    [\n        0,\n        \"&circlearrowright;\"\n    ],\n    [\n        0,\n        \"&leftharpoonup;\"\n    ],\n    [\n        0,\n        \"&DownLeftVector;\"\n    ],\n    [\n        0,\n        \"&RightUpVector;\"\n    ],\n    [\n        0,\n        \"&LeftUpVector;\"\n    ],\n    [\n        0,\n        \"&rharu;\"\n    ],\n    [\n        0,\n        \"&DownRightVector;\"\n    ],\n    [\n        0,\n        \"&dharr;\"\n    ],\n    [\n        0,\n        \"&dharl;\"\n    ],\n    [\n        0,\n        \"&RightArrowLeftArrow;\"\n    ],\n    [\n        0,\n        \"&udarr;\"\n    ],\n    [\n        0,\n        \"&LeftArrowRightArrow;\"\n    ],\n    [\n        0,\n        \"&leftleftarrows;\"\n    ],\n    [\n        0,\n        \"&upuparrows;\"\n    ],\n    [\n        0,\n        \"&rightrightarrows;\"\n    ],\n    [\n        0,\n        \"&ddarr;\"\n    ],\n    [\n        0,\n        \"&leftrightharpoons;\"\n    ],\n    [\n        0,\n        \"&Equilibrium;\"\n    ],\n    [\n        0,\n        \"&nlArr;\"\n    ],\n    [\n        0,\n        \"&nhArr;\"\n    ],\n    [\n        0,\n        \"&nrArr;\"\n    ],\n    [\n        0,\n        \"&DoubleLeftArrow;\"\n    ],\n    [\n        0,\n        \"&DoubleUpArrow;\"\n    ],\n    [\n        0,\n        \"&DoubleRightArrow;\"\n    ],\n    [\n        0,\n        \"&dArr;\"\n    ],\n    [\n        0,\n        \"&DoubleLeftRightArrow;\"\n    ],\n    [\n        0,\n        \"&DoubleUpDownArrow;\"\n    ],\n    [\n        0,\n        \"&nwArr;\"\n    ],\n    [\n        0,\n        \"&neArr;\"\n    ],\n    [\n        0,\n        \"&seArr;\"\n    ],\n    [\n        0,\n        \"&swArr;\"\n    ],\n    [\n        0,\n        \"&lAarr;\"\n    ],\n    [\n        0,\n        \"&rAarr;\"\n    ],\n    [\n        1,\n        \"&zigrarr;\"\n    ],\n    [\n        6,\n        \"&larrb;\"\n    ],\n    [\n        0,\n        \"&rarrb;\"\n    ],\n    [\n        15,\n        \"&DownArrowUpArrow;\"\n    ],\n    [\n        7,\n        \"&loarr;\"\n    ],\n    [\n        0,\n        \"&roarr;\"\n    ],\n    [\n        0,\n        \"&hoarr;\"\n    ],\n    [\n        0,\n        \"&forall;\"\n    ],\n    [\n        0,\n        \"&comp;\"\n    ],\n    [\n        0,\n        {\n            v: \"&part;\",\n            n: 824,\n            o: \"&npart;\"\n        }\n    ],\n    [\n        0,\n        \"&exist;\"\n    ],\n    [\n        0,\n        \"&nexist;\"\n    ],\n    [\n        0,\n        \"&empty;\"\n    ],\n    [\n        1,\n        \"&Del;\"\n    ],\n    [\n        0,\n        \"&Element;\"\n    ],\n    [\n        0,\n        \"&NotElement;\"\n    ],\n    [\n        1,\n        \"&ni;\"\n    ],\n    [\n        0,\n        \"&notni;\"\n    ],\n    [\n        2,\n        \"&prod;\"\n    ],\n    [\n        0,\n        \"&coprod;\"\n    ],\n    [\n        0,\n        \"&sum;\"\n    ],\n    [\n        0,\n        \"&minus;\"\n    ],\n    [\n        0,\n        \"&MinusPlus;\"\n    ],\n    [\n        0,\n        \"&dotplus;\"\n    ],\n    [\n        1,\n        \"&Backslash;\"\n    ],\n    [\n        0,\n        \"&lowast;\"\n    ],\n    [\n        0,\n        \"&compfn;\"\n    ],\n    [\n        1,\n        \"&radic;\"\n    ],\n    [\n        2,\n        \"&prop;\"\n    ],\n    [\n        0,\n        \"&infin;\"\n    ],\n    [\n        0,\n        \"&angrt;\"\n    ],\n    [\n        0,\n        {\n            v: \"&ang;\",\n            n: 8402,\n            o: \"&nang;\"\n        }\n    ],\n    [\n        0,\n        \"&angmsd;\"\n    ],\n    [\n        0,\n        \"&angsph;\"\n    ],\n    [\n        0,\n        \"&mid;\"\n    ],\n    [\n        0,\n        \"&nmid;\"\n    ],\n    [\n        0,\n        \"&DoubleVerticalBar;\"\n    ],\n    [\n        0,\n        \"&NotDoubleVerticalBar;\"\n    ],\n    [\n        0,\n        \"&and;\"\n    ],\n    [\n        0,\n        \"&or;\"\n    ],\n    [\n        0,\n        {\n            v: \"&cap;\",\n            n: 65024,\n            o: \"&caps;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&cup;\",\n            n: 65024,\n            o: \"&cups;\"\n        }\n    ],\n    [\n        0,\n        \"&int;\"\n    ],\n    [\n        0,\n        \"&Int;\"\n    ],\n    [\n        0,\n        \"&iiint;\"\n    ],\n    [\n        0,\n        \"&conint;\"\n    ],\n    [\n        0,\n        \"&Conint;\"\n    ],\n    [\n        0,\n        \"&Cconint;\"\n    ],\n    [\n        0,\n        \"&cwint;\"\n    ],\n    [\n        0,\n        \"&ClockwiseContourIntegral;\"\n    ],\n    [\n        0,\n        \"&awconint;\"\n    ],\n    [\n        0,\n        \"&there4;\"\n    ],\n    [\n        0,\n        \"&becaus;\"\n    ],\n    [\n        0,\n        \"&ratio;\"\n    ],\n    [\n        0,\n        \"&Colon;\"\n    ],\n    [\n        0,\n        \"&dotminus;\"\n    ],\n    [\n        1,\n        \"&mDDot;\"\n    ],\n    [\n        0,\n        \"&homtht;\"\n    ],\n    [\n        0,\n        {\n            v: \"&sim;\",\n            n: 8402,\n            o: \"&nvsim;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&backsim;\",\n            n: 817,\n            o: \"&race;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&ac;\",\n            n: 819,\n            o: \"&acE;\"\n        }\n    ],\n    [\n        0,\n        \"&acd;\"\n    ],\n    [\n        0,\n        \"&VerticalTilde;\"\n    ],\n    [\n        0,\n        \"&NotTilde;\"\n    ],\n    [\n        0,\n        {\n            v: \"&eqsim;\",\n            n: 824,\n            o: \"&nesim;\"\n        }\n    ],\n    [\n        0,\n        \"&sime;\"\n    ],\n    [\n        0,\n        \"&NotTildeEqual;\"\n    ],\n    [\n        0,\n        \"&cong;\"\n    ],\n    [\n        0,\n        \"&simne;\"\n    ],\n    [\n        0,\n        \"&ncong;\"\n    ],\n    [\n        0,\n        \"&ap;\"\n    ],\n    [\n        0,\n        \"&nap;\"\n    ],\n    [\n        0,\n        \"&ape;\"\n    ],\n    [\n        0,\n        {\n            v: \"&apid;\",\n            n: 824,\n            o: \"&napid;\"\n        }\n    ],\n    [\n        0,\n        \"&backcong;\"\n    ],\n    [\n        0,\n        {\n            v: \"&asympeq;\",\n            n: 8402,\n            o: \"&nvap;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&bump;\",\n            n: 824,\n            o: \"&nbump;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&bumpe;\",\n            n: 824,\n            o: \"&nbumpe;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&doteq;\",\n            n: 824,\n            o: \"&nedot;\"\n        }\n    ],\n    [\n        0,\n        \"&doteqdot;\"\n    ],\n    [\n        0,\n        \"&efDot;\"\n    ],\n    [\n        0,\n        \"&erDot;\"\n    ],\n    [\n        0,\n        \"&Assign;\"\n    ],\n    [\n        0,\n        \"&ecolon;\"\n    ],\n    [\n        0,\n        \"&ecir;\"\n    ],\n    [\n        0,\n        \"&circeq;\"\n    ],\n    [\n        1,\n        \"&wedgeq;\"\n    ],\n    [\n        0,\n        \"&veeeq;\"\n    ],\n    [\n        1,\n        \"&triangleq;\"\n    ],\n    [\n        2,\n        \"&equest;\"\n    ],\n    [\n        0,\n        \"&ne;\"\n    ],\n    [\n        0,\n        {\n            v: \"&Congruent;\",\n            n: 8421,\n            o: \"&bnequiv;\"\n        }\n    ],\n    [\n        0,\n        \"&nequiv;\"\n    ],\n    [\n        1,\n        {\n            v: \"&le;\",\n            n: 8402,\n            o: \"&nvle;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&ge;\",\n            n: 8402,\n            o: \"&nvge;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&lE;\",\n            n: 824,\n            o: \"&nlE;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&gE;\",\n            n: 824,\n            o: \"&ngE;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&lnE;\",\n            n: 65024,\n            o: \"&lvertneqq;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&gnE;\",\n            n: 65024,\n            o: \"&gvertneqq;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&ll;\",\n            n: new Map(/* #__PURE__ */ $70fecd720f63c751$var$restoreDiff([\n                [\n                    824,\n                    \"&nLtv;\"\n                ],\n                [\n                    7577,\n                    \"&nLt;\"\n                ]\n            ]))\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&gg;\",\n            n: new Map(/* #__PURE__ */ $70fecd720f63c751$var$restoreDiff([\n                [\n                    824,\n                    \"&nGtv;\"\n                ],\n                [\n                    7577,\n                    \"&nGt;\"\n                ]\n            ]))\n        }\n    ],\n    [\n        0,\n        \"&between;\"\n    ],\n    [\n        0,\n        \"&NotCupCap;\"\n    ],\n    [\n        0,\n        \"&nless;\"\n    ],\n    [\n        0,\n        \"&ngt;\"\n    ],\n    [\n        0,\n        \"&nle;\"\n    ],\n    [\n        0,\n        \"&nge;\"\n    ],\n    [\n        0,\n        \"&lesssim;\"\n    ],\n    [\n        0,\n        \"&GreaterTilde;\"\n    ],\n    [\n        0,\n        \"&nlsim;\"\n    ],\n    [\n        0,\n        \"&ngsim;\"\n    ],\n    [\n        0,\n        \"&LessGreater;\"\n    ],\n    [\n        0,\n        \"&gl;\"\n    ],\n    [\n        0,\n        \"&NotLessGreater;\"\n    ],\n    [\n        0,\n        \"&NotGreaterLess;\"\n    ],\n    [\n        0,\n        \"&pr;\"\n    ],\n    [\n        0,\n        \"&sc;\"\n    ],\n    [\n        0,\n        \"&prcue;\"\n    ],\n    [\n        0,\n        \"&sccue;\"\n    ],\n    [\n        0,\n        \"&PrecedesTilde;\"\n    ],\n    [\n        0,\n        {\n            v: \"&scsim;\",\n            n: 824,\n            o: \"&NotSucceedsTilde;\"\n        }\n    ],\n    [\n        0,\n        \"&NotPrecedes;\"\n    ],\n    [\n        0,\n        \"&NotSucceeds;\"\n    ],\n    [\n        0,\n        {\n            v: \"&sub;\",\n            n: 8402,\n            o: \"&NotSubset;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&sup;\",\n            n: 8402,\n            o: \"&NotSuperset;\"\n        }\n    ],\n    [\n        0,\n        \"&nsub;\"\n    ],\n    [\n        0,\n        \"&nsup;\"\n    ],\n    [\n        0,\n        \"&sube;\"\n    ],\n    [\n        0,\n        \"&supe;\"\n    ],\n    [\n        0,\n        \"&NotSubsetEqual;\"\n    ],\n    [\n        0,\n        \"&NotSupersetEqual;\"\n    ],\n    [\n        0,\n        {\n            v: \"&subne;\",\n            n: 65024,\n            o: \"&varsubsetneq;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&supne;\",\n            n: 65024,\n            o: \"&varsupsetneq;\"\n        }\n    ],\n    [\n        1,\n        \"&cupdot;\"\n    ],\n    [\n        0,\n        \"&UnionPlus;\"\n    ],\n    [\n        0,\n        {\n            v: \"&sqsub;\",\n            n: 824,\n            o: \"&NotSquareSubset;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&sqsup;\",\n            n: 824,\n            o: \"&NotSquareSuperset;\"\n        }\n    ],\n    [\n        0,\n        \"&sqsube;\"\n    ],\n    [\n        0,\n        \"&sqsupe;\"\n    ],\n    [\n        0,\n        {\n            v: \"&sqcap;\",\n            n: 65024,\n            o: \"&sqcaps;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&sqcup;\",\n            n: 65024,\n            o: \"&sqcups;\"\n        }\n    ],\n    [\n        0,\n        \"&CirclePlus;\"\n    ],\n    [\n        0,\n        \"&CircleMinus;\"\n    ],\n    [\n        0,\n        \"&CircleTimes;\"\n    ],\n    [\n        0,\n        \"&osol;\"\n    ],\n    [\n        0,\n        \"&CircleDot;\"\n    ],\n    [\n        0,\n        \"&circledcirc;\"\n    ],\n    [\n        0,\n        \"&circledast;\"\n    ],\n    [\n        1,\n        \"&circleddash;\"\n    ],\n    [\n        0,\n        \"&boxplus;\"\n    ],\n    [\n        0,\n        \"&boxminus;\"\n    ],\n    [\n        0,\n        \"&boxtimes;\"\n    ],\n    [\n        0,\n        \"&dotsquare;\"\n    ],\n    [\n        0,\n        \"&RightTee;\"\n    ],\n    [\n        0,\n        \"&dashv;\"\n    ],\n    [\n        0,\n        \"&DownTee;\"\n    ],\n    [\n        0,\n        \"&bot;\"\n    ],\n    [\n        1,\n        \"&models;\"\n    ],\n    [\n        0,\n        \"&DoubleRightTee;\"\n    ],\n    [\n        0,\n        \"&Vdash;\"\n    ],\n    [\n        0,\n        \"&Vvdash;\"\n    ],\n    [\n        0,\n        \"&VDash;\"\n    ],\n    [\n        0,\n        \"&nvdash;\"\n    ],\n    [\n        0,\n        \"&nvDash;\"\n    ],\n    [\n        0,\n        \"&nVdash;\"\n    ],\n    [\n        0,\n        \"&nVDash;\"\n    ],\n    [\n        0,\n        \"&prurel;\"\n    ],\n    [\n        1,\n        \"&LeftTriangle;\"\n    ],\n    [\n        0,\n        \"&RightTriangle;\"\n    ],\n    [\n        0,\n        {\n            v: \"&LeftTriangleEqual;\",\n            n: 8402,\n            o: \"&nvltrie;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&RightTriangleEqual;\",\n            n: 8402,\n            o: \"&nvrtrie;\"\n        }\n    ],\n    [\n        0,\n        \"&origof;\"\n    ],\n    [\n        0,\n        \"&imof;\"\n    ],\n    [\n        0,\n        \"&multimap;\"\n    ],\n    [\n        0,\n        \"&hercon;\"\n    ],\n    [\n        0,\n        \"&intcal;\"\n    ],\n    [\n        0,\n        \"&veebar;\"\n    ],\n    [\n        1,\n        \"&barvee;\"\n    ],\n    [\n        0,\n        \"&angrtvb;\"\n    ],\n    [\n        0,\n        \"&lrtri;\"\n    ],\n    [\n        0,\n        \"&bigwedge;\"\n    ],\n    [\n        0,\n        \"&bigvee;\"\n    ],\n    [\n        0,\n        \"&bigcap;\"\n    ],\n    [\n        0,\n        \"&bigcup;\"\n    ],\n    [\n        0,\n        \"&diam;\"\n    ],\n    [\n        0,\n        \"&sdot;\"\n    ],\n    [\n        0,\n        \"&sstarf;\"\n    ],\n    [\n        0,\n        \"&divideontimes;\"\n    ],\n    [\n        0,\n        \"&bowtie;\"\n    ],\n    [\n        0,\n        \"&ltimes;\"\n    ],\n    [\n        0,\n        \"&rtimes;\"\n    ],\n    [\n        0,\n        \"&leftthreetimes;\"\n    ],\n    [\n        0,\n        \"&rightthreetimes;\"\n    ],\n    [\n        0,\n        \"&backsimeq;\"\n    ],\n    [\n        0,\n        \"&curlyvee;\"\n    ],\n    [\n        0,\n        \"&curlywedge;\"\n    ],\n    [\n        0,\n        \"&Sub;\"\n    ],\n    [\n        0,\n        \"&Sup;\"\n    ],\n    [\n        0,\n        \"&Cap;\"\n    ],\n    [\n        0,\n        \"&Cup;\"\n    ],\n    [\n        0,\n        \"&fork;\"\n    ],\n    [\n        0,\n        \"&epar;\"\n    ],\n    [\n        0,\n        \"&lessdot;\"\n    ],\n    [\n        0,\n        \"&gtdot;\"\n    ],\n    [\n        0,\n        {\n            v: \"&Ll;\",\n            n: 824,\n            o: \"&nLl;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&Gg;\",\n            n: 824,\n            o: \"&nGg;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&leg;\",\n            n: 65024,\n            o: \"&lesg;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&gel;\",\n            n: 65024,\n            o: \"&gesl;\"\n        }\n    ],\n    [\n        2,\n        \"&cuepr;\"\n    ],\n    [\n        0,\n        \"&cuesc;\"\n    ],\n    [\n        0,\n        \"&NotPrecedesSlantEqual;\"\n    ],\n    [\n        0,\n        \"&NotSucceedsSlantEqual;\"\n    ],\n    [\n        0,\n        \"&NotSquareSubsetEqual;\"\n    ],\n    [\n        0,\n        \"&NotSquareSupersetEqual;\"\n    ],\n    [\n        2,\n        \"&lnsim;\"\n    ],\n    [\n        0,\n        \"&gnsim;\"\n    ],\n    [\n        0,\n        \"&precnsim;\"\n    ],\n    [\n        0,\n        \"&scnsim;\"\n    ],\n    [\n        0,\n        \"&nltri;\"\n    ],\n    [\n        0,\n        \"&NotRightTriangle;\"\n    ],\n    [\n        0,\n        \"&nltrie;\"\n    ],\n    [\n        0,\n        \"&NotRightTriangleEqual;\"\n    ],\n    [\n        0,\n        \"&vellip;\"\n    ],\n    [\n        0,\n        \"&ctdot;\"\n    ],\n    [\n        0,\n        \"&utdot;\"\n    ],\n    [\n        0,\n        \"&dtdot;\"\n    ],\n    [\n        0,\n        \"&disin;\"\n    ],\n    [\n        0,\n        \"&isinsv;\"\n    ],\n    [\n        0,\n        \"&isins;\"\n    ],\n    [\n        0,\n        {\n            v: \"&isindot;\",\n            n: 824,\n            o: \"&notindot;\"\n        }\n    ],\n    [\n        0,\n        \"&notinvc;\"\n    ],\n    [\n        0,\n        \"&notinvb;\"\n    ],\n    [\n        1,\n        {\n            v: \"&isinE;\",\n            n: 824,\n            o: \"&notinE;\"\n        }\n    ],\n    [\n        0,\n        \"&nisd;\"\n    ],\n    [\n        0,\n        \"&xnis;\"\n    ],\n    [\n        0,\n        \"&nis;\"\n    ],\n    [\n        0,\n        \"&notnivc;\"\n    ],\n    [\n        0,\n        \"&notnivb;\"\n    ],\n    [\n        6,\n        \"&barwed;\"\n    ],\n    [\n        0,\n        \"&Barwed;\"\n    ],\n    [\n        1,\n        \"&lceil;\"\n    ],\n    [\n        0,\n        \"&rceil;\"\n    ],\n    [\n        0,\n        \"&LeftFloor;\"\n    ],\n    [\n        0,\n        \"&rfloor;\"\n    ],\n    [\n        0,\n        \"&drcrop;\"\n    ],\n    [\n        0,\n        \"&dlcrop;\"\n    ],\n    [\n        0,\n        \"&urcrop;\"\n    ],\n    [\n        0,\n        \"&ulcrop;\"\n    ],\n    [\n        0,\n        \"&bnot;\"\n    ],\n    [\n        1,\n        \"&profline;\"\n    ],\n    [\n        0,\n        \"&profsurf;\"\n    ],\n    [\n        1,\n        \"&telrec;\"\n    ],\n    [\n        0,\n        \"&target;\"\n    ],\n    [\n        5,\n        \"&ulcorn;\"\n    ],\n    [\n        0,\n        \"&urcorn;\"\n    ],\n    [\n        0,\n        \"&dlcorn;\"\n    ],\n    [\n        0,\n        \"&drcorn;\"\n    ],\n    [\n        2,\n        \"&frown;\"\n    ],\n    [\n        0,\n        \"&smile;\"\n    ],\n    [\n        9,\n        \"&cylcty;\"\n    ],\n    [\n        0,\n        \"&profalar;\"\n    ],\n    [\n        7,\n        \"&topbot;\"\n    ],\n    [\n        6,\n        \"&ovbar;\"\n    ],\n    [\n        1,\n        \"&solbar;\"\n    ],\n    [\n        60,\n        \"&angzarr;\"\n    ],\n    [\n        51,\n        \"&lmoustache;\"\n    ],\n    [\n        0,\n        \"&rmoustache;\"\n    ],\n    [\n        2,\n        \"&OverBracket;\"\n    ],\n    [\n        0,\n        \"&bbrk;\"\n    ],\n    [\n        0,\n        \"&bbrktbrk;\"\n    ],\n    [\n        37,\n        \"&OverParenthesis;\"\n    ],\n    [\n        0,\n        \"&UnderParenthesis;\"\n    ],\n    [\n        0,\n        \"&OverBrace;\"\n    ],\n    [\n        0,\n        \"&UnderBrace;\"\n    ],\n    [\n        2,\n        \"&trpezium;\"\n    ],\n    [\n        4,\n        \"&elinters;\"\n    ],\n    [\n        59,\n        \"&blank;\"\n    ],\n    [\n        164,\n        \"&circledS;\"\n    ],\n    [\n        55,\n        \"&boxh;\"\n    ],\n    [\n        1,\n        \"&boxv;\"\n    ],\n    [\n        9,\n        \"&boxdr;\"\n    ],\n    [\n        3,\n        \"&boxdl;\"\n    ],\n    [\n        3,\n        \"&boxur;\"\n    ],\n    [\n        3,\n        \"&boxul;\"\n    ],\n    [\n        3,\n        \"&boxvr;\"\n    ],\n    [\n        7,\n        \"&boxvl;\"\n    ],\n    [\n        7,\n        \"&boxhd;\"\n    ],\n    [\n        7,\n        \"&boxhu;\"\n    ],\n    [\n        7,\n        \"&boxvh;\"\n    ],\n    [\n        19,\n        \"&boxH;\"\n    ],\n    [\n        0,\n        \"&boxV;\"\n    ],\n    [\n        0,\n        \"&boxdR;\"\n    ],\n    [\n        0,\n        \"&boxDr;\"\n    ],\n    [\n        0,\n        \"&boxDR;\"\n    ],\n    [\n        0,\n        \"&boxdL;\"\n    ],\n    [\n        0,\n        \"&boxDl;\"\n    ],\n    [\n        0,\n        \"&boxDL;\"\n    ],\n    [\n        0,\n        \"&boxuR;\"\n    ],\n    [\n        0,\n        \"&boxUr;\"\n    ],\n    [\n        0,\n        \"&boxUR;\"\n    ],\n    [\n        0,\n        \"&boxuL;\"\n    ],\n    [\n        0,\n        \"&boxUl;\"\n    ],\n    [\n        0,\n        \"&boxUL;\"\n    ],\n    [\n        0,\n        \"&boxvR;\"\n    ],\n    [\n        0,\n        \"&boxVr;\"\n    ],\n    [\n        0,\n        \"&boxVR;\"\n    ],\n    [\n        0,\n        \"&boxvL;\"\n    ],\n    [\n        0,\n        \"&boxVl;\"\n    ],\n    [\n        0,\n        \"&boxVL;\"\n    ],\n    [\n        0,\n        \"&boxHd;\"\n    ],\n    [\n        0,\n        \"&boxhD;\"\n    ],\n    [\n        0,\n        \"&boxHD;\"\n    ],\n    [\n        0,\n        \"&boxHu;\"\n    ],\n    [\n        0,\n        \"&boxhU;\"\n    ],\n    [\n        0,\n        \"&boxHU;\"\n    ],\n    [\n        0,\n        \"&boxvH;\"\n    ],\n    [\n        0,\n        \"&boxVh;\"\n    ],\n    [\n        0,\n        \"&boxVH;\"\n    ],\n    [\n        19,\n        \"&uhblk;\"\n    ],\n    [\n        3,\n        \"&lhblk;\"\n    ],\n    [\n        3,\n        \"&block;\"\n    ],\n    [\n        8,\n        \"&blk14;\"\n    ],\n    [\n        0,\n        \"&blk12;\"\n    ],\n    [\n        0,\n        \"&blk34;\"\n    ],\n    [\n        13,\n        \"&square;\"\n    ],\n    [\n        8,\n        \"&blacksquare;\"\n    ],\n    [\n        0,\n        \"&EmptyVerySmallSquare;\"\n    ],\n    [\n        1,\n        \"&rect;\"\n    ],\n    [\n        0,\n        \"&marker;\"\n    ],\n    [\n        2,\n        \"&fltns;\"\n    ],\n    [\n        1,\n        \"&bigtriangleup;\"\n    ],\n    [\n        0,\n        \"&blacktriangle;\"\n    ],\n    [\n        0,\n        \"&triangle;\"\n    ],\n    [\n        2,\n        \"&blacktriangleright;\"\n    ],\n    [\n        0,\n        \"&rtri;\"\n    ],\n    [\n        3,\n        \"&bigtriangledown;\"\n    ],\n    [\n        0,\n        \"&blacktriangledown;\"\n    ],\n    [\n        0,\n        \"&dtri;\"\n    ],\n    [\n        2,\n        \"&blacktriangleleft;\"\n    ],\n    [\n        0,\n        \"&ltri;\"\n    ],\n    [\n        6,\n        \"&loz;\"\n    ],\n    [\n        0,\n        \"&cir;\"\n    ],\n    [\n        32,\n        \"&tridot;\"\n    ],\n    [\n        2,\n        \"&bigcirc;\"\n    ],\n    [\n        8,\n        \"&ultri;\"\n    ],\n    [\n        0,\n        \"&urtri;\"\n    ],\n    [\n        0,\n        \"&lltri;\"\n    ],\n    [\n        0,\n        \"&EmptySmallSquare;\"\n    ],\n    [\n        0,\n        \"&FilledSmallSquare;\"\n    ],\n    [\n        8,\n        \"&bigstar;\"\n    ],\n    [\n        0,\n        \"&star;\"\n    ],\n    [\n        7,\n        \"&phone;\"\n    ],\n    [\n        49,\n        \"&female;\"\n    ],\n    [\n        1,\n        \"&male;\"\n    ],\n    [\n        29,\n        \"&spades;\"\n    ],\n    [\n        2,\n        \"&clubs;\"\n    ],\n    [\n        1,\n        \"&hearts;\"\n    ],\n    [\n        0,\n        \"&diamondsuit;\"\n    ],\n    [\n        3,\n        \"&sung;\"\n    ],\n    [\n        2,\n        \"&flat;\"\n    ],\n    [\n        0,\n        \"&natural;\"\n    ],\n    [\n        0,\n        \"&sharp;\"\n    ],\n    [\n        163,\n        \"&check;\"\n    ],\n    [\n        3,\n        \"&cross;\"\n    ],\n    [\n        8,\n        \"&malt;\"\n    ],\n    [\n        21,\n        \"&sext;\"\n    ],\n    [\n        33,\n        \"&VerticalSeparator;\"\n    ],\n    [\n        25,\n        \"&lbbrk;\"\n    ],\n    [\n        0,\n        \"&rbbrk;\"\n    ],\n    [\n        84,\n        \"&bsolhsub;\"\n    ],\n    [\n        0,\n        \"&suphsol;\"\n    ],\n    [\n        28,\n        \"&LeftDoubleBracket;\"\n    ],\n    [\n        0,\n        \"&RightDoubleBracket;\"\n    ],\n    [\n        0,\n        \"&lang;\"\n    ],\n    [\n        0,\n        \"&rang;\"\n    ],\n    [\n        0,\n        \"&Lang;\"\n    ],\n    [\n        0,\n        \"&Rang;\"\n    ],\n    [\n        0,\n        \"&loang;\"\n    ],\n    [\n        0,\n        \"&roang;\"\n    ],\n    [\n        7,\n        \"&longleftarrow;\"\n    ],\n    [\n        0,\n        \"&longrightarrow;\"\n    ],\n    [\n        0,\n        \"&longleftrightarrow;\"\n    ],\n    [\n        0,\n        \"&DoubleLongLeftArrow;\"\n    ],\n    [\n        0,\n        \"&DoubleLongRightArrow;\"\n    ],\n    [\n        0,\n        \"&DoubleLongLeftRightArrow;\"\n    ],\n    [\n        1,\n        \"&longmapsto;\"\n    ],\n    [\n        2,\n        \"&dzigrarr;\"\n    ],\n    [\n        258,\n        \"&nvlArr;\"\n    ],\n    [\n        0,\n        \"&nvrArr;\"\n    ],\n    [\n        0,\n        \"&nvHarr;\"\n    ],\n    [\n        0,\n        \"&Map;\"\n    ],\n    [\n        6,\n        \"&lbarr;\"\n    ],\n    [\n        0,\n        \"&bkarow;\"\n    ],\n    [\n        0,\n        \"&lBarr;\"\n    ],\n    [\n        0,\n        \"&dbkarow;\"\n    ],\n    [\n        0,\n        \"&drbkarow;\"\n    ],\n    [\n        0,\n        \"&DDotrahd;\"\n    ],\n    [\n        0,\n        \"&UpArrowBar;\"\n    ],\n    [\n        0,\n        \"&DownArrowBar;\"\n    ],\n    [\n        2,\n        \"&Rarrtl;\"\n    ],\n    [\n        2,\n        \"&latail;\"\n    ],\n    [\n        0,\n        \"&ratail;\"\n    ],\n    [\n        0,\n        \"&lAtail;\"\n    ],\n    [\n        0,\n        \"&rAtail;\"\n    ],\n    [\n        0,\n        \"&larrfs;\"\n    ],\n    [\n        0,\n        \"&rarrfs;\"\n    ],\n    [\n        0,\n        \"&larrbfs;\"\n    ],\n    [\n        0,\n        \"&rarrbfs;\"\n    ],\n    [\n        2,\n        \"&nwarhk;\"\n    ],\n    [\n        0,\n        \"&nearhk;\"\n    ],\n    [\n        0,\n        \"&hksearow;\"\n    ],\n    [\n        0,\n        \"&hkswarow;\"\n    ],\n    [\n        0,\n        \"&nwnear;\"\n    ],\n    [\n        0,\n        \"&nesear;\"\n    ],\n    [\n        0,\n        \"&seswar;\"\n    ],\n    [\n        0,\n        \"&swnwar;\"\n    ],\n    [\n        8,\n        {\n            v: \"&rarrc;\",\n            n: 824,\n            o: \"&nrarrc;\"\n        }\n    ],\n    [\n        1,\n        \"&cudarrr;\"\n    ],\n    [\n        0,\n        \"&ldca;\"\n    ],\n    [\n        0,\n        \"&rdca;\"\n    ],\n    [\n        0,\n        \"&cudarrl;\"\n    ],\n    [\n        0,\n        \"&larrpl;\"\n    ],\n    [\n        2,\n        \"&curarrm;\"\n    ],\n    [\n        0,\n        \"&cularrp;\"\n    ],\n    [\n        7,\n        \"&rarrpl;\"\n    ],\n    [\n        2,\n        \"&harrcir;\"\n    ],\n    [\n        0,\n        \"&Uarrocir;\"\n    ],\n    [\n        0,\n        \"&lurdshar;\"\n    ],\n    [\n        0,\n        \"&ldrushar;\"\n    ],\n    [\n        2,\n        \"&LeftRightVector;\"\n    ],\n    [\n        0,\n        \"&RightUpDownVector;\"\n    ],\n    [\n        0,\n        \"&DownLeftRightVector;\"\n    ],\n    [\n        0,\n        \"&LeftUpDownVector;\"\n    ],\n    [\n        0,\n        \"&LeftVectorBar;\"\n    ],\n    [\n        0,\n        \"&RightVectorBar;\"\n    ],\n    [\n        0,\n        \"&RightUpVectorBar;\"\n    ],\n    [\n        0,\n        \"&RightDownVectorBar;\"\n    ],\n    [\n        0,\n        \"&DownLeftVectorBar;\"\n    ],\n    [\n        0,\n        \"&DownRightVectorBar;\"\n    ],\n    [\n        0,\n        \"&LeftUpVectorBar;\"\n    ],\n    [\n        0,\n        \"&LeftDownVectorBar;\"\n    ],\n    [\n        0,\n        \"&LeftTeeVector;\"\n    ],\n    [\n        0,\n        \"&RightTeeVector;\"\n    ],\n    [\n        0,\n        \"&RightUpTeeVector;\"\n    ],\n    [\n        0,\n        \"&RightDownTeeVector;\"\n    ],\n    [\n        0,\n        \"&DownLeftTeeVector;\"\n    ],\n    [\n        0,\n        \"&DownRightTeeVector;\"\n    ],\n    [\n        0,\n        \"&LeftUpTeeVector;\"\n    ],\n    [\n        0,\n        \"&LeftDownTeeVector;\"\n    ],\n    [\n        0,\n        \"&lHar;\"\n    ],\n    [\n        0,\n        \"&uHar;\"\n    ],\n    [\n        0,\n        \"&rHar;\"\n    ],\n    [\n        0,\n        \"&dHar;\"\n    ],\n    [\n        0,\n        \"&luruhar;\"\n    ],\n    [\n        0,\n        \"&ldrdhar;\"\n    ],\n    [\n        0,\n        \"&ruluhar;\"\n    ],\n    [\n        0,\n        \"&rdldhar;\"\n    ],\n    [\n        0,\n        \"&lharul;\"\n    ],\n    [\n        0,\n        \"&llhard;\"\n    ],\n    [\n        0,\n        \"&rharul;\"\n    ],\n    [\n        0,\n        \"&lrhard;\"\n    ],\n    [\n        0,\n        \"&udhar;\"\n    ],\n    [\n        0,\n        \"&duhar;\"\n    ],\n    [\n        0,\n        \"&RoundImplies;\"\n    ],\n    [\n        0,\n        \"&erarr;\"\n    ],\n    [\n        0,\n        \"&simrarr;\"\n    ],\n    [\n        0,\n        \"&larrsim;\"\n    ],\n    [\n        0,\n        \"&rarrsim;\"\n    ],\n    [\n        0,\n        \"&rarrap;\"\n    ],\n    [\n        0,\n        \"&ltlarr;\"\n    ],\n    [\n        1,\n        \"&gtrarr;\"\n    ],\n    [\n        0,\n        \"&subrarr;\"\n    ],\n    [\n        1,\n        \"&suplarr;\"\n    ],\n    [\n        0,\n        \"&lfisht;\"\n    ],\n    [\n        0,\n        \"&rfisht;\"\n    ],\n    [\n        0,\n        \"&ufisht;\"\n    ],\n    [\n        0,\n        \"&dfisht;\"\n    ],\n    [\n        5,\n        \"&lopar;\"\n    ],\n    [\n        0,\n        \"&ropar;\"\n    ],\n    [\n        4,\n        \"&lbrke;\"\n    ],\n    [\n        0,\n        \"&rbrke;\"\n    ],\n    [\n        0,\n        \"&lbrkslu;\"\n    ],\n    [\n        0,\n        \"&rbrksld;\"\n    ],\n    [\n        0,\n        \"&lbrksld;\"\n    ],\n    [\n        0,\n        \"&rbrkslu;\"\n    ],\n    [\n        0,\n        \"&langd;\"\n    ],\n    [\n        0,\n        \"&rangd;\"\n    ],\n    [\n        0,\n        \"&lparlt;\"\n    ],\n    [\n        0,\n        \"&rpargt;\"\n    ],\n    [\n        0,\n        \"&gtlPar;\"\n    ],\n    [\n        0,\n        \"&ltrPar;\"\n    ],\n    [\n        3,\n        \"&vzigzag;\"\n    ],\n    [\n        1,\n        \"&vangrt;\"\n    ],\n    [\n        0,\n        \"&angrtvbd;\"\n    ],\n    [\n        6,\n        \"&ange;\"\n    ],\n    [\n        0,\n        \"&range;\"\n    ],\n    [\n        0,\n        \"&dwangle;\"\n    ],\n    [\n        0,\n        \"&uwangle;\"\n    ],\n    [\n        0,\n        \"&angmsdaa;\"\n    ],\n    [\n        0,\n        \"&angmsdab;\"\n    ],\n    [\n        0,\n        \"&angmsdac;\"\n    ],\n    [\n        0,\n        \"&angmsdad;\"\n    ],\n    [\n        0,\n        \"&angmsdae;\"\n    ],\n    [\n        0,\n        \"&angmsdaf;\"\n    ],\n    [\n        0,\n        \"&angmsdag;\"\n    ],\n    [\n        0,\n        \"&angmsdah;\"\n    ],\n    [\n        0,\n        \"&bemptyv;\"\n    ],\n    [\n        0,\n        \"&demptyv;\"\n    ],\n    [\n        0,\n        \"&cemptyv;\"\n    ],\n    [\n        0,\n        \"&raemptyv;\"\n    ],\n    [\n        0,\n        \"&laemptyv;\"\n    ],\n    [\n        0,\n        \"&ohbar;\"\n    ],\n    [\n        0,\n        \"&omid;\"\n    ],\n    [\n        0,\n        \"&opar;\"\n    ],\n    [\n        1,\n        \"&operp;\"\n    ],\n    [\n        1,\n        \"&olcross;\"\n    ],\n    [\n        0,\n        \"&odsold;\"\n    ],\n    [\n        1,\n        \"&olcir;\"\n    ],\n    [\n        0,\n        \"&ofcir;\"\n    ],\n    [\n        0,\n        \"&olt;\"\n    ],\n    [\n        0,\n        \"&ogt;\"\n    ],\n    [\n        0,\n        \"&cirscir;\"\n    ],\n    [\n        0,\n        \"&cirE;\"\n    ],\n    [\n        0,\n        \"&solb;\"\n    ],\n    [\n        0,\n        \"&bsolb;\"\n    ],\n    [\n        3,\n        \"&boxbox;\"\n    ],\n    [\n        3,\n        \"&trisb;\"\n    ],\n    [\n        0,\n        \"&rtriltri;\"\n    ],\n    [\n        0,\n        {\n            v: \"&LeftTriangleBar;\",\n            n: 824,\n            o: \"&NotLeftTriangleBar;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&RightTriangleBar;\",\n            n: 824,\n            o: \"&NotRightTriangleBar;\"\n        }\n    ],\n    [\n        11,\n        \"&iinfin;\"\n    ],\n    [\n        0,\n        \"&infintie;\"\n    ],\n    [\n        0,\n        \"&nvinfin;\"\n    ],\n    [\n        4,\n        \"&eparsl;\"\n    ],\n    [\n        0,\n        \"&smeparsl;\"\n    ],\n    [\n        0,\n        \"&eqvparsl;\"\n    ],\n    [\n        5,\n        \"&blacklozenge;\"\n    ],\n    [\n        8,\n        \"&RuleDelayed;\"\n    ],\n    [\n        1,\n        \"&dsol;\"\n    ],\n    [\n        9,\n        \"&bigodot;\"\n    ],\n    [\n        0,\n        \"&bigoplus;\"\n    ],\n    [\n        0,\n        \"&bigotimes;\"\n    ],\n    [\n        1,\n        \"&biguplus;\"\n    ],\n    [\n        1,\n        \"&bigsqcup;\"\n    ],\n    [\n        5,\n        \"&iiiint;\"\n    ],\n    [\n        0,\n        \"&fpartint;\"\n    ],\n    [\n        2,\n        \"&cirfnint;\"\n    ],\n    [\n        0,\n        \"&awint;\"\n    ],\n    [\n        0,\n        \"&rppolint;\"\n    ],\n    [\n        0,\n        \"&scpolint;\"\n    ],\n    [\n        0,\n        \"&npolint;\"\n    ],\n    [\n        0,\n        \"&pointint;\"\n    ],\n    [\n        0,\n        \"&quatint;\"\n    ],\n    [\n        0,\n        \"&intlarhk;\"\n    ],\n    [\n        10,\n        \"&pluscir;\"\n    ],\n    [\n        0,\n        \"&plusacir;\"\n    ],\n    [\n        0,\n        \"&simplus;\"\n    ],\n    [\n        0,\n        \"&plusdu;\"\n    ],\n    [\n        0,\n        \"&plussim;\"\n    ],\n    [\n        0,\n        \"&plustwo;\"\n    ],\n    [\n        1,\n        \"&mcomma;\"\n    ],\n    [\n        0,\n        \"&minusdu;\"\n    ],\n    [\n        2,\n        \"&loplus;\"\n    ],\n    [\n        0,\n        \"&roplus;\"\n    ],\n    [\n        0,\n        \"&Cross;\"\n    ],\n    [\n        0,\n        \"&timesd;\"\n    ],\n    [\n        0,\n        \"&timesbar;\"\n    ],\n    [\n        1,\n        \"&smashp;\"\n    ],\n    [\n        0,\n        \"&lotimes;\"\n    ],\n    [\n        0,\n        \"&rotimes;\"\n    ],\n    [\n        0,\n        \"&otimesas;\"\n    ],\n    [\n        0,\n        \"&Otimes;\"\n    ],\n    [\n        0,\n        \"&odiv;\"\n    ],\n    [\n        0,\n        \"&triplus;\"\n    ],\n    [\n        0,\n        \"&triminus;\"\n    ],\n    [\n        0,\n        \"&tritime;\"\n    ],\n    [\n        0,\n        \"&intprod;\"\n    ],\n    [\n        2,\n        \"&amalg;\"\n    ],\n    [\n        0,\n        \"&capdot;\"\n    ],\n    [\n        1,\n        \"&ncup;\"\n    ],\n    [\n        0,\n        \"&ncap;\"\n    ],\n    [\n        0,\n        \"&capand;\"\n    ],\n    [\n        0,\n        \"&cupor;\"\n    ],\n    [\n        0,\n        \"&cupcap;\"\n    ],\n    [\n        0,\n        \"&capcup;\"\n    ],\n    [\n        0,\n        \"&cupbrcap;\"\n    ],\n    [\n        0,\n        \"&capbrcup;\"\n    ],\n    [\n        0,\n        \"&cupcup;\"\n    ],\n    [\n        0,\n        \"&capcap;\"\n    ],\n    [\n        0,\n        \"&ccups;\"\n    ],\n    [\n        0,\n        \"&ccaps;\"\n    ],\n    [\n        2,\n        \"&ccupssm;\"\n    ],\n    [\n        2,\n        \"&And;\"\n    ],\n    [\n        0,\n        \"&Or;\"\n    ],\n    [\n        0,\n        \"&andand;\"\n    ],\n    [\n        0,\n        \"&oror;\"\n    ],\n    [\n        0,\n        \"&orslope;\"\n    ],\n    [\n        0,\n        \"&andslope;\"\n    ],\n    [\n        1,\n        \"&andv;\"\n    ],\n    [\n        0,\n        \"&orv;\"\n    ],\n    [\n        0,\n        \"&andd;\"\n    ],\n    [\n        0,\n        \"&ord;\"\n    ],\n    [\n        1,\n        \"&wedbar;\"\n    ],\n    [\n        6,\n        \"&sdote;\"\n    ],\n    [\n        3,\n        \"&simdot;\"\n    ],\n    [\n        2,\n        {\n            v: \"&congdot;\",\n            n: 824,\n            o: \"&ncongdot;\"\n        }\n    ],\n    [\n        0,\n        \"&easter;\"\n    ],\n    [\n        0,\n        \"&apacir;\"\n    ],\n    [\n        0,\n        {\n            v: \"&apE;\",\n            n: 824,\n            o: \"&napE;\"\n        }\n    ],\n    [\n        0,\n        \"&eplus;\"\n    ],\n    [\n        0,\n        \"&pluse;\"\n    ],\n    [\n        0,\n        \"&Esim;\"\n    ],\n    [\n        0,\n        \"&Colone;\"\n    ],\n    [\n        0,\n        \"&Equal;\"\n    ],\n    [\n        1,\n        \"&ddotseq;\"\n    ],\n    [\n        0,\n        \"&equivDD;\"\n    ],\n    [\n        0,\n        \"&ltcir;\"\n    ],\n    [\n        0,\n        \"&gtcir;\"\n    ],\n    [\n        0,\n        \"&ltquest;\"\n    ],\n    [\n        0,\n        \"&gtquest;\"\n    ],\n    [\n        0,\n        {\n            v: \"&leqslant;\",\n            n: 824,\n            o: \"&nleqslant;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&geqslant;\",\n            n: 824,\n            o: \"&ngeqslant;\"\n        }\n    ],\n    [\n        0,\n        \"&lesdot;\"\n    ],\n    [\n        0,\n        \"&gesdot;\"\n    ],\n    [\n        0,\n        \"&lesdoto;\"\n    ],\n    [\n        0,\n        \"&gesdoto;\"\n    ],\n    [\n        0,\n        \"&lesdotor;\"\n    ],\n    [\n        0,\n        \"&gesdotol;\"\n    ],\n    [\n        0,\n        \"&lap;\"\n    ],\n    [\n        0,\n        \"&gap;\"\n    ],\n    [\n        0,\n        \"&lne;\"\n    ],\n    [\n        0,\n        \"&gne;\"\n    ],\n    [\n        0,\n        \"&lnap;\"\n    ],\n    [\n        0,\n        \"&gnap;\"\n    ],\n    [\n        0,\n        \"&lEg;\"\n    ],\n    [\n        0,\n        \"&gEl;\"\n    ],\n    [\n        0,\n        \"&lsime;\"\n    ],\n    [\n        0,\n        \"&gsime;\"\n    ],\n    [\n        0,\n        \"&lsimg;\"\n    ],\n    [\n        0,\n        \"&gsiml;\"\n    ],\n    [\n        0,\n        \"&lgE;\"\n    ],\n    [\n        0,\n        \"&glE;\"\n    ],\n    [\n        0,\n        \"&lesges;\"\n    ],\n    [\n        0,\n        \"&gesles;\"\n    ],\n    [\n        0,\n        \"&els;\"\n    ],\n    [\n        0,\n        \"&egs;\"\n    ],\n    [\n        0,\n        \"&elsdot;\"\n    ],\n    [\n        0,\n        \"&egsdot;\"\n    ],\n    [\n        0,\n        \"&el;\"\n    ],\n    [\n        0,\n        \"&eg;\"\n    ],\n    [\n        2,\n        \"&siml;\"\n    ],\n    [\n        0,\n        \"&simg;\"\n    ],\n    [\n        0,\n        \"&simlE;\"\n    ],\n    [\n        0,\n        \"&simgE;\"\n    ],\n    [\n        0,\n        {\n            v: \"&LessLess;\",\n            n: 824,\n            o: \"&NotNestedLessLess;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&GreaterGreater;\",\n            n: 824,\n            o: \"&NotNestedGreaterGreater;\"\n        }\n    ],\n    [\n        1,\n        \"&glj;\"\n    ],\n    [\n        0,\n        \"&gla;\"\n    ],\n    [\n        0,\n        \"&ltcc;\"\n    ],\n    [\n        0,\n        \"&gtcc;\"\n    ],\n    [\n        0,\n        \"&lescc;\"\n    ],\n    [\n        0,\n        \"&gescc;\"\n    ],\n    [\n        0,\n        \"&smt;\"\n    ],\n    [\n        0,\n        \"&lat;\"\n    ],\n    [\n        0,\n        {\n            v: \"&smte;\",\n            n: 65024,\n            o: \"&smtes;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&late;\",\n            n: 65024,\n            o: \"&lates;\"\n        }\n    ],\n    [\n        0,\n        \"&bumpE;\"\n    ],\n    [\n        0,\n        {\n            v: \"&PrecedesEqual;\",\n            n: 824,\n            o: \"&NotPrecedesEqual;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&sce;\",\n            n: 824,\n            o: \"&NotSucceedsEqual;\"\n        }\n    ],\n    [\n        2,\n        \"&prE;\"\n    ],\n    [\n        0,\n        \"&scE;\"\n    ],\n    [\n        0,\n        \"&precneqq;\"\n    ],\n    [\n        0,\n        \"&scnE;\"\n    ],\n    [\n        0,\n        \"&prap;\"\n    ],\n    [\n        0,\n        \"&scap;\"\n    ],\n    [\n        0,\n        \"&precnapprox;\"\n    ],\n    [\n        0,\n        \"&scnap;\"\n    ],\n    [\n        0,\n        \"&Pr;\"\n    ],\n    [\n        0,\n        \"&Sc;\"\n    ],\n    [\n        0,\n        \"&subdot;\"\n    ],\n    [\n        0,\n        \"&supdot;\"\n    ],\n    [\n        0,\n        \"&subplus;\"\n    ],\n    [\n        0,\n        \"&supplus;\"\n    ],\n    [\n        0,\n        \"&submult;\"\n    ],\n    [\n        0,\n        \"&supmult;\"\n    ],\n    [\n        0,\n        \"&subedot;\"\n    ],\n    [\n        0,\n        \"&supedot;\"\n    ],\n    [\n        0,\n        {\n            v: \"&subE;\",\n            n: 824,\n            o: \"&nsubE;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&supE;\",\n            n: 824,\n            o: \"&nsupE;\"\n        }\n    ],\n    [\n        0,\n        \"&subsim;\"\n    ],\n    [\n        0,\n        \"&supsim;\"\n    ],\n    [\n        2,\n        {\n            v: \"&subnE;\",\n            n: 65024,\n            o: \"&varsubsetneqq;\"\n        }\n    ],\n    [\n        0,\n        {\n            v: \"&supnE;\",\n            n: 65024,\n            o: \"&varsupsetneqq;\"\n        }\n    ],\n    [\n        2,\n        \"&csub;\"\n    ],\n    [\n        0,\n        \"&csup;\"\n    ],\n    [\n        0,\n        \"&csube;\"\n    ],\n    [\n        0,\n        \"&csupe;\"\n    ],\n    [\n        0,\n        \"&subsup;\"\n    ],\n    [\n        0,\n        \"&supsub;\"\n    ],\n    [\n        0,\n        \"&subsub;\"\n    ],\n    [\n        0,\n        \"&supsup;\"\n    ],\n    [\n        0,\n        \"&suphsub;\"\n    ],\n    [\n        0,\n        \"&supdsub;\"\n    ],\n    [\n        0,\n        \"&forkv;\"\n    ],\n    [\n        0,\n        \"&topfork;\"\n    ],\n    [\n        0,\n        \"&mlcp;\"\n    ],\n    [\n        8,\n        \"&Dashv;\"\n    ],\n    [\n        1,\n        \"&Vdashl;\"\n    ],\n    [\n        0,\n        \"&Barv;\"\n    ],\n    [\n        0,\n        \"&vBar;\"\n    ],\n    [\n        0,\n        \"&vBarv;\"\n    ],\n    [\n        1,\n        \"&Vbar;\"\n    ],\n    [\n        0,\n        \"&Not;\"\n    ],\n    [\n        0,\n        \"&bNot;\"\n    ],\n    [\n        0,\n        \"&rnmid;\"\n    ],\n    [\n        0,\n        \"&cirmid;\"\n    ],\n    [\n        0,\n        \"&midcir;\"\n    ],\n    [\n        0,\n        \"&topcir;\"\n    ],\n    [\n        0,\n        \"&nhpar;\"\n    ],\n    [\n        0,\n        \"&parsim;\"\n    ],\n    [\n        9,\n        {\n            v: \"&parsl;\",\n            n: 8421,\n            o: \"&nparsl;\"\n        }\n    ],\n    [\n        44343,\n        {\n            n: new Map(/* #__PURE__ */ $70fecd720f63c751$var$restoreDiff([\n                [\n                    56476,\n                    \"&Ascr;\"\n                ],\n                [\n                    1,\n                    \"&Cscr;\"\n                ],\n                [\n                    0,\n                    \"&Dscr;\"\n                ],\n                [\n                    2,\n                    \"&Gscr;\"\n                ],\n                [\n                    2,\n                    \"&Jscr;\"\n                ],\n                [\n                    0,\n                    \"&Kscr;\"\n                ],\n                [\n                    2,\n                    \"&Nscr;\"\n                ],\n                [\n                    0,\n                    \"&Oscr;\"\n                ],\n                [\n                    0,\n                    \"&Pscr;\"\n                ],\n                [\n                    0,\n                    \"&Qscr;\"\n                ],\n                [\n                    1,\n                    \"&Sscr;\"\n                ],\n                [\n                    0,\n                    \"&Tscr;\"\n                ],\n                [\n                    0,\n                    \"&Uscr;\"\n                ],\n                [\n                    0,\n                    \"&Vscr;\"\n                ],\n                [\n                    0,\n                    \"&Wscr;\"\n                ],\n                [\n                    0,\n                    \"&Xscr;\"\n                ],\n                [\n                    0,\n                    \"&Yscr;\"\n                ],\n                [\n                    0,\n                    \"&Zscr;\"\n                ],\n                [\n                    0,\n                    \"&ascr;\"\n                ],\n                [\n                    0,\n                    \"&bscr;\"\n                ],\n                [\n                    0,\n                    \"&cscr;\"\n                ],\n                [\n                    0,\n                    \"&dscr;\"\n                ],\n                [\n                    1,\n                    \"&fscr;\"\n                ],\n                [\n                    1,\n                    \"&hscr;\"\n                ],\n                [\n                    0,\n                    \"&iscr;\"\n                ],\n                [\n                    0,\n                    \"&jscr;\"\n                ],\n                [\n                    0,\n                    \"&kscr;\"\n                ],\n                [\n                    0,\n                    \"&lscr;\"\n                ],\n                [\n                    0,\n                    \"&mscr;\"\n                ],\n                [\n                    0,\n                    \"&nscr;\"\n                ],\n                [\n                    1,\n                    \"&pscr;\"\n                ],\n                [\n                    0,\n                    \"&qscr;\"\n                ],\n                [\n                    0,\n                    \"&rscr;\"\n                ],\n                [\n                    0,\n                    \"&sscr;\"\n                ],\n                [\n                    0,\n                    \"&tscr;\"\n                ],\n                [\n                    0,\n                    \"&uscr;\"\n                ],\n                [\n                    0,\n                    \"&vscr;\"\n                ],\n                [\n                    0,\n                    \"&wscr;\"\n                ],\n                [\n                    0,\n                    \"&xscr;\"\n                ],\n                [\n                    0,\n                    \"&yscr;\"\n                ],\n                [\n                    0,\n                    \"&zscr;\"\n                ],\n                [\n                    52,\n                    \"&Afr;\"\n                ],\n                [\n                    0,\n                    \"&Bfr;\"\n                ],\n                [\n                    1,\n                    \"&Dfr;\"\n                ],\n                [\n                    0,\n                    \"&Efr;\"\n                ],\n                [\n                    0,\n                    \"&Ffr;\"\n                ],\n                [\n                    0,\n                    \"&Gfr;\"\n                ],\n                [\n                    2,\n                    \"&Jfr;\"\n                ],\n                [\n                    0,\n                    \"&Kfr;\"\n                ],\n                [\n                    0,\n                    \"&Lfr;\"\n                ],\n                [\n                    0,\n                    \"&Mfr;\"\n                ],\n                [\n                    0,\n                    \"&Nfr;\"\n                ],\n                [\n                    0,\n                    \"&Ofr;\"\n                ],\n                [\n                    0,\n                    \"&Pfr;\"\n                ],\n                [\n                    0,\n                    \"&Qfr;\"\n                ],\n                [\n                    1,\n                    \"&Sfr;\"\n                ],\n                [\n                    0,\n                    \"&Tfr;\"\n                ],\n                [\n                    0,\n                    \"&Ufr;\"\n                ],\n                [\n                    0,\n                    \"&Vfr;\"\n                ],\n                [\n                    0,\n                    \"&Wfr;\"\n                ],\n                [\n                    0,\n                    \"&Xfr;\"\n                ],\n                [\n                    0,\n                    \"&Yfr;\"\n                ],\n                [\n                    1,\n                    \"&afr;\"\n                ],\n                [\n                    0,\n                    \"&bfr;\"\n                ],\n                [\n                    0,\n                    \"&cfr;\"\n                ],\n                [\n                    0,\n                    \"&dfr;\"\n                ],\n                [\n                    0,\n                    \"&efr;\"\n                ],\n                [\n                    0,\n                    \"&ffr;\"\n                ],\n                [\n                    0,\n                    \"&gfr;\"\n                ],\n                [\n                    0,\n                    \"&hfr;\"\n                ],\n                [\n                    0,\n                    \"&ifr;\"\n                ],\n                [\n                    0,\n                    \"&jfr;\"\n                ],\n                [\n                    0,\n                    \"&kfr;\"\n                ],\n                [\n                    0,\n                    \"&lfr;\"\n                ],\n                [\n                    0,\n                    \"&mfr;\"\n                ],\n                [\n                    0,\n                    \"&nfr;\"\n                ],\n                [\n                    0,\n                    \"&ofr;\"\n                ],\n                [\n                    0,\n                    \"&pfr;\"\n                ],\n                [\n                    0,\n                    \"&qfr;\"\n                ],\n                [\n                    0,\n                    \"&rfr;\"\n                ],\n                [\n                    0,\n                    \"&sfr;\"\n                ],\n                [\n                    0,\n                    \"&tfr;\"\n                ],\n                [\n                    0,\n                    \"&ufr;\"\n                ],\n                [\n                    0,\n                    \"&vfr;\"\n                ],\n                [\n                    0,\n                    \"&wfr;\"\n                ],\n                [\n                    0,\n                    \"&xfr;\"\n                ],\n                [\n                    0,\n                    \"&yfr;\"\n                ],\n                [\n                    0,\n                    \"&zfr;\"\n                ],\n                [\n                    0,\n                    \"&Aopf;\"\n                ],\n                [\n                    0,\n                    \"&Bopf;\"\n                ],\n                [\n                    1,\n                    \"&Dopf;\"\n                ],\n                [\n                    0,\n                    \"&Eopf;\"\n                ],\n                [\n                    0,\n                    \"&Fopf;\"\n                ],\n                [\n                    0,\n                    \"&Gopf;\"\n                ],\n                [\n                    1,\n                    \"&Iopf;\"\n                ],\n                [\n                    0,\n                    \"&Jopf;\"\n                ],\n                [\n                    0,\n                    \"&Kopf;\"\n                ],\n                [\n                    0,\n                    \"&Lopf;\"\n                ],\n                [\n                    0,\n                    \"&Mopf;\"\n                ],\n                [\n                    1,\n                    \"&Oopf;\"\n                ],\n                [\n                    3,\n                    \"&Sopf;\"\n                ],\n                [\n                    0,\n                    \"&Topf;\"\n                ],\n                [\n                    0,\n                    \"&Uopf;\"\n                ],\n                [\n                    0,\n                    \"&Vopf;\"\n                ],\n                [\n                    0,\n                    \"&Wopf;\"\n                ],\n                [\n                    0,\n                    \"&Xopf;\"\n                ],\n                [\n                    0,\n                    \"&Yopf;\"\n                ],\n                [\n                    1,\n                    \"&aopf;\"\n                ],\n                [\n                    0,\n                    \"&bopf;\"\n                ],\n                [\n                    0,\n                    \"&copf;\"\n                ],\n                [\n                    0,\n                    \"&dopf;\"\n                ],\n                [\n                    0,\n                    \"&eopf;\"\n                ],\n                [\n                    0,\n                    \"&fopf;\"\n                ],\n                [\n                    0,\n                    \"&gopf;\"\n                ],\n                [\n                    0,\n                    \"&hopf;\"\n                ],\n                [\n                    0,\n                    \"&iopf;\"\n                ],\n                [\n                    0,\n                    \"&jopf;\"\n                ],\n                [\n                    0,\n                    \"&kopf;\"\n                ],\n                [\n                    0,\n                    \"&lopf;\"\n                ],\n                [\n                    0,\n                    \"&mopf;\"\n                ],\n                [\n                    0,\n                    \"&nopf;\"\n                ],\n                [\n                    0,\n                    \"&oopf;\"\n                ],\n                [\n                    0,\n                    \"&popf;\"\n                ],\n                [\n                    0,\n                    \"&qopf;\"\n                ],\n                [\n                    0,\n                    \"&ropf;\"\n                ],\n                [\n                    0,\n                    \"&sopf;\"\n                ],\n                [\n                    0,\n                    \"&topf;\"\n                ],\n                [\n                    0,\n                    \"&uopf;\"\n                ],\n                [\n                    0,\n                    \"&vopf;\"\n                ],\n                [\n                    0,\n                    \"&wopf;\"\n                ],\n                [\n                    0,\n                    \"&xopf;\"\n                ],\n                [\n                    0,\n                    \"&yopf;\"\n                ],\n                [\n                    0,\n                    \"&zopf;\"\n                ]\n            ]))\n        }\n    ],\n    [\n        8906,\n        \"&fflig;\"\n    ],\n    [\n        0,\n        \"&filig;\"\n    ],\n    [\n        0,\n        \"&fllig;\"\n    ],\n    [\n        0,\n        \"&ffilig;\"\n    ],\n    [\n        0,\n        \"&ffllig;\"\n    ]\n]));\n\n\nconst $e72123220ae6606b$export$5699810ce3244ab8 = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst $e72123220ae6606b$var$xmlCodeMap = new Map([\n    [\n        34,\n        \"&quot;\"\n    ],\n    [\n        38,\n        \"&amp;\"\n    ],\n    [\n        39,\n        \"&apos;\"\n    ],\n    [\n        60,\n        \"&lt;\"\n    ],\n    [\n        62,\n        \"&gt;\"\n    ]\n]);\nconst $e72123220ae6606b$export$e02688b8085d016b = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null ? (str, index)=>str.codePointAt(index) : (c, index)=>(c.charCodeAt(index) & 0xfc00) === 0xd800 ? (c.charCodeAt(index) - 0xd800) * 0x400 + c.charCodeAt(index + 1) - 0xdc00 + 0x10000 : c.charCodeAt(index);\nfunction $e72123220ae6606b$export$18855ec5be97da16(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while((match = $e72123220ae6606b$export$5699810ce3244ab8.exec(str)) !== null){\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = $e72123220ae6606b$var$xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        } else {\n            ret += `${str.substring(lastIdx, i)}&#x${$e72123220ae6606b$export$e02688b8085d016b(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = $e72123220ae6606b$export$5699810ce3244ab8.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\nconst $e72123220ae6606b$export$4e7f196112fea3c5 = $e72123220ae6606b$export$18855ec5be97da16;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */ function $e72123220ae6606b$var$getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while(match = regex.exec(data)){\n            if (lastIdx !== match.index) result += data.substring(lastIdx, match.index);\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\nconst $e72123220ae6606b$export$9e081872deefdcb0 = $e72123220ae6606b$var$getEscaper(/[&<>'\"]/g, $e72123220ae6606b$var$xmlCodeMap);\nconst $e72123220ae6606b$export$30330f3d5eb70e11 = $e72123220ae6606b$var$getEscaper(/[\"&\\u00A0]/g, new Map([\n    [\n        34,\n        \"&quot;\"\n    ],\n    [\n        38,\n        \"&amp;\"\n    ],\n    [\n        160,\n        \"&nbsp;\"\n    ]\n]));\nconst $e72123220ae6606b$export$96e6fc3a139b2555 = $e72123220ae6606b$var$getEscaper(/[&<>\\u00A0]/g, new Map([\n    [\n        38,\n        \"&amp;\"\n    ],\n    [\n        60,\n        \"&lt;\"\n    ],\n    [\n        62,\n        \"&gt;\"\n    ],\n    [\n        160,\n        \"&nbsp;\"\n    ]\n]));\n\n\nconst $428a7e43bc21742b$var$htmlReplacer = /[\\t\\n!-,./:-@[-`\\f{-}$\\x80-\\uFFFF]/g;\nfunction $428a7e43bc21742b$export$f9d6449b9af28dc1(data) {\n    return $428a7e43bc21742b$var$encodeHTMLTrieRe($428a7e43bc21742b$var$htmlReplacer, data);\n}\nfunction $428a7e43bc21742b$export$e6e86c76506f1190(data) {\n    return $428a7e43bc21742b$var$encodeHTMLTrieRe((0, $e72123220ae6606b$export$5699810ce3244ab8), data);\n}\nfunction $428a7e43bc21742b$var$encodeHTMLTrieRe(regExp, str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while((match = regExp.exec(str)) !== null){\n        const i = match.index;\n        ret += str.substring(lastIdx, i);\n        const char = str.charCodeAt(i);\n        let next = (0, $70fecd720f63c751$export$2e2bcd8739ae039).get(char);\n        if (typeof next === \"object\") {\n            // We are in a branch. Try to match the next char.\n            if (i + 1 < str.length) {\n                const nextChar = str.charCodeAt(i + 1);\n                const value = typeof next.n === \"number\" ? next.n === nextChar ? next.o : undefined : next.n.get(nextChar);\n                if (value !== undefined) {\n                    ret += value;\n                    lastIdx = regExp.lastIndex += 1;\n                    continue;\n                }\n            }\n            next = next.v;\n        }\n        // We might have a tree node without a value; skip and use a numeric entity.\n        if (next !== undefined) {\n            ret += next;\n            lastIdx = i + 1;\n        } else {\n            const cp = (0, $e72123220ae6606b$export$e02688b8085d016b)(str, i);\n            ret += `&#x${cp.toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = regExp.lastIndex += Number(cp !== char);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n\n\n\nvar $19c65afdc12482fd$export$b8c86583d9718b50;\n(function(EntityLevel) {\n    /** Support only XML entities. */ EntityLevel[EntityLevel[\"XML\"] = 0] = \"XML\";\n    /** Support HTML entities, which are a superset of XML entities. */ EntityLevel[EntityLevel[\"HTML\"] = 1] = \"HTML\";\n})($19c65afdc12482fd$export$b8c86583d9718b50 || ($19c65afdc12482fd$export$b8c86583d9718b50 = {}));\nvar $19c65afdc12482fd$export$1851b20d614eb756;\n(function(EncodingMode) {\n    /**\n     * The output is UTF-8 encoded. Only characters that need escaping within\n     * XML will be escaped.\n     */ EncodingMode[EncodingMode[\"UTF8\"] = 0] = \"UTF8\";\n    /**\n     * The output consists only of ASCII characters. Characters that need\n     * escaping within HTML, and characters that aren't ASCII characters will\n     * be escaped.\n     */ EncodingMode[EncodingMode[\"ASCII\"] = 1] = \"ASCII\";\n    /**\n     * Encode all characters that have an equivalent entity, as well as all\n     * characters that are not ASCII characters.\n     */ EncodingMode[EncodingMode[\"Extensive\"] = 2] = \"Extensive\";\n    /**\n     * Encode all characters that have to be escaped in HTML attributes,\n     * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n     */ EncodingMode[EncodingMode[\"Attribute\"] = 3] = \"Attribute\";\n    /**\n     * Encode all characters that have to be escaped in HTML text,\n     * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n     */ EncodingMode[EncodingMode[\"Text\"] = 4] = \"Text\";\n})($19c65afdc12482fd$export$1851b20d614eb756 || ($19c65afdc12482fd$export$1851b20d614eb756 = {}));\nfunction $19c65afdc12482fd$export$2f872c0f2117be69(data, options = $19c65afdc12482fd$export$b8c86583d9718b50.XML) {\n    const level = typeof options === \"number\" ? options : options.level;\n    if (level === $19c65afdc12482fd$export$b8c86583d9718b50.HTML) {\n        const mode = typeof options === \"object\" ? options.mode : undefined;\n        return (0, $21b54aeefac41b63$export$f045cb747ce77a19)(data, mode);\n    }\n    return (0, $21b54aeefac41b63$export$88e3b9643a8bd06e)(data);\n}\nfunction $19c65afdc12482fd$export$c94669f4c7d36be4(data, options = $19c65afdc12482fd$export$b8c86583d9718b50.XML) {\n    var _a;\n    const opts = typeof options === \"number\" ? {\n        level: options\n    } : options;\n    (_a = opts.mode) !== null && _a !== void 0 ? _a : opts.mode = (0, $21b54aeefac41b63$export$8c8f129ce60f53c).Strict;\n    return $19c65afdc12482fd$export$2f872c0f2117be69(data, opts);\n}\nfunction $19c65afdc12482fd$export$c564cdbbe6da493(data, options = $19c65afdc12482fd$export$b8c86583d9718b50.XML) {\n    const opts = typeof options === \"number\" ? {\n        level: options\n    } : options;\n    // Mode `UTF8` just escapes XML entities\n    if (opts.mode === $19c65afdc12482fd$export$1851b20d614eb756.UTF8) return (0, $e72123220ae6606b$export$9e081872deefdcb0)(data);\n    if (opts.mode === $19c65afdc12482fd$export$1851b20d614eb756.Attribute) return (0, $e72123220ae6606b$export$30330f3d5eb70e11)(data);\n    if (opts.mode === $19c65afdc12482fd$export$1851b20d614eb756.Text) return (0, $e72123220ae6606b$export$96e6fc3a139b2555)(data);\n    if (opts.level === $19c65afdc12482fd$export$b8c86583d9718b50.HTML) {\n        if (opts.mode === $19c65afdc12482fd$export$1851b20d614eb756.ASCII) return (0, $428a7e43bc21742b$export$e6e86c76506f1190)(data);\n        return (0, $428a7e43bc21742b$export$f9d6449b9af28dc1)(data);\n    }\n    // ASCII and Extensive are equivalent\n    return (0, $e72123220ae6606b$export$18855ec5be97da16)(data);\n}\n\n\nconst $c6415ff239ea0ed7$export$82b917442d249e05 = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feDropShadow\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\"\n].map((val)=>[\n        val.toLowerCase(),\n        val\n    ]));\nconst $c6415ff239ea0ed7$export$b4cfbfd90280b005 = new Map([\n    \"definitionURL\",\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\"\n].map((val)=>[\n        val.toLowerCase(),\n        val\n    ]));\n\n\nconst $e9cd942395a2f848$var$unencodedElements = new Set([\n    \"style\",\n    \"script\",\n    \"xmp\",\n    \"iframe\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"noscript\"\n]);\nfunction $e9cd942395a2f848$var$replaceQuotes(value) {\n    return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */ function $e9cd942395a2f848$var$formatAttributes(attributes, opts) {\n    var _a;\n    if (!attributes) return;\n    const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false ? $e9cd942395a2f848$var$replaceQuotes : opts.xmlMode || opts.encodeEntities !== \"utf8\" ? (0, $e72123220ae6606b$export$18855ec5be97da16) : (0, $e72123220ae6606b$export$30330f3d5eb70e11);\n    return Object.keys(attributes).map((key)=>{\n        var _a, _b;\n        const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n        if (opts.xmlMode === \"foreign\") /* Fix up mixed-case attribute names */ key = (_b = (0, $c6415ff239ea0ed7$export$b4cfbfd90280b005).get(key)) !== null && _b !== void 0 ? _b : key;\n        if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") return key;\n        return `${key}=\"${encode(value)}\"`;\n    }).join(\" \");\n}\n/**\n * Self-enclosing tags\n */ const $e9cd942395a2f848$var$singleTag = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\"\n]);\nfunction $e9cd942395a2f848$export$b3890eb0ae9dca99(node, options = {}) {\n    const nodes = \"length\" in node ? node : [\n        node\n    ];\n    let output = \"\";\n    for(let i = 0; i < nodes.length; i++)output += $e9cd942395a2f848$var$renderNode(nodes[i], options);\n    return output;\n}\nvar $e9cd942395a2f848$export$2e2bcd8739ae039 = $e9cd942395a2f848$export$b3890eb0ae9dca99;\nfunction $e9cd942395a2f848$var$renderNode(node, options) {\n    switch(node.type){\n        case $d016a34ede83f3d0$export$be92b6f5f03c0fe9:\n            return $e9cd942395a2f848$export$b3890eb0ae9dca99(node.children, options);\n        // @ts-expect-error We don't use `Doctype` yet\n        case $d016a34ede83f3d0$export$31b44af36ff2c60f:\n        case $d016a34ede83f3d0$export$befdefbdce210f91:\n            return $e9cd942395a2f848$var$renderDirective(node);\n        case $d016a34ede83f3d0$export$4d299b491347818a:\n            return $e9cd942395a2f848$var$renderComment(node);\n        case $d016a34ede83f3d0$export$1f8b8f7e5c763232:\n            return $e9cd942395a2f848$var$renderCdata(node);\n        case $d016a34ede83f3d0$export$2f8b47a141e57afc:\n        case $d016a34ede83f3d0$export$d9e45bc13d335801:\n        case $d016a34ede83f3d0$export$3288d34c523a1192:\n            return $e9cd942395a2f848$var$renderTag(node, options);\n        case $d016a34ede83f3d0$export$5f1af8db9871e1d6:\n            return $e9cd942395a2f848$var$renderText(node, options);\n    }\n}\nconst $e9cd942395a2f848$var$foreignModeIntegrationPoints = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignObject\",\n    \"desc\",\n    \"title\"\n]);\nconst $e9cd942395a2f848$var$foreignElements = new Set([\n    \"svg\",\n    \"math\"\n]);\nfunction $e9cd942395a2f848$var$renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case element names */ elem.name = (_a = (0, $c6415ff239ea0ed7$export$82b917442d249e05).get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n        /* Exit foreign mode at integration points */ if (elem.parent && $e9cd942395a2f848$var$foreignModeIntegrationPoints.has(elem.parent.name)) opts = {\n            ...opts,\n            xmlMode: false\n        };\n    }\n    if (!opts.xmlMode && $e9cd942395a2f848$var$foreignElements.has(elem.name)) opts = {\n        ...opts,\n        xmlMode: \"foreign\"\n    };\n    let tag = `<${elem.name}`;\n    const attribs = $e9cd942395a2f848$var$formatAttributes(elem.attribs, opts);\n    if (attribs) tag += ` ${attribs}`;\n    if (elem.children.length === 0 && (opts.xmlMode ? opts.selfClosingTags !== false : opts.selfClosingTags && $e9cd942395a2f848$var$singleTag.has(elem.name))) {\n        if (!opts.xmlMode) tag += \" \";\n        tag += \"/>\";\n    } else {\n        tag += \">\";\n        if (elem.children.length > 0) tag += $e9cd942395a2f848$export$b3890eb0ae9dca99(elem.children, opts);\n        if (opts.xmlMode || !$e9cd942395a2f848$var$singleTag.has(elem.name)) tag += `</${elem.name}>`;\n    }\n    return tag;\n}\nfunction $e9cd942395a2f848$var$renderDirective(elem) {\n    return `<${elem.data}>`;\n}\nfunction $e9cd942395a2f848$var$renderText(elem, opts) {\n    var _a;\n    let data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false && !(!opts.xmlMode && elem.parent && $e9cd942395a2f848$var$unencodedElements.has(elem.parent.name))) data = opts.xmlMode || opts.encodeEntities !== \"utf8\" ? (0, $e72123220ae6606b$export$18855ec5be97da16)(data) : (0, $e72123220ae6606b$export$96e6fc3a139b2555)(data);\n    return data;\n}\nfunction $e9cd942395a2f848$var$renderCdata(elem) {\n    return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction $e9cd942395a2f848$var$renderComment(elem) {\n    return `<!--${elem.data}-->`;\n}\n\n\n\nfunction $5e7710faf81de260$export$39484b727cc2f324(node, options) {\n    return (0, $e9cd942395a2f848$export$2e2bcd8739ae039)(node, options);\n}\nfunction $5e7710faf81de260$export$7ed15b4d2218408(node, options) {\n    return (0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(node) ? node.children.map((node)=>$5e7710faf81de260$export$39484b727cc2f324(node, options)).join(\"\") : \"\";\n}\nfunction $5e7710faf81de260$export$c72d34660a162238(node) {\n    if (Array.isArray(node)) return node.map($5e7710faf81de260$export$c72d34660a162238).join(\"\");\n    if ((0, $298fc1d08428934f$export$3bf645f08efe3292)(node)) return node.name === \"br\" ? \"\\n\" : $5e7710faf81de260$export$c72d34660a162238(node.children);\n    if ((0, $298fc1d08428934f$export$c2d65aed98d39b56)(node)) return $5e7710faf81de260$export$c72d34660a162238(node.children);\n    if ((0, $298fc1d08428934f$export$1879817ac5c922b7)(node)) return node.data;\n    return \"\";\n}\nfunction $5e7710faf81de260$export$e0e0794250e9118f(node) {\n    if (Array.isArray(node)) return node.map($5e7710faf81de260$export$e0e0794250e9118f).join(\"\");\n    if ((0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(node) && !(0, $298fc1d08428934f$export$3ab01370f5e64ac8)(node)) return $5e7710faf81de260$export$e0e0794250e9118f(node.children);\n    if ((0, $298fc1d08428934f$export$1879817ac5c922b7)(node)) return node.data;\n    return \"\";\n}\nfunction $5e7710faf81de260$export$5864bc2a45f1eb81(node) {\n    if (Array.isArray(node)) return node.map($5e7710faf81de260$export$5864bc2a45f1eb81).join(\"\");\n    if ((0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(node) && (node.type === (0, $d016a34ede83f3d0$export$b992dc138d950e31).Tag || (0, $298fc1d08428934f$export$c2d65aed98d39b56)(node))) return $5e7710faf81de260$export$5864bc2a45f1eb81(node.children);\n    if ((0, $298fc1d08428934f$export$1879817ac5c922b7)(node)) return node.data;\n    return \"\";\n}\n\n\nvar $96c591732bbe9fd9$exports = {};\n\n$parcel$export($96c591732bbe9fd9$exports, \"getChildren\", () => $96c591732bbe9fd9$export$f8cf48ee793b41be);\n$parcel$export($96c591732bbe9fd9$exports, \"getParent\", () => $96c591732bbe9fd9$export$58081aedf094d85b);\n$parcel$export($96c591732bbe9fd9$exports, \"getSiblings\", () => $96c591732bbe9fd9$export$f312c3733b79ac0d);\n$parcel$export($96c591732bbe9fd9$exports, \"getAttributeValue\", () => $96c591732bbe9fd9$export$1e335898aa11b111);\n$parcel$export($96c591732bbe9fd9$exports, \"hasAttrib\", () => $96c591732bbe9fd9$export$aa37f90c17957f38);\n$parcel$export($96c591732bbe9fd9$exports, \"getName\", () => $96c591732bbe9fd9$export$7d9f7e9c1c02b41e);\n$parcel$export($96c591732bbe9fd9$exports, \"nextElementSibling\", () => $96c591732bbe9fd9$export$9be3779649ef9cc7);\n$parcel$export($96c591732bbe9fd9$exports, \"prevElementSibling\", () => $96c591732bbe9fd9$export$c8bafb6e59c0b8e);\n\nfunction $96c591732bbe9fd9$export$f8cf48ee793b41be(elem) {\n    return (0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(elem) ? elem.children : [];\n}\nfunction $96c591732bbe9fd9$export$58081aedf094d85b(elem) {\n    return elem.parent || null;\n}\nfunction $96c591732bbe9fd9$export$f312c3733b79ac0d(elem) {\n    const parent = $96c591732bbe9fd9$export$58081aedf094d85b(elem);\n    if (parent != null) return $96c591732bbe9fd9$export$f8cf48ee793b41be(parent);\n    const siblings = [\n        elem\n    ];\n    let { prev: prev, next: next } = elem;\n    while(prev != null){\n        siblings.unshift(prev);\n        ({ prev: prev } = prev);\n    }\n    while(next != null){\n        siblings.push(next);\n        ({ next: next } = next);\n    }\n    return siblings;\n}\nfunction $96c591732bbe9fd9$export$1e335898aa11b111(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\nfunction $96c591732bbe9fd9$export$aa37f90c17957f38(elem, name) {\n    return elem.attribs != null && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;\n}\nfunction $96c591732bbe9fd9$export$7d9f7e9c1c02b41e(elem) {\n    return elem.name;\n}\nfunction $96c591732bbe9fd9$export$9be3779649ef9cc7(elem) {\n    let { next: next } = elem;\n    while(next !== null && !(0, $298fc1d08428934f$export$3bf645f08efe3292)(next))({ next: next } = next);\n    return next;\n}\nfunction $96c591732bbe9fd9$export$c8bafb6e59c0b8e(elem) {\n    let { prev: prev } = elem;\n    while(prev !== null && !(0, $298fc1d08428934f$export$3bf645f08efe3292)(prev))({ prev: prev } = prev);\n    return prev;\n}\n\n\nvar $22117dbf00ca9159$exports = {};\n\n$parcel$export($22117dbf00ca9159$exports, \"removeElement\", () => $22117dbf00ca9159$export$f883456a56996078);\n$parcel$export($22117dbf00ca9159$exports, \"replaceElement\", () => $22117dbf00ca9159$export$2dfe578f95754f6a);\n$parcel$export($22117dbf00ca9159$exports, \"appendChild\", () => $22117dbf00ca9159$export$1b8e57c9ea42f1d2);\n$parcel$export($22117dbf00ca9159$exports, \"append\", () => $22117dbf00ca9159$export$10d8903dec122b9d);\n$parcel$export($22117dbf00ca9159$exports, \"prependChild\", () => $22117dbf00ca9159$export$47b51e6d100007bc);\n$parcel$export($22117dbf00ca9159$exports, \"prepend\", () => $22117dbf00ca9159$export$68159836694e22c1);\n/**\n * Remove an element from the dom\n *\n * @category Manipulation\n * @param elem The element to be removed\n */ function $22117dbf00ca9159$export$f883456a56996078(elem) {\n    if (elem.prev) elem.prev.next = elem.next;\n    if (elem.next) elem.next.prev = elem.prev;\n    if (elem.parent) {\n        const childs = elem.parent.children;\n        const childsIndex = childs.lastIndexOf(elem);\n        if (childsIndex >= 0) childs.splice(childsIndex, 1);\n    }\n    elem.next = null;\n    elem.prev = null;\n    elem.parent = null;\n}\nfunction $22117dbf00ca9159$export$2dfe578f95754f6a(elem, replacement) {\n    const prev = replacement.prev = elem.prev;\n    if (prev) prev.next = replacement;\n    const next = replacement.next = elem.next;\n    if (next) next.prev = replacement;\n    const parent = replacement.parent = elem.parent;\n    if (parent) {\n        const childs = parent.children;\n        childs[childs.lastIndexOf(elem)] = replacement;\n        elem.parent = null;\n    }\n}\nfunction $22117dbf00ca9159$export$1b8e57c9ea42f1d2(parent, child) {\n    $22117dbf00ca9159$export$f883456a56996078(child);\n    child.next = null;\n    child.parent = parent;\n    if (parent.children.push(child) > 1) {\n        const sibling = parent.children[parent.children.length - 2];\n        sibling.next = child;\n        child.prev = sibling;\n    } else child.prev = null;\n}\nfunction $22117dbf00ca9159$export$10d8903dec122b9d(elem, next) {\n    $22117dbf00ca9159$export$f883456a56996078(next);\n    const { parent: parent } = elem;\n    const currNext = elem.next;\n    next.next = currNext;\n    next.prev = elem;\n    elem.next = next;\n    next.parent = parent;\n    if (currNext) {\n        currNext.prev = next;\n        if (parent) {\n            const childs = parent.children;\n            childs.splice(childs.lastIndexOf(currNext), 0, next);\n        }\n    } else if (parent) parent.children.push(next);\n}\nfunction $22117dbf00ca9159$export$47b51e6d100007bc(parent, child) {\n    $22117dbf00ca9159$export$f883456a56996078(child);\n    child.parent = parent;\n    child.prev = null;\n    if (parent.children.unshift(child) !== 1) {\n        const sibling = parent.children[1];\n        sibling.prev = child;\n        child.next = sibling;\n    } else child.next = null;\n}\nfunction $22117dbf00ca9159$export$68159836694e22c1(elem, prev) {\n    $22117dbf00ca9159$export$f883456a56996078(prev);\n    const { parent: parent } = elem;\n    if (parent) {\n        const childs = parent.children;\n        childs.splice(childs.indexOf(elem), 0, prev);\n    }\n    if (elem.prev) elem.prev.next = prev;\n    prev.parent = parent;\n    prev.prev = elem.prev;\n    prev.next = elem;\n    elem.prev = prev;\n}\n\n\nvar $89e4260ec6b7089c$exports = {};\n\n$parcel$export($89e4260ec6b7089c$exports, \"filter\", () => $89e4260ec6b7089c$export$3dea766d36a8935f);\n$parcel$export($89e4260ec6b7089c$exports, \"find\", () => $89e4260ec6b7089c$export$71aa6c912b956294);\n$parcel$export($89e4260ec6b7089c$exports, \"findOneChild\", () => $89e4260ec6b7089c$export$ac03a862904ce329);\n$parcel$export($89e4260ec6b7089c$exports, \"findOne\", () => $89e4260ec6b7089c$export$a541876d5d7daf90);\n$parcel$export($89e4260ec6b7089c$exports, \"existsOne\", () => $89e4260ec6b7089c$export$9d99dce58ac4a31b);\n$parcel$export($89e4260ec6b7089c$exports, \"findAll\", () => $89e4260ec6b7089c$export$18200ea6c8035394);\n\nfunction $89e4260ec6b7089c$export$3dea766d36a8935f(test, node, recurse = true, limit = Infinity) {\n    return $89e4260ec6b7089c$export$71aa6c912b956294(test, Array.isArray(node) ? node : [\n        node\n    ], recurse, limit);\n}\nfunction $89e4260ec6b7089c$export$71aa6c912b956294(test, nodes, recurse, limit) {\n    const result = [];\n    /** Stack of the arrays we are looking at. */ const nodeStack = [\n        nodes\n    ];\n    /** Stack of the indices within the arrays. */ const indexStack = [\n        0\n    ];\n    for(;;){\n        // First, check if the current array has any more elements to look at.\n        if (indexStack[0] >= nodeStack[0].length) {\n            // If we have no more arrays to look at, we are done.\n            if (indexStack.length === 1) return result;\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (test(elem)) {\n            result.push(elem);\n            if (--limit <= 0) return result;\n        }\n        if (recurse && (0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(elem) && elem.children.length > 0) {\n            /*\n             * Add the children to the stack. We are depth-first, so this is\n             * the next array we look at.\n             */ indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\nfunction $89e4260ec6b7089c$export$ac03a862904ce329(test, nodes) {\n    return nodes.find(test);\n}\nfunction $89e4260ec6b7089c$export$a541876d5d7daf90(test, nodes, recurse = true) {\n    let elem = null;\n    for(let i = 0; i < nodes.length && !elem; i++){\n        const node = nodes[i];\n        if (!(0, $298fc1d08428934f$export$3bf645f08efe3292)(node)) continue;\n        else if (test(node)) elem = node;\n        else if (recurse && node.children.length > 0) elem = $89e4260ec6b7089c$export$a541876d5d7daf90(test, node.children, true);\n    }\n    return elem;\n}\nfunction $89e4260ec6b7089c$export$9d99dce58ac4a31b(test, nodes) {\n    return nodes.some((checked)=>(0, $298fc1d08428934f$export$3bf645f08efe3292)(checked) && (test(checked) || $89e4260ec6b7089c$export$9d99dce58ac4a31b(test, checked.children)));\n}\nfunction $89e4260ec6b7089c$export$18200ea6c8035394(test, nodes) {\n    const result = [];\n    const nodeStack = [\n        nodes\n    ];\n    const indexStack = [\n        0\n    ];\n    for(;;){\n        if (indexStack[0] >= nodeStack[0].length) {\n            if (nodeStack.length === 1) return result;\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (!(0, $298fc1d08428934f$export$3bf645f08efe3292)(elem)) continue;\n        if (test(elem)) result.push(elem);\n        if (elem.children.length > 0) {\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n\n\nvar $a2da03981bf43417$exports = {};\n\n$parcel$export($a2da03981bf43417$exports, \"testElement\", () => $a2da03981bf43417$export$7b31db6b5a0b2f32);\n$parcel$export($a2da03981bf43417$exports, \"getElements\", () => $a2da03981bf43417$export$73eac51a39d6b0eb);\n$parcel$export($a2da03981bf43417$exports, \"getElementById\", () => $a2da03981bf43417$export$83595b84fc78b9b4);\n$parcel$export($a2da03981bf43417$exports, \"getElementsByTagName\", () => $a2da03981bf43417$export$af941c3c7c3b40f5);\n$parcel$export($a2da03981bf43417$exports, \"getElementsByTagType\", () => $a2da03981bf43417$export$f5d981e30be5545b);\n\n\n/**\n * A map of functions to check nodes against.\n */ const $a2da03981bf43417$var$Checks = {\n    tag_name (name) {\n        if (typeof name === \"function\") return (elem)=>(0, $298fc1d08428934f$export$3bf645f08efe3292)(elem) && name(elem.name);\n        else if (name === \"*\") return 0, $298fc1d08428934f$export$3bf645f08efe3292;\n        return (elem)=>(0, $298fc1d08428934f$export$3bf645f08efe3292)(elem) && elem.name === name;\n    },\n    tag_type (type) {\n        if (typeof type === \"function\") return (elem)=>type(elem.type);\n        return (elem)=>elem.type === type;\n    },\n    tag_contains (data) {\n        if (typeof data === \"function\") return (elem)=>(0, $298fc1d08428934f$export$1879817ac5c922b7)(elem) && data(elem.data);\n        return (elem)=>(0, $298fc1d08428934f$export$1879817ac5c922b7)(elem) && elem.data === data;\n    }\n};\n/**\n * Returns a function to check whether a node has an attribute with a particular\n * value.\n *\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a\n *   particular value.\n */ function $a2da03981bf43417$var$getAttribCheck(attrib, value) {\n    if (typeof value === \"function\") return (elem)=>(0, $298fc1d08428934f$export$3bf645f08efe3292)(elem) && value(elem.attribs[attrib]);\n    return (elem)=>(0, $298fc1d08428934f$export$3bf645f08efe3292)(elem) && elem.attribs[attrib] === value;\n}\n/**\n * Returns a function that returns `true` if either of the input functions\n * returns `true` for a node.\n *\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either of the input\n *   functions returns `true` for the node.\n */ function $a2da03981bf43417$var$combineFuncs(a, b) {\n    return (elem)=>a(elem) || b(elem);\n}\n/**\n * Returns a function that executes all checks in `options` and returns `true`\n * if any of them match a node.\n *\n * @param options An object describing nodes to look for.\n * @returns A function that executes all checks in `options` and returns `true`\n *   if any of them match a node.\n */ function $a2da03981bf43417$var$compileTest(options) {\n    const funcs = Object.keys(options).map((key)=>{\n        const value = options[key];\n        return Object.prototype.hasOwnProperty.call($a2da03981bf43417$var$Checks, key) ? $a2da03981bf43417$var$Checks[key](value) : $a2da03981bf43417$var$getAttribCheck(key, value);\n    });\n    return funcs.length === 0 ? null : funcs.reduce($a2da03981bf43417$var$combineFuncs);\n}\nfunction $a2da03981bf43417$export$7b31db6b5a0b2f32(options, node) {\n    const test = $a2da03981bf43417$var$compileTest(options);\n    return test ? test(node) : true;\n}\nfunction $a2da03981bf43417$export$73eac51a39d6b0eb(options, nodes, recurse, limit = Infinity) {\n    const test = $a2da03981bf43417$var$compileTest(options);\n    return test ? (0, $89e4260ec6b7089c$export$3dea766d36a8935f)(test, nodes, recurse, limit) : [];\n}\nfunction $a2da03981bf43417$export$83595b84fc78b9b4(id, nodes, recurse = true) {\n    if (!Array.isArray(nodes)) nodes = [\n        nodes\n    ];\n    return (0, $89e4260ec6b7089c$export$a541876d5d7daf90)($a2da03981bf43417$var$getAttribCheck(\"id\", id), nodes, recurse);\n}\nfunction $a2da03981bf43417$export$af941c3c7c3b40f5(tagName, nodes, recurse = true, limit = Infinity) {\n    return (0, $89e4260ec6b7089c$export$3dea766d36a8935f)($a2da03981bf43417$var$Checks[\"tag_name\"](tagName), nodes, recurse, limit);\n}\nfunction $a2da03981bf43417$export$f5d981e30be5545b(type, nodes, recurse = true, limit = Infinity) {\n    return (0, $89e4260ec6b7089c$export$3dea766d36a8935f)($a2da03981bf43417$var$Checks[\"tag_type\"](type), nodes, recurse, limit);\n}\n\n\nvar $5d2d1e3b58306e70$exports = {};\n\n$parcel$export($5d2d1e3b58306e70$exports, \"removeSubsets\", () => $5d2d1e3b58306e70$export$171dc294232ebeef);\n$parcel$export($5d2d1e3b58306e70$exports, \"DocumentPosition\", () => $5d2d1e3b58306e70$export$406a59d989e8005a);\n$parcel$export($5d2d1e3b58306e70$exports, \"compareDocumentPosition\", () => $5d2d1e3b58306e70$export$17303b8fea718ecc);\n$parcel$export($5d2d1e3b58306e70$exports, \"uniqueSort\", () => $5d2d1e3b58306e70$export$1c267319665a7e7e);\n\nfunction $5d2d1e3b58306e70$export$171dc294232ebeef(nodes) {\n    let idx = nodes.length;\n    /*\n     * Check if each node (or one of its ancestors) is already contained in the\n     * array.\n     */ while(--idx >= 0){\n        const node = nodes[idx];\n        /*\n         * Remove the node if it is not unique.\n         * We are going through the array from the end, so we only\n         * have to check nodes that preceed the node under consideration in the array.\n         */ if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n            nodes.splice(idx, 1);\n            continue;\n        }\n        for(let ancestor = node.parent; ancestor; ancestor = ancestor.parent)if (nodes.includes(ancestor)) {\n            nodes.splice(idx, 1);\n            break;\n        }\n    }\n    return nodes;\n}\nvar $5d2d1e3b58306e70$export$406a59d989e8005a;\n(function(DocumentPosition) {\n    DocumentPosition[DocumentPosition[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n    DocumentPosition[DocumentPosition[\"PRECEDING\"] = 2] = \"PRECEDING\";\n    DocumentPosition[DocumentPosition[\"FOLLOWING\"] = 4] = \"FOLLOWING\";\n    DocumentPosition[DocumentPosition[\"CONTAINS\"] = 8] = \"CONTAINS\";\n    DocumentPosition[DocumentPosition[\"CONTAINED_BY\"] = 16] = \"CONTAINED_BY\";\n})($5d2d1e3b58306e70$export$406a59d989e8005a || ($5d2d1e3b58306e70$export$406a59d989e8005a = {}));\nfunction $5d2d1e3b58306e70$export$17303b8fea718ecc(nodeA, nodeB) {\n    const aParents = [];\n    const bParents = [];\n    if (nodeA === nodeB) return 0;\n    let current = (0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(nodeA) ? nodeA : nodeA.parent;\n    while(current){\n        aParents.unshift(current);\n        current = current.parent;\n    }\n    current = (0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(nodeB) ? nodeB : nodeB.parent;\n    while(current){\n        bParents.unshift(current);\n        current = current.parent;\n    }\n    const maxIdx = Math.min(aParents.length, bParents.length);\n    let idx = 0;\n    while(idx < maxIdx && aParents[idx] === bParents[idx])idx++;\n    if (idx === 0) return $5d2d1e3b58306e70$export$406a59d989e8005a.DISCONNECTED;\n    const sharedParent = aParents[idx - 1];\n    const siblings = sharedParent.children;\n    const aSibling = aParents[idx];\n    const bSibling = bParents[idx];\n    if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n        if (sharedParent === nodeB) return $5d2d1e3b58306e70$export$406a59d989e8005a.FOLLOWING | $5d2d1e3b58306e70$export$406a59d989e8005a.CONTAINED_BY;\n        return $5d2d1e3b58306e70$export$406a59d989e8005a.FOLLOWING;\n    }\n    if (sharedParent === nodeA) return $5d2d1e3b58306e70$export$406a59d989e8005a.PRECEDING | $5d2d1e3b58306e70$export$406a59d989e8005a.CONTAINS;\n    return $5d2d1e3b58306e70$export$406a59d989e8005a.PRECEDING;\n}\nfunction $5d2d1e3b58306e70$export$1c267319665a7e7e(nodes) {\n    nodes = nodes.filter((node, i, arr)=>!arr.includes(node, i + 1));\n    nodes.sort((a, b)=>{\n        const relative = $5d2d1e3b58306e70$export$17303b8fea718ecc(a, b);\n        if (relative & $5d2d1e3b58306e70$export$406a59d989e8005a.PRECEDING) return -1;\n        else if (relative & $5d2d1e3b58306e70$export$406a59d989e8005a.FOLLOWING) return 1;\n        return 0;\n    });\n    return nodes;\n}\n\n\nvar $1f11e7a1ecde59b5$exports = {};\n\n$parcel$export($1f11e7a1ecde59b5$exports, \"getFeed\", () => $1f11e7a1ecde59b5$export$ad32138c9e09ad4);\n\n\nfunction $1f11e7a1ecde59b5$export$ad32138c9e09ad4(doc) {\n    const feedRoot = $1f11e7a1ecde59b5$var$getOneElement($1f11e7a1ecde59b5$var$isValidFeed, doc);\n    return !feedRoot ? null : feedRoot.name === \"feed\" ? $1f11e7a1ecde59b5$var$getAtomFeed(feedRoot) : $1f11e7a1ecde59b5$var$getRssFeed(feedRoot);\n}\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */ function $1f11e7a1ecde59b5$var$getAtomFeed(feedRoot) {\n    var _a;\n    const childs = feedRoot.children;\n    const feed = {\n        type: \"atom\",\n        items: (0, $a2da03981bf43417$export$af941c3c7c3b40f5)(\"entry\", childs).map((item)=>{\n            var _a;\n            const { children: children } = item;\n            const entry = {\n                media: $1f11e7a1ecde59b5$var$getMediaElements(children)\n            };\n            $1f11e7a1ecde59b5$var$addConditionally(entry, \"id\", \"id\", children);\n            $1f11e7a1ecde59b5$var$addConditionally(entry, \"title\", \"title\", children);\n            const href = (_a = $1f11e7a1ecde59b5$var$getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n            if (href) entry.link = href;\n            const description = $1f11e7a1ecde59b5$var$fetch(\"summary\", children) || $1f11e7a1ecde59b5$var$fetch(\"content\", children);\n            if (description) entry.description = description;\n            const pubDate = $1f11e7a1ecde59b5$var$fetch(\"updated\", children);\n            if (pubDate) entry.pubDate = new Date(pubDate);\n            return entry;\n        })\n    };\n    $1f11e7a1ecde59b5$var$addConditionally(feed, \"id\", \"id\", childs);\n    $1f11e7a1ecde59b5$var$addConditionally(feed, \"title\", \"title\", childs);\n    const href = (_a = $1f11e7a1ecde59b5$var$getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n    if (href) feed.link = href;\n    $1f11e7a1ecde59b5$var$addConditionally(feed, \"description\", \"subtitle\", childs);\n    const updated = $1f11e7a1ecde59b5$var$fetch(\"updated\", childs);\n    if (updated) feed.updated = new Date(updated);\n    $1f11e7a1ecde59b5$var$addConditionally(feed, \"author\", \"email\", childs, true);\n    return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */ function $1f11e7a1ecde59b5$var$getRssFeed(feedRoot) {\n    var _a, _b;\n    const childs = (_b = (_a = $1f11e7a1ecde59b5$var$getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n    const feed = {\n        type: feedRoot.name.substr(0, 3),\n        id: \"\",\n        items: (0, $a2da03981bf43417$export$af941c3c7c3b40f5)(\"item\", feedRoot.children).map((item)=>{\n            const { children: children } = item;\n            const entry = {\n                media: $1f11e7a1ecde59b5$var$getMediaElements(children)\n            };\n            $1f11e7a1ecde59b5$var$addConditionally(entry, \"id\", \"guid\", children);\n            $1f11e7a1ecde59b5$var$addConditionally(entry, \"title\", \"title\", children);\n            $1f11e7a1ecde59b5$var$addConditionally(entry, \"link\", \"link\", children);\n            $1f11e7a1ecde59b5$var$addConditionally(entry, \"description\", \"description\", children);\n            const pubDate = $1f11e7a1ecde59b5$var$fetch(\"pubDate\", children) || $1f11e7a1ecde59b5$var$fetch(\"dc:date\", children);\n            if (pubDate) entry.pubDate = new Date(pubDate);\n            return entry;\n        })\n    };\n    $1f11e7a1ecde59b5$var$addConditionally(feed, \"title\", \"title\", childs);\n    $1f11e7a1ecde59b5$var$addConditionally(feed, \"link\", \"link\", childs);\n    $1f11e7a1ecde59b5$var$addConditionally(feed, \"description\", \"description\", childs);\n    const updated = $1f11e7a1ecde59b5$var$fetch(\"lastBuildDate\", childs);\n    if (updated) feed.updated = new Date(updated);\n    $1f11e7a1ecde59b5$var$addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n    return feed;\n}\nconst $1f11e7a1ecde59b5$var$MEDIA_KEYS_STRING = [\n    \"url\",\n    \"type\",\n    \"lang\"\n];\nconst $1f11e7a1ecde59b5$var$MEDIA_KEYS_INT = [\n    \"fileSize\",\n    \"bitrate\",\n    \"framerate\",\n    \"samplingrate\",\n    \"channels\",\n    \"duration\",\n    \"height\",\n    \"width\"\n];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */ function $1f11e7a1ecde59b5$var$getMediaElements(where) {\n    return (0, $a2da03981bf43417$export$af941c3c7c3b40f5)(\"media:content\", where).map((elem)=>{\n        const { attribs: attribs } = elem;\n        const media = {\n            medium: attribs[\"medium\"],\n            isDefault: !!attribs[\"isDefault\"]\n        };\n        for (const attrib of $1f11e7a1ecde59b5$var$MEDIA_KEYS_STRING)if (attribs[attrib]) media[attrib] = attribs[attrib];\n        for (const attrib of $1f11e7a1ecde59b5$var$MEDIA_KEYS_INT)if (attribs[attrib]) media[attrib] = parseInt(attribs[attrib], 10);\n        if (attribs[\"expression\"]) media.expression = attribs[\"expression\"];\n        return media;\n    });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */ function $1f11e7a1ecde59b5$var$getOneElement(tagName, node) {\n    return (0, $a2da03981bf43417$export$af941c3c7c3b40f5)(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */ function $1f11e7a1ecde59b5$var$fetch(tagName, where, recurse = false) {\n    return (0, $5e7710faf81de260$export$e0e0794250e9118f)((0, $a2da03981bf43417$export$af941c3c7c3b40f5)(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */ function $1f11e7a1ecde59b5$var$addConditionally(obj, prop, tagName, where, recurse = false) {\n    const val = $1f11e7a1ecde59b5$var$fetch(tagName, where, recurse);\n    if (val) obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */ function $1f11e7a1ecde59b5$var$isValidFeed(value) {\n    return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\n\n\n\n$parcel$exportWildcard($072f2bad516501ed$exports, $5e7710faf81de260$exports);\n$parcel$exportWildcard($072f2bad516501ed$exports, $96c591732bbe9fd9$exports);\n$parcel$exportWildcard($072f2bad516501ed$exports, $22117dbf00ca9159$exports);\n$parcel$exportWildcard($072f2bad516501ed$exports, $89e4260ec6b7089c$exports);\n$parcel$exportWildcard($072f2bad516501ed$exports, $a2da03981bf43417$exports);\n$parcel$exportWildcard($072f2bad516501ed$exports, $5d2d1e3b58306e70$exports);\n$parcel$exportWildcard($072f2bad516501ed$exports, $1f11e7a1ecde59b5$exports);\n\n\n\n/**\n * Helper function to render a DOM.\n *\n * @param that - Cheerio instance to render.\n * @param dom - The DOM to render. Defaults to `that`'s root.\n * @param options - Options for rendering.\n * @returns The rendered document.\n */ function $c1bcc44f974e65ab$var$render(that, dom, options) {\n    if (!that) return \"\";\n    return that(dom !== null && dom !== void 0 ? dom : that._root.children, null, undefined, options).toString();\n}\n/**\n * Checks if a passed object is an options object.\n *\n * @param dom - Object to check if it is an options object.\n * @returns Whether the object is an options object.\n */ function $c1bcc44f974e65ab$var$isOptions(dom, options) {\n    return !options && typeof dom === \"object\" && dom != null && !(\"length\" in dom) && !(\"type\" in dom);\n}\nfunction $c1bcc44f974e65ab$export$c0bb0b647f701bb5(dom, options) {\n    /*\n     * Be flexible about parameters, sometimes we call html(),\n     * with options as only parameter\n     * check dom argument for dom element specific properties\n     * assume there is no 'length' or 'type' properties in the options object\n     */ const toRender = $c1bcc44f974e65ab$var$isOptions(dom) ? (options = dom, undefined) : dom;\n    /*\n     * Sometimes `$.html()` is used without preloading html,\n     * so fallback non-existing options to the default ones.\n     */ const opts = {\n        ...(0, $00a54fca6088e8eb$export$2e2bcd8739ae039),\n        ...this === null || this === void 0 ? void 0 : this._options,\n        ...(0, $00a54fca6088e8eb$export$bffa455ba8c619a6)(options !== null && options !== void 0 ? options : {})\n    };\n    return $c1bcc44f974e65ab$var$render(this, toRender, opts);\n}\nfunction $c1bcc44f974e65ab$export$f2913fe8983302e(dom) {\n    const options = {\n        ...this._options,\n        xmlMode: true\n    };\n    return $c1bcc44f974e65ab$var$render(this, dom, options);\n}\nfunction $c1bcc44f974e65ab$export$6f093cfa640b7166(elements) {\n    const elems = elements ? elements : this ? this.root() : [];\n    let ret = \"\";\n    for(let i = 0; i < elems.length; i++)ret += (0, $5e7710faf81de260$export$e0e0794250e9118f)(elems[i]);\n    return ret;\n}\nfunction $c1bcc44f974e65ab$export$8a49393be2d55148(data, context, keepScripts = typeof context === \"boolean\" ? context : false) {\n    if (!data || typeof data !== \"string\") return null;\n    if (typeof context === \"boolean\") keepScripts = context;\n    const parsed = this.load(data, (0, $00a54fca6088e8eb$export$2e2bcd8739ae039), false);\n    if (!keepScripts) parsed(\"script\").remove();\n    /*\n     * The `children` array is used by Cheerio internally to group elements that\n     * share the same parents. When nodes created through `parseHTML` are\n     * inserted into previously-existing DOM structures, they will be removed\n     * from the `children` array. The results of `parseHTML` should remain\n     * constant across these operations, so a shallow copy should be returned.\n     */ return parsed.root()[0].children.slice();\n}\nfunction $c1bcc44f974e65ab$export$e8e78c978b129247() {\n    return this(this._root);\n}\nfunction $c1bcc44f974e65ab$export$2344b14b097df817(container, contained) {\n    // According to the jQuery API, an element does not \"contain\" itself\n    if (contained === container) return false;\n    /*\n     * Step up the descendants, stopping when the root element is reached\n     * (signaled by `.parent` returning a reference to the same object)\n     */ let next = contained;\n    while(next && next !== next.parent){\n        next = next.parent;\n        if (next === container) return true;\n    }\n    return false;\n}\nfunction $c1bcc44f974e65ab$export$4950aa0f605343fb(arr1, arr2) {\n    if (!$c1bcc44f974e65ab$var$isArrayLike(arr1) || !$c1bcc44f974e65ab$var$isArrayLike(arr2)) return;\n    let newLength = arr1.length;\n    const len = +arr2.length;\n    for(let i = 0; i < len; i++)arr1[newLength++] = arr2[i];\n    arr1.length = newLength;\n    return arr1;\n}\n/**\n * Checks if an object is array-like.\n *\n * @param item - Item to check.\n * @returns Indicates if the item is array-like.\n */ function $c1bcc44f974e65ab$var$isArrayLike(item) {\n    if (Array.isArray(item)) return true;\n    if (typeof item !== \"object\" || !Object.prototype.hasOwnProperty.call(item, \"length\") || typeof item.length !== \"number\" || item.length < 0) return false;\n    for(let i = 0; i < item.length; i++){\n        if (!(i in item)) return false;\n    }\n    return true;\n}\n\n\nvar $719788c75578d782$exports = {};\n\n$parcel$export($719788c75578d782$exports, \"attr\", () => $719788c75578d782$export$7aabe8b3a840d2fd);\n$parcel$export($719788c75578d782$exports, \"prop\", () => $719788c75578d782$export$977f3f6a9323c0f6);\n$parcel$export($719788c75578d782$exports, \"data\", () => $719788c75578d782$export$4051a07651545597);\n$parcel$export($719788c75578d782$exports, \"val\", () => $719788c75578d782$export$b02c28252f48c6ac);\n$parcel$export($719788c75578d782$exports, \"removeAttr\", () => $719788c75578d782$export$842f2b51efdcb631);\n$parcel$export($719788c75578d782$exports, \"hasClass\", () => $719788c75578d782$export$4ea3d958472af68f);\n$parcel$export($719788c75578d782$exports, \"addClass\", () => $719788c75578d782$export$d2cf6cd1dc7067d3);\n$parcel$export($719788c75578d782$exports, \"removeClass\", () => $719788c75578d782$export$c2255604a80b4506);\n$parcel$export($719788c75578d782$exports, \"toggleClass\", () => $719788c75578d782$export$4a80062ca50b57c7);\n/**\n * Methods for getting and modifying attributes.\n *\n * @module cheerio/attributes\n */ \n\nfunction $ed43754fae89976b$export$799a4b197f11d37(maybeCheerio) {\n    return maybeCheerio.cheerio != null;\n}\nfunction $ed43754fae89976b$export$8a7688a96d852767(str) {\n    return str.replace(/[_.-](\\w|$)/g, (_, x)=>x.toUpperCase());\n}\nfunction $ed43754fae89976b$export$53d8919ad8038ec0(str) {\n    return str.replace(/[A-Z]/g, \"-$&\").toLowerCase();\n}\nfunction $ed43754fae89976b$export$74822c5de6e95c1(array, fn) {\n    const len = array.length;\n    for(let i = 0; i < len; i++)fn(array[i], i);\n    return array;\n}\nfunction $ed43754fae89976b$export$773334283a3d1a04(dom) {\n    const clone = \"length\" in dom ? Array.prototype.map.call(dom, (el)=>(0, $298fc1d08428934f$export$ae8e35ea29ddac22)(el, true)) : [\n        (0, $298fc1d08428934f$export$ae8e35ea29ddac22)(dom, true)\n    ];\n    // Add a root node around the cloned nodes\n    const root = new (0, $298fc1d08428934f$export$b34a105447964f9f)(clone);\n    clone.forEach((node)=>{\n        node.parent = root;\n    });\n    return clone;\n}\nvar $ed43754fae89976b$var$CharacterCodes;\n(function(CharacterCodes) {\n    CharacterCodes[CharacterCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharacterCodes[CharacterCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharacterCodes[CharacterCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharacterCodes[CharacterCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharacterCodes[CharacterCodes[\"Exclamation\"] = 33] = \"Exclamation\";\n})($ed43754fae89976b$var$CharacterCodes || ($ed43754fae89976b$var$CharacterCodes = {}));\nfunction $ed43754fae89976b$export$144ef0648535ac5a(str) {\n    const tagStart = str.indexOf(\"<\");\n    if (tagStart < 0 || tagStart > str.length - 3) return false;\n    const tagChar = str.charCodeAt(tagStart + 1);\n    return (tagChar >= $ed43754fae89976b$var$CharacterCodes.LowerA && tagChar <= $ed43754fae89976b$var$CharacterCodes.LowerZ || tagChar >= $ed43754fae89976b$var$CharacterCodes.UpperA && tagChar <= $ed43754fae89976b$var$CharacterCodes.UpperZ || tagChar === $ed43754fae89976b$var$CharacterCodes.Exclamation) && str.includes(\">\", tagStart + 2);\n}\n\n\n\nconst $719788c75578d782$var$hasOwn = Object.prototype.hasOwnProperty;\nconst $719788c75578d782$var$rspace = /\\s+/;\nconst $719788c75578d782$var$dataAttrPrefix = \"data-\";\n/*\n * Lookup table for coercing string data-* attributes to their corresponding\n * JavaScript primitives\n */ const $719788c75578d782$var$primitives = {\n    null: null,\n    true: true,\n    false: false\n};\n// Attributes that are booleans\nconst $719788c75578d782$var$rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;\n// Matches strings that look like JSON objects or arrays\nconst $719788c75578d782$var$rbrace = /^{[^]*}$|^\\[[^]*]$/;\nfunction $719788c75578d782$var$getAttr(elem, name, xmlMode) {\n    var _a;\n    if (!elem || !(0, $298fc1d08428934f$export$3bf645f08efe3292)(elem)) return undefined;\n    (_a = elem.attribs) !== null && _a !== void 0 ? _a : elem.attribs = {};\n    // Return the entire attribs object if no attribute specified\n    if (!name) return elem.attribs;\n    if ($719788c75578d782$var$hasOwn.call(elem.attribs, name)) // Get the (decoded) attribute\n    return !xmlMode && $719788c75578d782$var$rboolean.test(name) ? name : elem.attribs[name];\n    // Mimic the DOM and return text content as value for `option's`\n    if (elem.name === \"option\" && name === \"value\") return (0, $c1bcc44f974e65ab$export$6f093cfa640b7166)(elem.children);\n    // Mimic DOM with default value for radios/checkboxes\n    if (elem.name === \"input\" && (elem.attribs[\"type\"] === \"radio\" || elem.attribs[\"type\"] === \"checkbox\") && name === \"value\") return \"on\";\n    return undefined;\n}\n/**\n * Sets the value of an attribute. The attribute will be deleted if the value is `null`.\n *\n * @private\n * @param el - The element to set the attribute on.\n * @param name - The attribute's name.\n * @param value - The attribute's value.\n */ function $719788c75578d782$var$setAttr(el, name, value) {\n    if (value === null) $719788c75578d782$var$removeAttribute(el, name);\n    else el.attribs[name] = `${value}`;\n}\nfunction $719788c75578d782$export$7aabe8b3a840d2fd(name, value) {\n    // Set the value (with attr map support)\n    if (typeof name === \"object\" || value !== undefined) {\n        if (typeof value === \"function\") {\n            if (typeof name !== \"string\") throw new Error(\"Bad combination of arguments.\");\n            return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el, i)=>{\n                if ((0, $298fc1d08428934f$export$3bf645f08efe3292)(el)) $719788c75578d782$var$setAttr(el, name, value.call(el, i, el.attribs[name]));\n            });\n        }\n        return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el)=>{\n            if (!(0, $298fc1d08428934f$export$3bf645f08efe3292)(el)) return;\n            if (typeof name === \"object\") Object.keys(name).forEach((objName)=>{\n                const objValue = name[objName];\n                $719788c75578d782$var$setAttr(el, objName, objValue);\n            });\n            else $719788c75578d782$var$setAttr(el, name, value);\n        });\n    }\n    return arguments.length > 1 ? this : $719788c75578d782$var$getAttr(this[0], name, this.options.xmlMode);\n}\n/**\n * Gets a node's prop.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the prop of.\n * @param name - Name of the prop.\n * @returns The prop's value.\n */ function $719788c75578d782$var$getProp(el, name, xmlMode) {\n    return name in el ? el[name] : !xmlMode && $719788c75578d782$var$rboolean.test(name) ? $719788c75578d782$var$getAttr(el, name, false) !== undefined : $719788c75578d782$var$getAttr(el, name, xmlMode);\n}\n/**\n * Sets the value of a prop.\n *\n * @private\n * @param el - The element to set the prop on.\n * @param name - The prop's name.\n * @param value - The prop's value.\n */ function $719788c75578d782$var$setProp(el, name, value, xmlMode) {\n    if (name in el) // @ts-expect-error Overriding value\n    el[name] = value;\n    else $719788c75578d782$var$setAttr(el, name, !xmlMode && $719788c75578d782$var$rboolean.test(name) ? value ? \"\" : null : `${value}`);\n}\nfunction $719788c75578d782$export$977f3f6a9323c0f6(name, value) {\n    var _a;\n    if (typeof name === \"string\" && value === undefined) {\n        const el = this[0];\n        if (!el || !(0, $298fc1d08428934f$export$3bf645f08efe3292)(el)) return undefined;\n        switch(name){\n            case \"style\":\n                {\n                    const property = this.css();\n                    const keys = Object.keys(property);\n                    keys.forEach((p, i)=>{\n                        property[i] = p;\n                    });\n                    property.length = keys.length;\n                    return property;\n                }\n            case \"tagName\":\n            case \"nodeName\":\n                return el.name.toUpperCase();\n            case \"href\":\n            case \"src\":\n                {\n                    const prop = (_a = el.attribs) === null || _a === void 0 ? void 0 : _a[name];\n                    /* eslint-disable node/no-unsupported-features/node-builtins */ if (typeof URL !== \"undefined\" && (name === \"href\" && (el.tagName === \"a\" || el.name === \"link\") || name === \"src\" && (el.tagName === \"img\" || el.tagName === \"iframe\" || el.tagName === \"audio\" || el.tagName === \"video\" || el.tagName === \"source\")) && prop !== undefined && this.options.baseURI) return new URL(prop, this.options.baseURI).href;\n                    /* eslint-enable node/no-unsupported-features/node-builtins */ return prop;\n                }\n            case \"innerText\":\n                return (0, $5e7710faf81de260$export$5864bc2a45f1eb81)(el);\n            case \"textContent\":\n                return (0, $5e7710faf81de260$export$e0e0794250e9118f)(el);\n            case \"outerHTML\":\n                return this.clone().wrap(\"<container />\").parent().html();\n            case \"innerHTML\":\n                return this.html();\n            default:\n                return $719788c75578d782$var$getProp(el, name, this.options.xmlMode);\n        }\n    }\n    if (typeof name === \"object\" || value !== undefined) {\n        if (typeof value === \"function\") {\n            if (typeof name === \"object\") throw new Error(\"Bad combination of arguments.\");\n            return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el, i)=>{\n                if ((0, $298fc1d08428934f$export$3bf645f08efe3292)(el)) $719788c75578d782$var$setProp(el, name, value.call(el, i, $719788c75578d782$var$getProp(el, name, this.options.xmlMode)), this.options.xmlMode);\n            });\n        }\n        return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el)=>{\n            if (!(0, $298fc1d08428934f$export$3bf645f08efe3292)(el)) return;\n            if (typeof name === \"object\") Object.keys(name).forEach((key)=>{\n                const val = name[key];\n                $719788c75578d782$var$setProp(el, key, val, this.options.xmlMode);\n            });\n            else $719788c75578d782$var$setProp(el, name, value, this.options.xmlMode);\n        });\n    }\n    return undefined;\n}\n/**\n * Sets the value of a data attribute.\n *\n * @private\n * @param el - The element to set the data attribute on.\n * @param name - The data attribute's name.\n * @param value - The data attribute's value.\n */ function $719788c75578d782$var$setData(el, name, value) {\n    var _a;\n    const elem = el;\n    (_a = elem.data) !== null && _a !== void 0 ? _a : elem.data = {};\n    if (typeof name === \"object\") Object.assign(elem.data, name);\n    else if (typeof name === \"string\" && value !== undefined) elem.data[name] = value;\n}\n/**\n * Read the specified attribute from the equivalent HTML5 `data-*` attribute,\n * and (if present) cache the value in the node's internal data store. If no\n * attribute name is specified, read _all_ HTML5 `data-*` attributes in this manner.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the data attribute of.\n * @param name - Name of the data attribute.\n * @returns The data attribute's value, or a map with all of the data attributes.\n */ function $719788c75578d782$var$readData(el, name) {\n    let domNames;\n    let jsNames;\n    let value;\n    if (name == null) {\n        domNames = Object.keys(el.attribs).filter((attrName)=>attrName.startsWith($719788c75578d782$var$dataAttrPrefix));\n        jsNames = domNames.map((domName)=>(0, $ed43754fae89976b$export$8a7688a96d852767)(domName.slice($719788c75578d782$var$dataAttrPrefix.length)));\n    } else {\n        domNames = [\n            $719788c75578d782$var$dataAttrPrefix + (0, $ed43754fae89976b$export$53d8919ad8038ec0)(name)\n        ];\n        jsNames = [\n            name\n        ];\n    }\n    for(let idx = 0; idx < domNames.length; ++idx){\n        const domName = domNames[idx];\n        const jsName = jsNames[idx];\n        if ($719788c75578d782$var$hasOwn.call(el.attribs, domName) && !$719788c75578d782$var$hasOwn.call(el.data, jsName)) {\n            value = el.attribs[domName];\n            if ($719788c75578d782$var$hasOwn.call($719788c75578d782$var$primitives, value)) value = $719788c75578d782$var$primitives[value];\n            else if (value === String(Number(value))) value = Number(value);\n            else if ($719788c75578d782$var$rbrace.test(value)) try {\n                value = JSON.parse(value);\n            } catch (e) {\n            /* Ignore */ }\n            el.data[jsName] = value;\n        }\n    }\n    return name == null ? el.data : value;\n}\nfunction $719788c75578d782$export$4051a07651545597(name, value) {\n    var _a;\n    const elem = this[0];\n    if (!elem || !(0, $298fc1d08428934f$export$3bf645f08efe3292)(elem)) return;\n    const dataEl = elem;\n    (_a = dataEl.data) !== null && _a !== void 0 ? _a : dataEl.data = {};\n    // Return the entire data object if no data specified\n    if (!name) return $719788c75578d782$var$readData(dataEl);\n    // Set the value (with attr map support)\n    if (typeof name === \"object\" || value !== undefined) {\n        (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el)=>{\n            if ((0, $298fc1d08428934f$export$3bf645f08efe3292)(el)) {\n                if (typeof name === \"object\") $719788c75578d782$var$setData(el, name);\n                else $719788c75578d782$var$setData(el, name, value);\n            }\n        });\n        return this;\n    }\n    if ($719788c75578d782$var$hasOwn.call(dataEl.data, name)) return dataEl.data[name];\n    return $719788c75578d782$var$readData(dataEl, name);\n}\nfunction $719788c75578d782$export$b02c28252f48c6ac(value) {\n    const querying = arguments.length === 0;\n    const element = this[0];\n    if (!element || !(0, $298fc1d08428934f$export$3bf645f08efe3292)(element)) return querying ? undefined : this;\n    switch(element.name){\n        case \"textarea\":\n            return this.text(value);\n        case \"select\":\n            {\n                const option = this.find(\"option:selected\");\n                if (!querying) {\n                    if (this.attr(\"multiple\") == null && typeof value === \"object\") return this;\n                    this.find(\"option\").removeAttr(\"selected\");\n                    const values = typeof value !== \"object\" ? [\n                        value\n                    ] : value;\n                    for(let i = 0; i < values.length; i++)this.find(`option[value=\"${values[i]}\"]`).attr(\"selected\", \"\");\n                    return this;\n                }\n                return this.attr(\"multiple\") ? option.toArray().map((el)=>(0, $c1bcc44f974e65ab$export$6f093cfa640b7166)(el.children)) : option.attr(\"value\");\n            }\n        case \"input\":\n        case \"option\":\n            return querying ? this.attr(\"value\") : this.attr(\"value\", value);\n    }\n    return undefined;\n}\n/**\n * Remove an attribute.\n *\n * @private\n * @param elem - Node to remove attribute from.\n * @param name - Name of the attribute to remove.\n */ function $719788c75578d782$var$removeAttribute(elem, name) {\n    if (!elem.attribs || !$719788c75578d782$var$hasOwn.call(elem.attribs, name)) return;\n    delete elem.attribs[name];\n}\n/**\n * Splits a space-separated list of names to individual names.\n *\n * @category Attributes\n * @param names - Names to split.\n * @returns - Split names.\n */ function $719788c75578d782$var$splitNames(names) {\n    return names ? names.trim().split($719788c75578d782$var$rspace) : [];\n}\nfunction $719788c75578d782$export$842f2b51efdcb631(name) {\n    const attrNames = $719788c75578d782$var$splitNames(name);\n    for(let i = 0; i < attrNames.length; i++)(0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (elem)=>{\n        if ((0, $298fc1d08428934f$export$3bf645f08efe3292)(elem)) $719788c75578d782$var$removeAttribute(elem, attrNames[i]);\n    });\n    return this;\n}\nfunction $719788c75578d782$export$4ea3d958472af68f(className) {\n    return this.toArray().some((elem)=>{\n        const clazz = (0, $298fc1d08428934f$export$3bf645f08efe3292)(elem) && elem.attribs[\"class\"];\n        let idx = -1;\n        if (clazz && className.length) while((idx = clazz.indexOf(className, idx + 1)) > -1){\n            const end = idx + className.length;\n            if ((idx === 0 || $719788c75578d782$var$rspace.test(clazz[idx - 1])) && (end === clazz.length || $719788c75578d782$var$rspace.test(clazz[end]))) return true;\n        }\n        return false;\n    });\n}\nfunction $719788c75578d782$export$d2cf6cd1dc7067d3(value) {\n    // Support functions\n    if (typeof value === \"function\") return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el, i)=>{\n        if ((0, $298fc1d08428934f$export$3bf645f08efe3292)(el)) {\n            const className = el.attribs[\"class\"] || \"\";\n            $719788c75578d782$export$d2cf6cd1dc7067d3.call([\n                el\n            ], value.call(el, i, className));\n        }\n    });\n    // Return if no value or not a string or function\n    if (!value || typeof value !== \"string\") return this;\n    const classNames = value.split($719788c75578d782$var$rspace);\n    const numElements = this.length;\n    for(let i = 0; i < numElements; i++){\n        const el = this[i];\n        // If selected element isn't a tag, move on\n        if (!(0, $298fc1d08428934f$export$3bf645f08efe3292)(el)) continue;\n        // If we don't already have classes — always set xmlMode to false here, as it doesn't matter for classes\n        const className = $719788c75578d782$var$getAttr(el, \"class\", false);\n        if (!className) $719788c75578d782$var$setAttr(el, \"class\", classNames.join(\" \").trim());\n        else {\n            let setClass = ` ${className} `;\n            // Check if class already exists\n            for(let j = 0; j < classNames.length; j++){\n                const appendClass = `${classNames[j]} `;\n                if (!setClass.includes(` ${appendClass}`)) setClass += appendClass;\n            }\n            $719788c75578d782$var$setAttr(el, \"class\", setClass.trim());\n        }\n    }\n    return this;\n}\nfunction $719788c75578d782$export$c2255604a80b4506(name) {\n    // Handle if value is a function\n    if (typeof name === \"function\") return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el, i)=>{\n        if ((0, $298fc1d08428934f$export$3bf645f08efe3292)(el)) $719788c75578d782$export$c2255604a80b4506.call([\n            el\n        ], name.call(el, i, el.attribs[\"class\"] || \"\"));\n    });\n    const classes = $719788c75578d782$var$splitNames(name);\n    const numClasses = classes.length;\n    const removeAll = arguments.length === 0;\n    return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el)=>{\n        if (!(0, $298fc1d08428934f$export$3bf645f08efe3292)(el)) return;\n        if (removeAll) // Short circuit the remove all case as this is the nice one\n        el.attribs[\"class\"] = \"\";\n        else {\n            const elClasses = $719788c75578d782$var$splitNames(el.attribs[\"class\"]);\n            let changed = false;\n            for(let j = 0; j < numClasses; j++){\n                const index = elClasses.indexOf(classes[j]);\n                if (index >= 0) {\n                    elClasses.splice(index, 1);\n                    changed = true;\n                    /*\n                     * We have to do another pass to ensure that there are not duplicate\n                     * classes listed\n                     */ j--;\n                }\n            }\n            if (changed) el.attribs[\"class\"] = elClasses.join(\" \");\n        }\n    });\n}\nfunction $719788c75578d782$export$4a80062ca50b57c7(value, stateVal) {\n    // Support functions\n    if (typeof value === \"function\") return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el, i)=>{\n        if ((0, $298fc1d08428934f$export$3bf645f08efe3292)(el)) $719788c75578d782$export$4a80062ca50b57c7.call([\n            el\n        ], value.call(el, i, el.attribs[\"class\"] || \"\", stateVal), stateVal);\n    });\n    // Return if no value or not a string or function\n    if (!value || typeof value !== \"string\") return this;\n    const classNames = value.split($719788c75578d782$var$rspace);\n    const numClasses = classNames.length;\n    const state = typeof stateVal === \"boolean\" ? stateVal ? 1 : -1 : 0;\n    const numElements = this.length;\n    for(let i = 0; i < numElements; i++){\n        const el = this[i];\n        // If selected element isn't a tag, move on\n        if (!(0, $298fc1d08428934f$export$3bf645f08efe3292)(el)) continue;\n        const elementClasses = $719788c75578d782$var$splitNames(el.attribs[\"class\"]);\n        // Check if class already exists\n        for(let j = 0; j < numClasses; j++){\n            // Check if the class name is currently defined\n            const index = elementClasses.indexOf(classNames[j]);\n            // Add if stateValue === true or we are toggling and there is no value\n            if (state >= 0 && index < 0) elementClasses.push(classNames[j]);\n            else if (state <= 0 && index >= 0) // Otherwise remove but only if the item exists\n            elementClasses.splice(index, 1);\n        }\n        el.attribs[\"class\"] = elementClasses.join(\" \");\n    }\n    return this;\n}\n\n\nvar $bb3edb5ec381eef7$exports = {};\n\n$parcel$export($bb3edb5ec381eef7$exports, \"find\", () => $bb3edb5ec381eef7$export$71aa6c912b956294);\n$parcel$export($bb3edb5ec381eef7$exports, \"filterArray\", () => $bb3edb5ec381eef7$export$8f2c8e61d147b502);\n$parcel$export($bb3edb5ec381eef7$exports, \"parent\", () => $bb3edb5ec381eef7$export$91124bb58bc04465);\n$parcel$export($bb3edb5ec381eef7$exports, \"parents\", () => $bb3edb5ec381eef7$export$7901f6cd558b9a93);\n$parcel$export($bb3edb5ec381eef7$exports, \"parentsUntil\", () => $bb3edb5ec381eef7$export$dcd0aa73ca0eb350);\n$parcel$export($bb3edb5ec381eef7$exports, \"closest\", () => $bb3edb5ec381eef7$export$ff7f7c97cdce86e);\n$parcel$export($bb3edb5ec381eef7$exports, \"next\", () => $bb3edb5ec381eef7$export$48cfd1e771a65c4f);\n$parcel$export($bb3edb5ec381eef7$exports, \"nextAll\", () => $bb3edb5ec381eef7$export$3cd99760d81ede63);\n$parcel$export($bb3edb5ec381eef7$exports, \"nextUntil\", () => $bb3edb5ec381eef7$export$c2850259fcee1ef);\n$parcel$export($bb3edb5ec381eef7$exports, \"prev\", () => $bb3edb5ec381eef7$export$232faf9add678146);\n$parcel$export($bb3edb5ec381eef7$exports, \"prevAll\", () => $bb3edb5ec381eef7$export$5a01ccd45552d0b4);\n$parcel$export($bb3edb5ec381eef7$exports, \"prevUntil\", () => $bb3edb5ec381eef7$export$637b2d5472ecd3ca);\n$parcel$export($bb3edb5ec381eef7$exports, \"siblings\", () => $bb3edb5ec381eef7$export$9866dd70b0dcd4c3);\n$parcel$export($bb3edb5ec381eef7$exports, \"children\", () => $bb3edb5ec381eef7$export$bacb5cc5a11aef16);\n$parcel$export($bb3edb5ec381eef7$exports, \"contents\", () => $bb3edb5ec381eef7$export$fd59df041b888442);\n$parcel$export($bb3edb5ec381eef7$exports, \"each\", () => $bb3edb5ec381eef7$export$79b2f7037acddd43);\n$parcel$export($bb3edb5ec381eef7$exports, \"map\", () => $bb3edb5ec381eef7$export$871de8747c9eaa88);\n$parcel$export($bb3edb5ec381eef7$exports, \"filter\", () => $bb3edb5ec381eef7$export$3dea766d36a8935f);\n$parcel$export($bb3edb5ec381eef7$exports, \"is\", () => $bb3edb5ec381eef7$export$226b3eccf92c9ed9);\n$parcel$export($bb3edb5ec381eef7$exports, \"not\", () => $bb3edb5ec381eef7$export$6003a5f097c73977);\n$parcel$export($bb3edb5ec381eef7$exports, \"has\", () => $bb3edb5ec381eef7$export$a4f4bb6b1453fff5);\n$parcel$export($bb3edb5ec381eef7$exports, \"first\", () => $bb3edb5ec381eef7$export$43128fadae87b74a);\n$parcel$export($bb3edb5ec381eef7$exports, \"last\", () => $bb3edb5ec381eef7$export$4c7897fafd92b108);\n$parcel$export($bb3edb5ec381eef7$exports, \"eq\", () => $bb3edb5ec381eef7$export$9663ddc1cf085b32);\n$parcel$export($bb3edb5ec381eef7$exports, \"get\", () => $bb3edb5ec381eef7$export$3988ae62b71be9a3);\n$parcel$export($bb3edb5ec381eef7$exports, \"toArray\", () => $bb3edb5ec381eef7$export$45b10814cc054894);\n$parcel$export($bb3edb5ec381eef7$exports, \"index\", () => $bb3edb5ec381eef7$export$b610b8812bbcded9);\n$parcel$export($bb3edb5ec381eef7$exports, \"slice\", () => $bb3edb5ec381eef7$export$58adb3bec8346d0f);\n$parcel$export($bb3edb5ec381eef7$exports, \"end\", () => $bb3edb5ec381eef7$export$bd5df0f255a350f8);\n$parcel$export($bb3edb5ec381eef7$exports, \"add\", () => $bb3edb5ec381eef7$export$e16d8520af44a096);\n$parcel$export($bb3edb5ec381eef7$exports, \"addBack\", () => $bb3edb5ec381eef7$export$61478bf9690647fe);\n/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */ \nvar $6de3987936ef985e$export$4e8b093ec8dcab0d;\n(function(SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})($6de3987936ef985e$export$4e8b093ec8dcab0d || ($6de3987936ef985e$export$4e8b093ec8dcab0d = {}));\nconst $6de3987936ef985e$export$b378b9ead145a8a4 = {\n    Unknown: null,\n    QuirksMode: \"quirks\",\n    IgnoreCase: true,\n    CaseSensitive: false\n};\nvar $6de3987936ef985e$export$dbc3de62b8fcdc89;\n(function(AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})($6de3987936ef985e$export$dbc3de62b8fcdc89 || ($6de3987936ef985e$export$dbc3de62b8fcdc89 = {}));\n\n\nconst $093d7ffb078d3faf$var$reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nconst $093d7ffb078d3faf$var$reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nconst $093d7ffb078d3faf$var$actionTypes = new Map([\n    [\n        126 /* Tilde */ ,\n        (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Element\n    ],\n    [\n        94 /* Circumflex */ ,\n        (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Start\n    ],\n    [\n        36 /* Dollar */ ,\n        (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).End\n    ],\n    [\n        42 /* Asterisk */ ,\n        (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Any\n    ],\n    [\n        33 /* ExclamationMark */ ,\n        (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Not\n    ],\n    [\n        124 /* Pipe */ ,\n        (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Hyphen\n    ]\n]);\n// Pseudos, whose data property is parsed as well.\nconst $093d7ffb078d3faf$var$unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\"\n]);\nfunction $093d7ffb078d3faf$export$41d1fe2780697dca(selector) {\n    switch(selector.type){\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Adjacent:\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Child:\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Descendant:\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Parent:\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Sibling:\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).ColumnCombinator:\n            return true;\n        default:\n            return false;\n    }\n}\nconst $093d7ffb078d3faf$var$stripQuotesFromPseudos = new Set([\n    \"contains\",\n    \"icontains\"\n]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction $093d7ffb078d3faf$var$funescape(_, escaped, escapedWhitespace) {\n    const high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xd800, high & 0x3ff | 0xdc00);\n}\nfunction $093d7ffb078d3faf$var$unescapeCSS(str) {\n    return str.replace($093d7ffb078d3faf$var$reEscape, $093d7ffb078d3faf$var$funescape);\n}\nfunction $093d7ffb078d3faf$var$isQuote(c) {\n    return c === 39 /* SingleQuote */  || c === 34 /* DoubleQuote */ ;\n}\nfunction $093d7ffb078d3faf$var$isWhitespace(c) {\n    return c === 32 /* Space */  || c === 9 /* Tab */  || c === 10 /* NewLine */  || c === 12 /* FormFeed */  || c === 13 /* CarriageReturn */ ;\n}\nfunction $093d7ffb078d3faf$export$98e6a39c04603d36(selector) {\n    const subselects = [];\n    const endIndex = $093d7ffb078d3faf$var$parseSelector(subselects, `${selector}`, 0);\n    if (endIndex < selector.length) throw new Error(`Unmatched selector: ${selector.slice(endIndex)}`);\n    return subselects;\n}\nfunction $093d7ffb078d3faf$var$parseSelector(subselects, selector, selectorIndex) {\n    let tokens = [];\n    function getName(offset) {\n        const match = selector.slice(selectorIndex + offset).match($093d7ffb078d3faf$var$reName);\n        if (!match) throw new Error(`Expected name, found ${selector.slice(selectorIndex)}`);\n        const [name] = match;\n        selectorIndex += offset + name.length;\n        return $093d7ffb078d3faf$var$unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while(selectorIndex < selector.length && $093d7ffb078d3faf$var$isWhitespace(selector.charCodeAt(selectorIndex)))selectorIndex++;\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        const start = selectorIndex;\n        let counter = 1;\n        for(; counter > 0 && selectorIndex < selector.length; selectorIndex++){\n            if (selector.charCodeAt(selectorIndex) === 40 /* LeftParenthesis */  && !isEscaped(selectorIndex)) counter++;\n            else if (selector.charCodeAt(selectorIndex) === 41 /* RightParenthesis */  && !isEscaped(selectorIndex)) counter--;\n        }\n        if (counter) throw new Error(\"Parenthesis not matched\");\n        return $093d7ffb078d3faf$var$unescapeCSS(selector.slice(start, selectorIndex - 1));\n    }\n    function isEscaped(pos) {\n        let slashCount = 0;\n        while(selector.charCodeAt(--pos) === 92 /* BackSlash */ )slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && $093d7ffb078d3faf$export$41d1fe2780697dca(tokens[tokens.length - 1])) throw new Error(\"Did not expect successive traversals.\");\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 && tokens[tokens.length - 1].type === (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({\n            type: type\n        });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Attribute,\n            name: name,\n            action: action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\"\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */ function finalizeSubselector() {\n        if (tokens.length && tokens[tokens.length - 1].type === (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Descendant) tokens.pop();\n        if (tokens.length === 0) throw new Error(\"Empty sub-selector\");\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) return selectorIndex;\n    loop: while(selectorIndex < selector.length){\n        const firstChar = selector.charCodeAt(selectorIndex);\n        switch(firstChar){\n            // Whitespace\n            case 32 /* Space */ :\n            case 9 /* Tab */ :\n            case 10 /* NewLine */ :\n            case 12 /* FormFeed */ :\n            case 13 /* CarriageReturn */ :\n                if (tokens.length === 0 || tokens[0].type !== (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({\n                        type: (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Descendant\n                    });\n                }\n                stripWhitespace(1);\n                break;\n            // Traversals\n            case 62 /* GreaterThan */ :\n                addTraversal((0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Child);\n                stripWhitespace(1);\n                break;\n            case 60 /* LessThan */ :\n                addTraversal((0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Parent);\n                stripWhitespace(1);\n                break;\n            case 126 /* Tilde */ :\n                addTraversal((0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Sibling);\n                stripWhitespace(1);\n                break;\n            case 43 /* Plus */ :\n                addTraversal((0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Adjacent);\n                stripWhitespace(1);\n                break;\n            // Special attribute selectors: .class, #id\n            case 46 /* Period */ :\n                addSpecialAttribute(\"class\", (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Element);\n                break;\n            case 35 /* Hash */ :\n                addSpecialAttribute(\"id\", (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Equals);\n                break;\n            case 91 /* LeftSquareBracket */ :\n                {\n                    stripWhitespace(1);\n                    // Determine attribute name and namespace\n                    let name;\n                    let namespace = null;\n                    if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ ) // Equivalent to no namespace\n                    name = getName(1);\n                    else if (selector.startsWith(\"*|\", selectorIndex)) {\n                        namespace = \"*\";\n                        name = getName(2);\n                    } else {\n                        name = getName(0);\n                        if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */  && selector.charCodeAt(selectorIndex + 1) !== 61 /* Equal */ ) {\n                            namespace = name;\n                            name = getName(1);\n                        }\n                    }\n                    stripWhitespace(0);\n                    // Determine comparison operation\n                    let action = (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Exists;\n                    const possibleAction = $093d7ffb078d3faf$var$actionTypes.get(selector.charCodeAt(selectorIndex));\n                    if (possibleAction) {\n                        action = possibleAction;\n                        if (selector.charCodeAt(selectorIndex + 1) !== 61 /* Equal */ ) throw new Error(\"Expected `=`\");\n                        stripWhitespace(2);\n                    } else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */ ) {\n                        action = (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Equals;\n                        stripWhitespace(1);\n                    }\n                    // Determine value\n                    let value = \"\";\n                    let ignoreCase = null;\n                    if (action !== \"exists\") {\n                        if ($093d7ffb078d3faf$var$isQuote(selector.charCodeAt(selectorIndex))) {\n                            const quote = selector.charCodeAt(selectorIndex);\n                            let sectionEnd = selectorIndex + 1;\n                            while(sectionEnd < selector.length && (selector.charCodeAt(sectionEnd) !== quote || isEscaped(sectionEnd)))sectionEnd += 1;\n                            if (selector.charCodeAt(sectionEnd) !== quote) throw new Error(\"Attribute value didn't end\");\n                            value = $093d7ffb078d3faf$var$unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n                            selectorIndex = sectionEnd + 1;\n                        } else {\n                            const valueStart = selectorIndex;\n                            while(selectorIndex < selector.length && (!$093d7ffb078d3faf$var$isWhitespace(selector.charCodeAt(selectorIndex)) && selector.charCodeAt(selectorIndex) !== 93 /* RightSquareBracket */  || isEscaped(selectorIndex)))selectorIndex += 1;\n                            value = $093d7ffb078d3faf$var$unescapeCSS(selector.slice(valueStart, selectorIndex));\n                        }\n                        stripWhitespace(0);\n                        // See if we have a force ignore flag\n                        const forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n                        // If the forceIgnore flag is set (either `i` or `s`), use that value\n                        if (forceIgnore === 115 /* LowerS */ ) {\n                            ignoreCase = false;\n                            stripWhitespace(1);\n                        } else if (forceIgnore === 105 /* LowerI */ ) {\n                            ignoreCase = true;\n                            stripWhitespace(1);\n                        }\n                    }\n                    if (selector.charCodeAt(selectorIndex) !== 93 /* RightSquareBracket */ ) throw new Error(\"Attribute selector didn't terminate\");\n                    selectorIndex += 1;\n                    const attributeSelector = {\n                        type: (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Attribute,\n                        name: name,\n                        action: action,\n                        value: value,\n                        namespace: namespace,\n                        ignoreCase: ignoreCase\n                    };\n                    tokens.push(attributeSelector);\n                    break;\n                }\n            case 58 /* Colon */ :\n                {\n                    if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */ ) {\n                        tokens.push({\n                            type: (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).PseudoElement,\n                            name: getName(2).toLowerCase(),\n                            data: selector.charCodeAt(selectorIndex) === 40 /* LeftParenthesis */  ? readValueWithParenthesis() : null\n                        });\n                        continue;\n                    }\n                    const name = getName(1).toLowerCase();\n                    let data = null;\n                    if (selector.charCodeAt(selectorIndex) === 40 /* LeftParenthesis */ ) {\n                        if ($093d7ffb078d3faf$var$unpackPseudos.has(name)) {\n                            if ($093d7ffb078d3faf$var$isQuote(selector.charCodeAt(selectorIndex + 1))) throw new Error(`Pseudo-selector ${name} cannot be quoted`);\n                            data = [];\n                            selectorIndex = $093d7ffb078d3faf$var$parseSelector(data, selector, selectorIndex + 1);\n                            if (selector.charCodeAt(selectorIndex) !== 41 /* RightParenthesis */ ) throw new Error(`Missing closing parenthesis in :${name} (${selector})`);\n                            selectorIndex += 1;\n                        } else {\n                            data = readValueWithParenthesis();\n                            if ($093d7ffb078d3faf$var$stripQuotesFromPseudos.has(name)) {\n                                const quot = data.charCodeAt(0);\n                                if (quot === data.charCodeAt(data.length - 1) && $093d7ffb078d3faf$var$isQuote(quot)) data = data.slice(1, -1);\n                            }\n                            data = $093d7ffb078d3faf$var$unescapeCSS(data);\n                        }\n                    }\n                    tokens.push({\n                        type: (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Pseudo,\n                        name: name,\n                        data: data\n                    });\n                    break;\n                }\n            case 44 /* Comma */ :\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            default:\n                {\n                    if (selector.startsWith(\"/*\", selectorIndex)) {\n                        const endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                        if (endIndex < 0) throw new Error(\"Comment was not terminated\");\n                        selectorIndex = endIndex + 2;\n                        // Remove leading whitespace\n                        if (tokens.length === 0) stripWhitespace(0);\n                        break;\n                    }\n                    let namespace = null;\n                    let name;\n                    if (firstChar === 42 /* Asterisk */ ) {\n                        selectorIndex += 1;\n                        name = \"*\";\n                    } else if (firstChar === 124 /* Pipe */ ) {\n                        name = \"\";\n                        if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */ ) {\n                            addTraversal((0, $6de3987936ef985e$export$4e8b093ec8dcab0d).ColumnCombinator);\n                            stripWhitespace(2);\n                            break;\n                        }\n                    } else if ($093d7ffb078d3faf$var$reName.test(selector.slice(selectorIndex))) name = getName(0);\n                    else break loop;\n                    if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */  && selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */ ) {\n                        namespace = name;\n                        if (selector.charCodeAt(selectorIndex + 1) === 42 /* Asterisk */ ) {\n                            name = \"*\";\n                            selectorIndex += 2;\n                        } else name = getName(1);\n                    }\n                    tokens.push(name === \"*\" ? {\n                        type: (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Universal,\n                        namespace: namespace\n                    } : {\n                        type: (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Tag,\n                        name: name,\n                        namespace: namespace\n                    });\n                }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n\n\n\nvar $ad25a3bd7aa066fd$exports = {};\n$ad25a3bd7aa066fd$exports = {\n    trueFunc: function trueFunc() {\n        return true;\n    },\n    falseFunc: function falseFunc() {\n        return false;\n    }\n};\n\n\n\n\n\nconst $7cd471faad23c8d0$var$procedure = new Map([\n    [\n        (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Universal,\n        50\n    ],\n    [\n        (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Tag,\n        30\n    ],\n    [\n        (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Attribute,\n        1\n    ],\n    [\n        (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Pseudo,\n        0\n    ]\n]);\nfunction $7cd471faad23c8d0$export$41d1fe2780697dca(token) {\n    return !$7cd471faad23c8d0$var$procedure.has(token.type);\n}\nconst $7cd471faad23c8d0$var$attributes = new Map([\n    [\n        (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Exists,\n        10\n    ],\n    [\n        (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Equals,\n        8\n    ],\n    [\n        (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Not,\n        7\n    ],\n    [\n        (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Start,\n        6\n    ],\n    [\n        (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).End,\n        6\n    ],\n    [\n        (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Any,\n        5\n    ]\n]);\nfunction $7cd471faad23c8d0$export$2e2bcd8739ae039(arr) {\n    const procs = arr.map($7cd471faad23c8d0$var$getProcedure);\n    for(let i = 1; i < arr.length; i++){\n        const procNew = procs[i];\n        if (procNew < 0) continue;\n        for(let j = i - 1; j >= 0 && procNew < procs[j]; j--){\n            const token = arr[j + 1];\n            arr[j + 1] = arr[j];\n            arr[j] = token;\n            procs[j + 1] = procs[j];\n            procs[j] = procNew;\n        }\n    }\n}\nfunction $7cd471faad23c8d0$var$getProcedure(token) {\n    var _a, _b;\n    let proc = (_a = $7cd471faad23c8d0$var$procedure.get(token.type)) !== null && _a !== void 0 ? _a : -1;\n    if (token.type === (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Attribute) {\n        proc = (_b = $7cd471faad23c8d0$var$attributes.get(token.action)) !== null && _b !== void 0 ? _b : 4;\n        if (token.action === (0, $6de3987936ef985e$export$dbc3de62b8fcdc89).Equals && token.name === \"id\") // Prefer ID selectors (eg. #ID)\n        proc = 9;\n        if (token.ignoreCase) /*\n             * IgnoreCase adds some overhead, prefer \"normal\" token\n             * this is a binary operation, to ensure it's still an int\n             */ proc >>= 1;\n    } else if (token.type === (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Pseudo) {\n        if (!token.data) proc = 3;\n        else if (token.name === \"has\" || token.name === \"contains\") proc = 0; // Expensive in any case\n        else if (Array.isArray(token.data)) {\n            // Eg. :matches, :not\n            proc = Math.min(...token.data.map((d)=>Math.min(...d.map($7cd471faad23c8d0$var$getProcedure))));\n            // If we have traversals, try to avoid executing this selector\n            if (proc < 0) proc = 0;\n        } else proc = 2;\n    }\n    return proc;\n}\n\n\n\n/**\n * All reserved characters in a regex, used for escaping.\n *\n * Taken from XRegExp, (c) 2007-2020 Steven Levithan under the MIT license\n * https://github.com/slevithan/xregexp/blob/95eeebeb8fac8754d54eafe2b4743661ac1cf028/src/xregexp.js#L794\n */ const $23f961d93aca4e45$var$reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nfunction $23f961d93aca4e45$var$escapeRegex(value) {\n    return value.replace($23f961d93aca4e45$var$reChars, \"\\\\$&\");\n}\n/**\n * Attributes that are case-insensitive in HTML.\n *\n * @private\n * @see https://html.spec.whatwg.org/multipage/semantics-other.html#case-sensitivity-of-selectors\n */ const $23f961d93aca4e45$var$caseInsensitiveAttributes = new Set([\n    \"accept\",\n    \"accept-charset\",\n    \"align\",\n    \"alink\",\n    \"axis\",\n    \"bgcolor\",\n    \"charset\",\n    \"checked\",\n    \"clear\",\n    \"codetype\",\n    \"color\",\n    \"compact\",\n    \"declare\",\n    \"defer\",\n    \"dir\",\n    \"direction\",\n    \"disabled\",\n    \"enctype\",\n    \"face\",\n    \"frame\",\n    \"hreflang\",\n    \"http-equiv\",\n    \"lang\",\n    \"language\",\n    \"link\",\n    \"media\",\n    \"method\",\n    \"multiple\",\n    \"nohref\",\n    \"noresize\",\n    \"noshade\",\n    \"nowrap\",\n    \"readonly\",\n    \"rel\",\n    \"rev\",\n    \"rules\",\n    \"scope\",\n    \"scrolling\",\n    \"selected\",\n    \"shape\",\n    \"target\",\n    \"text\",\n    \"type\",\n    \"valign\",\n    \"valuetype\",\n    \"vlink\"\n]);\nfunction $23f961d93aca4e45$var$shouldIgnoreCase(selector, options) {\n    return typeof selector.ignoreCase === \"boolean\" ? selector.ignoreCase : selector.ignoreCase === \"quirks\" ? !!options.quirksMode : !options.xmlMode && $23f961d93aca4e45$var$caseInsensitiveAttributes.has(selector.name);\n}\nconst $23f961d93aca4e45$export$ebf1ecb9197f27e = {\n    equals (next, data, options) {\n        const { adapter: adapter } = options;\n        const { name: name } = data;\n        let { value: value } = data;\n        if ($23f961d93aca4e45$var$shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem)=>{\n                const attr = adapter.getAttributeValue(elem, name);\n                return attr != null && attr.length === value.length && attr.toLowerCase() === value && next(elem);\n            };\n        }\n        return (elem)=>adapter.getAttributeValue(elem, name) === value && next(elem);\n    },\n    hyphen (next, data, options) {\n        const { adapter: adapter } = options;\n        const { name: name } = data;\n        let { value: value } = data;\n        const len = value.length;\n        if ($23f961d93aca4e45$var$shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return function hyphenIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return attr != null && (attr.length === len || attr.charAt(len) === \"-\") && attr.substr(0, len).toLowerCase() === value && next(elem);\n            };\n        }\n        return function hyphen(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return attr != null && (attr.length === len || attr.charAt(len) === \"-\") && attr.substr(0, len) === value && next(elem);\n        };\n    },\n    element (next, data, options) {\n        const { adapter: adapter } = options;\n        const { name: name, value: value } = data;\n        if (/\\s/.test(value)) return (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc;\n        const regex = new RegExp(`(?:^|\\\\s)${$23f961d93aca4e45$var$escapeRegex(value)}(?:$|\\\\s)`, $23f961d93aca4e45$var$shouldIgnoreCase(data, options) ? \"i\" : \"\");\n        return function element(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return attr != null && attr.length >= value.length && regex.test(attr) && next(elem);\n        };\n    },\n    exists (next, { name: name }, { adapter: adapter }) {\n        return (elem)=>adapter.hasAttrib(elem, name) && next(elem);\n    },\n    start (next, data, options) {\n        const { adapter: adapter } = options;\n        const { name: name } = data;\n        let { value: value } = data;\n        const len = value.length;\n        if (len === 0) return (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc;\n        if ($23f961d93aca4e45$var$shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem)=>{\n                const attr = adapter.getAttributeValue(elem, name);\n                return attr != null && attr.length >= len && attr.substr(0, len).toLowerCase() === value && next(elem);\n            };\n        }\n        return (elem)=>{\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.startsWith(value)) && next(elem);\n        };\n    },\n    end (next, data, options) {\n        const { adapter: adapter } = options;\n        const { name: name } = data;\n        let { value: value } = data;\n        const len = -value.length;\n        if (len === 0) return (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc;\n        if ($23f961d93aca4e45$var$shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem)=>{\n                var _a;\n                return ((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.substr(len).toLowerCase()) === value && next(elem);\n            };\n        }\n        return (elem)=>{\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.endsWith(value)) && next(elem);\n        };\n    },\n    any (next, data, options) {\n        const { adapter: adapter } = options;\n        const { name: name, value: value } = data;\n        if (value === \"\") return (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc;\n        if ($23f961d93aca4e45$var$shouldIgnoreCase(data, options)) {\n            const regex = new RegExp($23f961d93aca4e45$var$escapeRegex(value), \"i\");\n            return function anyIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return attr != null && attr.length >= value.length && regex.test(attr) && next(elem);\n            };\n        }\n        return (elem)=>{\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.includes(value)) && next(elem);\n        };\n    },\n    not (next, data, options) {\n        const { adapter: adapter } = options;\n        const { name: name } = data;\n        let { value: value } = data;\n        if (value === \"\") return (elem)=>!!adapter.getAttributeValue(elem, name) && next(elem);\n        else if ($23f961d93aca4e45$var$shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem)=>{\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr == null || attr.length !== value.length || attr.toLowerCase() !== value) && next(elem);\n            };\n        }\n        return (elem)=>adapter.getAttributeValue(elem, name) !== value && next(elem);\n    }\n};\n\n\n\n// Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\n// Whitespace as per https://www.w3.org/TR/selectors-3/#lex is \" \\t\\r\\n\\f\"\nconst $7d8d6c745cb85c4e$var$whitespace = new Set([\n    9,\n    10,\n    12,\n    13,\n    32\n]);\nconst $7d8d6c745cb85c4e$var$ZERO = \"0\".charCodeAt(0);\nconst $7d8d6c745cb85c4e$var$NINE = \"9\".charCodeAt(0);\nfunction $7d8d6c745cb85c4e$export$98e6a39c04603d36(formula) {\n    formula = formula.trim().toLowerCase();\n    if (formula === \"even\") return [\n        2,\n        0\n    ];\n    else if (formula === \"odd\") return [\n        2,\n        1\n    ];\n    // Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?\n    let idx = 0;\n    let a = 0;\n    let sign = readSign();\n    let number = readNumber();\n    if (idx < formula.length && formula.charAt(idx) === \"n\") {\n        idx++;\n        a = sign * (number !== null && number !== void 0 ? number : 1);\n        skipWhitespace();\n        if (idx < formula.length) {\n            sign = readSign();\n            skipWhitespace();\n            number = readNumber();\n        } else sign = number = 0;\n    }\n    // Throw if there is anything else\n    if (number === null || idx < formula.length) throw new Error(`n-th rule couldn't be parsed ('${formula}')`);\n    return [\n        a,\n        sign * number\n    ];\n    function readSign() {\n        if (formula.charAt(idx) === \"-\") {\n            idx++;\n            return -1;\n        }\n        if (formula.charAt(idx) === \"+\") idx++;\n        return 1;\n    }\n    function readNumber() {\n        const start = idx;\n        let value = 0;\n        while(idx < formula.length && formula.charCodeAt(idx) >= $7d8d6c745cb85c4e$var$ZERO && formula.charCodeAt(idx) <= $7d8d6c745cb85c4e$var$NINE){\n            value = value * 10 + (formula.charCodeAt(idx) - $7d8d6c745cb85c4e$var$ZERO);\n            idx++;\n        }\n        // Return `null` if we didn't read anything.\n        return idx === start ? null : value;\n    }\n    function skipWhitespace() {\n        while(idx < formula.length && $7d8d6c745cb85c4e$var$whitespace.has(formula.charCodeAt(idx)))idx++;\n    }\n}\n\n\n\nfunction $24b98207e0a42e86$export$ef7acd7185315e22(parsed) {\n    const a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    const b = parsed[1] - 1;\n    /*\n     * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.\n     * Besides, the specification states that no elements are\n     * matched when `a` and `b` are 0.\n     *\n     * `b < 0` here as we subtracted 1 from `b` above.\n     */ if (b < 0 && a <= 0) return (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc;\n    // When `a` is in the range -1..1, it matches any element (so only `b` is checked).\n    if (a === -1) return (index)=>index <= b;\n    if (a === 0) return (index)=>index === b;\n    // When `b <= 0` and `a === 1`, they match any element.\n    if (a === 1) return b < 0 ? (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).trueFunc : (index)=>index >= b;\n    /*\n     * Otherwise, modulo can be used to check if there is a match.\n     *\n     * Modulo doesn't care about the sign, so let's use `a`s absolute value.\n     */ const absA = Math.abs(a);\n    // Get `b mod a`, + a if this is negative.\n    const bMod = (b % absA + absA) % absA;\n    return a > 1 ? (index)=>index >= b && index % absA === bMod : (index)=>index <= b && index % absA === bMod;\n}\nfunction $24b98207e0a42e86$export$80d376111cc09ad7(parsed) {\n    const a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    let b = parsed[1] - 1;\n    let n = 0;\n    // Make sure to always return an increasing sequence\n    if (a < 0) {\n        const aPos = -a;\n        // Get `b mod a`\n        const minValue = (b % aPos + aPos) % aPos;\n        return ()=>{\n            const val = minValue + aPos * n++;\n            return val > b ? null : val;\n        };\n    }\n    if (a === 0) return b < 0 ? ()=>null : ()=>n++ === 0 ? b : null;\n    if (b < 0) b += a * Math.ceil(-b / a);\n    return ()=>a * n++ + b;\n}\n\n\nfunction $35afcb4041d84e02$export$2e2bcd8739ae039(formula) {\n    return (0, $24b98207e0a42e86$export$ef7acd7185315e22)((0, $7d8d6c745cb85c4e$export$98e6a39c04603d36)(formula));\n}\nfunction $35afcb4041d84e02$export$49bb65c2ea163039(formula) {\n    return (0, $24b98207e0a42e86$export$80d376111cc09ad7)((0, $7d8d6c745cb85c4e$export$98e6a39c04603d36)(formula));\n}\n\n\n\nfunction $73f0aac9eef44ea3$var$getChildFunc(next, adapter) {\n    return (elem)=>{\n        const parent = adapter.getParent(elem);\n        return parent != null && adapter.isTag(parent) && next(elem);\n    };\n}\nconst $73f0aac9eef44ea3$export$82462a21aead86ed = {\n    contains (next, text, { adapter: adapter }) {\n        return function contains(elem) {\n            return next(elem) && adapter.getText(elem).includes(text);\n        };\n    },\n    icontains (next, text, { adapter: adapter }) {\n        const itext = text.toLowerCase();\n        return function icontains(elem) {\n            return next(elem) && adapter.getText(elem).toLowerCase().includes(itext);\n        };\n    },\n    // Location specific methods\n    \"nth-child\" (next, rule, { adapter: adapter, equals: equals }) {\n        const func = (0, $35afcb4041d84e02$export$2e2bcd8739ae039)(rule);\n        if (func === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc) return (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc;\n        if (func === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).trueFunc) return $73f0aac9eef44ea3$var$getChildFunc(next, adapter);\n        return function nthChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for(let i = 0; i < siblings.length; i++){\n                if (equals(elem, siblings[i])) break;\n                if (adapter.isTag(siblings[i])) pos++;\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-child\" (next, rule, { adapter: adapter, equals: equals }) {\n        const func = (0, $35afcb4041d84e02$export$2e2bcd8739ae039)(rule);\n        if (func === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc) return (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc;\n        if (func === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).trueFunc) return $73f0aac9eef44ea3$var$getChildFunc(next, adapter);\n        return function nthLastChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for(let i = siblings.length - 1; i >= 0; i--){\n                if (equals(elem, siblings[i])) break;\n                if (adapter.isTag(siblings[i])) pos++;\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-of-type\" (next, rule, { adapter: adapter, equals: equals }) {\n        const func = (0, $35afcb4041d84e02$export$2e2bcd8739ae039)(rule);\n        if (func === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc) return (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc;\n        if (func === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).trueFunc) return $73f0aac9eef44ea3$var$getChildFunc(next, adapter);\n        return function nthOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for(let i = 0; i < siblings.length; i++){\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling)) break;\n                if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === adapter.getName(elem)) pos++;\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-of-type\" (next, rule, { adapter: adapter, equals: equals }) {\n        const func = (0, $35afcb4041d84e02$export$2e2bcd8739ae039)(rule);\n        if (func === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc) return (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc;\n        if (func === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).trueFunc) return $73f0aac9eef44ea3$var$getChildFunc(next, adapter);\n        return function nthLastOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for(let i = siblings.length - 1; i >= 0; i--){\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling)) break;\n                if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === adapter.getName(elem)) pos++;\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    // TODO determine the actual root element\n    root (next, _rule, { adapter: adapter }) {\n        return (elem)=>{\n            const parent = adapter.getParent(elem);\n            return (parent == null || !adapter.isTag(parent)) && next(elem);\n        };\n    },\n    scope (next, rule, options, context) {\n        const { equals: equals } = options;\n        if (!context || context.length === 0) // Equivalent to :root\n        return $73f0aac9eef44ea3$export$82462a21aead86ed[\"root\"](next, rule, options);\n        if (context.length === 1) // NOTE: can't be unpacked, as :has uses this for side-effects\n        return (elem)=>equals(context[0], elem) && next(elem);\n        return (elem)=>context.includes(elem) && next(elem);\n    },\n    hover: $73f0aac9eef44ea3$var$dynamicStatePseudo(\"isHovered\"),\n    visited: $73f0aac9eef44ea3$var$dynamicStatePseudo(\"isVisited\"),\n    active: $73f0aac9eef44ea3$var$dynamicStatePseudo(\"isActive\")\n};\n/**\n * Dynamic state pseudos. These depend on optional Adapter methods.\n *\n * @param name The name of the adapter method to call.\n * @returns Pseudo for the `filters` object.\n */ function $73f0aac9eef44ea3$var$dynamicStatePseudo(name) {\n    return function dynamicPseudo(next, _rule, { adapter: adapter }) {\n        const func = adapter[name];\n        if (typeof func !== \"function\") return (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc;\n        return function active(elem) {\n            return func(elem) && next(elem);\n        };\n    };\n}\n\n\n// While filters are precompiled, pseudos get called when they are needed\nconst $7db6ef9e5e533fe0$export$8dc723548151ed12 = {\n    empty (elem, { adapter: adapter }) {\n        return !adapter.getChildren(elem).some((elem)=>// FIXME: `getText` call is potentially expensive.\n            adapter.isTag(elem) || adapter.getText(elem) !== \"\");\n    },\n    \"first-child\" (elem, { adapter: adapter, equals: equals }) {\n        if (adapter.prevElementSibling) return adapter.prevElementSibling(elem) == null;\n        const firstChild = adapter.getSiblings(elem).find((elem)=>adapter.isTag(elem));\n        return firstChild != null && equals(elem, firstChild);\n    },\n    \"last-child\" (elem, { adapter: adapter, equals: equals }) {\n        const siblings = adapter.getSiblings(elem);\n        for(let i = siblings.length - 1; i >= 0; i--){\n            if (equals(elem, siblings[i])) return true;\n            if (adapter.isTag(siblings[i])) break;\n        }\n        return false;\n    },\n    \"first-of-type\" (elem, { adapter: adapter, equals: equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for(let i = 0; i < siblings.length; i++){\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling)) return true;\n            if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) break;\n        }\n        return false;\n    },\n    \"last-of-type\" (elem, { adapter: adapter, equals: equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for(let i = siblings.length - 1; i >= 0; i--){\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling)) return true;\n            if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) break;\n        }\n        return false;\n    },\n    \"only-of-type\" (elem, { adapter: adapter, equals: equals }) {\n        const elemName = adapter.getName(elem);\n        return adapter.getSiblings(elem).every((sibling)=>equals(elem, sibling) || !adapter.isTag(sibling) || adapter.getName(sibling) !== elemName);\n    },\n    \"only-child\" (elem, { adapter: adapter, equals: equals }) {\n        return adapter.getSiblings(elem).every((sibling)=>equals(elem, sibling) || !adapter.isTag(sibling));\n    }\n};\nfunction $7db6ef9e5e533fe0$export$d62f7d28fa725e36(func, name, subselect, argIndex) {\n    if (subselect === null) {\n        if (func.length > argIndex) throw new Error(`Pseudo-class :${name} requires an argument`);\n    } else if (func.length === argIndex) throw new Error(`Pseudo-class :${name} doesn't have any arguments`);\n}\n\n\n/**\n * Aliases are pseudos that are expressed as selectors.\n */ const $5b03c4a18b37e361$export$9af93bb9e9126a2 = {\n    // Links\n    \"any-link\": \":is(a, area, link)[href]\",\n    link: \":any-link:not(:visited)\",\n    // Forms\n    // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n    disabled: `:is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )`,\n    enabled: \":not(:disabled)\",\n    checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",\n    required: \":is(input, select, textarea)[required]\",\n    optional: \":is(input, select, textarea):not([required])\",\n    // JQuery extensions\n    // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n    selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n    checkbox: \"[type=checkbox]\",\n    file: \"[type=file]\",\n    password: \"[type=password]\",\n    radio: \"[type=radio]\",\n    reset: \"[type=reset]\",\n    image: \"[type=image]\",\n    submit: \"[type=submit]\",\n    parent: \":not(:empty)\",\n    header: \":is(h1, h2, h3, h4, h5, h6)\",\n    button: \":is(button, input[type=button])\",\n    input: \":is(input, textarea, select, button)\",\n    text: \"input:is(:not([type!='']), [type=text])\"\n};\n\n\n\n\nconst $0b42720a09cf7c92$export$f2f25fe26aaee026 = {};\nfunction $0b42720a09cf7c92$export$a48279061b25ff7(next, adapter) {\n    if (next === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc) return (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc;\n    return (elem)=>adapter.isTag(elem) && next(elem);\n}\nfunction $0b42720a09cf7c92$export$8666503a05bdce46(elem, adapter) {\n    const siblings = adapter.getSiblings(elem);\n    if (siblings.length <= 1) return [];\n    const elemIndex = siblings.indexOf(elem);\n    if (elemIndex < 0 || elemIndex === siblings.length - 1) return [];\n    return siblings.slice(elemIndex + 1).filter(adapter.isTag);\n}\nfunction $0b42720a09cf7c92$var$copyOptions(options) {\n    // Not copied: context, rootFunc\n    return {\n        xmlMode: !!options.xmlMode,\n        lowerCaseAttributeNames: !!options.lowerCaseAttributeNames,\n        lowerCaseTags: !!options.lowerCaseTags,\n        quirksMode: !!options.quirksMode,\n        cacheResults: !!options.cacheResults,\n        pseudos: options.pseudos,\n        adapter: options.adapter,\n        equals: options.equals\n    };\n}\nconst $0b42720a09cf7c92$var$is = (next, token, options, context, compileToken)=>{\n    const func = compileToken(token, $0b42720a09cf7c92$var$copyOptions(options), context);\n    return func === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).trueFunc ? next : func === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc ? (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc : (elem)=>func(elem) && next(elem);\n};\nconst $0b42720a09cf7c92$export$f3666d140abaf082 = {\n    is: $0b42720a09cf7c92$var$is,\n    /**\n     * `:matches` and `:where` are aliases for `:is`.\n     */ matches: $0b42720a09cf7c92$var$is,\n    where: $0b42720a09cf7c92$var$is,\n    not (next, token, options, context, compileToken) {\n        const func = compileToken(token, $0b42720a09cf7c92$var$copyOptions(options), context);\n        return func === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc ? next : func === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).trueFunc ? (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc : (elem)=>!func(elem) && next(elem);\n    },\n    has (next, subselect, options, _context, compileToken) {\n        const { adapter: adapter } = options;\n        const opts = $0b42720a09cf7c92$var$copyOptions(options);\n        opts.relativeSelector = true;\n        const context = subselect.some((s)=>s.some((0, $7cd471faad23c8d0$export$41d1fe2780697dca))) ? [\n            $0b42720a09cf7c92$export$f2f25fe26aaee026\n        ] : undefined;\n        const compiled = compileToken(subselect, opts, context);\n        if (compiled === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc) return (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc;\n        const hasElement = $0b42720a09cf7c92$export$a48279061b25ff7(compiled, adapter);\n        // If `compiled` is `trueFunc`, we can skip this.\n        if (context && compiled !== (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).trueFunc) {\n            /*\n             * `shouldTestNextSiblings` will only be true if the query starts with\n             * a traversal (sibling or adjacent). That means we will always have a context.\n             */ const { shouldTestNextSiblings: shouldTestNextSiblings = false } = compiled;\n            return (elem)=>{\n                if (!next(elem)) return false;\n                context[0] = elem;\n                const childs = adapter.getChildren(elem);\n                const nextElements = shouldTestNextSiblings ? [\n                    ...childs,\n                    ...$0b42720a09cf7c92$export$8666503a05bdce46(elem, adapter)\n                ] : childs;\n                return adapter.existsOne(hasElement, nextElements);\n            };\n        }\n        return (elem)=>next(elem) && adapter.existsOne(hasElement, adapter.getChildren(elem));\n    }\n};\n\n\nfunction $7d906ac18899cb97$export$1a67b9bcd42231f5(next, selector, options, context, compileToken) {\n    var _a;\n    const { name: name, data: data } = selector;\n    if (Array.isArray(data)) {\n        if (!(name in (0, $0b42720a09cf7c92$export$f3666d140abaf082))) throw new Error(`Unknown pseudo-class :${name}(${data})`);\n        return (0, $0b42720a09cf7c92$export$f3666d140abaf082)[name](next, data, options, context, compileToken);\n    }\n    const userPseudo = (_a = options.pseudos) === null || _a === void 0 ? void 0 : _a[name];\n    const stringPseudo = typeof userPseudo === \"string\" ? userPseudo : (0, $5b03c4a18b37e361$export$9af93bb9e9126a2)[name];\n    if (typeof stringPseudo === \"string\") {\n        if (data != null) throw new Error(`Pseudo ${name} doesn't have any arguments`);\n        // The alias has to be parsed here, to make sure options are respected.\n        const alias = (0, $093d7ffb078d3faf$export$98e6a39c04603d36)(stringPseudo);\n        return (0, $0b42720a09cf7c92$export$f3666d140abaf082)[\"is\"](next, alias, options, context, compileToken);\n    }\n    if (typeof userPseudo === \"function\") {\n        (0, $7db6ef9e5e533fe0$export$d62f7d28fa725e36)(userPseudo, name, data, 1);\n        return (elem)=>userPseudo(elem, data) && next(elem);\n    }\n    if (name in (0, $73f0aac9eef44ea3$export$82462a21aead86ed)) return (0, $73f0aac9eef44ea3$export$82462a21aead86ed)[name](next, data, options, context);\n    if (name in (0, $7db6ef9e5e533fe0$export$8dc723548151ed12)) {\n        const pseudo = (0, $7db6ef9e5e533fe0$export$8dc723548151ed12)[name];\n        (0, $7db6ef9e5e533fe0$export$d62f7d28fa725e36)(pseudo, name, data, 2);\n        return (elem)=>pseudo(elem, options, data) && next(elem);\n    }\n    throw new Error(`Unknown pseudo-class :${name}`);\n}\n\n\n\nfunction $153123c67a28bf54$var$getElementParent(node, adapter) {\n    const parent = adapter.getParent(node);\n    if (parent && adapter.isTag(parent)) return parent;\n    return null;\n}\nfunction $153123c67a28bf54$export$afd2165e507ce8c5(next, selector, options, context, compileToken) {\n    const { adapter: adapter, equals: equals } = options;\n    switch(selector.type){\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).PseudoElement:\n            throw new Error(\"Pseudo-elements are not supported by css-select\");\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).ColumnCombinator:\n            throw new Error(\"Column combinators are not yet supported by css-select\");\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Attribute:\n            if (selector.namespace != null) throw new Error(\"Namespaced attributes are not yet supported by css-select\");\n            if (!options.xmlMode || options.lowerCaseAttributeNames) selector.name = selector.name.toLowerCase();\n            return (0, $23f961d93aca4e45$export$ebf1ecb9197f27e)[selector.action](next, selector, options);\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Pseudo:\n            return (0, $7d906ac18899cb97$export$1a67b9bcd42231f5)(next, selector, options, context, compileToken);\n        // Tags\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Tag:\n            {\n                if (selector.namespace != null) throw new Error(\"Namespaced tag names are not yet supported by css-select\");\n                let { name: name } = selector;\n                if (!options.xmlMode || options.lowerCaseTags) name = name.toLowerCase();\n                return function tag(elem) {\n                    return adapter.getName(elem) === name && next(elem);\n                };\n            }\n        // Traversal\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Descendant:\n            {\n                if (options.cacheResults === false || typeof WeakSet === \"undefined\") return function descendant(elem) {\n                    let current = elem;\n                    while(current = $153123c67a28bf54$var$getElementParent(current, adapter)){\n                        if (next(current)) return true;\n                    }\n                    return false;\n                };\n                // @ts-expect-error `ElementNode` is not extending object\n                const isFalseCache = new WeakSet();\n                return function cachedDescendant(elem) {\n                    let current = elem;\n                    while(current = $153123c67a28bf54$var$getElementParent(current, adapter))if (!isFalseCache.has(current)) {\n                        if (adapter.isTag(current) && next(current)) return true;\n                        isFalseCache.add(current);\n                    }\n                    return false;\n                };\n            }\n        case \"_flexibleDescendant\":\n            // Include element itself, only used while querying an array\n            return function flexibleDescendant(elem) {\n                let current = elem;\n                do {\n                    if (next(current)) return true;\n                }while (current = $153123c67a28bf54$var$getElementParent(current, adapter));\n                return false;\n            };\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Parent:\n            return function parent(elem) {\n                return adapter.getChildren(elem).some((elem)=>adapter.isTag(elem) && next(elem));\n            };\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Child:\n            return function child(elem) {\n                const parent = adapter.getParent(elem);\n                return parent != null && adapter.isTag(parent) && next(parent);\n            };\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Sibling:\n            return function sibling(elem) {\n                const siblings = adapter.getSiblings(elem);\n                for(let i = 0; i < siblings.length; i++){\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling)) break;\n                    if (adapter.isTag(currentSibling) && next(currentSibling)) return true;\n                }\n                return false;\n            };\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Adjacent:\n            if (adapter.prevElementSibling) return function adjacent(elem) {\n                const previous = adapter.prevElementSibling(elem);\n                return previous != null && next(previous);\n            };\n            return function adjacent(elem) {\n                const siblings = adapter.getSiblings(elem);\n                let lastElement;\n                for(let i = 0; i < siblings.length; i++){\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling)) break;\n                    if (adapter.isTag(currentSibling)) lastElement = currentSibling;\n                }\n                return !!lastElement && next(lastElement);\n            };\n        case (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Universal:\n            if (selector.namespace != null && selector.namespace !== \"*\") throw new Error(\"Namespaced universal selectors are not yet supported by css-select\");\n            return next;\n    }\n}\n\n\n\nfunction $de88d041f0c89979$export$ef7acd7185315e22(selector, options, context) {\n    const next = $de88d041f0c89979$export$bbd36b99ab1dd6af(selector, options, context);\n    return (0, $0b42720a09cf7c92$export$a48279061b25ff7)(next, options.adapter);\n}\nfunction $de88d041f0c89979$export$bbd36b99ab1dd6af(selector, options, context) {\n    const token = typeof selector === \"string\" ? (0, $093d7ffb078d3faf$export$98e6a39c04603d36)(selector) : selector;\n    return $de88d041f0c89979$export$9ac76eb524b317ec(token, options, context);\n}\nfunction $de88d041f0c89979$var$includesScopePseudo(t) {\n    return t.type === (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Pseudo && (t.name === \"scope\" || Array.isArray(t.data) && t.data.some((data)=>data.some($de88d041f0c89979$var$includesScopePseudo)));\n}\nconst $de88d041f0c89979$var$DESCENDANT_TOKEN = {\n    type: (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Descendant\n};\nconst $de88d041f0c89979$var$FLEXIBLE_DESCENDANT_TOKEN = {\n    type: \"_flexibleDescendant\"\n};\nconst $de88d041f0c89979$var$SCOPE_TOKEN = {\n    type: (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Pseudo,\n    name: \"scope\",\n    data: null\n};\n/*\n * CSS 4 Spec (Draft): 3.4.1. Absolutizing a Relative Selector\n * http://www.w3.org/TR/selectors4/#absolutizing\n */ function $de88d041f0c89979$var$absolutize(token, { adapter: adapter }, context) {\n    // TODO Use better check if the context is a document\n    const hasContext = !!(context === null || context === void 0 ? void 0 : context.every((e)=>{\n        const parent = adapter.isTag(e) && adapter.getParent(e);\n        return e === (0, $0b42720a09cf7c92$export$f2f25fe26aaee026) || parent && adapter.isTag(parent);\n    }));\n    for (const t of token){\n        if (t.length > 0 && (0, $7cd471faad23c8d0$export$41d1fe2780697dca)(t[0]) && t[0].type !== (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Descendant) ;\n        else if (hasContext && !t.some($de88d041f0c89979$var$includesScopePseudo)) t.unshift($de88d041f0c89979$var$DESCENDANT_TOKEN);\n        else continue;\n        t.unshift($de88d041f0c89979$var$SCOPE_TOKEN);\n    }\n}\nfunction $de88d041f0c89979$export$9ac76eb524b317ec(token, options, context) {\n    var _a;\n    token.forEach((0, $7cd471faad23c8d0$export$2e2bcd8739ae039));\n    context = (_a = options.context) !== null && _a !== void 0 ? _a : context;\n    const isArrayContext = Array.isArray(context);\n    const finalContext = context && (Array.isArray(context) ? context : [\n        context\n    ]);\n    // Check if the selector is relative\n    if (options.relativeSelector !== false) $de88d041f0c89979$var$absolutize(token, options, finalContext);\n    else if (token.some((t)=>t.length > 0 && (0, $7cd471faad23c8d0$export$41d1fe2780697dca)(t[0]))) throw new Error(\"Relative selectors are not allowed when the `relativeSelector` option is disabled\");\n    let shouldTestNextSiblings = false;\n    const query = token.map((rules)=>{\n        if (rules.length >= 2) {\n            const [first, second] = rules;\n            if (first.type !== (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Pseudo || first.name !== \"scope\") ;\n            else if (isArrayContext && second.type === (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Descendant) rules[1] = $de88d041f0c89979$var$FLEXIBLE_DESCENDANT_TOKEN;\n            else if (second.type === (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Adjacent || second.type === (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Sibling) shouldTestNextSiblings = true;\n        }\n        return $de88d041f0c89979$var$compileRules(rules, options, finalContext);\n    }).reduce($de88d041f0c89979$var$reduceRules, (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc);\n    query.shouldTestNextSiblings = shouldTestNextSiblings;\n    return query;\n}\nfunction $de88d041f0c89979$var$compileRules(rules, options, context) {\n    var _a;\n    return rules.reduce((previous, rule)=>previous === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc ? (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc : (0, $153123c67a28bf54$export$afd2165e507ce8c5)(previous, rule, options, context, $de88d041f0c89979$export$9ac76eb524b317ec), (_a = options.rootFunc) !== null && _a !== void 0 ? _a : (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).trueFunc);\n}\nfunction $de88d041f0c89979$var$reduceRules(a, b) {\n    if (b === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc || a === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).trueFunc) return a;\n    if (a === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc || b === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).trueFunc) return b;\n    return function combine(elem) {\n        return a(elem) || b(elem);\n    };\n}\n\n\n\n\nconst $f410c3bb47955b9f$var$defaultEquals = (a, b)=>a === b;\nconst $f410c3bb47955b9f$var$defaultOptions = {\n    adapter: $072f2bad516501ed$exports,\n    equals: $f410c3bb47955b9f$var$defaultEquals\n};\nfunction $f410c3bb47955b9f$var$convertOptionFormats(options) {\n    var _a, _b, _c, _d;\n    /*\n     * We force one format of options to the other one.\n     */ // @ts-expect-error Default options may have incompatible `Node` / `ElementNode`.\n    const opts = options !== null && options !== void 0 ? options : $f410c3bb47955b9f$var$defaultOptions;\n    // @ts-expect-error Same as above.\n    (_a = opts.adapter) !== null && _a !== void 0 ? _a : opts.adapter = $072f2bad516501ed$exports;\n    // @ts-expect-error `equals` does not exist on `Options`\n    (_b = opts.equals) !== null && _b !== void 0 ? _b : opts.equals = (_d = (_c = opts.adapter) === null || _c === void 0 ? void 0 : _c.equals) !== null && _d !== void 0 ? _d : $f410c3bb47955b9f$var$defaultEquals;\n    return opts;\n}\nfunction $f410c3bb47955b9f$var$wrapCompile(func) {\n    return function addAdapter(selector, options, context) {\n        const opts = $f410c3bb47955b9f$var$convertOptionFormats(options);\n        return func(selector, opts, context);\n    };\n}\nconst $f410c3bb47955b9f$export$ef7acd7185315e22 = $f410c3bb47955b9f$var$wrapCompile((0, $de88d041f0c89979$export$ef7acd7185315e22));\nconst $f410c3bb47955b9f$export$ff8dfdd3f753dc11 = $f410c3bb47955b9f$var$wrapCompile((0, $de88d041f0c89979$export$bbd36b99ab1dd6af));\nconst $f410c3bb47955b9f$export$3ed2edee2e7c5e35 = $f410c3bb47955b9f$var$wrapCompile((0, $de88d041f0c89979$export$9ac76eb524b317ec));\nfunction $f410c3bb47955b9f$var$getSelectorFunc(searchFunc) {\n    return function select(query, elements, options) {\n        const opts = $f410c3bb47955b9f$var$convertOptionFormats(options);\n        if (typeof query !== \"function\") query = (0, $de88d041f0c89979$export$bbd36b99ab1dd6af)(query, opts, elements);\n        const filteredElements = $f410c3bb47955b9f$export$9c634076e0a91d1f(elements, opts.adapter, query.shouldTestNextSiblings);\n        return searchFunc(query, filteredElements, opts);\n    };\n}\nfunction $f410c3bb47955b9f$export$9c634076e0a91d1f(elems, adapter, shouldTestNextSiblings = false) {\n    /*\n     * Add siblings if the query requires them.\n     * See https://github.com/fb55/css-select/pull/43#issuecomment-225414692\n     */ if (shouldTestNextSiblings) elems = $f410c3bb47955b9f$var$appendNextSiblings(elems, adapter);\n    return Array.isArray(elems) ? adapter.removeSubsets(elems) : adapter.getChildren(elems);\n}\nfunction $f410c3bb47955b9f$var$appendNextSiblings(elem, adapter) {\n    // Order matters because jQuery seems to check the children before the siblings\n    const elems = Array.isArray(elem) ? elem.slice(0) : [\n        elem\n    ];\n    const elemsLength = elems.length;\n    for(let i = 0; i < elemsLength; i++){\n        const nextSiblings = (0, $0b42720a09cf7c92$export$8666503a05bdce46)(elems[i], adapter);\n        elems.push(...nextSiblings);\n    }\n    return elems;\n}\nconst $f410c3bb47955b9f$export$90aca4adda6ff0f5 = $f410c3bb47955b9f$var$getSelectorFunc((query, elems, options)=>query === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc || !elems || elems.length === 0 ? [] : options.adapter.findAll(query, elems));\nconst $f410c3bb47955b9f$export$9633ae49ba77655e = $f410c3bb47955b9f$var$getSelectorFunc((query, elems, options)=>query === (0, (/*@__PURE__*/$parcel$interopDefault($ad25a3bd7aa066fd$exports))).falseFunc || !elems || elems.length === 0 ? null : options.adapter.findOne(query, elems));\nfunction $f410c3bb47955b9f$export$226b3eccf92c9ed9(elem, query, options) {\n    const opts = $f410c3bb47955b9f$var$convertOptionFormats(options);\n    return (typeof query === \"function\" ? query : (0, $de88d041f0c89979$export$ef7acd7185315e22)(query, opts))(elem);\n}\nvar /**\n * Alias for selectAll(query, elems, options).\n * @see [compile] for supported selector queries.\n */ $f410c3bb47955b9f$export$2e2bcd8739ae039 = $f410c3bb47955b9f$export$90aca4adda6ff0f5;\n\n\n\n\nconst $081d6eb11a64f3f7$export$899efafbba5f734f = new Set([\n    \"first\",\n    \"last\",\n    \"eq\",\n    \"gt\",\n    \"nth\",\n    \"lt\",\n    \"even\",\n    \"odd\"\n]);\nfunction $081d6eb11a64f3f7$export$b169a94581f05ec(s) {\n    if (s.type !== \"pseudo\") return false;\n    if ($081d6eb11a64f3f7$export$899efafbba5f734f.has(s.name)) return true;\n    if (s.name === \"not\" && Array.isArray(s.data)) // Only consider `:not` with embedded filters\n    return s.data.some((s)=>s.some($081d6eb11a64f3f7$export$b169a94581f05ec));\n    return false;\n}\nfunction $081d6eb11a64f3f7$export$fb8ce379717a383d(filter, data, partLimit) {\n    const num = data != null ? parseInt(data, 10) : NaN;\n    switch(filter){\n        case \"first\":\n            return 1;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) ? num >= 0 ? num + 1 : Infinity : 0;\n        case \"lt\":\n            return isFinite(num) ? num >= 0 ? Math.min(num, partLimit) : Infinity : 0;\n        case \"gt\":\n            return isFinite(num) ? Infinity : 0;\n        case \"odd\":\n            return 2 * partLimit;\n        case \"even\":\n            return 2 * partLimit - 1;\n        case \"last\":\n        case \"not\":\n            return Infinity;\n    }\n}\n\n\nfunction $a14ff1cb26f79621$export$6492b66915332185(node) {\n    while(node.parent)node = node.parent;\n    return node;\n}\nfunction $a14ff1cb26f79621$export$12837f7a14c656c9(selectors) {\n    const filteredSelectors = [];\n    const plainSelectors = [];\n    for (const selector of selectors)if (selector.some((0, $081d6eb11a64f3f7$export$b169a94581f05ec))) filteredSelectors.push(selector);\n    else plainSelectors.push(selector);\n    return [\n        plainSelectors,\n        filteredSelectors\n    ];\n}\n\n\n\nconst $5001d4900bd59287$var$UNIVERSAL_SELECTOR = {\n    type: (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Universal,\n    namespace: null\n};\nconst $5001d4900bd59287$var$SCOPE_PSEUDO = {\n    type: (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Pseudo,\n    name: \"scope\",\n    data: null\n};\nfunction $5001d4900bd59287$export$226b3eccf92c9ed9(element, selector, options = {}) {\n    return $5001d4900bd59287$export$ad14ef4001db2bcd([\n        element\n    ], selector, options);\n}\nfunction $5001d4900bd59287$export$ad14ef4001db2bcd(elements, selector, options = {}) {\n    if (typeof selector === \"function\") return elements.some(selector);\n    const [plain, filtered] = (0, $a14ff1cb26f79621$export$12837f7a14c656c9)((0, $093d7ffb078d3faf$export$98e6a39c04603d36)(selector));\n    return plain.length > 0 && elements.some((0, $f410c3bb47955b9f$export$3ed2edee2e7c5e35)(plain, options)) || filtered.some((sel)=>$5001d4900bd59287$var$filterBySelector(sel, elements, options).length > 0);\n}\nfunction $5001d4900bd59287$var$filterByPosition(filter, elems, data, options) {\n    const num = typeof data === \"string\" ? parseInt(data, 10) : NaN;\n    switch(filter){\n        case \"first\":\n        case \"lt\":\n            // Already done in `getLimit`\n            return elems;\n        case \"last\":\n            return elems.length > 0 ? [\n                elems[elems.length - 1]\n            ] : elems;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) && Math.abs(num) < elems.length ? [\n                num < 0 ? elems[elems.length + num] : elems[num]\n            ] : [];\n        case \"gt\":\n            return isFinite(num) ? elems.slice(num + 1) : [];\n        case \"even\":\n            return elems.filter((_, i)=>i % 2 === 0);\n        case \"odd\":\n            return elems.filter((_, i)=>i % 2 === 1);\n        case \"not\":\n            {\n                const filtered = new Set($5001d4900bd59287$var$filterParsed(data, elems, options));\n                return elems.filter((e)=>!filtered.has(e));\n            }\n    }\n}\nfunction $5001d4900bd59287$export$3dea766d36a8935f(selector, elements, options = {}) {\n    return $5001d4900bd59287$var$filterParsed((0, $093d7ffb078d3faf$export$98e6a39c04603d36)(selector), elements, options);\n}\n/**\n * Filter a set of elements by a selector.\n *\n * Will return elements in the original order.\n *\n * @param selector Selector to filter by.\n * @param elements Elements to filter.\n * @param options Options for selector.\n */ function $5001d4900bd59287$var$filterParsed(selector, elements, options) {\n    if (elements.length === 0) return [];\n    const [plainSelectors, filteredSelectors] = (0, $a14ff1cb26f79621$export$12837f7a14c656c9)(selector);\n    let found;\n    if (plainSelectors.length) {\n        const filtered = $5001d4900bd59287$var$filterElements(elements, plainSelectors, options);\n        // If there are no filters, just return\n        if (filteredSelectors.length === 0) return filtered;\n        // Otherwise, we have to do some filtering\n        if (filtered.length) found = new Set(filtered);\n    }\n    for(let i = 0; i < filteredSelectors.length && (found === null || found === void 0 ? void 0 : found.size) !== elements.length; i++){\n        const filteredSelector = filteredSelectors[i];\n        const missing = found ? elements.filter((e)=>$072f2bad516501ed$exports.isTag(e) && !found.has(e)) : elements;\n        if (missing.length === 0) break;\n        const filtered = $5001d4900bd59287$var$filterBySelector(filteredSelector, elements, options);\n        if (filtered.length) {\n            if (!found) {\n                /*\n                 * If we haven't found anything before the last selector,\n                 * just return what we found now.\n                 */ if (i === filteredSelectors.length - 1) return filtered;\n                found = new Set(filtered);\n            } else filtered.forEach((el)=>found.add(el));\n        }\n    }\n    return typeof found !== \"undefined\" ? found.size === elements.length ? elements : elements.filter((el)=>found.has(el)) : [];\n}\nfunction $5001d4900bd59287$var$filterBySelector(selector, elements, options) {\n    var _a;\n    if (selector.some((0, $093d7ffb078d3faf$export$41d1fe2780697dca))) {\n        /*\n         * Get root node, run selector with the scope\n         * set to all of our nodes.\n         */ const root = (_a = options.root) !== null && _a !== void 0 ? _a : (0, $a14ff1cb26f79621$export$6492b66915332185)(elements[0]);\n        const opts = {\n            ...options,\n            context: elements,\n            relativeSelector: false\n        };\n        selector.push($5001d4900bd59287$var$SCOPE_PSEUDO);\n        return $5001d4900bd59287$var$findFilterElements(root, selector, opts, true, elements.length);\n    }\n    // Performance optimization: If we don't have to traverse, just filter set.\n    return $5001d4900bd59287$var$findFilterElements(elements, selector, options, false, elements.length);\n}\nfunction $5001d4900bd59287$export$2e6c959c16ff56b8(selector, root, options = {}, limit = Infinity) {\n    if (typeof selector === \"function\") return $5001d4900bd59287$var$find(root, selector);\n    const [plain, filtered] = (0, $a14ff1cb26f79621$export$12837f7a14c656c9)((0, $093d7ffb078d3faf$export$98e6a39c04603d36)(selector));\n    const results = filtered.map((sel)=>$5001d4900bd59287$var$findFilterElements(root, sel, options, true, limit));\n    // Plain selectors can be queried in a single go\n    if (plain.length) results.push($5001d4900bd59287$var$findElements(root, plain, options, limit));\n    if (results.length === 0) return [];\n    // If there was only a single selector, just return the result\n    if (results.length === 1) return results[0];\n    // Sort results, filtering for duplicates\n    return $072f2bad516501ed$exports.uniqueSort(results.reduce((a, b)=>[\n            ...a,\n            ...b\n        ]));\n}\n/**\n *\n * @param root Element(s) to search from.\n * @param selector Selector to look for.\n * @param options Options for querying.\n * @param queryForSelector Query multiple levels deep for the initial selector, even if it doesn't contain a traversal.\n */ function $5001d4900bd59287$var$findFilterElements(root, selector, options, queryForSelector, totalLimit) {\n    const filterIndex = selector.findIndex((0, $081d6eb11a64f3f7$export$b169a94581f05ec));\n    const sub = selector.slice(0, filterIndex);\n    const filter = selector[filterIndex];\n    // If we are at the end of the selector, we can limit the number of elements to retrieve.\n    const partLimit = selector.length - 1 === filterIndex ? totalLimit : Infinity;\n    /*\n     * Set the number of elements to retrieve.\n     * Eg. for :first, we only have to get a single element.\n     */ const limit = (0, $081d6eb11a64f3f7$export$fb8ce379717a383d)(filter.name, filter.data, partLimit);\n    if (limit === 0) return [];\n    /*\n     * Skip `findElements` call if our selector starts with a positional\n     * pseudo.\n     */ const elemsNoLimit = sub.length === 0 && !Array.isArray(root) ? $072f2bad516501ed$exports.getChildren(root).filter($072f2bad516501ed$exports.isTag) : sub.length === 0 ? (Array.isArray(root) ? root : [\n        root\n    ]).filter($072f2bad516501ed$exports.isTag) : queryForSelector || sub.some((0, $093d7ffb078d3faf$export$41d1fe2780697dca)) ? $5001d4900bd59287$var$findElements(root, [\n        sub\n    ], options, limit) : $5001d4900bd59287$var$filterElements(root, [\n        sub\n    ], options);\n    const elems = elemsNoLimit.slice(0, limit);\n    let result = $5001d4900bd59287$var$filterByPosition(filter.name, elems, filter.data, options);\n    if (result.length === 0 || selector.length === filterIndex + 1) return result;\n    const remainingSelector = selector.slice(filterIndex + 1);\n    const remainingHasTraversal = remainingSelector.some((0, $093d7ffb078d3faf$export$41d1fe2780697dca));\n    if (remainingHasTraversal) {\n        if ((0, $093d7ffb078d3faf$export$41d1fe2780697dca)(remainingSelector[0])) {\n            const { type: type } = remainingSelector[0];\n            if (type === (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Sibling || type === (0, $6de3987936ef985e$export$4e8b093ec8dcab0d).Adjacent) // If we have a sibling traversal, we need to also look at the siblings.\n            result = (0, $f410c3bb47955b9f$export$9c634076e0a91d1f)(result, $072f2bad516501ed$exports, true);\n            // Avoid a traversal-first selector error.\n            remainingSelector.unshift($5001d4900bd59287$var$UNIVERSAL_SELECTOR);\n        }\n        options = {\n            ...options,\n            // Avoid absolutizing the selector\n            relativeSelector: false,\n            /*\n             * Add a custom root func, to make sure traversals don't match elements\n             * that aren't a part of the considered tree.\n             */ rootFunc: (el)=>result.includes(el)\n        };\n    } else if (options.rootFunc && options.rootFunc !== $ad25a3bd7aa066fd$exports.trueFunc) options = {\n        ...options,\n        rootFunc: $ad25a3bd7aa066fd$exports.trueFunc\n    };\n    /*\n     * If we have another filter, recursively call `findFilterElements`,\n     * with the `recursive` flag disabled. We only have to look for more\n     * elements when we see a traversal.\n     *\n     * Otherwise,\n     */ return remainingSelector.some((0, $081d6eb11a64f3f7$export$b169a94581f05ec)) ? $5001d4900bd59287$var$findFilterElements(result, remainingSelector, options, false, totalLimit) : remainingHasTraversal ? $5001d4900bd59287$var$findElements(result, [\n        remainingSelector\n    ], options, totalLimit) : $5001d4900bd59287$var$filterElements(result, [\n        remainingSelector\n    ], options);\n}\nfunction $5001d4900bd59287$var$findElements(root, sel, options, limit) {\n    const query = (0, $f410c3bb47955b9f$export$3ed2edee2e7c5e35)(sel, options, root);\n    return $5001d4900bd59287$var$find(root, query, limit);\n}\nfunction $5001d4900bd59287$var$find(root, query, limit = Infinity) {\n    const elems = (0, $f410c3bb47955b9f$export$9c634076e0a91d1f)(root, $072f2bad516501ed$exports, query.shouldTestNextSiblings);\n    return $072f2bad516501ed$exports.find((node)=>$072f2bad516501ed$exports.isTag(node) && query(node), elems, true, limit);\n}\nfunction $5001d4900bd59287$var$filterElements(elements, sel, options) {\n    const els = (Array.isArray(elements) ? elements : [\n        elements\n    ]).filter($072f2bad516501ed$exports.isTag);\n    if (els.length === 0) return els;\n    const query = (0, $f410c3bb47955b9f$export$3ed2edee2e7c5e35)(sel, options);\n    return query === $ad25a3bd7aa066fd$exports.trueFunc ? els : els.filter(query);\n}\n\n\n\n\n\nconst $bb3edb5ec381eef7$var$reSiblingSelector = /^\\s*[~+]/;\nfunction $bb3edb5ec381eef7$export$71aa6c912b956294(selectorOrHaystack) {\n    var _a;\n    if (!selectorOrHaystack) return this._make([]);\n    const context = this.toArray();\n    if (typeof selectorOrHaystack !== \"string\") {\n        const haystack = (0, $ed43754fae89976b$export$799a4b197f11d37)(selectorOrHaystack) ? selectorOrHaystack.toArray() : [\n            selectorOrHaystack\n        ];\n        return this._make(haystack.filter((elem)=>context.some((node)=>(0, $c1bcc44f974e65ab$export$2344b14b097df817)(node, elem))));\n    }\n    const elems = $bb3edb5ec381eef7$var$reSiblingSelector.test(selectorOrHaystack) ? context : this.children().toArray();\n    const options = {\n        context: context,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n        // Pass options that are recognized by `cheerio-select`\n        xmlMode: this.options.xmlMode,\n        lowerCaseTags: this.options.lowerCaseTags,\n        lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n        pseudos: this.options.pseudos,\n        quirksMode: this.options.quirksMode\n    };\n    return this._make($5001d4900bd59287$export$2e6c959c16ff56b8(selectorOrHaystack, elems, options));\n}\n/**\n * Creates a matcher, using a particular mapping function. Matchers provide a\n * function that finds elements using a generating function, supporting filtering.\n *\n * @private\n * @param matchMap - Mapping function.\n * @returns - Function for wrapping generating functions.\n */ function $bb3edb5ec381eef7$var$_getMatcher(matchMap) {\n    return function(fn, ...postFns) {\n        return function(selector) {\n            var _a;\n            let matched = matchMap(fn, this);\n            if (selector) matched = $bb3edb5ec381eef7$export$8f2c8e61d147b502(matched, selector, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]);\n            return this._make(// Post processing is only necessary if there is more than one element.\n            this.length > 1 && matched.length > 1 ? postFns.reduce((elems, fn)=>fn(elems), matched) : matched);\n        };\n    };\n}\n/** Matcher that adds multiple elements for each entry in the input. */ const $bb3edb5ec381eef7$var$_matcher = $bb3edb5ec381eef7$var$_getMatcher((fn, elems)=>{\n    const ret = [];\n    for(let i = 0; i < elems.length; i++){\n        const value = fn(elems[i]);\n        ret.push(value);\n    }\n    return new Array().concat(...ret);\n});\n/** Matcher that adds at most one element for each entry in the input. */ const $bb3edb5ec381eef7$var$_singleMatcher = $bb3edb5ec381eef7$var$_getMatcher((fn, elems)=>{\n    const ret = [];\n    for(let i = 0; i < elems.length; i++){\n        const value = fn(elems[i]);\n        if (value !== null) ret.push(value);\n    }\n    return ret;\n});\n/**\n * Matcher that supports traversing until a condition is met.\n *\n * @returns A function usable for `*Until` methods.\n */ function $bb3edb5ec381eef7$var$_matchUntil(nextElem, ...postFns) {\n    // We use a variable here that is used from within the matcher.\n    let matches = null;\n    const innerMatcher = $bb3edb5ec381eef7$var$_getMatcher((nextElem, elems)=>{\n        const matched = [];\n        (0, $ed43754fae89976b$export$74822c5de6e95c1)(elems, (elem)=>{\n            for(let next; next = nextElem(elem); elem = next){\n                // FIXME: `matched` might contain duplicates here and the index is too large.\n                if (matches === null || matches === void 0 ? void 0 : matches(next, matched.length)) break;\n                matched.push(next);\n            }\n        });\n        return matched;\n    })(nextElem, ...postFns);\n    return function(selector, filterSelector) {\n        // Override `matches` variable with the new target.\n        matches = typeof selector === \"string\" ? (elem)=>$5001d4900bd59287$export$226b3eccf92c9ed9(elem, selector, this.options) : selector ? $bb3edb5ec381eef7$var$getFilterFn(selector) : null;\n        const ret = innerMatcher.call(this, filterSelector);\n        // Set `matches` to `null`, so we don't waste memory.\n        matches = null;\n        return ret;\n    };\n}\nfunction $bb3edb5ec381eef7$var$_removeDuplicates(elems) {\n    return Array.from(new Set(elems));\n}\nconst $bb3edb5ec381eef7$export$91124bb58bc04465 = $bb3edb5ec381eef7$var$_singleMatcher(({ parent: parent })=>parent && !(0, $298fc1d08428934f$export$62858bae88b53fd0)(parent) ? parent : null, $bb3edb5ec381eef7$var$_removeDuplicates);\nconst $bb3edb5ec381eef7$export$7901f6cd558b9a93 = $bb3edb5ec381eef7$var$_matcher((elem)=>{\n    const matched = [];\n    while(elem.parent && !(0, $298fc1d08428934f$export$62858bae88b53fd0)(elem.parent)){\n        matched.push(elem.parent);\n        elem = elem.parent;\n    }\n    return matched;\n}, (0, $5d2d1e3b58306e70$export$1c267319665a7e7e), (elems)=>elems.reverse());\nconst $bb3edb5ec381eef7$export$dcd0aa73ca0eb350 = $bb3edb5ec381eef7$var$_matchUntil(({ parent: parent })=>parent && !(0, $298fc1d08428934f$export$62858bae88b53fd0)(parent) ? parent : null, (0, $5d2d1e3b58306e70$export$1c267319665a7e7e), (elems)=>elems.reverse());\nfunction $bb3edb5ec381eef7$export$ff7f7c97cdce86e(selector) {\n    var _a;\n    const set = [];\n    if (!selector) return this._make(set);\n    const selectOpts = {\n        xmlMode: this.options.xmlMode,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]\n    };\n    const selectFn = typeof selector === \"string\" ? (elem)=>$5001d4900bd59287$export$226b3eccf92c9ed9(elem, selector, selectOpts) : $bb3edb5ec381eef7$var$getFilterFn(selector);\n    (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (elem)=>{\n        while(elem && (0, $298fc1d08428934f$export$3bf645f08efe3292)(elem)){\n            if (selectFn(elem, 0)) {\n                // Do not add duplicate elements to the set\n                if (!set.includes(elem)) set.push(elem);\n                break;\n            }\n            elem = elem.parent;\n        }\n    });\n    return this._make(set);\n}\nconst $bb3edb5ec381eef7$export$48cfd1e771a65c4f = $bb3edb5ec381eef7$var$_singleMatcher((elem)=>(0, $96c591732bbe9fd9$export$9be3779649ef9cc7)(elem));\nconst $bb3edb5ec381eef7$export$3cd99760d81ede63 = $bb3edb5ec381eef7$var$_matcher((elem)=>{\n    const matched = [];\n    while(elem.next){\n        elem = elem.next;\n        if ((0, $298fc1d08428934f$export$3bf645f08efe3292)(elem)) matched.push(elem);\n    }\n    return matched;\n}, $bb3edb5ec381eef7$var$_removeDuplicates);\nconst $bb3edb5ec381eef7$export$c2850259fcee1ef = $bb3edb5ec381eef7$var$_matchUntil((el)=>(0, $96c591732bbe9fd9$export$9be3779649ef9cc7)(el), $bb3edb5ec381eef7$var$_removeDuplicates);\nconst $bb3edb5ec381eef7$export$232faf9add678146 = $bb3edb5ec381eef7$var$_singleMatcher((elem)=>(0, $96c591732bbe9fd9$export$c8bafb6e59c0b8e)(elem));\nconst $bb3edb5ec381eef7$export$5a01ccd45552d0b4 = $bb3edb5ec381eef7$var$_matcher((elem)=>{\n    const matched = [];\n    while(elem.prev){\n        elem = elem.prev;\n        if ((0, $298fc1d08428934f$export$3bf645f08efe3292)(elem)) matched.push(elem);\n    }\n    return matched;\n}, $bb3edb5ec381eef7$var$_removeDuplicates);\nconst $bb3edb5ec381eef7$export$637b2d5472ecd3ca = $bb3edb5ec381eef7$var$_matchUntil((el)=>(0, $96c591732bbe9fd9$export$c8bafb6e59c0b8e)(el), $bb3edb5ec381eef7$var$_removeDuplicates);\nconst $bb3edb5ec381eef7$export$9866dd70b0dcd4c3 = $bb3edb5ec381eef7$var$_matcher((elem)=>(0, $96c591732bbe9fd9$export$f312c3733b79ac0d)(elem).filter((el)=>(0, $298fc1d08428934f$export$3bf645f08efe3292)(el) && el !== elem), (0, $5d2d1e3b58306e70$export$1c267319665a7e7e));\nconst $bb3edb5ec381eef7$export$bacb5cc5a11aef16 = $bb3edb5ec381eef7$var$_matcher((elem)=>(0, $96c591732bbe9fd9$export$f8cf48ee793b41be)(elem).filter((0, $298fc1d08428934f$export$3bf645f08efe3292)), $bb3edb5ec381eef7$var$_removeDuplicates);\nfunction $bb3edb5ec381eef7$export$fd59df041b888442() {\n    const elems = this.toArray().reduce((newElems, elem)=>(0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(elem) ? newElems.concat(elem.children) : newElems, []);\n    return this._make(elems);\n}\nfunction $bb3edb5ec381eef7$export$79b2f7037acddd43(fn) {\n    let i = 0;\n    const len = this.length;\n    while(i < len && fn.call(this[i], i, this[i]) !== false)++i;\n    return this;\n}\nfunction $bb3edb5ec381eef7$export$871de8747c9eaa88(fn) {\n    let elems = [];\n    for(let i = 0; i < this.length; i++){\n        const el = this[i];\n        const val = fn.call(el, i, el);\n        if (val != null) elems = elems.concat(val);\n    }\n    return this._make(elems);\n}\n/**\n * Creates a function to test if a filter is matched.\n *\n * @param match - A filter.\n * @returns A function that determines if a filter has been matched.\n */ function $bb3edb5ec381eef7$var$getFilterFn(match) {\n    if (typeof match === \"function\") return (el, i)=>match.call(el, i, el);\n    if ((0, $ed43754fae89976b$export$799a4b197f11d37)(match)) return (el)=>Array.prototype.includes.call(match, el);\n    return function(el) {\n        return match === el;\n    };\n}\nfunction $bb3edb5ec381eef7$export$3dea766d36a8935f(match) {\n    var _a;\n    return this._make($bb3edb5ec381eef7$export$8f2c8e61d147b502(this.toArray(), match, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]));\n}\nfunction $bb3edb5ec381eef7$export$8f2c8e61d147b502(nodes, match, xmlMode, root) {\n    return typeof match === \"string\" ? $5001d4900bd59287$export$3dea766d36a8935f(match, nodes, {\n        xmlMode: xmlMode,\n        root: root\n    }) : nodes.filter($bb3edb5ec381eef7$var$getFilterFn(match));\n}\nfunction $bb3edb5ec381eef7$export$226b3eccf92c9ed9(selector) {\n    const nodes = this.toArray();\n    return typeof selector === \"string\" ? $5001d4900bd59287$export$ad14ef4001db2bcd(nodes.filter((0, $298fc1d08428934f$export$3bf645f08efe3292)), selector, this.options) : selector ? nodes.some($bb3edb5ec381eef7$var$getFilterFn(selector)) : false;\n}\nfunction $bb3edb5ec381eef7$export$6003a5f097c73977(match) {\n    let nodes = this.toArray();\n    if (typeof match === \"string\") {\n        const matches = new Set($5001d4900bd59287$export$3dea766d36a8935f(match, nodes, this.options));\n        nodes = nodes.filter((el)=>!matches.has(el));\n    } else {\n        const filterFn = $bb3edb5ec381eef7$var$getFilterFn(match);\n        nodes = nodes.filter((el, i)=>!filterFn(el, i));\n    }\n    return this._make(nodes);\n}\nfunction $bb3edb5ec381eef7$export$a4f4bb6b1453fff5(selectorOrHaystack) {\n    return this.filter(typeof selectorOrHaystack === \"string\" ? `:has(${selectorOrHaystack})` : (_, el)=>this._make(el).find(selectorOrHaystack).length > 0);\n}\nfunction $bb3edb5ec381eef7$export$43128fadae87b74a() {\n    return this.length > 1 ? this._make(this[0]) : this;\n}\nfunction $bb3edb5ec381eef7$export$4c7897fafd92b108() {\n    return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\nfunction $bb3edb5ec381eef7$export$9663ddc1cf085b32(i) {\n    var _a;\n    i = +i;\n    // Use the first identity optimization if possible\n    if (i === 0 && this.length <= 1) return this;\n    if (i < 0) i = this.length + i;\n    return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);\n}\nfunction $bb3edb5ec381eef7$export$3988ae62b71be9a3(i) {\n    if (i == null) return this.toArray();\n    return this[i < 0 ? this.length + i : i];\n}\nfunction $bb3edb5ec381eef7$export$45b10814cc054894() {\n    return Array.prototype.slice.call(this);\n}\nfunction $bb3edb5ec381eef7$export$b610b8812bbcded9(selectorOrNeedle) {\n    let $haystack;\n    let needle;\n    if (selectorOrNeedle == null) {\n        $haystack = this.parent().children();\n        needle = this[0];\n    } else if (typeof selectorOrNeedle === \"string\") {\n        $haystack = this._make(selectorOrNeedle);\n        needle = this[0];\n    } else {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        $haystack = this;\n        needle = (0, $ed43754fae89976b$export$799a4b197f11d37)(selectorOrNeedle) ? selectorOrNeedle[0] : selectorOrNeedle;\n    }\n    return Array.prototype.indexOf.call($haystack, needle);\n}\nfunction $bb3edb5ec381eef7$export$58adb3bec8346d0f(start, end) {\n    return this._make(Array.prototype.slice.call(this, start, end));\n}\nfunction $bb3edb5ec381eef7$export$bd5df0f255a350f8() {\n    var _a;\n    return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);\n}\nfunction $bb3edb5ec381eef7$export$e16d8520af44a096(other, context) {\n    const selection = this._make(other, context);\n    const contents = (0, $5d2d1e3b58306e70$export$1c267319665a7e7e)([\n        ...this.get(),\n        ...selection.get()\n    ]);\n    return this._make(contents);\n}\nfunction $bb3edb5ec381eef7$export$61478bf9690647fe(selector) {\n    return this.prevObject ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject) : this;\n}\n\n\nvar $b8417ab04485f985$exports = {};\n\n$parcel$export($b8417ab04485f985$exports, \"_makeDomArray\", () => $b8417ab04485f985$export$badf47413dd1dfee);\n$parcel$export($b8417ab04485f985$exports, \"appendTo\", () => $b8417ab04485f985$export$9ceefe31f12a3778);\n$parcel$export($b8417ab04485f985$exports, \"prependTo\", () => $b8417ab04485f985$export$44da2b52169043ea);\n$parcel$export($b8417ab04485f985$exports, \"append\", () => $b8417ab04485f985$export$10d8903dec122b9d);\n$parcel$export($b8417ab04485f985$exports, \"prepend\", () => $b8417ab04485f985$export$68159836694e22c1);\n$parcel$export($b8417ab04485f985$exports, \"wrap\", () => $b8417ab04485f985$export$4997ffc0176396a6);\n$parcel$export($b8417ab04485f985$exports, \"wrapInner\", () => $b8417ab04485f985$export$8e43de5b24cc2c01);\n$parcel$export($b8417ab04485f985$exports, \"unwrap\", () => $b8417ab04485f985$export$debb760848ca95a);\n$parcel$export($b8417ab04485f985$exports, \"wrapAll\", () => $b8417ab04485f985$export$4b2e99c55a88c77b);\n$parcel$export($b8417ab04485f985$exports, \"after\", () => $b8417ab04485f985$export$742acabee3dd6465);\n$parcel$export($b8417ab04485f985$exports, \"insertAfter\", () => $b8417ab04485f985$export$c4f94c8b3850a5a9);\n$parcel$export($b8417ab04485f985$exports, \"before\", () => $b8417ab04485f985$export$1c4c1e3098bf5ebe);\n$parcel$export($b8417ab04485f985$exports, \"insertBefore\", () => $b8417ab04485f985$export$86b68c7dbeb53c22);\n$parcel$export($b8417ab04485f985$exports, \"remove\", () => $b8417ab04485f985$export$cd7f480d6b8286c3);\n$parcel$export($b8417ab04485f985$exports, \"replaceWith\", () => $b8417ab04485f985$export$e6a6680780233a77);\n$parcel$export($b8417ab04485f985$exports, \"empty\", () => $b8417ab04485f985$export$6e22c362a0406a2c);\n$parcel$export($b8417ab04485f985$exports, \"html\", () => $b8417ab04485f985$export$c0bb0b647f701bb5);\n$parcel$export($b8417ab04485f985$exports, \"toString\", () => $b8417ab04485f985$export$f84e8e69fd4488a5);\n$parcel$export($b8417ab04485f985$exports, \"text\", () => $b8417ab04485f985$export$6f093cfa640b7166);\n$parcel$export($b8417ab04485f985$exports, \"clone\", () => $b8417ab04485f985$export$9cd59f9826255e47);\n/**\n * Methods for modifying the DOM structure.\n *\n * @module cheerio/manipulation\n */ \n\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */ /* eslint-disable no-proto */ var $51861dfc7ca9d588$export$a143d493d941bafc;\nvar $51861dfc7ca9d588$export$e4cf37d7f6fb9e0a;\nvar $51861dfc7ca9d588$export$f99ded8fe4b79145;\nvar $51861dfc7ca9d588$export$599f31c3813fae4d;\n\"use strict\";\nvar $eeb0961446aae8e3$export$a48f0734ac7c2329;\nvar $eeb0961446aae8e3$export$d622b2ad8d90c771;\nvar $eeb0961446aae8e3$export$6100ba28696e12de;\n\"use strict\";\n$eeb0961446aae8e3$export$a48f0734ac7c2329 = $eeb0961446aae8e3$var$byteLength;\n$eeb0961446aae8e3$export$d622b2ad8d90c771 = $eeb0961446aae8e3$var$toByteArray;\n$eeb0961446aae8e3$export$6100ba28696e12de = $eeb0961446aae8e3$var$fromByteArray;\nvar $eeb0961446aae8e3$var$lookup = [];\nvar $eeb0961446aae8e3$var$revLookup = [];\nvar $eeb0961446aae8e3$var$Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\nvar $eeb0961446aae8e3$var$code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor(var $eeb0961446aae8e3$var$i = 0, $eeb0961446aae8e3$var$len = $eeb0961446aae8e3$var$code.length; $eeb0961446aae8e3$var$i < $eeb0961446aae8e3$var$len; ++$eeb0961446aae8e3$var$i){\n    $eeb0961446aae8e3$var$lookup[$eeb0961446aae8e3$var$i] = $eeb0961446aae8e3$var$code[$eeb0961446aae8e3$var$i];\n    $eeb0961446aae8e3$var$revLookup[$eeb0961446aae8e3$var$code.charCodeAt($eeb0961446aae8e3$var$i)] = $eeb0961446aae8e3$var$i;\n}\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n$eeb0961446aae8e3$var$revLookup[\"-\".charCodeAt(0)] = 62;\n$eeb0961446aae8e3$var$revLookup[\"_\".charCodeAt(0)] = 63;\nfunction $eeb0961446aae8e3$var$getLens(b64) {\n    var len = b64.length;\n    if (len % 4 > 0) throw new Error(\"Invalid string. Length must be a multiple of 4\");\n    // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n    var validLen = b64.indexOf(\"=\");\n    if (validLen === -1) validLen = len;\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [\n        validLen,\n        placeHoldersLen\n    ];\n}\n// base64 is 4/3 + up to two characters of the original data\nfunction $eeb0961446aae8e3$var$byteLength(b64) {\n    var lens = $eeb0961446aae8e3$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $eeb0961446aae8e3$var$_byteLength(b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction $eeb0961446aae8e3$var$toByteArray(b64) {\n    var tmp;\n    var lens = $eeb0961446aae8e3$var$getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    var arr = new $eeb0961446aae8e3$var$Arr($eeb0961446aae8e3$var$_byteLength(b64, validLen, placeHoldersLen));\n    var curByte = 0;\n    // if there are placeholders, only get up to the last complete 4 chars\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    var i;\n    for(i = 0; i < len; i += 4){\n        tmp = $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i)] << 18 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 1)] << 12 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 2)] << 6 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 3)];\n        arr[curByte++] = tmp >> 16 & 0xFF;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 2) {\n        tmp = $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i)] << 2 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 1)] >> 4;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 1) {\n        tmp = $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i)] << 10 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 1)] << 4 | $eeb0961446aae8e3$var$revLookup[b64.charCodeAt(i + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n    return arr;\n}\nfunction $eeb0961446aae8e3$var$tripletToBase64(num) {\n    return $eeb0961446aae8e3$var$lookup[num >> 18 & 0x3F] + $eeb0961446aae8e3$var$lookup[num >> 12 & 0x3F] + $eeb0961446aae8e3$var$lookup[num >> 6 & 0x3F] + $eeb0961446aae8e3$var$lookup[num & 0x3F];\n}\nfunction $eeb0961446aae8e3$var$encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for(var i = start; i < end; i += 3){\n        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n        output.push($eeb0961446aae8e3$var$tripletToBase64(tmp));\n    }\n    return output.join(\"\");\n}\nfunction $eeb0961446aae8e3$var$fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    ;\n    var parts = [];\n    var maxChunkLength = 16383 // must be multiple of 3\n    ;\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength)parts.push($eeb0961446aae8e3$var$encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        parts.push($eeb0961446aae8e3$var$lookup[tmp >> 2] + $eeb0961446aae8e3$var$lookup[tmp << 4 & 0x3F] + \"==\");\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        parts.push($eeb0961446aae8e3$var$lookup[tmp >> 10] + $eeb0961446aae8e3$var$lookup[tmp >> 4 & 0x3F] + $eeb0961446aae8e3$var$lookup[tmp << 2 & 0x3F] + \"=\");\n    }\n    return parts.join(\"\");\n}\n\n\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ var $7221566bd4d49f44$export$aafa59e2e03f2942;\nvar $7221566bd4d49f44$export$68d8715fc104d294;\n$7221566bd4d49f44$export$aafa59e2e03f2942 = function(buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? nBytes - 1 : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n    i += d;\n    e = s & (1 << -nBits) - 1;\n    s >>= -nBits;\n    nBits += eLen;\n    for(; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n    m = e & (1 << -nBits) - 1;\n    e >>= -nBits;\n    nBits += mLen;\n    for(; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n    if (e === 0) e = 1 - eBias;\n    else if (e === eMax) return m ? NaN : (s ? -1 : 1) * Infinity;\n    else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n$7221566bd4d49f44$export$68d8715fc104d294 = function(buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    var i = isLE ? 0 : nBytes - 1;\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n    value = Math.abs(value);\n    if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n    } else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n        }\n        if (e + eBias >= 1) value += rt / c;\n        else value += rt * Math.pow(2, 1 - eBias);\n        if (value * c >= 2) {\n            e++;\n            c /= 2;\n        }\n        if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n        } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n        } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n        }\n    }\n    for(; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n    e = e << mLen | m;\n    eLen += mLen;\n    for(; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n    buffer[offset + i - d] |= s * 128;\n};\n\n\nconst $51861dfc7ca9d588$var$customInspectSymbol = typeof Symbol === \"function\" && typeof Symbol[\"for\"] === \"function\" // eslint-disable-line dot-notation\n ? Symbol[\"for\"](\"nodejs.util.inspect.custom\") // eslint-disable-line dot-notation\n : null;\n$51861dfc7ca9d588$export$a143d493d941bafc = $51861dfc7ca9d588$var$Buffer;\n$51861dfc7ca9d588$export$e4cf37d7f6fb9e0a = $51861dfc7ca9d588$var$SlowBuffer;\n$51861dfc7ca9d588$export$f99ded8fe4b79145 = 50;\nconst $51861dfc7ca9d588$var$K_MAX_LENGTH = 0x7fffffff;\n$51861dfc7ca9d588$export$599f31c3813fae4d = $51861dfc7ca9d588$var$K_MAX_LENGTH;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */ $51861dfc7ca9d588$var$Buffer.TYPED_ARRAY_SUPPORT = $51861dfc7ca9d588$var$typedArraySupport();\nif (!$51861dfc7ca9d588$var$Buffer.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");\nfunction $51861dfc7ca9d588$var$typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n        const arr = new Uint8Array(1);\n        const proto = {\n            foo: function() {\n                return 42;\n            }\n        };\n        Object.setPrototypeOf(proto, Uint8Array.prototype);\n        Object.setPrototypeOf(arr, proto);\n        return arr.foo() === 42;\n    } catch (e) {\n        return false;\n    }\n}\nObject.defineProperty($51861dfc7ca9d588$var$Buffer.prototype, \"parent\", {\n    enumerable: true,\n    get: function() {\n        if (!$51861dfc7ca9d588$var$Buffer.isBuffer(this)) return undefined;\n        return this.buffer;\n    }\n});\nObject.defineProperty($51861dfc7ca9d588$var$Buffer.prototype, \"offset\", {\n    enumerable: true,\n    get: function() {\n        if (!$51861dfc7ca9d588$var$Buffer.isBuffer(this)) return undefined;\n        return this.byteOffset;\n    }\n});\nfunction $51861dfc7ca9d588$var$createBuffer(length) {\n    if (length > $51861dfc7ca9d588$var$K_MAX_LENGTH) throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    // Return an augmented `Uint8Array` instance\n    const buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, $51861dfc7ca9d588$var$Buffer.prototype);\n    return buf;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */ function $51861dfc7ca9d588$var$Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === \"number\") {\n        if (typeof encodingOrOffset === \"string\") throw new TypeError('The \"string\" argument must be of type string. Received type number');\n        return $51861dfc7ca9d588$var$allocUnsafe(arg);\n    }\n    return $51861dfc7ca9d588$var$from(arg, encodingOrOffset, length);\n}\n$51861dfc7ca9d588$var$Buffer.poolSize = 8192 // not used by this implementation\n;\nfunction $51861dfc7ca9d588$var$from(value, encodingOrOffset, length) {\n    if (typeof value === \"string\") return $51861dfc7ca9d588$var$fromString(value, encodingOrOffset);\n    if (ArrayBuffer.isView(value)) return $51861dfc7ca9d588$var$fromArrayView(value);\n    if (value == null) throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n    if ($51861dfc7ca9d588$var$isInstance(value, ArrayBuffer) || value && $51861dfc7ca9d588$var$isInstance(value.buffer, ArrayBuffer)) return $51861dfc7ca9d588$var$fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof SharedArrayBuffer !== \"undefined\" && ($51861dfc7ca9d588$var$isInstance(value, SharedArrayBuffer) || value && $51861dfc7ca9d588$var$isInstance(value.buffer, SharedArrayBuffer))) return $51861dfc7ca9d588$var$fromArrayBuffer(value, encodingOrOffset, length);\n    if (typeof value === \"number\") throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    const valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null && valueOf !== value) return $51861dfc7ca9d588$var$Buffer.from(valueOf, encodingOrOffset, length);\n    const b = $51861dfc7ca9d588$var$fromObject(value);\n    if (b) return b;\n    if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === \"function\") return $51861dfc7ca9d588$var$Buffer.from(value[Symbol.toPrimitive](\"string\"), encodingOrOffset, length);\n    throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/ $51861dfc7ca9d588$var$Buffer.from = function(value, encodingOrOffset, length) {\n    return $51861dfc7ca9d588$var$from(value, encodingOrOffset, length);\n};\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf($51861dfc7ca9d588$var$Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf($51861dfc7ca9d588$var$Buffer, Uint8Array);\nfunction $51861dfc7ca9d588$var$assertSize(size) {\n    if (typeof size !== \"number\") throw new TypeError('\"size\" argument must be of type number');\n    else if (size < 0) throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n}\nfunction $51861dfc7ca9d588$var$alloc(size, fill, encoding) {\n    $51861dfc7ca9d588$var$assertSize(size);\n    if (size <= 0) return $51861dfc7ca9d588$var$createBuffer(size);\n    if (fill !== undefined) // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === \"string\" ? $51861dfc7ca9d588$var$createBuffer(size).fill(fill, encoding) : $51861dfc7ca9d588$var$createBuffer(size).fill(fill);\n    return $51861dfc7ca9d588$var$createBuffer(size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/ $51861dfc7ca9d588$var$Buffer.alloc = function(size, fill, encoding) {\n    return $51861dfc7ca9d588$var$alloc(size, fill, encoding);\n};\nfunction $51861dfc7ca9d588$var$allocUnsafe(size) {\n    $51861dfc7ca9d588$var$assertSize(size);\n    return $51861dfc7ca9d588$var$createBuffer(size < 0 ? 0 : $51861dfc7ca9d588$var$checked(size) | 0);\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */ $51861dfc7ca9d588$var$Buffer.allocUnsafe = function(size) {\n    return $51861dfc7ca9d588$var$allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */ $51861dfc7ca9d588$var$Buffer.allocUnsafeSlow = function(size) {\n    return $51861dfc7ca9d588$var$allocUnsafe(size);\n};\nfunction $51861dfc7ca9d588$var$fromString(string, encoding) {\n    if (typeof encoding !== \"string\" || encoding === \"\") encoding = \"utf8\";\n    if (!$51861dfc7ca9d588$var$Buffer.isEncoding(encoding)) throw new TypeError(\"Unknown encoding: \" + encoding);\n    const length = $51861dfc7ca9d588$var$byteLength(string, encoding) | 0;\n    let buf = $51861dfc7ca9d588$var$createBuffer(length);\n    const actual = buf.write(string, encoding);\n    if (actual !== length) // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n    return buf;\n}\nfunction $51861dfc7ca9d588$var$fromArrayLike(array) {\n    const length = array.length < 0 ? 0 : $51861dfc7ca9d588$var$checked(array.length) | 0;\n    const buf = $51861dfc7ca9d588$var$createBuffer(length);\n    for(let i = 0; i < length; i += 1)buf[i] = array[i] & 255;\n    return buf;\n}\nfunction $51861dfc7ca9d588$var$fromArrayView(arrayView) {\n    if ($51861dfc7ca9d588$var$isInstance(arrayView, Uint8Array)) {\n        const copy = new Uint8Array(arrayView);\n        return $51861dfc7ca9d588$var$fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n    }\n    return $51861dfc7ca9d588$var$fromArrayLike(arrayView);\n}\nfunction $51861dfc7ca9d588$var$fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError('\"offset\" is outside of buffer bounds');\n    if (array.byteLength < byteOffset + (length || 0)) throw new RangeError('\"length\" is outside of buffer bounds');\n    let buf;\n    if (byteOffset === undefined && length === undefined) buf = new Uint8Array(array);\n    else if (length === undefined) buf = new Uint8Array(array, byteOffset);\n    else buf = new Uint8Array(array, byteOffset, length);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(buf, $51861dfc7ca9d588$var$Buffer.prototype);\n    return buf;\n}\nfunction $51861dfc7ca9d588$var$fromObject(obj) {\n    if ($51861dfc7ca9d588$var$Buffer.isBuffer(obj)) {\n        const len = $51861dfc7ca9d588$var$checked(obj.length) | 0;\n        const buf = $51861dfc7ca9d588$var$createBuffer(len);\n        if (buf.length === 0) return buf;\n        obj.copy(buf, 0, 0, len);\n        return buf;\n    }\n    if (obj.length !== undefined) {\n        if (typeof obj.length !== \"number\" || $51861dfc7ca9d588$var$numberIsNaN(obj.length)) return $51861dfc7ca9d588$var$createBuffer(0);\n        return $51861dfc7ca9d588$var$fromArrayLike(obj);\n    }\n    if (obj.type === \"Buffer\" && Array.isArray(obj.data)) return $51861dfc7ca9d588$var$fromArrayLike(obj.data);\n}\nfunction $51861dfc7ca9d588$var$checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= $51861dfc7ca9d588$var$K_MAX_LENGTH) throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + $51861dfc7ca9d588$var$K_MAX_LENGTH.toString(16) + \" bytes\");\n    return length | 0;\n}\nfunction $51861dfc7ca9d588$var$SlowBuffer(length) {\n    if (+length != length) length = 0;\n    return $51861dfc7ca9d588$var$Buffer.alloc(+length);\n}\n$51861dfc7ca9d588$var$Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== $51861dfc7ca9d588$var$Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n    ;\n};\n$51861dfc7ca9d588$var$Buffer.compare = function compare(a, b) {\n    if ($51861dfc7ca9d588$var$isInstance(a, Uint8Array)) a = $51861dfc7ca9d588$var$Buffer.from(a, a.offset, a.byteLength);\n    if ($51861dfc7ca9d588$var$isInstance(b, Uint8Array)) b = $51861dfc7ca9d588$var$Buffer.from(b, b.offset, b.byteLength);\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(a) || !$51861dfc7ca9d588$var$Buffer.isBuffer(b)) throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    if (a === b) return 0;\n    let x = a.length;\n    let y = b.length;\n    for(let i = 0, len = Math.min(x, y); i < len; ++i)if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n$51861dfc7ca9d588$var$Buffer.isEncoding = function isEncoding(encoding) {\n    switch(String(encoding).toLowerCase()){\n        case \"hex\":\n        case \"utf8\":\n        case \"utf-8\":\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n        case \"base64\":\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return true;\n        default:\n            return false;\n    }\n};\n$51861dfc7ca9d588$var$Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n    if (list.length === 0) return $51861dfc7ca9d588$var$Buffer.alloc(0);\n    let i;\n    if (length === undefined) {\n        length = 0;\n        for(i = 0; i < list.length; ++i)length += list[i].length;\n    }\n    const buffer = $51861dfc7ca9d588$var$Buffer.allocUnsafe(length);\n    let pos = 0;\n    for(i = 0; i < list.length; ++i){\n        let buf = list[i];\n        if ($51861dfc7ca9d588$var$isInstance(buf, Uint8Array)) {\n            if (pos + buf.length > buffer.length) {\n                if (!$51861dfc7ca9d588$var$Buffer.isBuffer(buf)) buf = $51861dfc7ca9d588$var$Buffer.from(buf);\n                buf.copy(buffer, pos);\n            } else Uint8Array.prototype.set.call(buffer, buf, pos);\n        } else if (!$51861dfc7ca9d588$var$Buffer.isBuffer(buf)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n        else buf.copy(buffer, pos);\n        pos += buf.length;\n    }\n    return buffer;\n};\nfunction $51861dfc7ca9d588$var$byteLength(string, encoding) {\n    if ($51861dfc7ca9d588$var$Buffer.isBuffer(string)) return string.length;\n    if (ArrayBuffer.isView(string) || $51861dfc7ca9d588$var$isInstance(string, ArrayBuffer)) return string.byteLength;\n    if (typeof string !== \"string\") throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);\n    const len = string.length;\n    const mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0;\n    // Use a for loop to avoid recursion\n    let loweredCase = false;\n    for(;;)switch(encoding){\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n            return len;\n        case \"utf8\":\n        case \"utf-8\":\n            return $51861dfc7ca9d588$var$utf8ToBytes(string).length;\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return len * 2;\n        case \"hex\":\n            return len >>> 1;\n        case \"base64\":\n            return $51861dfc7ca9d588$var$base64ToBytes(string).length;\n        default:\n            if (loweredCase) return mustMatch ? -1 : $51861dfc7ca9d588$var$utf8ToBytes(string).length // assume utf8\n            ;\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n    }\n}\n$51861dfc7ca9d588$var$Buffer.byteLength = $51861dfc7ca9d588$var$byteLength;\nfunction $51861dfc7ca9d588$var$slowToString(encoding, start, end) {\n    let loweredCase = false;\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) start = 0;\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) return \"\";\n    if (end === undefined || end > this.length) end = this.length;\n    if (end <= 0) return \"\";\n    // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0;\n    start >>>= 0;\n    if (end <= start) return \"\";\n    if (!encoding) encoding = \"utf8\";\n    while(true)switch(encoding){\n        case \"hex\":\n            return $51861dfc7ca9d588$var$hexSlice(this, start, end);\n        case \"utf8\":\n        case \"utf-8\":\n            return $51861dfc7ca9d588$var$utf8Slice(this, start, end);\n        case \"ascii\":\n            return $51861dfc7ca9d588$var$asciiSlice(this, start, end);\n        case \"latin1\":\n        case \"binary\":\n            return $51861dfc7ca9d588$var$latin1Slice(this, start, end);\n        case \"base64\":\n            return $51861dfc7ca9d588$var$base64Slice(this, start, end);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return $51861dfc7ca9d588$var$utf16leSlice(this, start, end);\n        default:\n            if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (encoding + \"\").toLowerCase();\n            loweredCase = true;\n    }\n}\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\n$51861dfc7ca9d588$var$Buffer.prototype._isBuffer = true;\nfunction $51861dfc7ca9d588$var$swap(b, n, m) {\n    const i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.swap16 = function swap16() {\n    const len = this.length;\n    if (len % 2 !== 0) throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n    for(let i = 0; i < len; i += 2)$51861dfc7ca9d588$var$swap(this, i, i + 1);\n    return this;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.swap32 = function swap32() {\n    const len = this.length;\n    if (len % 4 !== 0) throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n    for(let i = 0; i < len; i += 4){\n        $51861dfc7ca9d588$var$swap(this, i, i + 3);\n        $51861dfc7ca9d588$var$swap(this, i + 1, i + 2);\n    }\n    return this;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.swap64 = function swap64() {\n    const len = this.length;\n    if (len % 8 !== 0) throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n    for(let i = 0; i < len; i += 8){\n        $51861dfc7ca9d588$var$swap(this, i, i + 7);\n        $51861dfc7ca9d588$var$swap(this, i + 1, i + 6);\n        $51861dfc7ca9d588$var$swap(this, i + 2, i + 5);\n        $51861dfc7ca9d588$var$swap(this, i + 3, i + 4);\n    }\n    return this;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.toString = function toString() {\n    const length = this.length;\n    if (length === 0) return \"\";\n    if (arguments.length === 0) return $51861dfc7ca9d588$var$utf8Slice(this, 0, length);\n    return $51861dfc7ca9d588$var$slowToString.apply(this, arguments);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.toLocaleString = $51861dfc7ca9d588$var$Buffer.prototype.toString;\n$51861dfc7ca9d588$var$Buffer.prototype.equals = function equals(b) {\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(b)) throw new TypeError(\"Argument must be a Buffer\");\n    if (this === b) return true;\n    return $51861dfc7ca9d588$var$Buffer.compare(this, b) === 0;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.inspect = function inspect() {\n    let str = \"\";\n    const max = $51861dfc7ca9d588$export$f99ded8fe4b79145;\n    str = this.toString(\"hex\", 0, max).replace(/(.{2})/g, \"$1 \").trim();\n    if (this.length > max) str += \" ... \";\n    return \"<Buffer \" + str + \">\";\n};\nif ($51861dfc7ca9d588$var$customInspectSymbol) $51861dfc7ca9d588$var$Buffer.prototype[$51861dfc7ca9d588$var$customInspectSymbol] = $51861dfc7ca9d588$var$Buffer.prototype.inspect;\n$51861dfc7ca9d588$var$Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if ($51861dfc7ca9d588$var$isInstance(target, Uint8Array)) target = $51861dfc7ca9d588$var$Buffer.from(target, target.offset, target.byteLength);\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(target)) throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);\n    if (start === undefined) start = 0;\n    if (end === undefined) end = target ? target.length : 0;\n    if (thisStart === undefined) thisStart = 0;\n    if (thisEnd === undefined) thisEnd = this.length;\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError(\"out of range index\");\n    if (thisStart >= thisEnd && start >= end) return 0;\n    if (thisStart >= thisEnd) return -1;\n    if (start >= end) return 1;\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    let x = thisEnd - thisStart;\n    let y = end - start;\n    const len = Math.min(x, y);\n    const thisCopy = this.slice(thisStart, thisEnd);\n    const targetCopy = target.slice(start, end);\n    for(let i = 0; i < len; ++i)if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break;\n    }\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n};\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction $51861dfc7ca9d588$var$bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1;\n    // Normalize byteOffset\n    if (typeof byteOffset === \"string\") {\n        encoding = byteOffset;\n        byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff;\n    else if (byteOffset < -2147483648) byteOffset = -2147483648;\n    byteOffset = +byteOffset // Coerce to Number.\n    ;\n    if ($51861dfc7ca9d588$var$numberIsNaN(byteOffset)) // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n    if (byteOffset >= buffer.length) {\n        if (dir) return -1;\n        else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0;\n        else return -1;\n    }\n    // Normalize val\n    if (typeof val === \"string\") val = $51861dfc7ca9d588$var$Buffer.from(val, encoding);\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if ($51861dfc7ca9d588$var$Buffer.isBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) return -1;\n        return $51861dfc7ca9d588$var$arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === \"number\") {\n        val = val & 0xFF // Search for a byte value [0-255]\n        ;\n        if (typeof Uint8Array.prototype.indexOf === \"function\") {\n            if (dir) return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n            else return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n        return $51861dfc7ca9d588$var$arrayIndexOf(buffer, [\n            val\n        ], byteOffset, encoding, dir);\n    }\n    throw new TypeError(\"val must be string, number or Buffer\");\n}\nfunction $51861dfc7ca9d588$var$arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    let indexSize = 1;\n    let arrLength = arr.length;\n    let valLength = val.length;\n    if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase();\n        if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n            if (arr.length < 2 || val.length < 2) return -1;\n            indexSize = 2;\n            arrLength /= 2;\n            valLength /= 2;\n            byteOffset /= 2;\n        }\n    }\n    function read(buf, i) {\n        if (indexSize === 1) return buf[i];\n        else return buf.readUInt16BE(i * indexSize);\n    }\n    let i;\n    if (dir) {\n        let foundIndex = -1;\n        for(i = byteOffset; i < arrLength; i++)if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1) foundIndex = i;\n            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n            if (foundIndex !== -1) i -= i - foundIndex;\n            foundIndex = -1;\n        }\n    } else {\n        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n        for(i = byteOffset; i >= 0; i--){\n            let found = true;\n            for(let j = 0; j < valLength; j++)if (read(arr, i + j) !== read(val, j)) {\n                found = false;\n                break;\n            }\n            if (found) return i;\n        }\n    }\n    return -1;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return $51861dfc7ca9d588$var$bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return $51861dfc7ca9d588$var$bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction $51861dfc7ca9d588$var$hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    const remaining = buf.length - offset;\n    if (!length) length = remaining;\n    else {\n        length = Number(length);\n        if (length > remaining) length = remaining;\n    }\n    const strLen = string.length;\n    if (length > strLen / 2) length = strLen / 2;\n    let i;\n    for(i = 0; i < length; ++i){\n        const parsed = parseInt(string.substr(i * 2, 2), 16);\n        if ($51861dfc7ca9d588$var$numberIsNaN(parsed)) return i;\n        buf[offset + i] = parsed;\n    }\n    return i;\n}\nfunction $51861dfc7ca9d588$var$utf8Write(buf, string, offset, length) {\n    return $51861dfc7ca9d588$var$blitBuffer($51861dfc7ca9d588$var$utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction $51861dfc7ca9d588$var$asciiWrite(buf, string, offset, length) {\n    return $51861dfc7ca9d588$var$blitBuffer($51861dfc7ca9d588$var$asciiToBytes(string), buf, offset, length);\n}\nfunction $51861dfc7ca9d588$var$base64Write(buf, string, offset, length) {\n    return $51861dfc7ca9d588$var$blitBuffer($51861dfc7ca9d588$var$base64ToBytes(string), buf, offset, length);\n}\nfunction $51861dfc7ca9d588$var$ucs2Write(buf, string, offset, length) {\n    return $51861dfc7ca9d588$var$blitBuffer($51861dfc7ca9d588$var$utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n$51861dfc7ca9d588$var$Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        encoding = \"utf8\";\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === \"string\") {\n        encoding = offset;\n        length = this.length;\n        offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n        offset = offset >>> 0;\n        if (isFinite(length)) {\n            length = length >>> 0;\n            if (encoding === undefined) encoding = \"utf8\";\n        } else {\n            encoding = length;\n            length = undefined;\n        }\n    } else throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n    const remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError(\"Attempt to write outside buffer bounds\");\n    if (!encoding) encoding = \"utf8\";\n    let loweredCase = false;\n    for(;;)switch(encoding){\n        case \"hex\":\n            return $51861dfc7ca9d588$var$hexWrite(this, string, offset, length);\n        case \"utf8\":\n        case \"utf-8\":\n            return $51861dfc7ca9d588$var$utf8Write(this, string, offset, length);\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n            return $51861dfc7ca9d588$var$asciiWrite(this, string, offset, length);\n        case \"base64\":\n            // Warning: maxLength not taken into account in base64Write\n            return $51861dfc7ca9d588$var$base64Write(this, string, offset, length);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return $51861dfc7ca9d588$var$ucs2Write(this, string, offset, length);\n        default:\n            if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n    }\n};\n$51861dfc7ca9d588$var$Buffer.prototype.toJSON = function toJSON() {\n    return {\n        type: \"Buffer\",\n        data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n};\nfunction $51861dfc7ca9d588$var$base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) return $eeb0961446aae8e3$export$6100ba28696e12de(buf);\n    else return $eeb0961446aae8e3$export$6100ba28696e12de(buf.slice(start, end));\n}\nfunction $51861dfc7ca9d588$var$utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    const res = [];\n    let i = start;\n    while(i < end){\n        const firstByte = buf[i];\n        let codePoint = null;\n        let bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n        if (i + bytesPerSequence <= end) {\n            let secondByte, thirdByte, fourthByte, tempCodePoint;\n            switch(bytesPerSequence){\n                case 1:\n                    if (firstByte < 0x80) codePoint = firstByte;\n                    break;\n                case 2:\n                    secondByte = buf[i + 1];\n                    if ((secondByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n                        if (tempCodePoint > 0x7F) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 3:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n                        if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) codePoint = tempCodePoint;\n                    }\n                    break;\n                case 4:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    fourthByte = buf[i + 3];\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                        tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n                        if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) codePoint = tempCodePoint;\n                    }\n            }\n        }\n        if (codePoint === null) {\n            // we did not generate a valid codePoint so insert a\n            // replacement char (U+FFFD) and advance only 1 byte\n            codePoint = 0xFFFD;\n            bytesPerSequence = 1;\n        } else if (codePoint > 0xFFFF) {\n            // encode to utf16 (surrogate pair dance)\n            codePoint -= 0x10000;\n            res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n            codePoint = 0xDC00 | codePoint & 0x3FF;\n        }\n        res.push(codePoint);\n        i += bytesPerSequence;\n    }\n    return $51861dfc7ca9d588$var$decodeCodePointsArray(res);\n}\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst $51861dfc7ca9d588$var$MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction $51861dfc7ca9d588$var$decodeCodePointsArray(codePoints) {\n    const len = codePoints.length;\n    if (len <= $51861dfc7ca9d588$var$MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n    ;\n    // Decode in chunks to avoid \"call stack size exceeded\".\n    let res = \"\";\n    let i = 0;\n    while(i < len)res += String.fromCharCode.apply(String, codePoints.slice(i, i += $51861dfc7ca9d588$var$MAX_ARGUMENTS_LENGTH));\n    return res;\n}\nfunction $51861dfc7ca9d588$var$asciiSlice(buf, start, end) {\n    let ret = \"\";\n    end = Math.min(buf.length, end);\n    for(let i = start; i < end; ++i)ret += String.fromCharCode(buf[i] & 0x7F);\n    return ret;\n}\nfunction $51861dfc7ca9d588$var$latin1Slice(buf, start, end) {\n    let ret = \"\";\n    end = Math.min(buf.length, end);\n    for(let i = start; i < end; ++i)ret += String.fromCharCode(buf[i]);\n    return ret;\n}\nfunction $51861dfc7ca9d588$var$hexSlice(buf, start, end) {\n    const len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    let out = \"\";\n    for(let i = start; i < end; ++i)out += $51861dfc7ca9d588$var$hexSliceLookupTable[buf[i]];\n    return out;\n}\nfunction $51861dfc7ca9d588$var$utf16leSlice(buf, start, end) {\n    const bytes = buf.slice(start, end);\n    let res = \"\";\n    // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n    for(let i = 0; i < bytes.length - 1; i += 2)res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    return res;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.slice = function slice(start, end) {\n    const len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n    if (start < 0) {\n        start += len;\n        if (start < 0) start = 0;\n    } else if (start > len) start = len;\n    if (end < 0) {\n        end += len;\n        if (end < 0) end = 0;\n    } else if (end > len) end = len;\n    if (end < start) end = start;\n    const newBuf = this.subarray(start, end);\n    // Return an augmented `Uint8Array` instance\n    Object.setPrototypeOf(newBuf, $51861dfc7ca9d588$var$Buffer.prototype);\n    return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */ function $51861dfc7ca9d588$var$checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError(\"offset is not uint\");\n    if (offset + ext > length) throw new RangeError(\"Trying to access beyond buffer length\");\n}\n$51861dfc7ca9d588$var$Buffer.prototype.readUintLE = $51861dfc7ca9d588$var$Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, byteLength, this.length);\n    let val = this[offset];\n    let mul = 1;\n    let i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    return val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUintBE = $51861dfc7ca9d588$var$Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, byteLength, this.length);\n    let val = this[offset + --byteLength];\n    let mul = 1;\n    while(byteLength > 0 && (mul *= 0x100))val += this[offset + --byteLength] * mul;\n    return val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint8 = $51861dfc7ca9d588$var$Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 1, this.length);\n    return this[offset];\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint16LE = $51861dfc7ca9d588$var$Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint16BE = $51861dfc7ca9d588$var$Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint32LE = $51861dfc7ca9d588$var$Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readUint32BE = $51861dfc7ca9d588$var$Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readBigUInt64LE = $51861dfc7ca9d588$var$defineBigIntMethod(function readBigUInt64LE(offset) {\n    offset = offset >>> 0;\n    $51861dfc7ca9d588$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $51861dfc7ca9d588$var$boundsError(offset, this.length - 8);\n    const lo = first + this[++offset] * 256 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n    const hi = this[++offset] + this[++offset] * 256 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n    return BigInt(lo) + (BigInt(hi) << BigInt(32));\n});\n$51861dfc7ca9d588$var$Buffer.prototype.readBigUInt64BE = $51861dfc7ca9d588$var$defineBigIntMethod(function readBigUInt64BE(offset) {\n    offset = offset >>> 0;\n    $51861dfc7ca9d588$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $51861dfc7ca9d588$var$boundsError(offset, this.length - 8);\n    const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + this[++offset];\n    const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + last;\n    return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n});\n$51861dfc7ca9d588$var$Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, byteLength, this.length);\n    let val = this[offset];\n    let mul = 1;\n    let i = 0;\n    while(++i < byteLength && (mul *= 0x100))val += this[offset + i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, byteLength, this.length);\n    let i = byteLength;\n    let mul = 1;\n    let val = this[offset + --i];\n    while(i > 0 && (mul *= 0x100))val += this[offset + --i] * mul;\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 2, this.length);\n    const val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 2, this.length);\n    const val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readBigInt64LE = $51861dfc7ca9d588$var$defineBigIntMethod(function readBigInt64LE(offset) {\n    offset = offset >>> 0;\n    $51861dfc7ca9d588$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $51861dfc7ca9d588$var$boundsError(offset, this.length - 8);\n    const val = this[offset + 4] + this[offset + 5] * 256 + this[offset + 6] * 2 ** 16 + (last << 24 // Overflow\n    );\n    return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 256 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n});\n$51861dfc7ca9d588$var$Buffer.prototype.readBigInt64BE = $51861dfc7ca9d588$var$defineBigIntMethod(function readBigInt64BE(offset) {\n    offset = offset >>> 0;\n    $51861dfc7ca9d588$var$validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n    if (first === undefined || last === undefined) $51861dfc7ca9d588$var$boundsError(offset, this.length - 8);\n    const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 + this[++offset] * 256 + this[++offset];\n    return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 256 + last);\n});\n$51861dfc7ca9d588$var$Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return $7221566bd4d49f44$export$aafa59e2e03f2942(this, offset, true, 23, 4);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 4, this.length);\n    return $7221566bd4d49f44$export$aafa59e2e03f2942(this, offset, false, 23, 4);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 8, this.length);\n    return $7221566bd4d49f44$export$aafa59e2e03f2942(this, offset, true, 52, 8);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkOffset(offset, 8, this.length);\n    return $7221566bd4d49f44$export$aafa59e2e03f2942(this, offset, false, 52, 8);\n};\nfunction $51861dfc7ca9d588$var$checkInt(buf, value, offset, ext, max, min) {\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n}\n$51861dfc7ca9d588$var$Buffer.prototype.writeUintLE = $51861dfc7ca9d588$var$Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        $51861dfc7ca9d588$var$checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    let mul = 1;\n    let i = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUintBE = $51861dfc7ca9d588$var$Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) {\n        const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        $51861dfc7ca9d588$var$checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n    let i = byteLength - 1;\n    let mul = 1;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100))this[offset + i] = value / mul & 0xFF;\n    return offset + byteLength;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint8 = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint16LE = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint16BE = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint32LE = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeUint32BE = $51861dfc7ca9d588$var$Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\nfunction $51861dfc7ca9d588$var$wrtBigUInt64LE(buf, value, offset, min, max) {\n    $51861dfc7ca9d588$var$checkIntBI(value, min, max, buf, offset, 7);\n    let lo = Number(value & BigInt(0xffffffff));\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    return offset;\n}\nfunction $51861dfc7ca9d588$var$wrtBigUInt64BE(buf, value, offset, min, max) {\n    $51861dfc7ca9d588$var$checkIntBI(value, min, max, buf, offset, 7);\n    let lo = Number(value & BigInt(0xffffffff));\n    buf[offset + 7] = lo;\n    lo = lo >> 8;\n    buf[offset + 6] = lo;\n    lo = lo >> 8;\n    buf[offset + 5] = lo;\n    lo = lo >> 8;\n    buf[offset + 4] = lo;\n    let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset + 3] = hi;\n    hi = hi >> 8;\n    buf[offset + 2] = hi;\n    hi = hi >> 8;\n    buf[offset + 1] = hi;\n    hi = hi >> 8;\n    buf[offset] = hi;\n    return offset + 8;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.writeBigUInt64LE = $51861dfc7ca9d588$var$defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n    return $51861dfc7ca9d588$var$wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n});\n$51861dfc7ca9d588$var$Buffer.prototype.writeBigUInt64BE = $51861dfc7ca9d588$var$defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n    return $51861dfc7ca9d588$var$wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n});\n$51861dfc7ca9d588$var$Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        const limit = Math.pow(2, 8 * byteLength - 1);\n        $51861dfc7ca9d588$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    let i = 0;\n    let mul = 1;\n    let sub = 0;\n    this[offset] = value & 0xFF;\n    while(++i < byteLength && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) {\n        const limit = Math.pow(2, 8 * byteLength - 1);\n        $51861dfc7ca9d588$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n    let i = byteLength - 1;\n    let mul = 1;\n    let sub = 0;\n    this[offset + i] = value & 0xFF;\n    while(--i >= 0 && (mul *= 0x100)){\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) sub = 1;\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n    return offset + byteLength;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 1, 0x7f, -128);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 2, 0x7fff, -32768);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeBigInt64LE = $51861dfc7ca9d588$var$defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n    return $51861dfc7ca9d588$var$wrtBigUInt64LE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n});\n$51861dfc7ca9d588$var$Buffer.prototype.writeBigInt64BE = $51861dfc7ca9d588$var$defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n    return $51861dfc7ca9d588$var$wrtBigUInt64BE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n});\nfunction $51861dfc7ca9d588$var$checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n    if (offset < 0) throw new RangeError(\"Index out of range\");\n}\nfunction $51861dfc7ca9d588$var$writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -340282346638528860000000000000000000000);\n    $7221566bd4d49f44$export$68d8715fc104d294(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return $51861dfc7ca9d588$var$writeFloat(this, value, offset, true, noAssert);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return $51861dfc7ca9d588$var$writeFloat(this, value, offset, false, noAssert);\n};\nfunction $51861dfc7ca9d588$var$writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) $51861dfc7ca9d588$var$checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n    $7221566bd4d49f44$export$68d8715fc104d294(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n}\n$51861dfc7ca9d588$var$Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return $51861dfc7ca9d588$var$writeDouble(this, value, offset, true, noAssert);\n};\n$51861dfc7ca9d588$var$Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return $51861dfc7ca9d588$var$writeDouble(this, value, offset, false, noAssert);\n};\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n$51861dfc7ca9d588$var$Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!$51861dfc7ca9d588$var$Buffer.isBuffer(target)) throw new TypeError(\"argument should be a Buffer\");\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start;\n    // Copy 0 bytes; we're done\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0;\n    // Fatal error conditions\n    if (targetStart < 0) throw new RangeError(\"targetStart out of bounds\");\n    if (start < 0 || start >= this.length) throw new RangeError(\"Index out of range\");\n    if (end < 0) throw new RangeError(\"sourceEnd out of bounds\");\n    // Are we oob?\n    if (end > this.length) end = this.length;\n    if (target.length - targetStart < end - start) end = target.length - targetStart + start;\n    const len = end - start;\n    if (this === target && typeof Uint8Array.prototype.copyWithin === \"function\") // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n    else Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    return len;\n};\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n$51861dfc7ca9d588$var$Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === \"string\") {\n        if (typeof start === \"string\") {\n            encoding = start;\n            start = 0;\n            end = this.length;\n        } else if (typeof end === \"string\") {\n            encoding = end;\n            end = this.length;\n        }\n        if (encoding !== undefined && typeof encoding !== \"string\") throw new TypeError(\"encoding must be a string\");\n        if (typeof encoding === \"string\" && !$51861dfc7ca9d588$var$Buffer.isEncoding(encoding)) throw new TypeError(\"Unknown encoding: \" + encoding);\n        if (val.length === 1) {\n            const code = val.charCodeAt(0);\n            if (encoding === \"utf8\" && code < 128 || encoding === \"latin1\") // Fast path: If `val` fits into a single byte, use that numeric value.\n            val = code;\n        }\n    } else if (typeof val === \"number\") val = val & 255;\n    else if (typeof val === \"boolean\") val = Number(val);\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) throw new RangeError(\"Out of range index\");\n    if (end <= start) return this;\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    let i;\n    if (typeof val === \"number\") for(i = start; i < end; ++i)this[i] = val;\n    else {\n        const bytes = $51861dfc7ca9d588$var$Buffer.isBuffer(val) ? val : $51861dfc7ca9d588$var$Buffer.from(val, encoding);\n        const len = bytes.length;\n        if (len === 0) throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n        for(i = 0; i < end - start; ++i)this[i + start] = bytes[i % len];\n    }\n    return this;\n};\n// CUSTOM ERRORS\n// =============\n// Simplified versions from Node, changed for Buffer-only usage\nconst $51861dfc7ca9d588$var$errors = {};\nfunction $51861dfc7ca9d588$var$E(sym, getMessage, Base) {\n    $51861dfc7ca9d588$var$errors[sym] = class NodeError extends Base {\n        constructor(){\n            super();\n            Object.defineProperty(this, \"message\", {\n                value: getMessage.apply(this, arguments),\n                writable: true,\n                configurable: true\n            });\n            // Add the error code to the name to include it in the stack trace.\n            this.name = `${this.name} [${sym}]`;\n            // Access the stack to generate the error message including the error code\n            // from the name.\n            this.stack // eslint-disable-line no-unused-expressions\n            ;\n            // Reset the name to the actual name.\n            delete this.name;\n        }\n        get code() {\n            return sym;\n        }\n        set code(value) {\n            Object.defineProperty(this, \"code\", {\n                configurable: true,\n                enumerable: true,\n                value: value,\n                writable: true\n            });\n        }\n        toString() {\n            return `${this.name} [${sym}]: ${this.message}`;\n        }\n    };\n}\n$51861dfc7ca9d588$var$E(\"ERR_BUFFER_OUT_OF_BOUNDS\", function(name) {\n    if (name) return `${name} is outside of buffer bounds`;\n    return \"Attempt to access memory outside buffer bounds\";\n}, RangeError);\n$51861dfc7ca9d588$var$E(\"ERR_INVALID_ARG_TYPE\", function(name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n}, TypeError);\n$51861dfc7ca9d588$var$E(\"ERR_OUT_OF_RANGE\", function(str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`;\n    let received = input;\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) received = $51861dfc7ca9d588$var$addNumericalSeparator(String(input));\n    else if (typeof input === \"bigint\") {\n        received = String(input);\n        if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) received = $51861dfc7ca9d588$var$addNumericalSeparator(received);\n        received += \"n\";\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n}, RangeError);\nfunction $51861dfc7ca9d588$var$addNumericalSeparator(val) {\n    let res = \"\";\n    let i = val.length;\n    const start = val[0] === \"-\" ? 1 : 0;\n    for(; i >= start + 4; i -= 3)res = `_${val.slice(i - 3, i)}${res}`;\n    return `${val.slice(0, i)}${res}`;\n}\n// CHECK FUNCTIONS\n// ===============\nfunction $51861dfc7ca9d588$var$checkBounds(buf, offset, byteLength) {\n    $51861dfc7ca9d588$var$validateNumber(offset, \"offset\");\n    if (buf[offset] === undefined || buf[offset + byteLength] === undefined) $51861dfc7ca9d588$var$boundsError(offset, buf.length - (byteLength + 1));\n}\nfunction $51861dfc7ca9d588$var$checkIntBI(value, min, max, buf, offset, byteLength) {\n    if (value > max || value < min) {\n        const n = typeof min === \"bigint\" ? \"n\" : \"\";\n        let range;\n        if (byteLength > 3) {\n            if (min === 0 || min === BigInt(0)) range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n            else range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` + `${(byteLength + 1) * 8 - 1}${n}`;\n        } else range = `>= ${min}${n} and <= ${max}${n}`;\n        throw new $51861dfc7ca9d588$var$errors.ERR_OUT_OF_RANGE(\"value\", range, value);\n    }\n    $51861dfc7ca9d588$var$checkBounds(buf, offset, byteLength);\n}\nfunction $51861dfc7ca9d588$var$validateNumber(value, name) {\n    if (typeof value !== \"number\") throw new $51861dfc7ca9d588$var$errors.ERR_INVALID_ARG_TYPE(name, \"number\", value);\n}\nfunction $51861dfc7ca9d588$var$boundsError(value, length, type) {\n    if (Math.floor(value) !== value) {\n        $51861dfc7ca9d588$var$validateNumber(value, type);\n        throw new $51861dfc7ca9d588$var$errors.ERR_OUT_OF_RANGE(type || \"offset\", \"an integer\", value);\n    }\n    if (length < 0) throw new $51861dfc7ca9d588$var$errors.ERR_BUFFER_OUT_OF_BOUNDS();\n    throw new $51861dfc7ca9d588$var$errors.ERR_OUT_OF_RANGE(type || \"offset\", `>= ${type ? 1 : 0} and <= ${length}`, value);\n}\n// HELPER FUNCTIONS\n// ================\nconst $51861dfc7ca9d588$var$INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction $51861dfc7ca9d588$var$base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split(\"=\")[0];\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = str.trim().replace($51861dfc7ca9d588$var$INVALID_BASE64_RE, \"\");\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return \"\";\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while(str.length % 4 !== 0)str = str + \"=\";\n    return str;\n}\nfunction $51861dfc7ca9d588$var$utf8ToBytes(string, units) {\n    units = units || Infinity;\n    let codePoint;\n    const length = string.length;\n    let leadSurrogate = null;\n    const bytes = [];\n    for(let i = 0; i < length; ++i){\n        codePoint = string.charCodeAt(i);\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xDBFF) {\n                    // unexpected trail\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                } else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                // valid lead\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // 2 leads in a row\n            if (codePoint < 0xDC00) {\n                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // valid surrogate pair\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        } else if (leadSurrogate) // valid bmp char, but last char was a lead\n        {\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        }\n        leadSurrogate = null;\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0) break;\n            bytes.push(codePoint);\n        } else if (codePoint < 0x800) {\n            if ((units -= 2) < 0) break;\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0) break;\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0) break;\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else throw new Error(\"Invalid code point\");\n    }\n    return bytes;\n}\nfunction $51861dfc7ca9d588$var$asciiToBytes(str) {\n    const byteArray = [];\n    for(let i = 0; i < str.length; ++i)// Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n    return byteArray;\n}\nfunction $51861dfc7ca9d588$var$utf16leToBytes(str, units) {\n    let c, hi, lo;\n    const byteArray = [];\n    for(let i = 0; i < str.length; ++i){\n        if ((units -= 2) < 0) break;\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n    }\n    return byteArray;\n}\nfunction $51861dfc7ca9d588$var$base64ToBytes(str) {\n    return $eeb0961446aae8e3$export$d622b2ad8d90c771($51861dfc7ca9d588$var$base64clean(str));\n}\nfunction $51861dfc7ca9d588$var$blitBuffer(src, dst, offset, length) {\n    let i;\n    for(i = 0; i < length; ++i){\n        if (i + offset >= dst.length || i >= src.length) break;\n        dst[i + offset] = src[i];\n    }\n    return i;\n}\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction $51861dfc7ca9d588$var$isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nfunction $51861dfc7ca9d588$var$numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj // eslint-disable-line no-self-compare\n    ;\n}\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst $51861dfc7ca9d588$var$hexSliceLookupTable = function() {\n    const alphabet = \"0123456789abcdef\";\n    const table = new Array(256);\n    for(let i = 0; i < 16; ++i){\n        const i16 = i * 16;\n        for(let j = 0; j < 16; ++j)table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n    return table;\n}();\n// Return not function with Error if BigInt not supported\nfunction $51861dfc7ca9d588$var$defineBigIntMethod(fn) {\n    return typeof BigInt === \"undefined\" ? $51861dfc7ca9d588$var$BufferBigIntNotDefined : fn;\n}\nfunction $51861dfc7ca9d588$var$BufferBigIntNotDefined() {\n    throw new Error(\"BigInt not supported\");\n}\n\n\nvar $79cd7463df39241d$require$Buffer = $51861dfc7ca9d588$export$a143d493d941bafc;\nfunction $79cd7463df39241d$export$c94b5dd2e133d87c(parser) {\n    /**\n     * Parse a HTML string or a node.\n     *\n     * @param content - The HTML string or node.\n     * @param options - The parser options.\n     * @param isDocument - If `content` is a document.\n     * @param context - The context node in the DOM tree.\n     * @returns The parsed document node.\n     */ return function parse(content, options, isDocument, context) {\n        if (typeof $79cd7463df39241d$require$Buffer !== \"undefined\" && $79cd7463df39241d$require$Buffer.isBuffer(content)) content = content.toString();\n        if (typeof content === \"string\") return parser(content, options, isDocument, context);\n        const doc = content;\n        if (!Array.isArray(doc) && (0, $298fc1d08428934f$export$62858bae88b53fd0)(doc)) // If `doc` is already a root, just return it\n        return doc;\n        // Add conent to new root element\n        const root = new (0, $298fc1d08428934f$export$b34a105447964f9f)([]);\n        // Update the DOM using the root\n        $79cd7463df39241d$export$722fbec263ad908a(doc, root);\n        return root;\n    };\n}\nfunction $79cd7463df39241d$export$722fbec263ad908a(newChilds, parent) {\n    // Normalize\n    const arr = Array.isArray(newChilds) ? newChilds : [\n        newChilds\n    ];\n    // Update parent\n    if (parent) parent.children = arr;\n    else parent = null;\n    // Update neighbors\n    for(let i = 0; i < arr.length; i++){\n        const node = arr[i];\n        // Cleanly remove existing nodes from their previous structures.\n        if (node.parent && node.parent.children !== arr) (0, $22117dbf00ca9159$export$f883456a56996078)(node);\n        if (parent) {\n            node.prev = arr[i - 1] || null;\n            node.next = arr[i + 1] || null;\n        } else node.prev = node.next = null;\n        node.parent = parent;\n    }\n    return parent;\n}\n\n\n\n\n\nfunction $b8417ab04485f985$export$badf47413dd1dfee(elem, clone) {\n    if (elem == null) return [];\n    if ((0, $ed43754fae89976b$export$799a4b197f11d37)(elem)) return clone ? (0, $ed43754fae89976b$export$773334283a3d1a04)(elem.get()) : elem.get();\n    if (Array.isArray(elem)) return elem.reduce((newElems, el)=>newElems.concat(this._makeDomArray(el, clone)), []);\n    if (typeof elem === \"string\") return this._parse(elem, this.options, false, null).children;\n    return clone ? (0, $ed43754fae89976b$export$773334283a3d1a04)([\n        elem\n    ]) : [\n        elem\n    ];\n}\nfunction $b8417ab04485f985$var$_insert(concatenator) {\n    return function(...elems) {\n        const lastIdx = this.length - 1;\n        return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el, i)=>{\n            if (!(0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(el)) return;\n            const domSrc = typeof elems[0] === \"function\" ? elems[0].call(el, i, this._render(el.children)) : elems;\n            const dom = this._makeDomArray(domSrc, i < lastIdx);\n            concatenator(dom, el.children, el);\n        });\n    };\n}\n/**\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @private\n * @category Manipulation\n * @param array - Target array to splice.\n * @param spliceIdx - Index at which to begin changing the array.\n * @param spliceCount - Number of elements to remove from the array.\n * @param newElems - Elements to insert into the array.\n * @param parent - The parent of the node.\n * @returns The spliced array.\n */ function $b8417ab04485f985$var$uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {\n    var _a, _b;\n    const spliceArgs = [\n        spliceIdx,\n        spliceCount,\n        ...newElems\n    ];\n    const prev = spliceIdx === 0 ? null : array[spliceIdx - 1];\n    const next = spliceIdx + spliceCount >= array.length ? null : array[spliceIdx + spliceCount];\n    /*\n     * Before splicing in new elements, ensure they do not already appear in the\n     * current array.\n     */ for(let idx = 0; idx < newElems.length; ++idx){\n        const node = newElems[idx];\n        const oldParent = node.parent;\n        if (oldParent) {\n            const oldSiblings = oldParent.children;\n            const prevIdx = oldSiblings.indexOf(node);\n            if (prevIdx > -1) {\n                oldParent.children.splice(prevIdx, 1);\n                if (parent === oldParent && spliceIdx > prevIdx) spliceArgs[0]--;\n            }\n        }\n        node.parent = parent;\n        if (node.prev) node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;\n        if (node.next) node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;\n        node.prev = idx === 0 ? prev : newElems[idx - 1];\n        node.next = idx === newElems.length - 1 ? next : newElems[idx + 1];\n    }\n    if (prev) prev.next = newElems[0];\n    if (next) next.prev = newElems[newElems.length - 1];\n    return array.splice(...spliceArgs);\n}\nfunction $b8417ab04485f985$export$9ceefe31f12a3778(target) {\n    const appendTarget = (0, $ed43754fae89976b$export$799a4b197f11d37)(target) ? target : this._make(target);\n    appendTarget.append(this);\n    return this;\n}\nfunction $b8417ab04485f985$export$44da2b52169043ea(target) {\n    const prependTarget = (0, $ed43754fae89976b$export$799a4b197f11d37)(target) ? target : this._make(target);\n    prependTarget.prepend(this);\n    return this;\n}\nconst $b8417ab04485f985$export$10d8903dec122b9d = $b8417ab04485f985$var$_insert((dom, children, parent)=>{\n    $b8417ab04485f985$var$uniqueSplice(children, children.length, 0, dom, parent);\n});\nconst $b8417ab04485f985$export$68159836694e22c1 = $b8417ab04485f985$var$_insert((dom, children, parent)=>{\n    $b8417ab04485f985$var$uniqueSplice(children, 0, 0, dom, parent);\n});\nfunction $b8417ab04485f985$var$_wrap(insert) {\n    return function(wrapper) {\n        const lastIdx = this.length - 1;\n        const lastParent = this.parents().last();\n        for(let i = 0; i < this.length; i++){\n            const el = this[i];\n            const wrap = typeof wrapper === \"function\" ? wrapper.call(el, i, el) : typeof wrapper === \"string\" && !(0, $ed43754fae89976b$export$144ef0648535ac5a)(wrapper) ? lastParent.find(wrapper).clone() : wrapper;\n            const [wrapperDom] = this._makeDomArray(wrap, i < lastIdx);\n            if (!wrapperDom || !(0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(wrapperDom)) continue;\n            let elInsertLocation = wrapperDom;\n            /*\n             * Find the deepest child. Only consider the first tag child of each node\n             * (ignore text); stop if no children are found.\n             */ let j = 0;\n            while(j < elInsertLocation.children.length){\n                const child = elInsertLocation.children[j];\n                if ((0, $298fc1d08428934f$export$3bf645f08efe3292)(child)) {\n                    elInsertLocation = child;\n                    j = 0;\n                } else j++;\n            }\n            insert(el, elInsertLocation, [\n                wrapperDom\n            ]);\n        }\n        return this;\n    };\n}\nconst $b8417ab04485f985$export$4997ffc0176396a6 = $b8417ab04485f985$var$_wrap((el, elInsertLocation, wrapperDom)=>{\n    const { parent: parent } = el;\n    if (!parent) return;\n    const siblings = parent.children;\n    const index = siblings.indexOf(el);\n    (0, $79cd7463df39241d$export$722fbec263ad908a)([\n        el\n    ], elInsertLocation);\n    /*\n     * The previous operation removed the current element from the `siblings`\n     * array, so the `dom` array can be inserted without removing any\n     * additional elements.\n     */ $b8417ab04485f985$var$uniqueSplice(siblings, index, 0, wrapperDom, parent);\n});\nconst $b8417ab04485f985$export$8e43de5b24cc2c01 = $b8417ab04485f985$var$_wrap((el, elInsertLocation, wrapperDom)=>{\n    if (!(0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(el)) return;\n    (0, $79cd7463df39241d$export$722fbec263ad908a)(el.children, elInsertLocation);\n    (0, $79cd7463df39241d$export$722fbec263ad908a)(wrapperDom, el);\n});\nfunction $b8417ab04485f985$export$debb760848ca95a(selector) {\n    this.parent(selector).not(\"body\").each((_, el)=>{\n        this._make(el).replaceWith(el.children);\n    });\n    return this;\n}\nfunction $b8417ab04485f985$export$4b2e99c55a88c77b(wrapper) {\n    const el = this[0];\n    if (el) {\n        const wrap = this._make(typeof wrapper === \"function\" ? wrapper.call(el, 0, el) : wrapper).insertBefore(el);\n        // If html is given as wrapper, wrap may contain text elements\n        let elInsertLocation;\n        for(let i = 0; i < wrap.length; i++)if (wrap[i].type === \"tag\") elInsertLocation = wrap[i];\n        let j = 0;\n        /*\n         * Find the deepest child. Only consider the first tag child of each node\n         * (ignore text); stop if no children are found.\n         */ while(elInsertLocation && j < elInsertLocation.children.length){\n            const child = elInsertLocation.children[j];\n            if (child.type === \"tag\") {\n                elInsertLocation = child;\n                j = 0;\n            } else j++;\n        }\n        if (elInsertLocation) this._make(elInsertLocation).append(this);\n    }\n    return this;\n}\nfunction $b8417ab04485f985$export$742acabee3dd6465(...elems) {\n    const lastIdx = this.length - 1;\n    return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el, i)=>{\n        const { parent: parent } = el;\n        if (!(0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(el) || !parent) return;\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */ if (index < 0) return;\n        const domSrc = typeof elems[0] === \"function\" ? elems[0].call(el, i, this._render(el.children)) : elems;\n        const dom = this._makeDomArray(domSrc, i < lastIdx);\n        // Add element after `this` element\n        $b8417ab04485f985$var$uniqueSplice(siblings, index + 1, 0, dom, parent);\n    });\n}\nfunction $b8417ab04485f985$export$c4f94c8b3850a5a9(target) {\n    if (typeof target === \"string\") target = this._make(target);\n    this.remove();\n    const clones = [];\n    this._makeDomArray(target).forEach((el)=>{\n        const clonedSelf = this.clone().toArray();\n        const { parent: parent } = el;\n        if (!parent) return;\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */ if (index < 0) return;\n        // Add cloned `this` element(s) after target element\n        $b8417ab04485f985$var$uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n        clones.push(...clonedSelf);\n    });\n    return this._make(clones);\n}\nfunction $b8417ab04485f985$export$1c4c1e3098bf5ebe(...elems) {\n    const lastIdx = this.length - 1;\n    return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el, i)=>{\n        const { parent: parent } = el;\n        if (!(0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(el) || !parent) return;\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */ if (index < 0) return;\n        const domSrc = typeof elems[0] === \"function\" ? elems[0].call(el, i, this._render(el.children)) : elems;\n        const dom = this._makeDomArray(domSrc, i < lastIdx);\n        // Add element before `el` element\n        $b8417ab04485f985$var$uniqueSplice(siblings, index, 0, dom, parent);\n    });\n}\nfunction $b8417ab04485f985$export$86b68c7dbeb53c22(target) {\n    const targetArr = this._make(target);\n    this.remove();\n    const clones = [];\n    (0, $ed43754fae89976b$export$74822c5de6e95c1)(targetArr, (el)=>{\n        const clonedSelf = this.clone().toArray();\n        const { parent: parent } = el;\n        if (!parent) return;\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */ if (index < 0) return;\n        // Add cloned `this` element(s) after target element\n        $b8417ab04485f985$var$uniqueSplice(siblings, index, 0, clonedSelf, parent);\n        clones.push(...clonedSelf);\n    });\n    return this._make(clones);\n}\nfunction $b8417ab04485f985$export$cd7f480d6b8286c3(selector) {\n    // Filter if we have selector\n    const elems = selector ? this.filter(selector) : this;\n    (0, $ed43754fae89976b$export$74822c5de6e95c1)(elems, (el)=>{\n        (0, $22117dbf00ca9159$export$f883456a56996078)(el);\n        el.prev = el.next = el.parent = null;\n    });\n    return this;\n}\nfunction $b8417ab04485f985$export$e6a6680780233a77(content) {\n    return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el, i)=>{\n        const { parent: parent } = el;\n        if (!parent) return;\n        const siblings = parent.children;\n        const cont = typeof content === \"function\" ? content.call(el, i, el) : content;\n        const dom = this._makeDomArray(cont);\n        /*\n         * In the case that `dom` contains nodes that already exist in other\n         * structures, ensure those nodes are properly removed.\n         */ (0, $79cd7463df39241d$export$722fbec263ad908a)(dom, null);\n        const index = siblings.indexOf(el);\n        // Completely remove old element\n        $b8417ab04485f985$var$uniqueSplice(siblings, index, 1, dom, parent);\n        if (!dom.includes(el)) el.parent = el.prev = el.next = null;\n    });\n}\nfunction $b8417ab04485f985$export$6e22c362a0406a2c() {\n    return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el)=>{\n        if (!(0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(el)) return;\n        el.children.forEach((child)=>{\n            child.next = child.prev = child.parent = null;\n        });\n        el.children.length = 0;\n    });\n}\nfunction $b8417ab04485f985$export$c0bb0b647f701bb5(str) {\n    if (str === undefined) {\n        const el = this[0];\n        if (!el || !(0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(el)) return null;\n        return this._render(el.children);\n    }\n    return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el)=>{\n        if (!(0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(el)) return;\n        el.children.forEach((child)=>{\n            child.next = child.prev = child.parent = null;\n        });\n        const content = (0, $ed43754fae89976b$export$799a4b197f11d37)(str) ? str.toArray() : this._parse(`${str}`, this.options, false, el).children;\n        (0, $79cd7463df39241d$export$722fbec263ad908a)(content, el);\n    });\n}\nfunction $b8417ab04485f985$export$f84e8e69fd4488a5() {\n    return this._render(this);\n}\nfunction $b8417ab04485f985$export$6f093cfa640b7166(str) {\n    // If `str` is undefined, act as a \"getter\"\n    if (str === undefined) return (0, $c1bcc44f974e65ab$export$6f093cfa640b7166)(this);\n    if (typeof str === \"function\") // Function support\n    return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el, i)=>this._make(el).text(str.call(el, i, (0, $c1bcc44f974e65ab$export$6f093cfa640b7166)([\n            el\n        ]))));\n    // Append text node to each selected elements\n    return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el)=>{\n        if (!(0, $298fc1d08428934f$export$bd5ff50f0e53d41c)(el)) return;\n        el.children.forEach((child)=>{\n            child.next = child.prev = child.parent = null;\n        });\n        const textNode = new (0, $298fc1d08428934f$export$5f1af8db9871e1d6)(`${str}`);\n        (0, $79cd7463df39241d$export$722fbec263ad908a)(textNode, el);\n    });\n}\nfunction $b8417ab04485f985$export$9cd59f9826255e47() {\n    return this._make((0, $ed43754fae89976b$export$773334283a3d1a04)(this.get()));\n}\n\n\nvar $345cc7ac382021f7$exports = {};\n\n$parcel$export($345cc7ac382021f7$exports, \"css\", () => $345cc7ac382021f7$export$dbf350e5966cf602);\n\nfunction $345cc7ac382021f7$export$dbf350e5966cf602(prop, val) {\n    if (prop != null && val != null || // When `prop` is a \"plain\" object\n    typeof prop === \"object\" && !Array.isArray(prop)) return (0, $ed43754fae89976b$export$74822c5de6e95c1)(this, (el, i)=>{\n        if ((0, $298fc1d08428934f$export$3bf645f08efe3292)(el)) // `prop` can't be an array here anymore.\n        $345cc7ac382021f7$var$setCss(el, prop, val, i);\n    });\n    if (this.length === 0) return undefined;\n    return $345cc7ac382021f7$var$getCss(this[0], prop);\n}\n/**\n * Set styles of all elements.\n *\n * @private\n * @param el - Element to set style of.\n * @param prop - Name of property.\n * @param value - Value to set property to.\n * @param idx - Optional index within the selection.\n */ function $345cc7ac382021f7$var$setCss(el, prop, value, idx) {\n    if (typeof prop === \"string\") {\n        const styles = $345cc7ac382021f7$var$getCss(el);\n        const val = typeof value === \"function\" ? value.call(el, idx, styles[prop]) : value;\n        if (val === \"\") delete styles[prop];\n        else if (val != null) styles[prop] = val;\n        el.attribs[\"style\"] = $345cc7ac382021f7$var$stringify(styles);\n    } else if (typeof prop === \"object\") Object.keys(prop).forEach((k, i)=>{\n        $345cc7ac382021f7$var$setCss(el, k, prop[k], i);\n    });\n}\nfunction $345cc7ac382021f7$var$getCss(el, prop) {\n    if (!el || !(0, $298fc1d08428934f$export$3bf645f08efe3292)(el)) return;\n    const styles = $345cc7ac382021f7$var$parse(el.attribs[\"style\"]);\n    if (typeof prop === \"string\") return styles[prop];\n    if (Array.isArray(prop)) {\n        const newStyles = {};\n        prop.forEach((item)=>{\n            if (styles[item] != null) newStyles[item] = styles[item];\n        });\n        return newStyles;\n    }\n    return styles;\n}\n/**\n * Stringify `obj` to styles.\n *\n * @private\n * @category CSS\n * @param obj - Object to stringify.\n * @returns The serialized styles.\n */ function $345cc7ac382021f7$var$stringify(obj) {\n    return Object.keys(obj).reduce((str, prop)=>`${str}${str ? \" \" : \"\"}${prop}: ${obj[prop]};`, \"\");\n}\n/**\n * Parse `styles`.\n *\n * @private\n * @category CSS\n * @param styles - Styles to be parsed.\n * @returns The parsed styles.\n */ function $345cc7ac382021f7$var$parse(styles) {\n    styles = (styles || \"\").trim();\n    if (!styles) return {};\n    const obj = {};\n    let key;\n    for (const str of styles.split(\";\")){\n        const n = str.indexOf(\":\");\n        // If there is no :, or if it is the first/last character, add to the previous item's value\n        if (n < 1 || n === str.length - 1) {\n            const trimmed = str.trimEnd();\n            if (trimmed.length > 0 && key !== undefined) obj[key] += `;${trimmed}`;\n        } else {\n            key = str.slice(0, n).trim();\n            obj[key] = str.slice(n + 1).trim();\n        }\n    }\n    return obj;\n}\n\n\nvar $795b9badd05f4e5a$exports = {};\n\n$parcel$export($795b9badd05f4e5a$exports, \"serialize\", () => $795b9badd05f4e5a$export$dfdc1655ccc5b9cb);\n$parcel$export($795b9badd05f4e5a$exports, \"serializeArray\", () => $795b9badd05f4e5a$export$f01be45804d2885c);\n\n/*\n * https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n * https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\n */ const $795b9badd05f4e5a$var$submittableSelector = \"input,select,textarea,keygen\";\nconst $795b9badd05f4e5a$var$r20 = /%20/g;\nconst $795b9badd05f4e5a$var$rCRLF = /\\r?\\n/g;\nfunction $795b9badd05f4e5a$export$dfdc1655ccc5b9cb() {\n    // Convert form elements into name/value objects\n    const arr = this.serializeArray();\n    // Serialize each element into a key/value string\n    const retArr = arr.map((data)=>`${encodeURIComponent(data.name)}=${encodeURIComponent(data.value)}`);\n    // Return the resulting serialization\n    return retArr.join(\"&\").replace($795b9badd05f4e5a$var$r20, \"+\");\n}\nfunction $795b9badd05f4e5a$export$f01be45804d2885c() {\n    // Resolve all form elements from either forms or collections of form elements\n    return this.map((_, elem)=>{\n        const $elem = this._make(elem);\n        if ((0, $298fc1d08428934f$export$3bf645f08efe3292)(elem) && elem.name === \"form\") return $elem.find($795b9badd05f4e5a$var$submittableSelector).toArray();\n        return $elem.filter($795b9badd05f4e5a$var$submittableSelector).toArray();\n    }).filter(// Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)\n    '[name!=\"\"]:enabled:not(:submit, :button, :image, :reset, :file):matches([checked], :not(:checkbox, :radio))').map((_, elem)=>{\n        var _a;\n        const $elem = this._make(elem);\n        const name = $elem.attr(\"name\"); // We have filtered for elements with a name before.\n        // If there is no value set (e.g. `undefined`, `null`), then default value to empty\n        const value = (_a = $elem.val()) !== null && _a !== void 0 ? _a : \"\";\n        // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n        if (Array.isArray(value)) return value.map((val)=>/*\n             * We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n             * These can occur inside of `<textarea>'s`\n             */ ({\n                name: name,\n                value: val.replace($795b9badd05f4e5a$var$rCRLF, \"\\r\\n\")\n            }));\n        // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n        return {\n            name: name,\n            value: value.replace($795b9badd05f4e5a$var$rCRLF, \"\\r\\n\")\n        };\n    }).toArray();\n}\n\n\nclass $605a7f365381d1d5$export$a25e727e7f7b9892 {\n    /**\n     * Instance of cheerio. Methods are specified in the modules. Usage of this\n     * constructor is not recommended. Please use `$.load` instead.\n     *\n     * @private\n     * @param elements - The new selection.\n     * @param root - Sets the root node.\n     * @param options - Options for the instance.\n     */ constructor(elements, root, options){\n        this.length = 0;\n        this.options = options;\n        this._root = root;\n        if (elements) {\n            for(let idx = 0; idx < elements.length; idx++)this[idx] = elements[idx];\n            this.length = elements.length;\n        }\n    }\n}\n/** Set a signature of the object. */ $605a7f365381d1d5$export$a25e727e7f7b9892.prototype.cheerio = \"[cheerio object]\";\n/*\n * Make cheerio an array-like object\n */ $605a7f365381d1d5$export$a25e727e7f7b9892.prototype.splice = Array.prototype.splice;\n// Support for (const element of $(...)) iteration:\n$605a7f365381d1d5$export$a25e727e7f7b9892.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n// Plug in the API\nObject.assign($605a7f365381d1d5$export$a25e727e7f7b9892.prototype, $719788c75578d782$exports, $bb3edb5ec381eef7$exports, $b8417ab04485f985$exports, $345cc7ac382021f7$exports, $795b9badd05f4e5a$exports);\n\n\n\nfunction $d2f5fbf8095a538d$export$8b469b2b7efa8d79(parse, render) {\n    /**\n     * Create a querying function, bound to a document created from the provided markup.\n     *\n     * Note that similar to web browser contexts, this operation may introduce\n     * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to\n     * switch to fragment mode and disable this.\n     *\n     * @param content - Markup to be loaded.\n     * @param options - Options for the created instance.\n     * @param isDocument - Allows parser to be switched to fragment mode.\n     * @returns The loaded document.\n     * @see {@link https://cheerio.js.org#loading} for additional usage information.\n     */ return function load(content, options, isDocument = true) {\n        if (content == null) throw new Error(\"cheerio.load() expects a string\");\n        const internalOpts = {\n            ...(0, $00a54fca6088e8eb$export$2e2bcd8739ae039),\n            ...(0, $00a54fca6088e8eb$export$bffa455ba8c619a6)(options)\n        };\n        const initialRoot = parse(content, internalOpts, isDocument, null);\n        /** Create an extended class here, so that extensions only live on one instance. */ class LoadedCheerio extends (0, $605a7f365381d1d5$export$a25e727e7f7b9892) {\n            _make(selector, context) {\n                const cheerio = initialize(selector, context);\n                cheerio.prevObject = this;\n                return cheerio;\n            }\n            _parse(content, options, isDocument, context) {\n                return parse(content, options, isDocument, context);\n            }\n            _render(dom) {\n                return render(dom, this.options);\n            }\n        }\n        function initialize(selector, context, root = initialRoot, opts) {\n            // $($)\n            if (selector && (0, $ed43754fae89976b$export$799a4b197f11d37)(selector)) return selector;\n            const options = {\n                ...internalOpts,\n                ...(0, $00a54fca6088e8eb$export$bffa455ba8c619a6)(opts)\n            };\n            const r = typeof root === \"string\" ? [\n                parse(root, options, false, null)\n            ] : \"length\" in root ? root : [\n                root\n            ];\n            const rootInstance = (0, $ed43754fae89976b$export$799a4b197f11d37)(r) ? r : new LoadedCheerio(r, null, options);\n            // Add a cyclic reference, so that calling methods on `_root` never fails.\n            rootInstance._root = rootInstance;\n            // $(), $(null), $(undefined), $(false)\n            if (!selector) return new LoadedCheerio(undefined, rootInstance, options);\n            const elements = typeof selector === \"string\" && (0, $ed43754fae89976b$export$144ef0648535ac5a)(selector) ? parse(selector, options, false, null).children : $d2f5fbf8095a538d$var$isNode(selector) ? [\n                selector\n            ] : Array.isArray(selector) ? selector : undefined;\n            const instance = new LoadedCheerio(elements, rootInstance, options);\n            if (elements) return instance;\n            if (typeof selector !== \"string\") throw new Error(\"Unexpected type of selector\");\n            // We know that our selector is a string now.\n            let search = selector;\n            const searchContext = !context ? rootInstance : typeof context === \"string\" ? (0, $ed43754fae89976b$export$144ef0648535ac5a)(context) ? new LoadedCheerio([\n                parse(context, options, false, null)\n            ], rootInstance, options) : (search = `${context} ${search}`, rootInstance) : (0, $ed43754fae89976b$export$799a4b197f11d37)(context) ? context : new LoadedCheerio(Array.isArray(context) ? context : [\n                context\n            ], rootInstance, options);\n            // If we still don't have a context, return\n            if (!searchContext) return instance;\n            /*\n             * #id, .class, tag\n             */ return searchContext.find(search);\n        }\n        // Add in static methods & properties\n        Object.assign(initialize, $c1bcc44f974e65ab$exports, {\n            load: load,\n            // `_root` and `_options` are used in static methods.\n            _root: initialRoot,\n            _options: internalOpts,\n            // Add `fn` for plugins\n            fn: LoadedCheerio.prototype,\n            // Add the prototype here to maintain `instanceof` behavior.\n            prototype: LoadedCheerio.prototype\n        });\n        return initialize;\n    };\n}\nfunction $d2f5fbf8095a538d$var$isNode(obj) {\n    return !!obj.name || obj.type === \"root\" || obj.type === \"text\" || obj.type === \"comment\";\n}\n\n\n\n\nconst $13b6aff9b77366c5$var$UNDEFINED_CODE_POINTS = new Set([\n    65534,\n    65535,\n    131070,\n    131071,\n    196606,\n    196607,\n    262142,\n    262143,\n    327678,\n    327679,\n    393214,\n    393215,\n    458750,\n    458751,\n    524286,\n    524287,\n    589822,\n    589823,\n    655358,\n    655359,\n    720894,\n    720895,\n    786430,\n    786431,\n    851966,\n    851967,\n    917502,\n    917503,\n    983038,\n    983039,\n    1048574,\n    1048575,\n    1114110,\n    1114111\n]);\nconst $13b6aff9b77366c5$export$e8d20e7a50e6c279 = \"�\";\nvar $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0;\n(function(CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})($13b6aff9b77366c5$export$e3f6c2feb5c0ecc0 = $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0 || ($13b6aff9b77366c5$export$e3f6c2feb5c0ecc0 = {}));\nconst $13b6aff9b77366c5$export$5abac700f947e2 = {\n    DASH_DASH: \"--\",\n    CDATA_START: \"[CDATA[\",\n    DOCTYPE: \"doctype\",\n    SCRIPT: \"script\",\n    PUBLIC: \"public\",\n    SYSTEM: \"system\"\n};\nfunction $13b6aff9b77366c5$export$7e678b42035e707f(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nfunction $13b6aff9b77366c5$export$e7f1d94bb17e4055(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nfunction $13b6aff9b77366c5$export$91e83256751ec906(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\nfunction $13b6aff9b77366c5$export$d6953a6077926e(cp) {\n    return cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f || cp >= 0x7f && cp <= 0x9f;\n}\nfunction $13b6aff9b77366c5$export$b3484aaf321bda02(cp) {\n    return cp >= 64976 && cp <= 65007 || $13b6aff9b77366c5$var$UNDEFINED_CODE_POINTS.has(cp);\n} //# sourceMappingURL=unicode.js.map\n\n\nvar $0d242c12c37a5644$export$9e0efcb140234d2;\n(function(ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})($0d242c12c37a5644$export$9e0efcb140234d2 = $0d242c12c37a5644$export$9e0efcb140234d2 || ($0d242c12c37a5644$export$9e0efcb140234d2 = {})); //# sourceMappingURL=error-codes.js.map\n\n\n//Const\nconst $18505f1274889f1f$var$DEFAULT_BUFFER_WATERLINE = 65536;\nclass $18505f1274889f1f$export$35db5c8036a15ad1 {\n    constructor(handler){\n        this.handler = handler;\n        this.html = \"\";\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = $18505f1274889f1f$var$DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */ get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line: line, col: col, offset: offset } = this;\n        return {\n            code: code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if ((0, $13b6aff9b77366c5$export$e7f1d94bb17e4055)(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return (0, $13b6aff9b77366c5$export$91e83256751ec906)(cp, nextCp);\n            }\n        } else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) this.html += chunk;\n        else this.html = chunk;\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) return this.html.startsWith(pattern, this.pos);\n        for(let i = 0; i < pattern.length; i++){\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) return false;\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).CARRIAGE_RETURN ? (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if ((0, $13b6aff9b77366c5$export$7e678b42035e707f)(cp)) cp = this._processSurrogate(cp);\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null || cp > 0x1f && cp < 0x7f || cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED || cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).CARRIAGE_RETURN || cp > 0x9f && cp < 64976;\n        if (!isCommonValidRange) this._checkForProblematicCharacters(cp);\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if ((0, $13b6aff9b77366c5$export$d6953a6077926e)(cp)) this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).controlCharacterInInputStream);\n        else if ((0, $13b6aff9b77366c5$export$b3484aaf321bda02)(cp)) this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).noncharacterInInputStream);\n    }\n    retreat(count) {\n        this.pos -= count;\n        while(this.pos < this.lastGapPos){\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n} //# sourceMappingURL=preprocessor.js.map\n\n\n\nvar $05436e75d13cd0ed$export$f435f793048e7a0f;\n(function(TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})($05436e75d13cd0ed$export$f435f793048e7a0f = $05436e75d13cd0ed$export$f435f793048e7a0f || ($05436e75d13cd0ed$export$f435f793048e7a0f = {}));\nfunction $05436e75d13cd0ed$export$df33bba014b5841e(token, attrName) {\n    for(let i = token.attrs.length - 1; i >= 0; i--){\n        if (token.attrs[i].name === attrName) return token.attrs[i].value;\n    }\n    return null;\n} //# sourceMappingURL=token.js.map\n\n\nvar $108ddd412d07cc89$exports = {};\n\"use strict\";\nvar $108ddd412d07cc89$var$__createBinding = $108ddd412d07cc89$exports && $108ddd412d07cc89$exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    };\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar $108ddd412d07cc89$var$__setModuleDefault = $108ddd412d07cc89$exports && $108ddd412d07cc89$exports.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar $108ddd412d07cc89$var$__importStar = $108ddd412d07cc89$exports && $108ddd412d07cc89$exports.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) $108ddd412d07cc89$var$__createBinding(result, mod, k);\n    }\n    $108ddd412d07cc89$var$__setModuleDefault(result, mod);\n    return result;\n};\nvar $108ddd412d07cc89$var$__importDefault = $108ddd412d07cc89$exports && $108ddd412d07cc89$exports.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty($108ddd412d07cc89$exports, \"__esModule\", {\n    value: true\n});\n$108ddd412d07cc89$exports.decodeXML = $108ddd412d07cc89$exports.decodeHTMLStrict = $108ddd412d07cc89$exports.decodeHTMLAttribute = $108ddd412d07cc89$exports.decodeHTML = $108ddd412d07cc89$exports.determineBranch = $108ddd412d07cc89$exports.EntityDecoder = $108ddd412d07cc89$exports.DecodingMode = $108ddd412d07cc89$exports.BinTrieFlags = $108ddd412d07cc89$exports.fromCodePoint = $108ddd412d07cc89$exports.replaceCodePoint = $108ddd412d07cc89$exports.decodeCodePoint = $108ddd412d07cc89$exports.xmlDecodeTree = $108ddd412d07cc89$exports.htmlDecodeTree = void 0;\n\nvar $108ddd412d07cc89$var$decode_data_html_js_1 = $108ddd412d07cc89$var$__importDefault((parcelRequire(\"jgmxs\")));\n$108ddd412d07cc89$exports.htmlDecodeTree = $108ddd412d07cc89$var$decode_data_html_js_1.default;\n\nvar $108ddd412d07cc89$var$decode_data_xml_js_1 = $108ddd412d07cc89$var$__importDefault((parcelRequire(\"h8iVR\")));\n$108ddd412d07cc89$exports.xmlDecodeTree = $108ddd412d07cc89$var$decode_data_xml_js_1.default;\n\nvar $108ddd412d07cc89$var$decode_codepoint_js_1 = $108ddd412d07cc89$var$__importStar((parcelRequire(\"2Hmhp\")));\n$108ddd412d07cc89$exports.decodeCodePoint = $108ddd412d07cc89$var$decode_codepoint_js_1.default;\n\nObject.defineProperty($108ddd412d07cc89$exports, \"replaceCodePoint\", {\n    enumerable: true,\n    get: function() {\n        return (parcelRequire(\"2Hmhp\")).replaceCodePoint;\n    }\n});\nObject.defineProperty($108ddd412d07cc89$exports, \"fromCodePoint\", {\n    enumerable: true,\n    get: function() {\n        return (parcelRequire(\"2Hmhp\")).fromCodePoint;\n    }\n});\nvar $108ddd412d07cc89$var$CharCodes;\n(function(CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})($108ddd412d07cc89$var$CharCodes || ($108ddd412d07cc89$var$CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */ var $108ddd412d07cc89$var$TO_LOWER_BIT = 32;\nvar $108ddd412d07cc89$var$BinTrieFlags;\n(function(BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})($108ddd412d07cc89$var$BinTrieFlags = $108ddd412d07cc89$exports.BinTrieFlags || ($108ddd412d07cc89$exports.BinTrieFlags = {}));\nfunction $108ddd412d07cc89$var$isNumber(code) {\n    return code >= $108ddd412d07cc89$var$CharCodes.ZERO && code <= $108ddd412d07cc89$var$CharCodes.NINE;\n}\nfunction $108ddd412d07cc89$var$isHexadecimalCharacter(code) {\n    return code >= $108ddd412d07cc89$var$CharCodes.UPPER_A && code <= $108ddd412d07cc89$var$CharCodes.UPPER_F || code >= $108ddd412d07cc89$var$CharCodes.LOWER_A && code <= $108ddd412d07cc89$var$CharCodes.LOWER_F;\n}\nfunction $108ddd412d07cc89$var$isAsciiAlphaNumeric(code) {\n    return code >= $108ddd412d07cc89$var$CharCodes.UPPER_A && code <= $108ddd412d07cc89$var$CharCodes.UPPER_Z || code >= $108ddd412d07cc89$var$CharCodes.LOWER_A && code <= $108ddd412d07cc89$var$CharCodes.LOWER_Z || $108ddd412d07cc89$var$isNumber(code);\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */ function $108ddd412d07cc89$var$isEntityInAttributeInvalidEnd(code) {\n    return code === $108ddd412d07cc89$var$CharCodes.EQUALS || $108ddd412d07cc89$var$isAsciiAlphaNumeric(code);\n}\nvar $108ddd412d07cc89$var$EntityDecoderState;\n(function(EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})($108ddd412d07cc89$var$EntityDecoderState || ($108ddd412d07cc89$var$EntityDecoderState = {}));\nvar $108ddd412d07cc89$var$DecodingMode;\n(function(DecodingMode) {\n    /** Entities in text nodes that can end with any character. */ DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */ DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */ DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})($108ddd412d07cc89$var$DecodingMode = $108ddd412d07cc89$exports.DecodingMode || ($108ddd412d07cc89$exports.DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */ var $108ddd412d07cc89$var$EntityDecoder = /** @class */ function() {\n    function EntityDecoder(/** The tree used to decode entities. */ decodeTree, /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */ emitCodePoint, /** An object that is used to produce errors. */ errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */ this.state = $108ddd412d07cc89$var$EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */ this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */ this.result = 0;\n        /** The current index in the decode tree. */ this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */ this.excess = 1;\n        /** The mode in which the decoder is operating. */ this.decodeMode = $108ddd412d07cc89$var$DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */ EntityDecoder.prototype.startEntity = function(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = $108ddd412d07cc89$var$EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    };\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ EntityDecoder.prototype.write = function(str, offset) {\n        switch(this.state){\n            case $108ddd412d07cc89$var$EntityDecoderState.EntityStart:\n                if (str.charCodeAt(offset) === $108ddd412d07cc89$var$CharCodes.NUM) {\n                    this.state = $108ddd412d07cc89$var$EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = $108ddd412d07cc89$var$EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            case $108ddd412d07cc89$var$EntityDecoderState.NumericStart:\n                return this.stateNumericStart(str, offset);\n            case $108ddd412d07cc89$var$EntityDecoderState.NumericDecimal:\n                return this.stateNumericDecimal(str, offset);\n            case $108ddd412d07cc89$var$EntityDecoderState.NumericHex:\n                return this.stateNumericHex(str, offset);\n            case $108ddd412d07cc89$var$EntityDecoderState.NamedEntity:\n                return this.stateNamedEntity(str, offset);\n        }\n    };\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ EntityDecoder.prototype.stateNumericStart = function(str, offset) {\n        if (offset >= str.length) return -1;\n        if ((str.charCodeAt(offset) | $108ddd412d07cc89$var$TO_LOWER_BIT) === $108ddd412d07cc89$var$CharCodes.LOWER_X) {\n            this.state = $108ddd412d07cc89$var$EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = $108ddd412d07cc89$var$EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    };\n    EntityDecoder.prototype.addToNumericResult = function(str, start, end, base) {\n        if (start !== end) {\n            var digitCount = end - start;\n            this.result = this.result * Math.pow(base, digitCount) + parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    };\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ EntityDecoder.prototype.stateNumericHex = function(str, offset) {\n        var startIdx = offset;\n        while(offset < str.length){\n            var char = str.charCodeAt(offset);\n            if ($108ddd412d07cc89$var$isNumber(char) || $108ddd412d07cc89$var$isHexadecimalCharacter(char)) offset += 1;\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    };\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ EntityDecoder.prototype.stateNumericDecimal = function(str, offset) {\n        var startIdx = offset;\n        while(offset < str.length){\n            var char = str.charCodeAt(offset);\n            if ($108ddd412d07cc89$var$isNumber(char)) offset += 1;\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    };\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */ EntityDecoder.prototype.emitNumericEntity = function(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 || _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === $108ddd412d07cc89$var$CharCodes.SEMI) this.consumed += 1;\n        else if (this.decodeMode === $108ddd412d07cc89$var$DecodingMode.Strict) return 0;\n        this.emitCodePoint((0, $108ddd412d07cc89$var$decode_codepoint_js_1.replaceCodePoint)(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== $108ddd412d07cc89$var$CharCodes.SEMI) this.errors.missingSemicolonAfterCharacterReference();\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    };\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ EntityDecoder.prototype.stateNamedEntity = function(str, offset) {\n        var decodeTree = this.decodeTree;\n        var current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        var valueLength = (current & $108ddd412d07cc89$var$BinTrieFlags.VALUE_LENGTH) >> 14;\n        for(; offset < str.length; offset++, this.excess++){\n            var char = str.charCodeAt(offset);\n            this.treeIndex = $108ddd412d07cc89$var$determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) return this.result === 0 || // If we are parsing an attribute\n            this.decodeMode === $108ddd412d07cc89$var$DecodingMode.Attribute && // We shouldn't have consumed any characters after the entity,\n            (valueLength === 0 || // And there should be no invalid characters.\n            $108ddd412d07cc89$var$isEntityInAttributeInvalidEnd(char)) ? 0 : this.emitNotTerminatedNamedEntity();\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & $108ddd412d07cc89$var$BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === $108ddd412d07cc89$var$CharCodes.SEMI) return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== $108ddd412d07cc89$var$DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    };\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */ EntityDecoder.prototype.emitNotTerminatedNamedEntity = function() {\n        var _a;\n        var _b = this, result = _b.result, decodeTree = _b.decodeTree;\n        var valueLength = (decodeTree[result] & $108ddd412d07cc89$var$BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 || _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    };\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */ EntityDecoder.prototype.emitNamedEntityData = function(result, valueLength, consumed) {\n        var decodeTree = this.decodeTree;\n        this.emitCodePoint(valueLength === 1 ? decodeTree[result] & ~$108ddd412d07cc89$var$BinTrieFlags.VALUE_LENGTH : decodeTree[result + 1], consumed);\n        if (valueLength === 3) // For multi-byte values, we need to emit the second byte.\n        this.emitCodePoint(decodeTree[result + 2], consumed);\n        return consumed;\n    };\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */ EntityDecoder.prototype.end = function() {\n        var _a;\n        switch(this.state){\n            case $108ddd412d07cc89$var$EntityDecoderState.NamedEntity:\n                // Emit a named entity if we have one.\n                return this.result !== 0 && (this.decodeMode !== $108ddd412d07cc89$var$DecodingMode.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;\n            // Otherwise, emit a numeric entity if we have one.\n            case $108ddd412d07cc89$var$EntityDecoderState.NumericDecimal:\n                return this.emitNumericEntity(0, 2);\n            case $108ddd412d07cc89$var$EntityDecoderState.NumericHex:\n                return this.emitNumericEntity(0, 3);\n            case $108ddd412d07cc89$var$EntityDecoderState.NumericStart:\n                (_a = this.errors) === null || _a === void 0 || _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            case $108ddd412d07cc89$var$EntityDecoderState.EntityStart:\n                // Return 0 if we have no entity.\n                return 0;\n        }\n    };\n    return EntityDecoder;\n}();\n$108ddd412d07cc89$exports.EntityDecoder = $108ddd412d07cc89$var$EntityDecoder;\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */ function $108ddd412d07cc89$var$getDecoder(decodeTree) {\n    var ret = \"\";\n    var decoder = new $108ddd412d07cc89$var$EntityDecoder(decodeTree, function(str) {\n        return ret += (0, $108ddd412d07cc89$var$decode_codepoint_js_1.fromCodePoint)(str);\n    });\n    return function decodeWithTrie(str, decodeMode) {\n        var lastIndex = 0;\n        var offset = 0;\n        while((offset = str.indexOf(\"&\", offset)) >= 0){\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            var len = decoder.write(str, // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        var result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */ function $108ddd412d07cc89$var$determineBranch(decodeTree, current, nodeIdx, char) {\n    var branchCount = (current & $108ddd412d07cc89$var$BinTrieFlags.BRANCH_LENGTH) >> 7;\n    var jumpOffset = current & $108ddd412d07cc89$var$BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        var value = char - jumpOffset;\n        return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    var lo = nodeIdx;\n    var hi = lo + branchCount - 1;\n    while(lo <= hi){\n        var mid = lo + hi >>> 1;\n        var midVal = decodeTree[mid];\n        if (midVal < char) lo = mid + 1;\n        else if (midVal > char) hi = mid - 1;\n        else return decodeTree[mid + branchCount];\n    }\n    return -1;\n}\n$108ddd412d07cc89$exports.determineBranch = $108ddd412d07cc89$var$determineBranch;\nvar $108ddd412d07cc89$var$htmlDecoder = $108ddd412d07cc89$var$getDecoder($108ddd412d07cc89$var$decode_data_html_js_1.default);\nvar $108ddd412d07cc89$var$xmlDecoder = $108ddd412d07cc89$var$getDecoder($108ddd412d07cc89$var$decode_data_xml_js_1.default);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */ function $108ddd412d07cc89$var$decodeHTML(str, mode) {\n    if (mode === void 0) mode = $108ddd412d07cc89$var$DecodingMode.Legacy;\n    return $108ddd412d07cc89$var$htmlDecoder(str, mode);\n}\n$108ddd412d07cc89$exports.decodeHTML = $108ddd412d07cc89$var$decodeHTML;\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */ function $108ddd412d07cc89$var$decodeHTMLAttribute(str) {\n    return $108ddd412d07cc89$var$htmlDecoder(str, $108ddd412d07cc89$var$DecodingMode.Attribute);\n}\n$108ddd412d07cc89$exports.decodeHTMLAttribute = $108ddd412d07cc89$var$decodeHTMLAttribute;\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */ function $108ddd412d07cc89$var$decodeHTMLStrict(str) {\n    return $108ddd412d07cc89$var$htmlDecoder(str, $108ddd412d07cc89$var$DecodingMode.Strict);\n}\n$108ddd412d07cc89$exports.decodeHTMLStrict = $108ddd412d07cc89$var$decodeHTMLStrict;\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */ function $108ddd412d07cc89$var$decodeXML(str) {\n    return $108ddd412d07cc89$var$xmlDecoder(str, $108ddd412d07cc89$var$DecodingMode.Strict);\n}\n$108ddd412d07cc89$exports.decodeXML = $108ddd412d07cc89$var$decodeXML;\n\n\n\nvar $5deb0c47e1a27c89$exports = {};\n\n$parcel$export($5deb0c47e1a27c89$exports, \"NS\", () => $5deb0c47e1a27c89$export$fb4028874a74450);\n$parcel$export($5deb0c47e1a27c89$exports, \"ATTRS\", () => $5deb0c47e1a27c89$export$380b7bc9e6cb1918);\n$parcel$export($5deb0c47e1a27c89$exports, \"DOCUMENT_MODE\", () => $5deb0c47e1a27c89$export$a74d46c85337d29a);\n$parcel$export($5deb0c47e1a27c89$exports, \"TAG_NAMES\", () => $5deb0c47e1a27c89$export$7e674a85a2656dce);\n$parcel$export($5deb0c47e1a27c89$exports, \"TAG_ID\", () => $5deb0c47e1a27c89$export$cb0999a53e0acaed);\n$parcel$export($5deb0c47e1a27c89$exports, \"getTagID\", () => $5deb0c47e1a27c89$export$39db8a1315f68282);\n$parcel$export($5deb0c47e1a27c89$exports, \"SPECIAL_ELEMENTS\", () => $5deb0c47e1a27c89$export$7e5172336f7d2bbb);\n$parcel$export($5deb0c47e1a27c89$exports, \"isNumberedHeader\", () => $5deb0c47e1a27c89$export$5ed5f14a3d15367);\n$parcel$export($5deb0c47e1a27c89$exports, \"hasUnescapedText\", () => $5deb0c47e1a27c89$export$4ce4f8c09f921aed);\n/** All valid namespaces in HTML. */ var $5deb0c47e1a27c89$export$fb4028874a74450;\n(function(NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})($5deb0c47e1a27c89$export$fb4028874a74450 = $5deb0c47e1a27c89$export$fb4028874a74450 || ($5deb0c47e1a27c89$export$fb4028874a74450 = {}));\nvar $5deb0c47e1a27c89$export$380b7bc9e6cb1918;\n(function(ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})($5deb0c47e1a27c89$export$380b7bc9e6cb1918 = $5deb0c47e1a27c89$export$380b7bc9e6cb1918 || ($5deb0c47e1a27c89$export$380b7bc9e6cb1918 = {}));\nvar $5deb0c47e1a27c89$export$a74d46c85337d29a;\n(function(DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})($5deb0c47e1a27c89$export$a74d46c85337d29a = $5deb0c47e1a27c89$export$a74d46c85337d29a || ($5deb0c47e1a27c89$export$a74d46c85337d29a = {}));\nvar $5deb0c47e1a27c89$export$7e674a85a2656dce;\n(function(TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})($5deb0c47e1a27c89$export$7e674a85a2656dce = $5deb0c47e1a27c89$export$7e674a85a2656dce || ($5deb0c47e1a27c89$export$7e674a85a2656dce = {}));\nvar $5deb0c47e1a27c89$export$cb0999a53e0acaed;\n(function(TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})($5deb0c47e1a27c89$export$cb0999a53e0acaed = $5deb0c47e1a27c89$export$cb0999a53e0acaed || ($5deb0c47e1a27c89$export$cb0999a53e0acaed = {}));\nconst $5deb0c47e1a27c89$var$TAG_NAME_TO_ID = new Map([\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.A,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.A\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.ADDRESS,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.ADDRESS\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.ANNOTATION_XML,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.ANNOTATION_XML\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.APPLET,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.APPLET\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.AREA,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.AREA\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.ARTICLE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.ARTICLE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.ASIDE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.ASIDE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.B,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.B\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.BASE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.BASE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.BASEFONT,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.BASEFONT\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.BGSOUND,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.BGSOUND\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.BIG,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.BIG\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.BLOCKQUOTE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.BLOCKQUOTE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.BODY,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.BODY\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.BR,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.BR\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.BUTTON,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.BUTTON\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.CAPTION,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.CAPTION\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.CENTER,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.CENTER\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.CODE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.CODE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.COL,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.COL\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.COLGROUP,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.COLGROUP\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.DD,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.DD\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.DESC,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.DESC\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.DETAILS,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.DETAILS\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.DIALOG,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.DIALOG\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.DIR,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.DIR\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.DIV,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.DIV\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.DL,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.DL\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.DT,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.DT\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.EM,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.EM\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.EMBED,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.EMBED\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.FIELDSET,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.FIELDSET\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.FIGCAPTION,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.FIGCAPTION\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.FIGURE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.FIGURE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.FONT,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.FONT\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.FOOTER,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.FOOTER\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.FOREIGN_OBJECT,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.FOREIGN_OBJECT\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.FORM,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.FORM\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.FRAME,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.FRAME\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.FRAMESET,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.FRAMESET\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.H1,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.H1\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.H2,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.H2\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.H3,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.H3\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.H4,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.H4\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.H5,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.H5\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.H6,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.H6\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.HEAD,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.HEAD\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.HEADER,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.HEADER\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.HGROUP,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.HGROUP\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.HR,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.HR\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.HTML,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.HTML\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.I,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.I\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.IMG,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.IMG\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.IMAGE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.IMAGE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.INPUT,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.INPUT\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.IFRAME,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.IFRAME\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.KEYGEN,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.KEYGEN\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.LABEL,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.LABEL\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.LI,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.LI\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.LINK,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.LINK\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.LISTING,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.LISTING\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.MAIN,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.MAIN\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.MALIGNMARK,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.MALIGNMARK\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.MARQUEE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.MARQUEE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.MATH,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.MATH\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.MENU,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.MENU\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.META,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.META\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.MGLYPH,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.MGLYPH\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.MI,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.MI\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.MO,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.MO\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.MN,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.MN\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.MS,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.MS\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.MTEXT,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.MTEXT\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.NAV,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.NAV\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.NOBR,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.NOBR\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.NOFRAMES,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.NOFRAMES\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.NOEMBED,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.NOEMBED\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.NOSCRIPT,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.NOSCRIPT\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.OBJECT,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.OBJECT\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.OL,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.OL\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.OPTGROUP,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.OPTGROUP\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.OPTION,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.OPTION\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.P,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.P\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.PARAM,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.PARAM\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.PLAINTEXT,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.PLAINTEXT\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.PRE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.PRE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.RB,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.RB\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.RP,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.RP\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.RT,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.RT\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.RTC,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.RTC\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.RUBY,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.RUBY\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.S,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.S\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.SCRIPT,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.SCRIPT\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.SECTION,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.SECTION\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.SELECT,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.SELECT\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.SOURCE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.SOURCE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.SMALL,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.SMALL\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.SPAN,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.SPAN\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.STRIKE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.STRIKE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.STRONG,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.STRONG\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.STYLE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.STYLE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.SUB,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.SUB\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.SUMMARY,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.SUMMARY\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.SUP,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.SUP\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.TABLE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.TABLE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.TBODY,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.TBODY\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.TEMPLATE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.TEMPLATE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.TEXTAREA,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.TEXTAREA\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.TFOOT,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.TFOOT\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.TD,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.TD\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.TH,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.TH\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.THEAD,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.THEAD\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.TITLE,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.TITLE\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.TR,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.TR\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.TRACK,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.TRACK\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.TT,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.TT\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.U,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.U\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.UL,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.UL\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.SVG,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.SVG\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.VAR,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.VAR\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.WBR,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.WBR\n    ],\n    [\n        $5deb0c47e1a27c89$export$7e674a85a2656dce.XMP,\n        $5deb0c47e1a27c89$export$cb0999a53e0acaed.XMP\n    ]\n]);\nfunction $5deb0c47e1a27c89$export$39db8a1315f68282(tagName) {\n    var _a;\n    return (_a = $5deb0c47e1a27c89$var$TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : $5deb0c47e1a27c89$export$cb0999a53e0acaed.UNKNOWN;\n}\nconst $5deb0c47e1a27c89$var$$ = $5deb0c47e1a27c89$export$cb0999a53e0acaed;\nconst $5deb0c47e1a27c89$export$7e5172336f7d2bbb = {\n    [$5deb0c47e1a27c89$export$fb4028874a74450.HTML]: new Set([\n        $5deb0c47e1a27c89$var$$.ADDRESS,\n        $5deb0c47e1a27c89$var$$.APPLET,\n        $5deb0c47e1a27c89$var$$.AREA,\n        $5deb0c47e1a27c89$var$$.ARTICLE,\n        $5deb0c47e1a27c89$var$$.ASIDE,\n        $5deb0c47e1a27c89$var$$.BASE,\n        $5deb0c47e1a27c89$var$$.BASEFONT,\n        $5deb0c47e1a27c89$var$$.BGSOUND,\n        $5deb0c47e1a27c89$var$$.BLOCKQUOTE,\n        $5deb0c47e1a27c89$var$$.BODY,\n        $5deb0c47e1a27c89$var$$.BR,\n        $5deb0c47e1a27c89$var$$.BUTTON,\n        $5deb0c47e1a27c89$var$$.CAPTION,\n        $5deb0c47e1a27c89$var$$.CENTER,\n        $5deb0c47e1a27c89$var$$.COL,\n        $5deb0c47e1a27c89$var$$.COLGROUP,\n        $5deb0c47e1a27c89$var$$.DD,\n        $5deb0c47e1a27c89$var$$.DETAILS,\n        $5deb0c47e1a27c89$var$$.DIR,\n        $5deb0c47e1a27c89$var$$.DIV,\n        $5deb0c47e1a27c89$var$$.DL,\n        $5deb0c47e1a27c89$var$$.DT,\n        $5deb0c47e1a27c89$var$$.EMBED,\n        $5deb0c47e1a27c89$var$$.FIELDSET,\n        $5deb0c47e1a27c89$var$$.FIGCAPTION,\n        $5deb0c47e1a27c89$var$$.FIGURE,\n        $5deb0c47e1a27c89$var$$.FOOTER,\n        $5deb0c47e1a27c89$var$$.FORM,\n        $5deb0c47e1a27c89$var$$.FRAME,\n        $5deb0c47e1a27c89$var$$.FRAMESET,\n        $5deb0c47e1a27c89$var$$.H1,\n        $5deb0c47e1a27c89$var$$.H2,\n        $5deb0c47e1a27c89$var$$.H3,\n        $5deb0c47e1a27c89$var$$.H4,\n        $5deb0c47e1a27c89$var$$.H5,\n        $5deb0c47e1a27c89$var$$.H6,\n        $5deb0c47e1a27c89$var$$.HEAD,\n        $5deb0c47e1a27c89$var$$.HEADER,\n        $5deb0c47e1a27c89$var$$.HGROUP,\n        $5deb0c47e1a27c89$var$$.HR,\n        $5deb0c47e1a27c89$var$$.HTML,\n        $5deb0c47e1a27c89$var$$.IFRAME,\n        $5deb0c47e1a27c89$var$$.IMG,\n        $5deb0c47e1a27c89$var$$.INPUT,\n        $5deb0c47e1a27c89$var$$.LI,\n        $5deb0c47e1a27c89$var$$.LINK,\n        $5deb0c47e1a27c89$var$$.LISTING,\n        $5deb0c47e1a27c89$var$$.MAIN,\n        $5deb0c47e1a27c89$var$$.MARQUEE,\n        $5deb0c47e1a27c89$var$$.MENU,\n        $5deb0c47e1a27c89$var$$.META,\n        $5deb0c47e1a27c89$var$$.NAV,\n        $5deb0c47e1a27c89$var$$.NOEMBED,\n        $5deb0c47e1a27c89$var$$.NOFRAMES,\n        $5deb0c47e1a27c89$var$$.NOSCRIPT,\n        $5deb0c47e1a27c89$var$$.OBJECT,\n        $5deb0c47e1a27c89$var$$.OL,\n        $5deb0c47e1a27c89$var$$.P,\n        $5deb0c47e1a27c89$var$$.PARAM,\n        $5deb0c47e1a27c89$var$$.PLAINTEXT,\n        $5deb0c47e1a27c89$var$$.PRE,\n        $5deb0c47e1a27c89$var$$.SCRIPT,\n        $5deb0c47e1a27c89$var$$.SECTION,\n        $5deb0c47e1a27c89$var$$.SELECT,\n        $5deb0c47e1a27c89$var$$.SOURCE,\n        $5deb0c47e1a27c89$var$$.STYLE,\n        $5deb0c47e1a27c89$var$$.SUMMARY,\n        $5deb0c47e1a27c89$var$$.TABLE,\n        $5deb0c47e1a27c89$var$$.TBODY,\n        $5deb0c47e1a27c89$var$$.TD,\n        $5deb0c47e1a27c89$var$$.TEMPLATE,\n        $5deb0c47e1a27c89$var$$.TEXTAREA,\n        $5deb0c47e1a27c89$var$$.TFOOT,\n        $5deb0c47e1a27c89$var$$.TH,\n        $5deb0c47e1a27c89$var$$.THEAD,\n        $5deb0c47e1a27c89$var$$.TITLE,\n        $5deb0c47e1a27c89$var$$.TR,\n        $5deb0c47e1a27c89$var$$.TRACK,\n        $5deb0c47e1a27c89$var$$.UL,\n        $5deb0c47e1a27c89$var$$.WBR,\n        $5deb0c47e1a27c89$var$$.XMP\n    ]),\n    [$5deb0c47e1a27c89$export$fb4028874a74450.MATHML]: new Set([\n        $5deb0c47e1a27c89$var$$.MI,\n        $5deb0c47e1a27c89$var$$.MO,\n        $5deb0c47e1a27c89$var$$.MN,\n        $5deb0c47e1a27c89$var$$.MS,\n        $5deb0c47e1a27c89$var$$.MTEXT,\n        $5deb0c47e1a27c89$var$$.ANNOTATION_XML\n    ]),\n    [$5deb0c47e1a27c89$export$fb4028874a74450.SVG]: new Set([\n        $5deb0c47e1a27c89$var$$.TITLE,\n        $5deb0c47e1a27c89$var$$.FOREIGN_OBJECT,\n        $5deb0c47e1a27c89$var$$.DESC\n    ]),\n    [$5deb0c47e1a27c89$export$fb4028874a74450.XLINK]: new Set(),\n    [$5deb0c47e1a27c89$export$fb4028874a74450.XML]: new Set(),\n    [$5deb0c47e1a27c89$export$fb4028874a74450.XMLNS]: new Set()\n};\nfunction $5deb0c47e1a27c89$export$5ed5f14a3d15367(tn) {\n    return tn === $5deb0c47e1a27c89$var$$.H1 || tn === $5deb0c47e1a27c89$var$$.H2 || tn === $5deb0c47e1a27c89$var$$.H3 || tn === $5deb0c47e1a27c89$var$$.H4 || tn === $5deb0c47e1a27c89$var$$.H5 || tn === $5deb0c47e1a27c89$var$$.H6;\n}\nconst $5deb0c47e1a27c89$var$UNESCAPED_TEXT = new Set([\n    $5deb0c47e1a27c89$export$7e674a85a2656dce.STYLE,\n    $5deb0c47e1a27c89$export$7e674a85a2656dce.SCRIPT,\n    $5deb0c47e1a27c89$export$7e674a85a2656dce.XMP,\n    $5deb0c47e1a27c89$export$7e674a85a2656dce.IFRAME,\n    $5deb0c47e1a27c89$export$7e674a85a2656dce.NOEMBED,\n    $5deb0c47e1a27c89$export$7e674a85a2656dce.NOFRAMES,\n    $5deb0c47e1a27c89$export$7e674a85a2656dce.PLAINTEXT\n]);\nfunction $5deb0c47e1a27c89$export$4ce4f8c09f921aed(tn, scriptingEnabled) {\n    return $5deb0c47e1a27c89$var$UNESCAPED_TEXT.has(tn) || scriptingEnabled && tn === $5deb0c47e1a27c89$export$7e674a85a2656dce.NOSCRIPT;\n} //# sourceMappingURL=html.js.map\n\n\n//C1 Unicode control character reference replacements\nconst $2c4fc6157fdd925a$var$C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [\n        0x80,\n        8364\n    ],\n    [\n        0x82,\n        8218\n    ],\n    [\n        0x83,\n        402\n    ],\n    [\n        0x84,\n        8222\n    ],\n    [\n        0x85,\n        8230\n    ],\n    [\n        0x86,\n        8224\n    ],\n    [\n        0x87,\n        8225\n    ],\n    [\n        0x88,\n        710\n    ],\n    [\n        0x89,\n        8240\n    ],\n    [\n        0x8a,\n        352\n    ],\n    [\n        0x8b,\n        8249\n    ],\n    [\n        0x8c,\n        338\n    ],\n    [\n        0x8e,\n        381\n    ],\n    [\n        0x91,\n        8216\n    ],\n    [\n        0x92,\n        8217\n    ],\n    [\n        0x93,\n        8220\n    ],\n    [\n        0x94,\n        8221\n    ],\n    [\n        0x95,\n        8226\n    ],\n    [\n        0x96,\n        8211\n    ],\n    [\n        0x97,\n        8212\n    ],\n    [\n        0x98,\n        732\n    ],\n    [\n        0x99,\n        8482\n    ],\n    [\n        0x9a,\n        353\n    ],\n    [\n        0x9b,\n        8250\n    ],\n    [\n        0x9c,\n        339\n    ],\n    [\n        0x9e,\n        382\n    ],\n    [\n        0x9f,\n        376\n    ]\n]);\n//States\nvar $2c4fc6157fdd925a$var$State;\n(function(State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})($2c4fc6157fdd925a$var$State || ($2c4fc6157fdd925a$var$State = {}));\nconst $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159 = {\n    DATA: $2c4fc6157fdd925a$var$State.DATA,\n    RCDATA: $2c4fc6157fdd925a$var$State.RCDATA,\n    RAWTEXT: $2c4fc6157fdd925a$var$State.RAWTEXT,\n    SCRIPT_DATA: $2c4fc6157fdd925a$var$State.SCRIPT_DATA,\n    PLAINTEXT: $2c4fc6157fdd925a$var$State.PLAINTEXT,\n    CDATA_SECTION: $2c4fc6157fdd925a$var$State.CDATA_SECTION\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction $2c4fc6157fdd925a$var$isAsciiDigit(cp) {\n    return cp >= (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).DIGIT_0 && cp <= (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).DIGIT_9;\n}\nfunction $2c4fc6157fdd925a$var$isAsciiUpper(cp) {\n    return cp >= (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LATIN_CAPITAL_A && cp <= (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LATIN_CAPITAL_Z;\n}\nfunction $2c4fc6157fdd925a$var$isAsciiLower(cp) {\n    return cp >= (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LATIN_SMALL_A && cp <= (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LATIN_SMALL_Z;\n}\nfunction $2c4fc6157fdd925a$var$isAsciiLetter(cp) {\n    return $2c4fc6157fdd925a$var$isAsciiLower(cp) || $2c4fc6157fdd925a$var$isAsciiUpper(cp);\n}\nfunction $2c4fc6157fdd925a$var$isAsciiAlphaNumeric(cp) {\n    return $2c4fc6157fdd925a$var$isAsciiLetter(cp) || $2c4fc6157fdd925a$var$isAsciiDigit(cp);\n}\nfunction $2c4fc6157fdd925a$var$isAsciiUpperHexDigit(cp) {\n    return cp >= (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LATIN_CAPITAL_A && cp <= (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LATIN_CAPITAL_F;\n}\nfunction $2c4fc6157fdd925a$var$isAsciiLowerHexDigit(cp) {\n    return cp >= (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LATIN_SMALL_A && cp <= (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LATIN_SMALL_F;\n}\nfunction $2c4fc6157fdd925a$var$isAsciiHexDigit(cp) {\n    return $2c4fc6157fdd925a$var$isAsciiDigit(cp) || $2c4fc6157fdd925a$var$isAsciiUpperHexDigit(cp) || $2c4fc6157fdd925a$var$isAsciiLowerHexDigit(cp);\n}\nfunction $2c4fc6157fdd925a$var$toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction $2c4fc6157fdd925a$var$isWhitespace(cp) {\n    return cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE || cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED || cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION || cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED;\n}\nfunction $2c4fc6157fdd925a$var$isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EQUALS_SIGN || $2c4fc6157fdd925a$var$isAsciiAlphaNumeric(nextCp);\n}\nfunction $2c4fc6157fdd925a$var$isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return $2c4fc6157fdd925a$var$isWhitespace(cp) || cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SOLIDUS || cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN;\n}\nclass $2c4fc6157fdd925a$export$55e8b082af4aa63e {\n    constructor(options, handler){\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */ this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */ this.inForeignNode = false;\n        this.lastStartTagName = \"\";\n        this.active = false;\n        this.state = $2c4fc6157fdd925a$var$State.DATA;\n        this.returnState = $2c4fc6157fdd925a$var$State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = {\n            name: \"\",\n            value: \"\"\n        };\n        this.preprocessor = new (0, $18505f1274889f1f$export$35db5c8036a15ad1)(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 || _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) return null;\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop) return;\n        this.inLoop = true;\n        while(this.active && !this.paused){\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) this._callState(cp);\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) throw new Error(\"Parser was already resumed\");\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop) return;\n        this._runParsingLoop();\n        if (!this.paused) writeCallback === null || writeCallback === void 0 || writeCallback();\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) writeCallback === null || writeCallback === void 0 || writeCallback();\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for(let i = 0; i < count; i++)this.preprocessor.advance();\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: (0, $05436e75d13cd0ed$export$f435f793048e7a0f).START_TAG,\n            tagName: \"\",\n            tagID: (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1)\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: (0, $05436e75d13cd0ed$export$f435f793048e7a0f).END_TAG,\n            tagName: \"\",\n            tagID: (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2)\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: (0, $05436e75d13cd0ed$export$f435f793048e7a0f).COMMENT,\n            data: \"\",\n            location: this.getCurrentLocation(offset)\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: (0, $05436e75d13cd0ed$export$f435f793048e7a0f).DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type: type,\n            chars: chars,\n            location: this.currentLocation\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: \"\"\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if ((0, $05436e75d13cd0ed$export$df33bba014b5841e)(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = (_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : _b.attrs = Object.create(null);\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        } else this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).duplicateAttribute);\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = (0, $5deb0c47e1a27c89$export$39db8a1315f68282)(ct.tagName);\n        if (ct.type === (0, $05436e75d13cd0ed$export$f435f793048e7a0f).START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        } else {\n            if (ct.attrs.length > 0) this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).endTagWithAttributes);\n            if (ct.selfClosing) this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).endTagWithTrailingSolidus);\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch(this.currentCharacterToken.type){\n                case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).CHARACTER:\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).NULL_CHARACTER:\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).WHITESPACE_CHARACTER:\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({\n            type: (0, $05436e75d13cd0ed$export$f435f793048e7a0f).EOF,\n            location: location\n        });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            } else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = $2c4fc6157fdd925a$var$isWhitespace(cp) ? (0, $05436e75d13cd0ed$export$f435f793048e7a0f).WHITESPACE_CHARACTER : cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL ? (0, $05436e75d13cd0ed$export$f435f793048e7a0f).NULL_CHARACTER : (0, $05436e75d13cd0ed$export$f435f793048e7a0f).CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken((0, $05436e75d13cd0ed$export$f435f793048e7a0f).CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for(let i = 0, current = (0, $108ddd412d07cc89$exports.htmlDecodeTree)[0]; i >= 0; cp = this._consume()){\n            i = (0, $108ddd412d07cc89$exports.determineBranch)((0, $108ddd412d07cc89$exports.htmlDecodeTree), current, i + 1, cp);\n            if (i < 0) break;\n            excess += 1;\n            current = (0, $108ddd412d07cc89$exports.htmlDecodeTree)[i];\n            const masked = current & (0, $108ddd412d07cc89$exports.BinTrieFlags).VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SEMICOLON && this._isCharacterReferenceInAttribute() && $2c4fc6157fdd925a$var$isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [\n                        (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).AMPERSAND\n                    ];\n                    // Skip over the value.\n                    i += valueLength;\n                } else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result = valueLength === 0 ? [\n                        (0, $108ddd412d07cc89$exports.htmlDecodeTree)[i] & ~(0, $108ddd412d07cc89$exports.BinTrieFlags).VALUE_LENGTH\n                    ] : valueLength === 1 ? [\n                        (0, $108ddd412d07cc89$exports.htmlDecodeTree)[++i]\n                    ] : [\n                        (0, $108ddd412d07cc89$exports.htmlDecodeTree)[++i],\n                        (0, $108ddd412d07cc89$exports.htmlDecodeTree)[++i]\n                    ];\n                    excess = 0;\n                    withoutSemicolon = cp !== (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingSemicolonAfterCharacterReference);\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return this.returnState === $2c4fc6157fdd925a$var$State.ATTRIBUTE_VALUE_DOUBLE_QUOTED || this.returnState === $2c4fc6157fdd925a$var$State.ATTRIBUTE_VALUE_SINGLE_QUOTED || this.returnState === $2c4fc6157fdd925a$var$State.ATTRIBUTE_VALUE_UNQUOTED;\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) this.currentAttr.value += String.fromCodePoint(cp);\n        else this._emitCodePoint(cp);\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch(this.state){\n            case $2c4fc6157fdd925a$var$State.DATA:\n                this._stateData(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.RCDATA:\n                this._stateRcdata(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.RAWTEXT:\n                this._stateRawtext(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA:\n                this._stateScriptData(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.PLAINTEXT:\n                this._statePlaintext(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.TAG_OPEN:\n                this._stateTagOpen(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.END_TAG_OPEN:\n                this._stateEndTagOpen(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.TAG_NAME:\n                this._stateTagName(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.RCDATA_LESS_THAN_SIGN:\n                this._stateRcdataLessThanSign(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.RCDATA_END_TAG_OPEN:\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.RCDATA_END_TAG_NAME:\n                this._stateRcdataEndTagName(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.RAWTEXT_LESS_THAN_SIGN:\n                this._stateRawtextLessThanSign(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.RAWTEXT_END_TAG_OPEN:\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.RAWTEXT_END_TAG_NAME:\n                this._stateRawtextEndTagName(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_LESS_THAN_SIGN:\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_END_TAG_OPEN:\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_END_TAG_NAME:\n                this._stateScriptDataEndTagName(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPE_START:\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPE_START_DASH:\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED:\n                this._stateScriptDataEscaped(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED_DASH:\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED_DASH_DASH:\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN:\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN:\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED_END_TAG_NAME:\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPE_START:\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED:\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH:\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH:\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN:\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPE_END:\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.BEFORE_ATTRIBUTE_NAME:\n                this._stateBeforeAttributeName(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.ATTRIBUTE_NAME:\n                this._stateAttributeName(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.AFTER_ATTRIBUTE_NAME:\n                this._stateAfterAttributeName(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.BEFORE_ATTRIBUTE_VALUE:\n                this._stateBeforeAttributeValue(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.ATTRIBUTE_VALUE_DOUBLE_QUOTED:\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.ATTRIBUTE_VALUE_SINGLE_QUOTED:\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.ATTRIBUTE_VALUE_UNQUOTED:\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.AFTER_ATTRIBUTE_VALUE_QUOTED:\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.SELF_CLOSING_START_TAG:\n                this._stateSelfClosingStartTag(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.BOGUS_COMMENT:\n                this._stateBogusComment(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.MARKUP_DECLARATION_OPEN:\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.COMMENT_START:\n                this._stateCommentStart(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.COMMENT_START_DASH:\n                this._stateCommentStartDash(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.COMMENT:\n                this._stateComment(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.COMMENT_LESS_THAN_SIGN:\n                this._stateCommentLessThanSign(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.COMMENT_LESS_THAN_SIGN_BANG:\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.COMMENT_LESS_THAN_SIGN_BANG_DASH:\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH:\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.COMMENT_END_DASH:\n                this._stateCommentEndDash(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.COMMENT_END:\n                this._stateCommentEnd(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.COMMENT_END_BANG:\n                this._stateCommentEndBang(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.DOCTYPE:\n                this._stateDoctype(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.BEFORE_DOCTYPE_NAME:\n                this._stateBeforeDoctypeName(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.DOCTYPE_NAME:\n                this._stateDoctypeName(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.AFTER_DOCTYPE_NAME:\n                this._stateAfterDoctypeName(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.AFTER_DOCTYPE_PUBLIC_KEYWORD:\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER:\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED:\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED:\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER:\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS:\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.AFTER_DOCTYPE_SYSTEM_KEYWORD:\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER:\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED:\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED:\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER:\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.BOGUS_DOCTYPE:\n                this._stateBogusDoctype(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.CDATA_SECTION:\n                this._stateCdataSection(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.CDATA_SECTION_BRACKET:\n                this._stateCdataSectionBracket(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.CDATA_SECTION_END:\n                this._stateCdataSectionEnd(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.CHARACTER_REFERENCE:\n                this._stateCharacterReference(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.NAMED_CHARACTER_REFERENCE:\n                this._stateNamedCharacterReference(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.AMBIGUOUS_AMPERSAND:\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.NUMERIC_CHARACTER_REFERENCE:\n                this._stateNumericCharacterReference(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.HEXADEMICAL_CHARACTER_REFERENCE_START:\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.HEXADEMICAL_CHARACTER_REFERENCE:\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.DECIMAL_CHARACTER_REFERENCE:\n                this._stateDecimalCharacterReference(cp);\n                break;\n            case $2c4fc6157fdd925a$var$State.NUMERIC_CHARACTER_REFERENCE_END:\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            default:\n                throw new Error(\"Unknown state\");\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LESS_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.TAG_OPEN;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).AMPERSAND:\n                this.returnState = $2c4fc6157fdd925a$var$State.DATA;\n                this.state = $2c4fc6157fdd925a$var$State.CHARACTER_REFERENCE;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._emitEOFToken();\n                break;\n            default:\n                this._emitCodePoint(cp);\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).AMPERSAND:\n                this.returnState = $2c4fc6157fdd925a$var$State.RCDATA;\n                this.state = $2c4fc6157fdd925a$var$State.CHARACTER_REFERENCE;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LESS_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.RCDATA_LESS_THAN_SIGN;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this._emitChars((0, $13b6aff9b77366c5$export$e8d20e7a50e6c279));\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._emitEOFToken();\n                break;\n            default:\n                this._emitCodePoint(cp);\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LESS_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this._emitChars((0, $13b6aff9b77366c5$export$e8d20e7a50e6c279));\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._emitEOFToken();\n                break;\n            default:\n                this._emitCodePoint(cp);\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LESS_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this._emitChars((0, $13b6aff9b77366c5$export$e8d20e7a50e6c279));\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._emitEOFToken();\n                break;\n            default:\n                this._emitCodePoint(cp);\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this._emitChars((0, $13b6aff9b77366c5$export$e8d20e7a50e6c279));\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._emitEOFToken();\n                break;\n            default:\n                this._emitCodePoint(cp);\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if ($2c4fc6157fdd925a$var$isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = $2c4fc6157fdd925a$var$State.TAG_NAME;\n            this._stateTagName(cp);\n        } else switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EXCLAMATION_MARK:\n                this.state = $2c4fc6157fdd925a$var$State.MARKUP_DECLARATION_OPEN;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SOLIDUS:\n                this.state = $2c4fc6157fdd925a$var$State.END_TAG_OPEN;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).QUESTION_MARK:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedQuestionMarkInsteadOfTagName);\n                this._createCommentToken(1);\n                this.state = $2c4fc6157fdd925a$var$State.BOGUS_COMMENT;\n                this._stateBogusComment(cp);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofBeforeTagName);\n                this._emitChars(\"<\");\n                this._emitEOFToken();\n                break;\n            default:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).invalidFirstCharacterOfTagName);\n                this._emitChars(\"<\");\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this._stateData(cp);\n        }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if ($2c4fc6157fdd925a$var$isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = $2c4fc6157fdd925a$var$State.TAG_NAME;\n            this._stateTagName(cp);\n        } else switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingEndTagName);\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofBeforeTagName);\n                this._emitChars(\"</\");\n                this._emitEOFToken();\n                break;\n            default:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).invalidFirstCharacterOfTagName);\n                this._createCommentToken(2);\n                this.state = $2c4fc6157fdd925a$var$State.BOGUS_COMMENT;\n                this._stateBogusComment(cp);\n        }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                this.state = $2c4fc6157fdd925a$var$State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SOLIDUS:\n                this.state = $2c4fc6157fdd925a$var$State.SELF_CLOSING_START_TAG;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                token.tagName += (0, $13b6aff9b77366c5$export$e8d20e7a50e6c279);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInTag);\n                this._emitEOFToken();\n                break;\n            default:\n                token.tagName += String.fromCodePoint($2c4fc6157fdd925a$var$isAsciiUpper(cp) ? $2c4fc6157fdd925a$var$toAsciiLower(cp) : cp);\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SOLIDUS) this.state = $2c4fc6157fdd925a$var$State.RCDATA_END_TAG_OPEN;\n        else {\n            this._emitChars(\"<\");\n            this.state = $2c4fc6157fdd925a$var$State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if ($2c4fc6157fdd925a$var$isAsciiLetter(cp)) {\n            this.state = $2c4fc6157fdd925a$var$State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        } else {\n            this._emitChars(\"</\");\n            this.state = $2c4fc6157fdd925a$var$State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) return !this._ensureHibernation();\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = $2c4fc6157fdd925a$var$State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SOLIDUS:\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = $2c4fc6157fdd925a$var$State.SELF_CLOSING_START_TAG;\n                return false;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                return false;\n            default:\n                return !this._ensureHibernation();\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars(\"</\");\n            this.state = $2c4fc6157fdd925a$var$State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SOLIDUS) this.state = $2c4fc6157fdd925a$var$State.RAWTEXT_END_TAG_OPEN;\n        else {\n            this._emitChars(\"<\");\n            this.state = $2c4fc6157fdd925a$var$State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if ($2c4fc6157fdd925a$var$isAsciiLetter(cp)) {\n            this.state = $2c4fc6157fdd925a$var$State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        } else {\n            this._emitChars(\"</\");\n            this.state = $2c4fc6157fdd925a$var$State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars(\"</\");\n            this.state = $2c4fc6157fdd925a$var$State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SOLIDUS:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EXCLAMATION_MARK:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars(\"<!\");\n                break;\n            default:\n                this._emitChars(\"<\");\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if ($2c4fc6157fdd925a$var$isAsciiLetter(cp)) {\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        } else {\n            this._emitChars(\"</\");\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars(\"</\");\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS) {\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars(\"-\");\n        } else {\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS) {\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars(\"-\");\n        } else {\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars(\"-\");\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LESS_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this._emitChars((0, $13b6aff9b77366c5$export$e8d20e7a50e6c279));\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            default:\n                this._emitCodePoint(cp);\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars(\"-\");\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LESS_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED;\n                this._emitChars((0, $13b6aff9b77366c5$export$e8d20e7a50e6c279));\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            default:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS:\n                this._emitChars(\"-\");\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LESS_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA;\n                this._emitChars(\">\");\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED;\n                this._emitChars((0, $13b6aff9b77366c5$export$e8d20e7a50e6c279));\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            default:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SOLIDUS) this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        else if ($2c4fc6157fdd925a$var$isAsciiLetter(cp)) {\n            this._emitChars(\"<\");\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        } else {\n            this._emitChars(\"<\");\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if ($2c4fc6157fdd925a$var$isAsciiLetter(cp)) {\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        } else {\n            this._emitChars(\"</\");\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars(\"</\");\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith((0, $13b6aff9b77366c5$export$5abac700f947e2).SCRIPT, false) && $2c4fc6157fdd925a$var$isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek((0, $13b6aff9b77366c5$export$5abac700f947e2).SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for(let i = 0; i < (0, $13b6aff9b77366c5$export$5abac700f947e2).SCRIPT.length; i++)this._emitCodePoint(this._consume());\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        } else if (!this._ensureHibernation()) {\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars(\"-\");\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LESS_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars(\"<\");\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this._emitChars((0, $13b6aff9b77366c5$export$e8d20e7a50e6c279));\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            default:\n                this._emitCodePoint(cp);\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars(\"-\");\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LESS_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars(\"<\");\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars((0, $13b6aff9b77366c5$export$e8d20e7a50e6c279));\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            default:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS:\n                this._emitChars(\"-\");\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LESS_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars(\"<\");\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA;\n                this._emitChars(\">\");\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars((0, $13b6aff9b77366c5$export$e8d20e7a50e6c279));\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            default:\n                this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SOLIDUS) {\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars(\"/\");\n        } else {\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith((0, $13b6aff9b77366c5$export$5abac700f947e2).SCRIPT, false) && $2c4fc6157fdd925a$var$isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek((0, $13b6aff9b77366c5$export$5abac700f947e2).SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for(let i = 0; i < (0, $13b6aff9b77366c5$export$5abac700f947e2).SCRIPT.length; i++)this._emitCodePoint(this._consume());\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_ESCAPED;\n        } else if (!this._ensureHibernation()) {\n            this.state = $2c4fc6157fdd925a$var$State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SOLIDUS:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this.state = $2c4fc6157fdd925a$var$State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EQUALS_SIGN:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr(\"=\");\n                this.state = $2c4fc6157fdd925a$var$State.ATTRIBUTE_NAME;\n                break;\n            default:\n                this._createAttr(\"\");\n                this.state = $2c4fc6157fdd925a$var$State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SOLIDUS:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._leaveAttrName();\n                this.state = $2c4fc6157fdd925a$var$State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EQUALS_SIGN:\n                this._leaveAttrName();\n                this.state = $2c4fc6157fdd925a$var$State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).QUOTATION_MARK:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).APOSTROPHE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LESS_THAN_SIGN:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this.currentAttr.name += (0, $13b6aff9b77366c5$export$e8d20e7a50e6c279);\n                break;\n            default:\n                this.currentAttr.name += String.fromCodePoint($2c4fc6157fdd925a$var$isAsciiUpper(cp) ? $2c4fc6157fdd925a$var$toAsciiLower(cp) : cp);\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SOLIDUS:\n                this.state = $2c4fc6157fdd925a$var$State.SELF_CLOSING_START_TAG;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EQUALS_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInTag);\n                this._emitEOFToken();\n                break;\n            default:\n                this._createAttr(\"\");\n                this.state = $2c4fc6157fdd925a$var$State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).QUOTATION_MARK:\n                this.state = $2c4fc6157fdd925a$var$State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).APOSTROPHE:\n                this.state = $2c4fc6157fdd925a$var$State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingAttributeValue);\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            default:\n                this.state = $2c4fc6157fdd925a$var$State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).QUOTATION_MARK:\n                this.state = $2c4fc6157fdd925a$var$State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).AMPERSAND:\n                this.returnState = $2c4fc6157fdd925a$var$State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = $2c4fc6157fdd925a$var$State.CHARACTER_REFERENCE;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this.currentAttr.value += (0, $13b6aff9b77366c5$export$e8d20e7a50e6c279);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInTag);\n                this._emitEOFToken();\n                break;\n            default:\n                this.currentAttr.value += String.fromCodePoint(cp);\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).APOSTROPHE:\n                this.state = $2c4fc6157fdd925a$var$State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).AMPERSAND:\n                this.returnState = $2c4fc6157fdd925a$var$State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = $2c4fc6157fdd925a$var$State.CHARACTER_REFERENCE;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this.currentAttr.value += (0, $13b6aff9b77366c5$export$e8d20e7a50e6c279);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInTag);\n                this._emitEOFToken();\n                break;\n            default:\n                this.currentAttr.value += String.fromCodePoint(cp);\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                this._leaveAttrValue();\n                this.state = $2c4fc6157fdd925a$var$State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).AMPERSAND:\n                this.returnState = $2c4fc6157fdd925a$var$State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = $2c4fc6157fdd925a$var$State.CHARACTER_REFERENCE;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._leaveAttrValue();\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this.currentAttr.value += (0, $13b6aff9b77366c5$export$e8d20e7a50e6c279);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).QUOTATION_MARK:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).APOSTROPHE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LESS_THAN_SIGN:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EQUALS_SIGN:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GRAVE_ACCENT:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInTag);\n                this._emitEOFToken();\n                break;\n            default:\n                this.currentAttr.value += String.fromCodePoint(cp);\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                this._leaveAttrValue();\n                this.state = $2c4fc6157fdd925a$var$State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SOLIDUS:\n                this._leaveAttrValue();\n                this.state = $2c4fc6157fdd925a$var$State.SELF_CLOSING_START_TAG;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._leaveAttrValue();\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInTag);\n                this._emitEOFToken();\n                break;\n            default:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingWhitespaceBetweenAttributes);\n                this.state = $2c4fc6157fdd925a$var$State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                {\n                    const token = this.currentToken;\n                    token.selfClosing = true;\n                    this.state = $2c4fc6157fdd925a$var$State.DATA;\n                    this.emitCurrentTagToken();\n                    break;\n                }\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInTag);\n                this._emitEOFToken();\n                break;\n            default:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedSolidusInTag);\n                this.state = $2c4fc6157fdd925a$var$State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                token.data += (0, $13b6aff9b77366c5$export$e8d20e7a50e6c279);\n                break;\n            default:\n                token.data += String.fromCodePoint(cp);\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch((0, $13b6aff9b77366c5$export$5abac700f947e2).DASH_DASH, true)) {\n            this._createCommentToken((0, $13b6aff9b77366c5$export$5abac700f947e2).DASH_DASH.length + 1);\n            this.state = $2c4fc6157fdd925a$var$State.COMMENT_START;\n        } else if (this._consumeSequenceIfMatch((0, $13b6aff9b77366c5$export$5abac700f947e2).DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation((0, $13b6aff9b77366c5$export$5abac700f947e2).DOCTYPE.length + 1);\n            this.state = $2c4fc6157fdd925a$var$State.DOCTYPE;\n        } else if (this._consumeSequenceIfMatch((0, $13b6aff9b77366c5$export$5abac700f947e2).CDATA_START, true)) {\n            if (this.inForeignNode) this.state = $2c4fc6157fdd925a$var$State.CDATA_SECTION;\n            else {\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).cdataInHtmlContent);\n                this._createCommentToken((0, $13b6aff9b77366c5$export$5abac700f947e2).CDATA_START.length + 1);\n                this.currentToken.data = \"[CDATA[\";\n                this.state = $2c4fc6157fdd925a$var$State.BOGUS_COMMENT;\n            }\n        } else if (!this._ensureHibernation()) {\n            this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = $2c4fc6157fdd925a$var$State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS:\n                this.state = $2c4fc6157fdd925a$var$State.COMMENT_START_DASH;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                {\n                    this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).abruptClosingOfEmptyComment);\n                    this.state = $2c4fc6157fdd925a$var$State.DATA;\n                    const token = this.currentToken;\n                    this.emitCurrentComment(token);\n                    break;\n                }\n            default:\n                this.state = $2c4fc6157fdd925a$var$State.COMMENT;\n                this._stateComment(cp);\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS:\n                this.state = $2c4fc6157fdd925a$var$State.COMMENT_END;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).abruptClosingOfEmptyComment);\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            default:\n                token.data += \"-\";\n                this.state = $2c4fc6157fdd925a$var$State.COMMENT;\n                this._stateComment(cp);\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS:\n                this.state = $2c4fc6157fdd925a$var$State.COMMENT_END_DASH;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LESS_THAN_SIGN:\n                token.data += \"<\";\n                this.state = $2c4fc6157fdd925a$var$State.COMMENT_LESS_THAN_SIGN;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                token.data += (0, $13b6aff9b77366c5$export$e8d20e7a50e6c279);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            default:\n                token.data += String.fromCodePoint(cp);\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EXCLAMATION_MARK:\n                token.data += \"!\";\n                this.state = $2c4fc6157fdd925a$var$State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LESS_THAN_SIGN:\n                token.data += \"<\";\n                break;\n            default:\n                this.state = $2c4fc6157fdd925a$var$State.COMMENT;\n                this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS) this.state = $2c4fc6157fdd925a$var$State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        else {\n            this.state = $2c4fc6157fdd925a$var$State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS) this.state = $2c4fc6157fdd925a$var$State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        else {\n            this.state = $2c4fc6157fdd925a$var$State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN && cp !== (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF) this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).nestedComment);\n        this.state = $2c4fc6157fdd925a$var$State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS:\n                this.state = $2c4fc6157fdd925a$var$State.COMMENT_END;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            default:\n                token.data += \"-\";\n                this.state = $2c4fc6157fdd925a$var$State.COMMENT;\n                this._stateComment(cp);\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EXCLAMATION_MARK:\n                this.state = $2c4fc6157fdd925a$var$State.COMMENT_END_BANG;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS:\n                token.data += \"-\";\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            default:\n                token.data += \"--\";\n                this.state = $2c4fc6157fdd925a$var$State.COMMENT;\n                this._stateComment(cp);\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).HYPHEN_MINUS:\n                token.data += \"--!\";\n                this.state = $2c4fc6157fdd925a$var$State.COMMENT_END_DASH;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).incorrectlyClosedComment);\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            default:\n                token.data += \"--!\";\n                this.state = $2c4fc6157fdd925a$var$State.COMMENT;\n                this._stateComment(cp);\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                this.state = $2c4fc6157fdd925a$var$State.BEFORE_DOCTYPE_NAME;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                {\n                    this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingWhitespaceBeforeDoctypeName);\n                this.state = $2c4fc6157fdd925a$var$State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if ($2c4fc6157fdd925a$var$isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode($2c4fc6157fdd925a$var$toAsciiLower(cp)));\n            this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_NAME;\n        } else switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                this._createDoctypeToken((0, $13b6aff9b77366c5$export$e8d20e7a50e6c279));\n                this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_NAME;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                {\n                    this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = $2c4fc6157fdd925a$var$State.DATA;\n                    break;\n                }\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                {\n                    this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                this._createDoctypeToken(String.fromCodePoint(cp));\n                this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_NAME;\n        }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                this.state = $2c4fc6157fdd925a$var$State.AFTER_DOCTYPE_NAME;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                token.name += (0, $13b6aff9b77366c5$export$e8d20e7a50e6c279);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            default:\n                token.name += String.fromCodePoint($2c4fc6157fdd925a$var$isAsciiUpper(cp) ? $2c4fc6157fdd925a$var$toAsciiLower(cp) : cp);\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            default:\n                if (this._consumeSequenceIfMatch((0, $13b6aff9b77366c5$export$5abac700f947e2).PUBLIC, false)) this.state = $2c4fc6157fdd925a$var$State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                else if (this._consumeSequenceIfMatch((0, $13b6aff9b77366c5$export$5abac700f947e2).SYSTEM, false)) this.state = $2c4fc6157fdd925a$var$State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                else if (!this._ensureHibernation()) {\n                    this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = $2c4fc6157fdd925a$var$State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                this.state = $2c4fc6157fdd925a$var$State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).QUOTATION_MARK:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = \"\";\n                this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).APOSTROPHE:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = \"\";\n                this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            default:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = $2c4fc6157fdd925a$var$State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).QUOTATION_MARK:\n                token.publicId = \"\";\n                this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).APOSTROPHE:\n                token.publicId = \"\";\n                this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            default:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = $2c4fc6157fdd925a$var$State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).QUOTATION_MARK:\n                this.state = $2c4fc6157fdd925a$var$State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                token.publicId += (0, $13b6aff9b77366c5$export$e8d20e7a50e6c279);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            default:\n                token.publicId += String.fromCodePoint(cp);\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).APOSTROPHE:\n                this.state = $2c4fc6157fdd925a$var$State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                token.publicId += (0, $13b6aff9b77366c5$export$e8d20e7a50e6c279);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            default:\n                token.publicId += String.fromCodePoint(cp);\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                this.state = $2c4fc6157fdd925a$var$State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).QUOTATION_MARK:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = \"\";\n                this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).APOSTROPHE:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = \"\";\n                this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            default:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = $2c4fc6157fdd925a$var$State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this.emitCurrentDoctype(token);\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).QUOTATION_MARK:\n                token.systemId = \"\";\n                this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).APOSTROPHE:\n                token.systemId = \"\";\n                this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            default:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = $2c4fc6157fdd925a$var$State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                this.state = $2c4fc6157fdd925a$var$State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).QUOTATION_MARK:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = \"\";\n                this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).APOSTROPHE:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = \"\";\n                this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            default:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = $2c4fc6157fdd925a$var$State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).QUOTATION_MARK:\n                token.systemId = \"\";\n                this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).APOSTROPHE:\n                token.systemId = \"\";\n                this.state = $2c4fc6157fdd925a$var$State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            default:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = $2c4fc6157fdd925a$var$State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).QUOTATION_MARK:\n                this.state = $2c4fc6157fdd925a$var$State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                token.systemId += (0, $13b6aff9b77366c5$export$e8d20e7a50e6c279);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            default:\n                token.systemId += String.fromCodePoint(cp);\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).APOSTROPHE:\n                this.state = $2c4fc6157fdd925a$var$State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                token.systemId += (0, $13b6aff9b77366c5$export$e8d20e7a50e6c279);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            default:\n                token.systemId += String.fromCodePoint(cp);\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SPACE:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LINE_FEED:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).TABULATION:\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).FORM_FEED:\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this.emitCurrentDoctype(token);\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            default:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = $2c4fc6157fdd925a$var$State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this.emitCurrentDoctype(token);\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unexpectedNullCharacter);\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            default:\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).RIGHT_SQUARE_BRACKET:\n                this.state = $2c4fc6157fdd925a$var$State.CDATA_SECTION_BRACKET;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).EOF:\n                this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInCdata);\n                this._emitEOFToken();\n                break;\n            default:\n                this._emitCodePoint(cp);\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).RIGHT_SQUARE_BRACKET) this.state = $2c4fc6157fdd925a$var$State.CDATA_SECTION_END;\n        else {\n            this._emitChars(\"]\");\n            this.state = $2c4fc6157fdd925a$var$State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch(cp){\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).GREATER_THAN_SIGN:\n                this.state = $2c4fc6157fdd925a$var$State.DATA;\n                break;\n            case (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).RIGHT_SQUARE_BRACKET:\n                this._emitChars(\"]\");\n                break;\n            default:\n                this._emitChars(\"]]\");\n                this.state = $2c4fc6157fdd925a$var$State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NUMBER_SIGN) this.state = $2c4fc6157fdd925a$var$State.NUMERIC_CHARACTER_REFERENCE;\n        else if ($2c4fc6157fdd925a$var$isAsciiAlphaNumeric(cp)) {\n            this.state = $2c4fc6157fdd925a$var$State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        } else {\n            this._flushCodePointConsumedAsCharacterReference((0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) ;\n        else if (matchResult) {\n            for(let i = 0; i < matchResult.length; i++)this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            this.state = this.returnState;\n        } else {\n            this._flushCodePointConsumedAsCharacterReference((0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).AMPERSAND);\n            this.state = $2c4fc6157fdd925a$var$State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if ($2c4fc6157fdd925a$var$isAsciiAlphaNumeric(cp)) this._flushCodePointConsumedAsCharacterReference(cp);\n        else {\n            if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SEMICOLON) this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).unknownNamedCharacterReference);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LATIN_SMALL_X || cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).LATIN_CAPITAL_X) this.state = $2c4fc6157fdd925a$var$State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        else if ($2c4fc6157fdd925a$var$isAsciiDigit(cp)) {\n            this.state = $2c4fc6157fdd925a$var$State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        } else {\n            this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference((0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference((0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if ($2c4fc6157fdd925a$var$isAsciiHexDigit(cp)) {\n            this.state = $2c4fc6157fdd925a$var$State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        } else {\n            this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference((0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference((0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if ($2c4fc6157fdd925a$var$isAsciiUpperHexDigit(cp)) this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        else if ($2c4fc6157fdd925a$var$isAsciiLowerHexDigit(cp)) this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        else if ($2c4fc6157fdd925a$var$isAsciiDigit(cp)) this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        else if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SEMICOLON) this.state = $2c4fc6157fdd925a$var$State.NUMERIC_CHARACTER_REFERENCE_END;\n        else {\n            this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingSemicolonAfterCharacterReference);\n            this.state = $2c4fc6157fdd925a$var$State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if ($2c4fc6157fdd925a$var$isAsciiDigit(cp)) this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        else if (cp === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).SEMICOLON) this.state = $2c4fc6157fdd925a$var$State.NUMERIC_CHARACTER_REFERENCE_END;\n        else {\n            this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).missingSemicolonAfterCharacterReference);\n            this.state = $2c4fc6157fdd925a$var$State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).NULL) {\n            this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).nullCharacterReference);\n            this.charRefCode = (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).REPLACEMENT_CHARACTER;\n        } else if (this.charRefCode > 1114111) {\n            this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).characterReferenceOutsideUnicodeRange);\n            this.charRefCode = (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).REPLACEMENT_CHARACTER;\n        } else if ((0, $13b6aff9b77366c5$export$7e678b42035e707f)(this.charRefCode)) {\n            this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).surrogateCharacterReference);\n            this.charRefCode = (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).REPLACEMENT_CHARACTER;\n        } else if ((0, $13b6aff9b77366c5$export$b3484aaf321bda02)(this.charRefCode)) this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).noncharacterCharacterReference);\n        else if ((0, $13b6aff9b77366c5$export$d6953a6077926e)(this.charRefCode) || this.charRefCode === (0, $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0).CARRIAGE_RETURN) {\n            this._err((0, $0d242c12c37a5644$export$9e0efcb140234d2).controlCharacterReference);\n            const replacement = $2c4fc6157fdd925a$var$C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) this.charRefCode = replacement;\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n} //# sourceMappingURL=index.js.map\n\n\n\n//Element utils\nconst $03dd88514dcbaecb$var$IMPLICIT_END_TAG_REQUIRED = new Set([\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DD,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DT,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LI,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTGROUP,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTION,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).RB,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).RP,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).RT,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).RTC\n]);\nconst $03dd88514dcbaecb$var$IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...$03dd88514dcbaecb$var$IMPLICIT_END_TAG_REQUIRED,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR\n]);\nconst $03dd88514dcbaecb$var$SCOPING_ELEMENT_NS = new Map([\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).APPLET,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MARQUEE,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OBJECT,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).ANNOTATION_XML,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).MATHML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MI,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).MATHML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MN,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).MATHML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MO,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).MATHML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MS,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).MATHML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MTEXT,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).MATHML\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DESC,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).SVG\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FOREIGN_OBJECT,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).SVG\n    ],\n    [\n        (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TITLE,\n        (0, $5deb0c47e1a27c89$export$fb4028874a74450).SVG\n    ]\n]);\nconst $03dd88514dcbaecb$var$NAMED_HEADERS = [\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H1,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H2,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H3,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H4,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H5,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H6\n];\nconst $03dd88514dcbaecb$var$TABLE_ROW_CONTEXT = [\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML\n];\nconst $03dd88514dcbaecb$var$TABLE_BODY_CONTEXT = [\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML\n];\nconst $03dd88514dcbaecb$var$TABLE_CONTEXT = [\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML\n];\nconst $03dd88514dcbaecb$var$TABLE_CELLS = [\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH\n];\nclass $03dd88514dcbaecb$export$56decf886ed987d6 {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler){\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) this.tmplCount++;\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) this.tmplCount--;\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) this.current = newElement;\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) this._updateCurrentElement();\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while(this.stackTop >= idx){\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) this.tmplCount -= 1;\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped($03dd88514dcbaecb$var$NAMED_HEADERS, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped($03dd88514dcbaecb$var$TABLE_CELLS, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for(let i = this.stackTop; i >= 0; i--){\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) return i;\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo($03dd88514dcbaecb$var$TABLE_CONTEXT, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo($03dd88514dcbaecb$var$TABLE_BODY_CONTEXT, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo($03dd88514dcbaecb$var$TABLE_ROW_CONTEXT, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) this.pop();\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for(let i = this.stackTop; i >= 0; i--){\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML) return true;\n            if ($03dd88514dcbaecb$var$SCOPING_ELEMENT_NS.get(tn) === ns) return false;\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for(let i = this.stackTop; i >= 0; i--){\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if ((0, $5deb0c47e1a27c89$export$5ed5f14a3d15367)(tn) && ns === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML) return true;\n            if ($03dd88514dcbaecb$var$SCOPING_ELEMENT_NS.get(tn) === ns) return false;\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for(let i = this.stackTop; i >= 0; i--){\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML) return true;\n            if ((tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).UL || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OL) && ns === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML || $03dd88514dcbaecb$var$SCOPING_ELEMENT_NS.get(tn) === ns) return false;\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for(let i = this.stackTop; i >= 0; i--){\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML) return true;\n            if (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BUTTON && ns === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML || $03dd88514dcbaecb$var$SCOPING_ELEMENT_NS.get(tn) === ns) return false;\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for(let i = this.stackTop; i >= 0; i--){\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML) continue;\n            if (tn === tagName) return true;\n            if (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML) return false;\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for(let i = this.stackTop; i >= 0; i--){\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML) continue;\n            if (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT) return true;\n            if (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML) return false;\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for(let i = this.stackTop; i >= 0; i--){\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML) continue;\n            if (tn === tagName) return true;\n            if (tn !== (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTION && tn !== (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTGROUP) return false;\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while($03dd88514dcbaecb$var$IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId))this.pop();\n    }\n    generateImpliedEndTagsThoroughly() {\n        while($03dd88514dcbaecb$var$IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId))this.pop();\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while(this.currentTagId !== exclusionId && $03dd88514dcbaecb$var$IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId))this.pop();\n    }\n} //# sourceMappingURL=open-element-stack.js.map\n\n\n//Const\nconst $3a77e1f54f03a4f4$var$NOAH_ARK_CAPACITY = 3;\nvar $3a77e1f54f03a4f4$export$e41c32906b33062a;\n(function(EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})($3a77e1f54f03a4f4$export$e41c32906b33062a = $3a77e1f54f03a4f4$export$e41c32906b33062a || ($3a77e1f54f03a4f4$export$e41c32906b33062a = {}));\nconst $3a77e1f54f03a4f4$var$MARKER = {\n    type: $3a77e1f54f03a4f4$export$e41c32906b33062a.Marker\n};\nclass $3a77e1f54f03a4f4$export$20023318d9d5bbce {\n    constructor(treeAdapter){\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for(let i = 0; i < this.entries.length; i++){\n            const entry = this.entries[i];\n            if (entry.type === $3a77e1f54f03a4f4$export$e41c32906b33062a.Marker) break;\n            const { element: element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName && this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) candidates.push({\n                    idx: i,\n                    attrs: elementAttrs\n                });\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < $3a77e1f54f03a4f4$var$NOAH_ARK_CAPACITY) return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < $3a77e1f54f03a4f4$var$NOAH_ARK_CAPACITY) return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr)=>[\n                neAttr.name,\n                neAttr.value\n            ]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for(let i = 0; i < candidates.length; i++){\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr)=>neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= $3a77e1f54f03a4f4$var$NOAH_ARK_CAPACITY) this.entries.splice(candidate.idx, 1);\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift($3a77e1f54f03a4f4$var$MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: $3a77e1f54f03a4f4$export$e41c32906b33062a.Element,\n            element: element,\n            token: token\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: $3a77e1f54f03a4f4$export$e41c32906b33062a.Element,\n            element: element,\n            token: token\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) this.entries.splice(entryIndex, 1);\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */ clearToLastMarker() {\n        const markerIdx = this.entries.indexOf($3a77e1f54f03a4f4$var$MARKER);\n        if (markerIdx >= 0) this.entries.splice(0, markerIdx + 1);\n        else this.entries.length = 0;\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry)=>entry.type === $3a77e1f54f03a4f4$export$e41c32906b33062a.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === $3a77e1f54f03a4f4$export$e41c32906b33062a.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry)=>entry.type === $3a77e1f54f03a4f4$export$e41c32906b33062a.Element && entry.element === element);\n    }\n} //# sourceMappingURL=formatting-element-list.js.map\n\n\n\nfunction $96d1b2ecef66ec3e$var$createTextNode(value) {\n    return {\n        nodeName: \"#text\",\n        value: value,\n        parentNode: null\n    };\n}\nconst $96d1b2ecef66ec3e$export$7ddbba828dfa4796 = {\n    //Node construction\n    createDocument () {\n        return {\n            nodeName: \"#document\",\n            mode: (0, $5deb0c47e1a27c89$export$a74d46c85337d29a).NO_QUIRKS,\n            childNodes: []\n        };\n    },\n    createDocumentFragment () {\n        return {\n            nodeName: \"#document-fragment\",\n            childNodes: []\n        };\n    },\n    createElement (tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName: tagName,\n            attrs: attrs,\n            namespaceURI: namespaceURI,\n            childNodes: [],\n            parentNode: null\n        };\n    },\n    createCommentNode (data) {\n        return {\n            nodeName: \"#comment\",\n            data: data,\n            parentNode: null\n        };\n    },\n    //Tree mutation\n    appendChild (parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore (parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent (templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent (templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType (document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node)=>node.nodeName === \"#documentType\");\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        } else {\n            const node = {\n                nodeName: \"#documentType\",\n                name: name,\n                publicId: publicId,\n                systemId: systemId,\n                parentNode: null\n            };\n            $96d1b2ecef66ec3e$export$7ddbba828dfa4796.appendChild(document, node);\n        }\n    },\n    setDocumentMode (document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode (document) {\n        return document.mode;\n    },\n    detachNode (node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText (parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if ($96d1b2ecef66ec3e$export$7ddbba828dfa4796.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        $96d1b2ecef66ec3e$export$7ddbba828dfa4796.appendChild(parentNode, $96d1b2ecef66ec3e$var$createTextNode(text));\n    },\n    insertTextBefore (parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && $96d1b2ecef66ec3e$export$7ddbba828dfa4796.isTextNode(prevNode)) prevNode.value += text;\n        else $96d1b2ecef66ec3e$export$7ddbba828dfa4796.insertBefore(parentNode, $96d1b2ecef66ec3e$var$createTextNode(text), referenceNode);\n    },\n    adoptAttributes (recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr)=>attr.name));\n        for(let j = 0; j < attrs.length; j++)if (!recipientAttrsMap.has(attrs[j].name)) recipient.attrs.push(attrs[j]);\n    },\n    //Tree traversing\n    getFirstChild (node) {\n        return node.childNodes[0];\n    },\n    getChildNodes (node) {\n        return node.childNodes;\n    },\n    getParentNode (node) {\n        return node.parentNode;\n    },\n    getAttrList (element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName (element) {\n        return element.tagName;\n    },\n    getNamespaceURI (element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent (textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent (commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName (doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId (doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId (doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode (node) {\n        return node.nodeName === \"#text\";\n    },\n    isCommentNode (node) {\n        return node.nodeName === \"#comment\";\n    },\n    isDocumentTypeNode (node) {\n        return node.nodeName === \"#documentType\";\n    },\n    isElementNode (node) {\n        return Object.prototype.hasOwnProperty.call(node, \"tagName\");\n    },\n    // Source code location\n    setNodeSourceCodeLocation (node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation (node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation (node, endLocation) {\n        node.sourceCodeLocation = {\n            ...node.sourceCodeLocation,\n            ...endLocation\n        };\n    }\n}; //# sourceMappingURL=default.js.map\n\n\n\n//Const\nconst $a06b9e6616f0f275$var$VALID_DOCTYPE_NAME = \"html\";\nconst $a06b9e6616f0f275$var$VALID_SYSTEM_ID = \"about:legacy-compat\";\nconst $a06b9e6616f0f275$var$QUIRKS_MODE_SYSTEM_ID = \"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd\";\nconst $a06b9e6616f0f275$var$QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    \"+//silmaril//dtd html pro v0r11 19970101//\",\n    \"-//as//dtd html 3.0 aswedit + extensions//\",\n    \"-//advasoft ltd//dtd html 3.0 aswedit + extensions//\",\n    \"-//ietf//dtd html 2.0 level 1//\",\n    \"-//ietf//dtd html 2.0 level 2//\",\n    \"-//ietf//dtd html 2.0 strict level 1//\",\n    \"-//ietf//dtd html 2.0 strict level 2//\",\n    \"-//ietf//dtd html 2.0 strict//\",\n    \"-//ietf//dtd html 2.0//\",\n    \"-//ietf//dtd html 2.1e//\",\n    \"-//ietf//dtd html 3.0//\",\n    \"-//ietf//dtd html 3.2 final//\",\n    \"-//ietf//dtd html 3.2//\",\n    \"-//ietf//dtd html 3//\",\n    \"-//ietf//dtd html level 0//\",\n    \"-//ietf//dtd html level 1//\",\n    \"-//ietf//dtd html level 2//\",\n    \"-//ietf//dtd html level 3//\",\n    \"-//ietf//dtd html strict level 0//\",\n    \"-//ietf//dtd html strict level 1//\",\n    \"-//ietf//dtd html strict level 2//\",\n    \"-//ietf//dtd html strict level 3//\",\n    \"-//ietf//dtd html strict//\",\n    \"-//ietf//dtd html//\",\n    \"-//metrius//dtd metrius presentational//\",\n    \"-//microsoft//dtd internet explorer 2.0 html strict//\",\n    \"-//microsoft//dtd internet explorer 2.0 html//\",\n    \"-//microsoft//dtd internet explorer 2.0 tables//\",\n    \"-//microsoft//dtd internet explorer 3.0 html strict//\",\n    \"-//microsoft//dtd internet explorer 3.0 html//\",\n    \"-//microsoft//dtd internet explorer 3.0 tables//\",\n    \"-//netscape comm. corp.//dtd html//\",\n    \"-//netscape comm. corp.//dtd strict html//\",\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    \"-//sq//dtd html 2.0 hotmetal + extensions//\",\n    \"-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//\",\n    \"-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//\",\n    \"-//spyglass//dtd html 2.0 extended//\",\n    \"-//sun microsystems corp.//dtd hotjava html//\",\n    \"-//sun microsystems corp.//dtd hotjava strict html//\",\n    \"-//w3c//dtd html 3 1995-03-24//\",\n    \"-//w3c//dtd html 3.2 draft//\",\n    \"-//w3c//dtd html 3.2 final//\",\n    \"-//w3c//dtd html 3.2//\",\n    \"-//w3c//dtd html 3.2s draft//\",\n    \"-//w3c//dtd html 4.0 frameset//\",\n    \"-//w3c//dtd html 4.0 transitional//\",\n    \"-//w3c//dtd html experimental 19960712//\",\n    \"-//w3c//dtd html experimental 970421//\",\n    \"-//w3c//dtd w3 html//\",\n    \"-//w3o//dtd w3 html 3.0//\",\n    \"-//webtechs//dtd mozilla html 2.0//\",\n    \"-//webtechs//dtd mozilla html//\"\n];\nconst $a06b9e6616f0f275$var$QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...$a06b9e6616f0f275$var$QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    \"-//w3c//dtd html 4.01 frameset//\",\n    \"-//w3c//dtd html 4.01 transitional//\"\n];\nconst $a06b9e6616f0f275$var$QUIRKS_MODE_PUBLIC_IDS = new Set([\n    \"-//w3o//dtd w3 html strict 3.0//en//\",\n    \"-/w3c/dtd html 4.0 transitional/en\",\n    \"html\"\n]);\nconst $a06b9e6616f0f275$var$LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = [\n    \"-//w3c//dtd xhtml 1.0 frameset//\",\n    \"-//w3c//dtd xhtml 1.0 transitional//\"\n];\nconst $a06b9e6616f0f275$var$LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...$a06b9e6616f0f275$var$LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    \"-//w3c//dtd html 4.01 frameset//\",\n    \"-//w3c//dtd html 4.01 transitional//\"\n];\n//Utils\nfunction $a06b9e6616f0f275$var$hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix)=>publicId.startsWith(prefix));\n}\nfunction $a06b9e6616f0f275$export$ee48152ecc0e3f40(token) {\n    return token.name === $a06b9e6616f0f275$var$VALID_DOCTYPE_NAME && token.publicId === null && (token.systemId === null || token.systemId === $a06b9e6616f0f275$var$VALID_SYSTEM_ID);\n}\nfunction $a06b9e6616f0f275$export$64782beacef87b30(token) {\n    if (token.name !== $a06b9e6616f0f275$var$VALID_DOCTYPE_NAME) return (0, $5deb0c47e1a27c89$export$a74d46c85337d29a).QUIRKS;\n    const { systemId: systemId } = token;\n    if (systemId && systemId.toLowerCase() === $a06b9e6616f0f275$var$QUIRKS_MODE_SYSTEM_ID) return (0, $5deb0c47e1a27c89$export$a74d46c85337d29a).QUIRKS;\n    let { publicId: publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if ($a06b9e6616f0f275$var$QUIRKS_MODE_PUBLIC_IDS.has(publicId)) return (0, $5deb0c47e1a27c89$export$a74d46c85337d29a).QUIRKS;\n        let prefixes = systemId === null ? $a06b9e6616f0f275$var$QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : $a06b9e6616f0f275$var$QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if ($a06b9e6616f0f275$var$hasPrefix(publicId, prefixes)) return (0, $5deb0c47e1a27c89$export$a74d46c85337d29a).QUIRKS;\n        prefixes = systemId === null ? $a06b9e6616f0f275$var$LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : $a06b9e6616f0f275$var$LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if ($a06b9e6616f0f275$var$hasPrefix(publicId, prefixes)) return (0, $5deb0c47e1a27c89$export$a74d46c85337d29a).LIMITED_QUIRKS;\n    }\n    return (0, $5deb0c47e1a27c89$export$a74d46c85337d29a).NO_QUIRKS;\n} //# sourceMappingURL=doctype.js.map\n\n\n\n//MIME types\nconst $a7b4b99c1048c081$var$MIME_TYPES = {\n    TEXT_HTML: \"text/html\",\n    APPLICATION_XML: \"application/xhtml+xml\"\n};\n//Attributes\nconst $a7b4b99c1048c081$var$DEFINITION_URL_ATTR = \"definitionurl\";\nconst $a7b4b99c1048c081$var$ADJUSTED_DEFINITION_URL_ATTR = \"definitionURL\";\nconst $a7b4b99c1048c081$var$SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\"\n].map((attr)=>[\n        attr.toLowerCase(),\n        attr\n    ]));\nconst $a7b4b99c1048c081$var$XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    [\n        \"xlink:actuate\",\n        {\n            prefix: \"xlink\",\n            name: \"actuate\",\n            namespace: (0, $5deb0c47e1a27c89$export$fb4028874a74450).XLINK\n        }\n    ],\n    [\n        \"xlink:arcrole\",\n        {\n            prefix: \"xlink\",\n            name: \"arcrole\",\n            namespace: (0, $5deb0c47e1a27c89$export$fb4028874a74450).XLINK\n        }\n    ],\n    [\n        \"xlink:href\",\n        {\n            prefix: \"xlink\",\n            name: \"href\",\n            namespace: (0, $5deb0c47e1a27c89$export$fb4028874a74450).XLINK\n        }\n    ],\n    [\n        \"xlink:role\",\n        {\n            prefix: \"xlink\",\n            name: \"role\",\n            namespace: (0, $5deb0c47e1a27c89$export$fb4028874a74450).XLINK\n        }\n    ],\n    [\n        \"xlink:show\",\n        {\n            prefix: \"xlink\",\n            name: \"show\",\n            namespace: (0, $5deb0c47e1a27c89$export$fb4028874a74450).XLINK\n        }\n    ],\n    [\n        \"xlink:title\",\n        {\n            prefix: \"xlink\",\n            name: \"title\",\n            namespace: (0, $5deb0c47e1a27c89$export$fb4028874a74450).XLINK\n        }\n    ],\n    [\n        \"xlink:type\",\n        {\n            prefix: \"xlink\",\n            name: \"type\",\n            namespace: (0, $5deb0c47e1a27c89$export$fb4028874a74450).XLINK\n        }\n    ],\n    [\n        \"xml:base\",\n        {\n            prefix: \"xml\",\n            name: \"base\",\n            namespace: (0, $5deb0c47e1a27c89$export$fb4028874a74450).XML\n        }\n    ],\n    [\n        \"xml:lang\",\n        {\n            prefix: \"xml\",\n            name: \"lang\",\n            namespace: (0, $5deb0c47e1a27c89$export$fb4028874a74450).XML\n        }\n    ],\n    [\n        \"xml:space\",\n        {\n            prefix: \"xml\",\n            name: \"space\",\n            namespace: (0, $5deb0c47e1a27c89$export$fb4028874a74450).XML\n        }\n    ],\n    [\n        \"xmlns\",\n        {\n            prefix: \"\",\n            name: \"xmlns\",\n            namespace: (0, $5deb0c47e1a27c89$export$fb4028874a74450).XMLNS\n        }\n    ],\n    [\n        \"xmlns:xlink\",\n        {\n            prefix: \"xmlns\",\n            name: \"xlink\",\n            namespace: (0, $5deb0c47e1a27c89$export$fb4028874a74450).XMLNS\n        }\n    ]\n]);\nconst $a7b4b99c1048c081$export$86512877756eb1b1 = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\"\n].map((tn)=>[\n        tn.toLowerCase(),\n        tn\n    ]));\n//Tags that causes exit from foreign content\nconst $a7b4b99c1048c081$var$EXITS_FOREIGN_CONTENT = new Set([\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).B,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BIG,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BLOCKQUOTE,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BR,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CENTER,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CODE,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DD,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DIV,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DL,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DT,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).EM,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).EMBED,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H1,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H2,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H3,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H4,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H5,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H6,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HEAD,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HR,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).I,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).IMG,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LI,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LISTING,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MENU,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).META,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOBR,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OL,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).PRE,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).RUBY,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).S,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SMALL,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SPAN,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).STRONG,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).STRIKE,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SUB,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SUP,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TT,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).U,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).UL,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).VAR\n]);\nfunction $a7b4b99c1048c081$export$3435eb4ab4d2ed2d(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FONT && startTagToken.attrs.some(({ name: name })=>name === (0, $5deb0c47e1a27c89$export$380b7bc9e6cb1918).COLOR || name === (0, $5deb0c47e1a27c89$export$380b7bc9e6cb1918).SIZE || name === (0, $5deb0c47e1a27c89$export$380b7bc9e6cb1918).FACE);\n    return isFontWithAttrs || $a7b4b99c1048c081$var$EXITS_FOREIGN_CONTENT.has(tn);\n}\nfunction $a7b4b99c1048c081$export$c583cc5a9d633feb(token) {\n    for(let i = 0; i < token.attrs.length; i++)if (token.attrs[i].name === $a7b4b99c1048c081$var$DEFINITION_URL_ATTR) {\n        token.attrs[i].name = $a7b4b99c1048c081$var$ADJUSTED_DEFINITION_URL_ATTR;\n        break;\n    }\n}\nfunction $a7b4b99c1048c081$export$74ce06f755fb8f68(token) {\n    for(let i = 0; i < token.attrs.length; i++){\n        const adjustedAttrName = $a7b4b99c1048c081$var$SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) token.attrs[i].name = adjustedAttrName;\n    }\n}\nfunction $a7b4b99c1048c081$export$a5192af02995cbdc(token) {\n    for(let i = 0; i < token.attrs.length; i++){\n        const adjustedAttrEntry = $a7b4b99c1048c081$var$XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nfunction $a7b4b99c1048c081$export$95df78fe2e7f33e3(token) {\n    const adjustedTagName = $a7b4b99c1048c081$export$86512877756eb1b1.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = (0, $5deb0c47e1a27c89$export$39db8a1315f68282)(token.tagName);\n    }\n}\n//Integration points\nfunction $a7b4b99c1048c081$var$isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === (0, $5deb0c47e1a27c89$export$fb4028874a74450).MATHML && (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MI || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MO || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MN || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MS || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MTEXT);\n}\nfunction $a7b4b99c1048c081$var$isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === (0, $5deb0c47e1a27c89$export$fb4028874a74450).MATHML && tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).ANNOTATION_XML) {\n        for(let i = 0; i < attrs.length; i++)if (attrs[i].name === (0, $5deb0c47e1a27c89$export$380b7bc9e6cb1918).ENCODING) {\n            const value = attrs[i].value.toLowerCase();\n            return value === $a7b4b99c1048c081$var$MIME_TYPES.TEXT_HTML || value === $a7b4b99c1048c081$var$MIME_TYPES.APPLICATION_XML;\n        }\n    }\n    return ns === (0, $5deb0c47e1a27c89$export$fb4028874a74450).SVG && (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FOREIGN_OBJECT || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DESC || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TITLE);\n}\nfunction $a7b4b99c1048c081$export$6baf3ebfdd620e1(tn, ns, attrs, foreignNS) {\n    return (!foreignNS || foreignNS === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML) && $a7b4b99c1048c081$var$isHtmlIntegrationPoint(tn, ns, attrs) || (!foreignNS || foreignNS === (0, $5deb0c47e1a27c89$export$fb4028874a74450).MATHML) && $a7b4b99c1048c081$var$isMathMLTextIntegrationPoint(tn, ns);\n} //# sourceMappingURL=foreign-content.js.map\n\n\n\n\n\n\n//Misc constants\nconst $546dc23fbaaf59e4$var$HIDDEN_INPUT_TYPE = \"hidden\";\n//Adoption agency loops iteration count\nconst $546dc23fbaaf59e4$var$AA_OUTER_LOOP_ITER = 8;\nconst $546dc23fbaaf59e4$var$AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar $546dc23fbaaf59e4$var$InsertionMode;\n(function(InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})($546dc23fbaaf59e4$var$InsertionMode || ($546dc23fbaaf59e4$var$InsertionMode = {}));\nconst $546dc23fbaaf59e4$var$BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1\n};\nconst $546dc23fbaaf59e4$var$TABLE_STRUCTURE_TAGS = new Set([\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR\n]);\nconst $546dc23fbaaf59e4$var$defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: (0, $96d1b2ecef66ec3e$export$7ddbba828dfa4796),\n    onParseError: null\n};\nclass $546dc23fbaaf59e4$export$7acfa6ed01010e37 {\n    constructor(options, document, fragmentContext = null, scriptHandler = null){\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.INITIAL;\n        this.originalInsertionMode = $546dc23fbaaf59e4$var$InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */ this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */ this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...$546dc23fbaaf59e4$var$defaultParserOptions,\n            ...options\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) this.options.sourceCodeLocationInfo = true;\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new (0, $2c4fc6157fdd925a$export$55e8b082af4aa63e)(this.options, this);\n        this.activeFormattingElements = new (0, $3a77e1f54f03a4f4$export$20023318d9d5bbce)(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? (0, $5deb0c47e1a27c89$export$39db8a1315f68282)(this.treeAdapter.getTagName(fragmentContext)) : (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new (0, $03dd88514dcbaecb$export$56decf886ed987d6)(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...$546dc23fbaaf59e4$var$defaultParserOptions,\n            ...options\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : fragmentContext = opts.treeAdapter.createElement((0, $5deb0c47e1a27c89$export$7e674a85a2656dce).TEMPLATE, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML, []);\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement(\"documentmock\", (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE) parser.tmplInsertionModeStack.unshift($546dc23fbaaf59e4$var$InsertionMode.IN_TEMPLATE);\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError) return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : $546dc23fbaaf59e4$var$BASE_LOC;\n        const err = {\n            code: code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 || _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0) this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) this._setEndLocation(node, this.currentToken);\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 || _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            } else ({ current: current, currentTagId: currentTagId } = this.openElements);\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.TEXT;\n        this.originalInsertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_BODY;\n        this.tokenizer.state = (0, $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159).PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while(node){\n            if (this.treeAdapter.getTagName(node) === (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML) return;\n        switch(this.fragmentContextID){\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TITLE:\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEXTAREA:\n                this.tokenizer.state = (0, $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159).RCDATA;\n                break;\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).STYLE:\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).XMP:\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).IFRAME:\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOEMBED:\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOFRAMES:\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOSCRIPT:\n                this.tokenizer.state = (0, $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159).RAWTEXT;\n                break;\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SCRIPT:\n                this.tokenizer.state = (0, $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159).SCRIPT_DATA;\n                break;\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).PLAINTEXT:\n                this.tokenizer.state = (0, $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159).PLAINTEXT;\n                break;\n            default:\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || \"\";\n        const publicId = token.publicId || \"\";\n        const systemId = token.systemId || \"\";\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node)=>this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) this._fosterParentElement(element);\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement((0, $5deb0c47e1a27c89$export$7e674a85a2656dce).HTML, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML, []);\n        if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent: parent, beforeElement: beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            else this.treeAdapter.insertText(parent, token.chars);\n        } else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location) return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine: endLine, endCol: endCol, endOffset: endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, {\n                endLine: endLine,\n                endCol: endCol,\n                endOffset: endOffset\n            });\n        } else if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n    }\n    _adoptNodes(donor, recipient) {\n        for(let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)){\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === (0, $05436e75d13cd0ed$export$f435f793048e7a0f).END_TAG && tn === closingToken.tagName ? {\n                endTag: {\n                    ...ctLoc\n                },\n                endLine: ctLoc.endLine,\n                endCol: ctLoc.endCol,\n                endOffset: ctLoc.endOffset\n            } : {\n                endLine: ctLoc.startLine,\n                endCol: ctLoc.startCol,\n                endOffset: ctLoc.startOffset\n            };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML) return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        } else ({ current: current, currentTagId: currentTagId } = this.openElements);\n        if (token.tagID === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SVG && this.treeAdapter.getTagName(current) === (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).ANNOTATION_XML && this.treeAdapter.getNamespaceURI(current) === (0, $5deb0c47e1a27c89$export$fb4028874a74450).MATHML) return false;\n        return(// Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode || // If it _is_ an integration point, then we might have to check that it is not an HTML\n        // integration point.\n        (token.tagID === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MGLYPH || token.tagID === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MALIGNMARK) && !this._isIntegrationPoint(currentTagId, current, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML));\n    }\n    _processToken(token) {\n        switch(token.type){\n            case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).CHARACTER:\n                this.onCharacter(token);\n                break;\n            case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).NULL_CHARACTER:\n                this.onNullCharacter(token);\n                break;\n            case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).COMMENT:\n                this.onComment(token);\n                break;\n            case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).DOCTYPE:\n                this.onDoctype(token);\n                break;\n            case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).START_TAG:\n                this._processStartTag(token);\n                break;\n            case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).END_TAG:\n                this.onEndTag(token);\n                break;\n            case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).EOF:\n                this.onEof(token);\n                break;\n            case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).WHITESPACE_CHARACTER:\n                this.onWhitespaceCharacter(token);\n                break;\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return $a7b4b99c1048c081$export$6baf3ebfdd620e1(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry)=>entry.type === (0, $3a77e1f54f03a4f4$export$e41c32906b33062a).Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for(let i = unopenIdx; i >= 0; i--){\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P);\n        this.openElements.popUntilTagNamePopped((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for(let i = this.openElements.stackTop; i >= 0; i--)//Insertion mode reset map\n        switch(i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]){\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR:\n                this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_ROW;\n                return;\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY:\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD:\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT:\n                this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY;\n                return;\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION:\n                this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_CAPTION;\n                return;\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP:\n                this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_COLUMN_GROUP;\n                return;\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE:\n                this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE;\n                return;\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY:\n                this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_BODY;\n                return;\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FRAMESET:\n                this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_FRAMESET;\n                return;\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SELECT:\n                this._resetInsertionModeForSelect(i);\n                return;\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n                this.insertionMode = this.tmplInsertionModeStack[0];\n                return;\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n                this.insertionMode = this.headElement ? $546dc23fbaaf59e4$var$InsertionMode.AFTER_HEAD : $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HEAD;\n                return;\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD:\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH:\n                if (i > 0) {\n                    this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_CELL;\n                    return;\n                }\n                break;\n            case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HEAD:\n                if (i > 0) {\n                    this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD;\n                    return;\n                }\n                break;\n        }\n        this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) for(let i = selectIdx - 1; i > 0; i--){\n            const tn = this.openElements.tagIDs[i];\n            if (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE) break;\n            else if (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE) {\n                this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT_IN_TABLE;\n                return;\n            }\n        }\n        this.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return $546dc23fbaaf59e4$var$TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for(let i = this.openElements.stackTop; i >= 0; i--){\n            const openElement = this.openElements.items[i];\n            switch(this.openElements.tagIDs[i]){\n                case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n                    if (this.treeAdapter.getNamespaceURI(openElement) === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML) return {\n                        parent: this.treeAdapter.getTemplateContent(openElement),\n                        beforeElement: null\n                    };\n                    break;\n                case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE:\n                    {\n                        const parent = this.treeAdapter.getParentNode(openElement);\n                        if (parent) return {\n                            parent: parent,\n                            beforeElement: openElement\n                        };\n                        return {\n                            parent: this.openElements.items[i - 1],\n                            beforeElement: null\n                        };\n                    }\n                default:\n            }\n        }\n        return {\n            parent: this.openElements.items[0],\n            beforeElement: null\n        };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        else this.treeAdapter.appendChild(location.parent, element);\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return (0, $5deb0c47e1a27c89$export$7e5172336f7d2bbb)[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            $546dc23fbaaf59e4$var$characterInForeignContent(this, token);\n            return;\n        }\n        switch(this.insertionMode){\n            case $546dc23fbaaf59e4$var$InsertionMode.INITIAL:\n                $546dc23fbaaf59e4$var$tokenInInitialMode(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HTML:\n                $546dc23fbaaf59e4$var$tokenBeforeHtml(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HEAD:\n                $546dc23fbaaf59e4$var$tokenBeforeHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD:\n                $546dc23fbaaf59e4$var$tokenInHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD_NO_SCRIPT:\n                $546dc23fbaaf59e4$var$tokenInHeadNoScript(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_HEAD:\n                $546dc23fbaaf59e4$var$tokenAfterHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_BODY:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_CAPTION:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_CELL:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TEMPLATE:\n                $546dc23fbaaf59e4$var$characterInBody(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.TEXT:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT_IN_TABLE:\n                this._insertCharacters(token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_ROW:\n                $546dc23fbaaf59e4$var$characterInTable(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_TEXT:\n                $546dc23fbaaf59e4$var$characterInTableText(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_COLUMN_GROUP:\n                $546dc23fbaaf59e4$var$tokenInColumnGroup(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_BODY:\n                $546dc23fbaaf59e4$var$tokenAfterBody(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_AFTER_BODY:\n                $546dc23fbaaf59e4$var$tokenAfterAfterBody(this, token);\n                break;\n            default:\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            $546dc23fbaaf59e4$var$nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch(this.insertionMode){\n            case $546dc23fbaaf59e4$var$InsertionMode.INITIAL:\n                $546dc23fbaaf59e4$var$tokenInInitialMode(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HTML:\n                $546dc23fbaaf59e4$var$tokenBeforeHtml(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HEAD:\n                $546dc23fbaaf59e4$var$tokenBeforeHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD:\n                $546dc23fbaaf59e4$var$tokenInHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD_NO_SCRIPT:\n                $546dc23fbaaf59e4$var$tokenInHeadNoScript(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_HEAD:\n                $546dc23fbaaf59e4$var$tokenAfterHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.TEXT:\n                this._insertCharacters(token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_ROW:\n                $546dc23fbaaf59e4$var$characterInTable(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_COLUMN_GROUP:\n                $546dc23fbaaf59e4$var$tokenInColumnGroup(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_BODY:\n                $546dc23fbaaf59e4$var$tokenAfterBody(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_AFTER_BODY:\n                $546dc23fbaaf59e4$var$tokenAfterAfterBody(this, token);\n                break;\n            default:\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            $546dc23fbaaf59e4$var$appendComment(this, token);\n            return;\n        }\n        switch(this.insertionMode){\n            case $546dc23fbaaf59e4$var$InsertionMode.INITIAL:\n            case $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HTML:\n            case $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HEAD:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD_NO_SCRIPT:\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_HEAD:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_BODY:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_CAPTION:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_COLUMN_GROUP:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_ROW:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_CELL:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT_IN_TABLE:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TEMPLATE:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_FRAMESET:\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_FRAMESET:\n                $546dc23fbaaf59e4$var$appendComment(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_TEXT:\n                $546dc23fbaaf59e4$var$tokenInTableText(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_BODY:\n                $546dc23fbaaf59e4$var$appendCommentToRootHtmlElement(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_AFTER_BODY:\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_AFTER_FRAMESET:\n                $546dc23fbaaf59e4$var$appendCommentToDocument(this, token);\n                break;\n            default:\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch(this.insertionMode){\n            case $546dc23fbaaf59e4$var$InsertionMode.INITIAL:\n                $546dc23fbaaf59e4$var$doctypeInInitialMode(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HEAD:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD_NO_SCRIPT:\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_HEAD:\n                this._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).misplacedDoctype);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_TEXT:\n                $546dc23fbaaf59e4$var$tokenInTableText(this, token);\n                break;\n            default:\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) this._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).nonVoidHtmlElementStartTagWithTrailingSolidus);\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */ _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) $546dc23fbaaf59e4$var$startTagInForeignContent(this, token);\n        else this._startTagOutsideForeignContent(token);\n    }\n    _startTagOutsideForeignContent(token) {\n        switch(this.insertionMode){\n            case $546dc23fbaaf59e4$var$InsertionMode.INITIAL:\n                $546dc23fbaaf59e4$var$tokenInInitialMode(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HTML:\n                $546dc23fbaaf59e4$var$startTagBeforeHtml(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HEAD:\n                $546dc23fbaaf59e4$var$startTagBeforeHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD:\n                $546dc23fbaaf59e4$var$startTagInHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD_NO_SCRIPT:\n                $546dc23fbaaf59e4$var$startTagInHeadNoScript(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_HEAD:\n                $546dc23fbaaf59e4$var$startTagAfterHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_BODY:\n                $546dc23fbaaf59e4$var$startTagInBody(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE:\n                $546dc23fbaaf59e4$var$startTagInTable(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_TEXT:\n                $546dc23fbaaf59e4$var$tokenInTableText(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_CAPTION:\n                $546dc23fbaaf59e4$var$startTagInCaption(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_COLUMN_GROUP:\n                $546dc23fbaaf59e4$var$startTagInColumnGroup(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY:\n                $546dc23fbaaf59e4$var$startTagInTableBody(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_ROW:\n                $546dc23fbaaf59e4$var$startTagInRow(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_CELL:\n                $546dc23fbaaf59e4$var$startTagInCell(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT:\n                $546dc23fbaaf59e4$var$startTagInSelect(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT_IN_TABLE:\n                $546dc23fbaaf59e4$var$startTagInSelectInTable(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TEMPLATE:\n                $546dc23fbaaf59e4$var$startTagInTemplate(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_BODY:\n                $546dc23fbaaf59e4$var$startTagAfterBody(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_FRAMESET:\n                $546dc23fbaaf59e4$var$startTagInFrameset(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_FRAMESET:\n                $546dc23fbaaf59e4$var$startTagAfterFrameset(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_AFTER_BODY:\n                $546dc23fbaaf59e4$var$startTagAfterAfterBody(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_AFTER_FRAMESET:\n                $546dc23fbaaf59e4$var$startTagAfterAfterFrameset(this, token);\n                break;\n            default:\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) $546dc23fbaaf59e4$var$endTagInForeignContent(this, token);\n        else this._endTagOutsideForeignContent(token);\n    }\n    _endTagOutsideForeignContent(token) {\n        switch(this.insertionMode){\n            case $546dc23fbaaf59e4$var$InsertionMode.INITIAL:\n                $546dc23fbaaf59e4$var$tokenInInitialMode(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HTML:\n                $546dc23fbaaf59e4$var$endTagBeforeHtml(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HEAD:\n                $546dc23fbaaf59e4$var$endTagBeforeHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD:\n                $546dc23fbaaf59e4$var$endTagInHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD_NO_SCRIPT:\n                $546dc23fbaaf59e4$var$endTagInHeadNoScript(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_HEAD:\n                $546dc23fbaaf59e4$var$endTagAfterHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_BODY:\n                $546dc23fbaaf59e4$var$endTagInBody(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.TEXT:\n                $546dc23fbaaf59e4$var$endTagInText(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE:\n                $546dc23fbaaf59e4$var$endTagInTable(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_TEXT:\n                $546dc23fbaaf59e4$var$tokenInTableText(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_CAPTION:\n                $546dc23fbaaf59e4$var$endTagInCaption(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_COLUMN_GROUP:\n                $546dc23fbaaf59e4$var$endTagInColumnGroup(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY:\n                $546dc23fbaaf59e4$var$endTagInTableBody(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_ROW:\n                $546dc23fbaaf59e4$var$endTagInRow(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_CELL:\n                $546dc23fbaaf59e4$var$endTagInCell(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT:\n                $546dc23fbaaf59e4$var$endTagInSelect(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT_IN_TABLE:\n                $546dc23fbaaf59e4$var$endTagInSelectInTable(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TEMPLATE:\n                $546dc23fbaaf59e4$var$endTagInTemplate(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_BODY:\n                $546dc23fbaaf59e4$var$endTagAfterBody(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_FRAMESET:\n                $546dc23fbaaf59e4$var$endTagInFrameset(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_FRAMESET:\n                $546dc23fbaaf59e4$var$endTagAfterFrameset(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_AFTER_BODY:\n                $546dc23fbaaf59e4$var$tokenAfterAfterBody(this, token);\n                break;\n            default:\n        }\n    }\n    onEof(token) {\n        switch(this.insertionMode){\n            case $546dc23fbaaf59e4$var$InsertionMode.INITIAL:\n                $546dc23fbaaf59e4$var$tokenInInitialMode(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HTML:\n                $546dc23fbaaf59e4$var$tokenBeforeHtml(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HEAD:\n                $546dc23fbaaf59e4$var$tokenBeforeHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD:\n                $546dc23fbaaf59e4$var$tokenInHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD_NO_SCRIPT:\n                $546dc23fbaaf59e4$var$tokenInHeadNoScript(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_HEAD:\n                $546dc23fbaaf59e4$var$tokenAfterHead(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_BODY:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_CAPTION:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_COLUMN_GROUP:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_ROW:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_CELL:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT_IN_TABLE:\n                $546dc23fbaaf59e4$var$eofInBody(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.TEXT:\n                $546dc23fbaaf59e4$var$eofInText(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_TEXT:\n                $546dc23fbaaf59e4$var$tokenInTableText(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TEMPLATE:\n                $546dc23fbaaf59e4$var$eofInTemplate(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_BODY:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_FRAMESET:\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_FRAMESET:\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_AFTER_BODY:\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_AFTER_FRAMESET:\n                $546dc23fbaaf59e4$var$stopParsing(this, token);\n                break;\n            default:\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === $13b6aff9b77366c5$export$e3f6c2feb5c0ecc0.LINE_FEED) {\n                if (token.chars.length === 1) return;\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch(this.insertionMode){\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD_NO_SCRIPT:\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_HEAD:\n            case $546dc23fbaaf59e4$var$InsertionMode.TEXT:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_COLUMN_GROUP:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT_IN_TABLE:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_FRAMESET:\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_FRAMESET:\n                this._insertCharacters(token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_BODY:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_CAPTION:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_CELL:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TEMPLATE:\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_BODY:\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_AFTER_BODY:\n            case $546dc23fbaaf59e4$var$InsertionMode.AFTER_AFTER_FRAMESET:\n                $546dc23fbaaf59e4$var$whitespaceCharacterInBody(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY:\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_ROW:\n                $546dc23fbaaf59e4$var$characterInTable(this, token);\n                break;\n            case $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_TEXT:\n                $546dc23fbaaf59e4$var$whitespaceCharacterInTableText(this, token);\n                break;\n            default:\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction $546dc23fbaaf59e4$var$aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        } else if (!p.openElements.hasInScope(token.tagID)) formattingElementEntry = null;\n    } else $546dc23fbaaf59e4$var$genericEndTagInBody(p, token);\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction $546dc23fbaaf59e4$var$aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for(; idx >= 0; idx--){\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) break;\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) furthestBlock = element;\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction $546dc23fbaaf59e4$var$aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for(let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement){\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= $546dc23fbaaf59e4$var$AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) p.activeFormattingElements.removeEntry(elementEntry);\n            p.openElements.remove(element);\n        } else {\n            element = $546dc23fbaaf59e4$var$aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) p.activeFormattingElements.bookmark = elementEntry;\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction $546dc23fbaaf59e4$var$aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction $546dc23fbaaf59e4$var$aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = (0, $5deb0c47e1a27c89$export$39db8a1315f68282)(tn);\n    if (p._isElementCausesFosterParenting(tid)) p._fosterParentElement(lastElement);\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE && ns === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML) commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction $546dc23fbaaf59e4$var$aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token: token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction $546dc23fbaaf59e4$var$callAdoptionAgency(p, token) {\n    for(let i = 0; i < $546dc23fbaaf59e4$var$AA_OUTER_LOOP_ITER; i++){\n        const formattingElementEntry = $546dc23fbaaf59e4$var$aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) break;\n        const furthestBlock = $546dc23fbaaf59e4$var$aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) break;\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = $546dc23fbaaf59e4$var$aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor) $546dc23fbaaf59e4$var$aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        $546dc23fbaaf59e4$var$aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction $546dc23fbaaf59e4$var$appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction $546dc23fbaaf59e4$var$appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction $546dc23fbaaf59e4$var$stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for(let i = p.openElements.stackTop; i >= target; i--)p._setEndLocation(p.openElements.items[i], token);\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) p._setEndLocation(bodyElement, token);\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? (0, $5deb0c47e1a27c89$export$a74d46c85337d29a).QUIRKS : $a06b9e6616f0f275$export$64782beacef87b30(token);\n    if (!$a06b9e6616f0f275$export$ee48152ecc0e3f40(token)) p._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).nonConformingDoctype);\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HTML;\n}\nfunction $546dc23fbaaf59e4$var$tokenInInitialMode(p, token) {\n    p._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, (0, $5deb0c47e1a27c89$export$a74d46c85337d29a).QUIRKS);\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagBeforeHtml(p, token) {\n    if (token.tagID === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML) {\n        p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n        p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HEAD;\n    } else $546dc23fbaaf59e4$var$tokenBeforeHtml(p, token);\n}\nfunction $546dc23fbaaf59e4$var$endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HEAD || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BR) $546dc23fbaaf59e4$var$tokenBeforeHtml(p, token);\n}\nfunction $546dc23fbaaf59e4$var$tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagBeforeHead(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n            $546dc23fbaaf59e4$var$startTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HEAD:\n            p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD;\n            break;\n        default:\n            $546dc23fbaaf59e4$var$tokenBeforeHead(p, token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HEAD || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BR) $546dc23fbaaf59e4$var$tokenBeforeHead(p, token);\n    else p._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).endTagWithoutMatchingOpenElement);\n}\nfunction $546dc23fbaaf59e4$var$tokenBeforeHead(p, token) {\n    p._insertFakeElement((0, $5deb0c47e1a27c89$export$7e674a85a2656dce).HEAD, (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagInHead(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n            $546dc23fbaaf59e4$var$startTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BASE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BASEFONT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BGSOUND:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LINK:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).META:\n            p._appendElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n            token.ackSelfClosing = true;\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TITLE:\n            p._switchToTextParsing(token, (0, $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159).RCDATA);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOSCRIPT:\n            if (p.options.scriptingEnabled) p._switchToTextParsing(token, (0, $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159).RAWTEXT);\n            else {\n                p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n                p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOFRAMES:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).STYLE:\n            p._switchToTextParsing(token, (0, $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159).RAWTEXT);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SCRIPT:\n            p._switchToTextParsing(token, (0, $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159).SCRIPT_DATA);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift($546dc23fbaaf59e4$var$InsertionMode.IN_TEMPLATE);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HEAD:\n            p._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).misplacedStartTagForHeadElement);\n            break;\n        default:\n            $546dc23fbaaf59e4$var$tokenInHead(p, token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$endTagInHead(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HEAD:\n            p.openElements.pop();\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.AFTER_HEAD;\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BR:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n            $546dc23fbaaf59e4$var$tokenInHead(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n            $546dc23fbaaf59e4$var$templateEndTagInHead(p, token);\n            break;\n        default:\n            p._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).endTagWithoutMatchingOpenElement);\n    }\n}\nfunction $546dc23fbaaf59e4$var$templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE) p._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).closingOfElementWithOpenChildElements);\n        p.openElements.popUntilTagNamePopped((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    } else p._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).endTagWithoutMatchingOpenElement);\n}\nfunction $546dc23fbaaf59e4$var$tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagInHeadNoScript(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n            $546dc23fbaaf59e4$var$startTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BASEFONT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BGSOUND:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HEAD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LINK:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).META:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOFRAMES:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).STYLE:\n            $546dc23fbaaf59e4$var$startTagInHead(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOSCRIPT:\n            p._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).nestedNoscriptInHead);\n            break;\n        default:\n            $546dc23fbaaf59e4$var$tokenInHeadNoScript(p, token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$endTagInHeadNoScript(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOSCRIPT:\n            p.openElements.pop();\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD;\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BR:\n            $546dc23fbaaf59e4$var$tokenInHeadNoScript(p, token);\n            break;\n        default:\n            p._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).endTagWithoutMatchingOpenElement);\n    }\n}\nfunction $546dc23fbaaf59e4$var$tokenInHeadNoScript(p, token) {\n    const errCode = token.type === (0, $05436e75d13cd0ed$export$f435f793048e7a0f).EOF ? (0, $0d242c12c37a5644$export$9e0efcb140234d2).openElementsLeftAfterEof : (0, $0d242c12c37a5644$export$9e0efcb140234d2).disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagAfterHead(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n            $546dc23fbaaf59e4$var$startTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY:\n            p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n            p.framesetOk = false;\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_BODY;\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FRAMESET:\n            p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_FRAMESET;\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BASE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BASEFONT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BGSOUND:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LINK:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).META:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOFRAMES:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SCRIPT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).STYLE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TITLE:\n            p._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).abandonedHeadElementChild);\n            p.openElements.push(p.headElement, (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HEAD);\n            $546dc23fbaaf59e4$var$startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HEAD:\n            p._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).misplacedStartTagForHeadElement);\n            break;\n        default:\n            $546dc23fbaaf59e4$var$tokenAfterHead(p, token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$endTagAfterHead(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BR:\n            $546dc23fbaaf59e4$var$tokenAfterHead(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n            $546dc23fbaaf59e4$var$templateEndTagInHead(p, token);\n            break;\n        default:\n            p._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).endTagWithoutMatchingOpenElement);\n    }\n}\nfunction $546dc23fbaaf59e4$var$tokenAfterHead(p, token) {\n    p._insertFakeElement((0, $5deb0c47e1a27c89$export$7e674a85a2656dce).BODY, (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY);\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_BODY;\n    $546dc23fbaaf59e4$var$modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$modeInBody(p, token) {\n    switch(token.type){\n        case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).CHARACTER:\n            $546dc23fbaaf59e4$var$characterInBody(p, token);\n            break;\n        case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).WHITESPACE_CHARACTER:\n            $546dc23fbaaf59e4$var$whitespaceCharacterInBody(p, token);\n            break;\n        case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).COMMENT:\n            $546dc23fbaaf59e4$var$appendComment(p, token);\n            break;\n        case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).START_TAG:\n            $546dc23fbaaf59e4$var$startTagInBody(p, token);\n            break;\n        case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).END_TAG:\n            $546dc23fbaaf59e4$var$endTagInBody(p, token);\n            break;\n        case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).EOF:\n            $546dc23fbaaf59e4$var$eofInBody(p, token);\n            break;\n        default:\n    }\n}\nfunction $546dc23fbaaf59e4$var$whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction $546dc23fbaaf59e4$var$characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction $546dc23fbaaf59e4$var$htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n}\nfunction $546dc23fbaaf59e4$var$bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction $546dc23fbaaf59e4$var$framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n        p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_FRAMESET;\n    }\n}\nfunction $546dc23fbaaf59e4$var$addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P)) p._closePElement();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n}\nfunction $546dc23fbaaf59e4$var$numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P)) p._closePElement();\n    if ((0, $5deb0c47e1a27c89$export$5ed5f14a3d15367)(p.openElements.currentTagId)) p.openElements.pop();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n}\nfunction $546dc23fbaaf59e4$var$preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P)) p._closePElement();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction $546dc23fbaaf59e4$var$formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P)) p._closePElement();\n        p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n        if (!inTemplate) p.formElement = p.openElements.current;\n    }\n}\nfunction $546dc23fbaaf59e4$var$listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for(let i = p.openElements.stackTop; i >= 0; i--){\n        const elementId = p.openElements.tagIDs[i];\n        if (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LI && elementId === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LI || (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DD || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DT) && (elementId === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DD || elementId === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DT)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).ADDRESS && elementId !== (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DIV && elementId !== (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P && p._isSpecialElement(p.openElements.items[i], elementId)) break;\n    }\n    if (p.openElements.hasInButtonScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P)) p._closePElement();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n}\nfunction $546dc23fbaaf59e4$var$plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P)) p._closePElement();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    p.tokenizer.state = (0, $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159).PLAINTEXT;\n}\nfunction $546dc23fbaaf59e4$var$buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    p.framesetOk = false;\n}\nfunction $546dc23fbaaf59e4$var$aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName((0, $5deb0c47e1a27c89$export$7e674a85a2656dce).A);\n    if (activeElementEntry) {\n        $546dc23fbaaf59e4$var$callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction $546dc23fbaaf59e4$var$bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction $546dc23fbaaf59e4$var$nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOBR)) {\n        $546dc23fbaaf59e4$var$callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction $546dc23fbaaf59e4$var$appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction $546dc23fbaaf59e4$var$tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== (0, $5deb0c47e1a27c89$export$a74d46c85337d29a).QUIRKS && p.openElements.hasInButtonScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P)) p._closePElement();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    p.framesetOk = false;\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE;\n}\nfunction $546dc23fbaaf59e4$var$areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction $546dc23fbaaf59e4$var$isHiddenInput(token) {\n    const inputType = (0, $05436e75d13cd0ed$export$df33bba014b5841e)(token, (0, $5deb0c47e1a27c89$export$380b7bc9e6cb1918).TYPE);\n    return inputType != null && inputType.toLowerCase() === $546dc23fbaaf59e4$var$HIDDEN_INPUT_TYPE;\n}\nfunction $546dc23fbaaf59e4$var$inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    if (!$546dc23fbaaf59e4$var$isHiddenInput(token)) p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction $546dc23fbaaf59e4$var$paramStartTagInBody(p, token) {\n    p._appendElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    token.ackSelfClosing = true;\n}\nfunction $546dc23fbaaf59e4$var$hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P)) p._closePElement();\n    p._appendElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction $546dc23fbaaf59e4$var$imageStartTagInBody(p, token) {\n    token.tagName = (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).IMG;\n    token.tagID = (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).IMG;\n    $546dc23fbaaf59e4$var$areaStartTagInBody(p, token);\n}\nfunction $546dc23fbaaf59e4$var$textareaStartTagInBody(p, token) {\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = (0, $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159).RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.TEXT;\n}\nfunction $546dc23fbaaf59e4$var$xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P)) p._closePElement();\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, (0, $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159).RAWTEXT);\n}\nfunction $546dc23fbaaf59e4$var$iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, (0, $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159).RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction $546dc23fbaaf59e4$var$noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, (0, $2c4fc6157fdd925a$export$d0c9fb8d2ebe5159).RAWTEXT);\n}\nfunction $546dc23fbaaf59e4$var$selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    p.framesetOk = false;\n    p.insertionMode = p.insertionMode === $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE || p.insertionMode === $546dc23fbaaf59e4$var$InsertionMode.IN_CAPTION || p.insertionMode === $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY || p.insertionMode === $546dc23fbaaf59e4$var$InsertionMode.IN_ROW || p.insertionMode === $546dc23fbaaf59e4$var$InsertionMode.IN_CELL ? $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT_IN_TABLE : $546dc23fbaaf59e4$var$InsertionMode.IN_SELECT;\n}\nfunction $546dc23fbaaf59e4$var$optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTION) p.openElements.pop();\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n}\nfunction $546dc23fbaaf59e4$var$rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).RUBY)) p.openElements.generateImpliedEndTags();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n}\nfunction $546dc23fbaaf59e4$var$rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).RUBY)) p.openElements.generateImpliedEndTagsWithExclusion((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).RTC);\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n}\nfunction $546dc23fbaaf59e4$var$mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    $a7b4b99c1048c081$export$c583cc5a9d633feb(token);\n    $a7b4b99c1048c081$export$a5192af02995cbdc(token);\n    if (token.selfClosing) p._appendElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).MATHML);\n    else p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).MATHML);\n    token.ackSelfClosing = true;\n}\nfunction $546dc23fbaaf59e4$var$svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    $a7b4b99c1048c081$export$74ce06f755fb8f68(token);\n    $a7b4b99c1048c081$export$a5192af02995cbdc(token);\n    if (token.selfClosing) p._appendElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).SVG);\n    else p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).SVG);\n    token.ackSelfClosing = true;\n}\nfunction $546dc23fbaaf59e4$var$genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n}\nfunction $546dc23fbaaf59e4$var$startTagInBody(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).I:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).S:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).B:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).U:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).EM:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BIG:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CODE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FONT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SMALL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).STRIKE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).STRONG:\n            $546dc23fbaaf59e4$var$bStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).A:\n            $546dc23fbaaf59e4$var$aStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H1:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H2:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H3:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H4:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H5:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H6:\n            $546dc23fbaaf59e4$var$numberedHeaderStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).UL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DIV:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DIR:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NAV:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MAIN:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MENU:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).ASIDE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CENTER:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FIGURE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FOOTER:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HEADER:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HGROUP:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DIALOG:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DETAILS:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).ADDRESS:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).ARTICLE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SECTION:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SUMMARY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FIELDSET:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BLOCKQUOTE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FIGCAPTION:\n            $546dc23fbaaf59e4$var$addressStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LI:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DT:\n            $546dc23fbaaf59e4$var$listItemStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BR:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).IMG:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).WBR:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).AREA:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).EMBED:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).KEYGEN:\n            $546dc23fbaaf59e4$var$areaStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HR:\n            $546dc23fbaaf59e4$var$hrStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).RB:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).RTC:\n            $546dc23fbaaf59e4$var$rbStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).RT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).RP:\n            $546dc23fbaaf59e4$var$rtStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).PRE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LISTING:\n            $546dc23fbaaf59e4$var$preStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).XMP:\n            $546dc23fbaaf59e4$var$xmpStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SVG:\n            $546dc23fbaaf59e4$var$svgStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n            $546dc23fbaaf59e4$var$htmlStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BASE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LINK:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).META:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).STYLE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TITLE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SCRIPT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BGSOUND:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BASEFONT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n            $546dc23fbaaf59e4$var$startTagInHead(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY:\n            $546dc23fbaaf59e4$var$bodyStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FORM:\n            $546dc23fbaaf59e4$var$formStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOBR:\n            $546dc23fbaaf59e4$var$nobrStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MATH:\n            $546dc23fbaaf59e4$var$mathStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE:\n            $546dc23fbaaf59e4$var$tableStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).INPUT:\n            $546dc23fbaaf59e4$var$inputStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).PARAM:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TRACK:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SOURCE:\n            $546dc23fbaaf59e4$var$paramStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).IMAGE:\n            $546dc23fbaaf59e4$var$imageStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BUTTON:\n            $546dc23fbaaf59e4$var$buttonStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).APPLET:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OBJECT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MARQUEE:\n            $546dc23fbaaf59e4$var$appletStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).IFRAME:\n            $546dc23fbaaf59e4$var$iframeStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SELECT:\n            $546dc23fbaaf59e4$var$selectStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTION:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTGROUP:\n            $546dc23fbaaf59e4$var$optgroupStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOEMBED:\n            $546dc23fbaaf59e4$var$noembedStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FRAMESET:\n            $546dc23fbaaf59e4$var$framesetStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEXTAREA:\n            $546dc23fbaaf59e4$var$textareaStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOSCRIPT:\n            if (p.options.scriptingEnabled) $546dc23fbaaf59e4$var$noembedStartTagInBody(p, token);\n            else $546dc23fbaaf59e4$var$genericStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).PLAINTEXT:\n            $546dc23fbaaf59e4$var$plaintextStartTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HEAD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FRAME:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP:\n            break;\n        default:\n            $546dc23fbaaf59e4$var$genericStartTagInBody(p, token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY)) {\n        p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) p._setEndLocation(bodyElement, token);\n        }\n    }\n}\nfunction $546dc23fbaaf59e4$var$htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY)) {\n        p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.AFTER_BODY;\n        $546dc23fbaaf59e4$var$endTagAfterBody(p, token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction $546dc23fbaaf59e4$var$formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement: formElement } = p;\n    if (!inTemplate) p.formElement = null;\n    if ((formElement || inTemplate) && p.openElements.hasInScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) p.openElements.popUntilTagNamePopped((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FORM);\n        else if (formElement) p.openElements.remove(formElement);\n    }\n}\nfunction $546dc23fbaaf59e4$var$pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P)) p._insertFakeElement((0, $5deb0c47e1a27c89$export$7e674a85a2656dce).P, (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P);\n    p._closePElement();\n}\nfunction $546dc23fbaaf59e4$var$liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LI);\n        p.openElements.popUntilTagNamePopped((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LI);\n    }\n}\nfunction $546dc23fbaaf59e4$var$ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction $546dc23fbaaf59e4$var$numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction $546dc23fbaaf59e4$var$appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction $546dc23fbaaf59e4$var$brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement((0, $5deb0c47e1a27c89$export$7e674a85a2656dce).BR, (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction $546dc23fbaaf59e4$var$genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for(let i = p.openElements.stackTop; i > 0; i--){\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i) p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) break;\n    }\n}\nfunction $546dc23fbaaf59e4$var$endTagInBody(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).A:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).B:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).I:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).S:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).U:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).EM:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BIG:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CODE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FONT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOBR:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SMALL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).STRIKE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).STRONG:\n            $546dc23fbaaf59e4$var$callAdoptionAgency(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P:\n            $546dc23fbaaf59e4$var$pEndTagInBody(p);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).UL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DIR:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DIV:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NAV:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).PRE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MAIN:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MENU:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).ASIDE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BUTTON:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CENTER:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FIGURE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FOOTER:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HEADER:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HGROUP:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DIALOG:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).ADDRESS:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).ARTICLE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DETAILS:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SECTION:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SUMMARY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LISTING:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FIELDSET:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BLOCKQUOTE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FIGCAPTION:\n            $546dc23fbaaf59e4$var$addressEndTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LI:\n            $546dc23fbaaf59e4$var$liEndTagInBody(p);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).DT:\n            $546dc23fbaaf59e4$var$ddEndTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H1:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H2:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H3:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H4:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H5:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).H6:\n            $546dc23fbaaf59e4$var$numberedHeaderEndTagInBody(p);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BR:\n            $546dc23fbaaf59e4$var$brEndTagInBody(p);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY:\n            $546dc23fbaaf59e4$var$bodyEndTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n            $546dc23fbaaf59e4$var$htmlEndTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FORM:\n            $546dc23fbaaf59e4$var$formEndTagInBody(p);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).APPLET:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OBJECT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).MARQUEE:\n            $546dc23fbaaf59e4$var$appletEndTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n            $546dc23fbaaf59e4$var$templateEndTagInHead(p, token);\n            break;\n        default:\n            $546dc23fbaaf59e4$var$genericEndTagInBody(p, token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) $546dc23fbaaf59e4$var$eofInTemplate(p, token);\n    else $546dc23fbaaf59e4$var$stopParsing(p, token);\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$endTagInText(p, token) {\n    var _a;\n    if (token.tagID === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SCRIPT) (_a = p.scriptHandler) === null || _a === void 0 || _a.call(p, p.openElements.current);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction $546dc23fbaaf59e4$var$eofInText(p, token) {\n    p._err(token, (0, $0d242c12c37a5644$export$9e0efcb140234d2).eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$characterInTable(p, token) {\n    if ($546dc23fbaaf59e4$var$TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_TEXT;\n        switch(token.type){\n            case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).CHARACTER:\n                $546dc23fbaaf59e4$var$characterInTableText(p, token);\n                break;\n            case (0, $05436e75d13cd0ed$export$f435f793048e7a0f).WHITESPACE_CHARACTER:\n                $546dc23fbaaf59e4$var$whitespaceCharacterInTableText(p, token);\n                break;\n        }\n    } else $546dc23fbaaf59e4$var$tokenInTable(p, token);\n}\nfunction $546dc23fbaaf59e4$var$captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_CAPTION;\n}\nfunction $546dc23fbaaf59e4$var$colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_COLUMN_GROUP;\n}\nfunction $546dc23fbaaf59e4$var$colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement((0, $5deb0c47e1a27c89$export$7e674a85a2656dce).COLGROUP, (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP);\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_COLUMN_GROUP;\n    $546dc23fbaaf59e4$var$startTagInColumnGroup(p, token);\n}\nfunction $546dc23fbaaf59e4$var$tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY;\n}\nfunction $546dc23fbaaf59e4$var$tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement((0, $5deb0c47e1a27c89$export$7e674a85a2656dce).TBODY, (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY);\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY;\n    $546dc23fbaaf59e4$var$startTagInTableBody(p, token);\n}\nfunction $546dc23fbaaf59e4$var$tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE)) {\n        p.openElements.popUntilTagNamePopped((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$inputStartTagInTable(p, token) {\n    if ($546dc23fbaaf59e4$var$isHiddenInput(token)) p._appendElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n    else $546dc23fbaaf59e4$var$tokenInTable(p, token);\n    token.ackSelfClosing = true;\n}\nfunction $546dc23fbaaf59e4$var$formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction $546dc23fbaaf59e4$var$startTagInTable(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR:\n            $546dc23fbaaf59e4$var$tdStartTagInTable(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).STYLE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SCRIPT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n            $546dc23fbaaf59e4$var$startTagInHead(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COL:\n            $546dc23fbaaf59e4$var$colStartTagInTable(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FORM:\n            $546dc23fbaaf59e4$var$formStartTagInTable(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE:\n            $546dc23fbaaf59e4$var$tableStartTagInTable(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD:\n            $546dc23fbaaf59e4$var$tbodyStartTagInTable(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).INPUT:\n            $546dc23fbaaf59e4$var$inputStartTagInTable(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION:\n            $546dc23fbaaf59e4$var$captionStartTagInTable(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP:\n            $546dc23fbaaf59e4$var$colgroupStartTagInTable(p, token);\n            break;\n        default:\n            $546dc23fbaaf59e4$var$tokenInTable(p, token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$endTagInTable(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE:\n            if (p.openElements.hasInTableScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE)) {\n                p.openElements.popUntilTagNamePopped((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n            $546dc23fbaaf59e4$var$templateEndTagInHead(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR:\n            break;\n        default:\n            $546dc23fbaaf59e4$var$tokenInTable(p, token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    $546dc23fbaaf59e4$var$modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction $546dc23fbaaf59e4$var$characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction $546dc23fbaaf59e4$var$tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) for(; i < p.pendingCharacterTokens.length; i++)$546dc23fbaaf59e4$var$tokenInTable(p, p.pendingCharacterTokens[i]);\n    else for(; i < p.pendingCharacterTokens.length; i++)p._insertCharacters(p.pendingCharacterTokens[i]);\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst $546dc23fbaaf59e4$var$TABLE_VOID_ELEMENTS = new Set([\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COL,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD,\n    (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR\n]);\nfunction $546dc23fbaaf59e4$var$startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if ($546dc23fbaaf59e4$var$TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE;\n            $546dc23fbaaf59e4$var$startTagInTable(p, token);\n        }\n    } else $546dc23fbaaf59e4$var$startTagInBody(p, token);\n}\nfunction $546dc23fbaaf59e4$var$endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch(tn){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE:\n            if (p.openElements.hasInTableScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE;\n                if (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE) $546dc23fbaaf59e4$var$endTagInTable(p, token);\n            }\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR:\n            break;\n        default:\n            $546dc23fbaaf59e4$var$endTagInBody(p, token);\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagInColumnGroup(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n            $546dc23fbaaf59e4$var$startTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COL:\n            p._appendElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n            token.ackSelfClosing = true;\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n            $546dc23fbaaf59e4$var$startTagInHead(p, token);\n            break;\n        default:\n            $546dc23fbaaf59e4$var$tokenInColumnGroup(p, token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$endTagInColumnGroup(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP:\n            if (p.openElements.currentTagId === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE;\n            }\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n            $546dc23fbaaf59e4$var$templateEndTagInHead(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COL:\n            break;\n        default:\n            $546dc23fbaaf59e4$var$tokenInColumnGroup(p, token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagInTableBody(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR:\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_ROW;\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD:\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement((0, $5deb0c47e1a27c89$export$7e674a85a2656dce).TR, (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR);\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_ROW;\n            $546dc23fbaaf59e4$var$startTagInRow(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD:\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE;\n                $546dc23fbaaf59e4$var$startTagInTable(p, token);\n            }\n            break;\n        default:\n            $546dc23fbaaf59e4$var$startTagInTable(p, token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD:\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE;\n            }\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE:\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE;\n                $546dc23fbaaf59e4$var$endTagInTable(p, token);\n            }\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR:\n            break;\n        default:\n            $546dc23fbaaf59e4$var$endTagInTable(p, token);\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagInRow(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD:\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR:\n            if (p.openElements.hasInTableScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY;\n                $546dc23fbaaf59e4$var$startTagInTableBody(p, token);\n            }\n            break;\n        default:\n            $546dc23fbaaf59e4$var$startTagInTable(p, token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$endTagInRow(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR:\n            if (p.openElements.hasInTableScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE:\n            if (p.openElements.hasInTableScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY;\n                $546dc23fbaaf59e4$var$endTagInTableBody(p, token);\n            }\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD:\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY;\n                $546dc23fbaaf59e4$var$endTagInTableBody(p, token);\n            }\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH:\n            break;\n        default:\n            $546dc23fbaaf59e4$var$endTagInTable(p, token);\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagInCell(p, token) {\n    const tn = token.tagID;\n    if ($546dc23fbaaf59e4$var$TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD) || p.openElements.hasInTableScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH)) {\n            p._closeTableCell();\n            $546dc23fbaaf59e4$var$startTagInRow(p, token);\n        }\n    } else $546dc23fbaaf59e4$var$startTagInBody(p, token);\n}\nfunction $546dc23fbaaf59e4$var$endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch(tn){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH:\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_ROW;\n            }\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR:\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                $546dc23fbaaf59e4$var$endTagInRow(p, token);\n            }\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COL:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n            break;\n        default:\n            $546dc23fbaaf59e4$var$endTagInBody(p, token);\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagInSelect(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n            $546dc23fbaaf59e4$var$startTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTION:\n            if (p.openElements.currentTagId === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTION) p.openElements.pop();\n            p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTGROUP:\n            if (p.openElements.currentTagId === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTION) p.openElements.pop();\n            if (p.openElements.currentTagId === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTGROUP) p.openElements.pop();\n            p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).INPUT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).KEYGEN:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEXTAREA:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SELECT:\n            if (p.openElements.hasInSelectScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SELECT)) {\n                p.openElements.popUntilTagNamePopped((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SELECT) p._processStartTag(token);\n            }\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SCRIPT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n            $546dc23fbaaf59e4$var$startTagInHead(p, token);\n            break;\n        default:\n    }\n}\nfunction $546dc23fbaaf59e4$var$endTagInSelect(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTGROUP:\n            if (p.openElements.stackTop > 0 && p.openElements.currentTagId === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTION && p.openElements.tagIDs[p.openElements.stackTop - 1] === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTGROUP) p.openElements.pop();\n            if (p.openElements.currentTagId === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTGROUP) p.openElements.pop();\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTION:\n            if (p.openElements.currentTagId === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).OPTION) p.openElements.pop();\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SELECT:\n            if (p.openElements.hasInSelectScope((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SELECT)) {\n                p.openElements.popUntilTagNamePopped((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n            $546dc23fbaaf59e4$var$templateEndTagInHead(p, token);\n            break;\n        default:\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH) {\n        p.openElements.popUntilTagNamePopped((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    } else $546dc23fbaaf59e4$var$startTagInSelect(p, token);\n}\nfunction $546dc23fbaaf59e4$var$endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TABLE || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD || tn === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    } else $546dc23fbaaf59e4$var$endTagInSelect(p, token);\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagInTemplate(p, token) {\n    switch(token.tagID){\n        // First, handle tags that can start without a mode change\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BASE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BASEFONT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BGSOUND:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).LINK:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).META:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOFRAMES:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).SCRIPT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).STYLE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TITLE:\n            $546dc23fbaaf59e4$var$startTagInHead(p, token);\n            break;\n        // Re-process the token in the appropriate mode\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).CAPTION:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COLGROUP:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TBODY:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TFOOT:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).THEAD:\n            p.tmplInsertionModeStack[0] = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE;\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE;\n            $546dc23fbaaf59e4$var$startTagInTable(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).COL:\n            p.tmplInsertionModeStack[0] = $546dc23fbaaf59e4$var$InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_COLUMN_GROUP;\n            $546dc23fbaaf59e4$var$startTagInColumnGroup(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TR:\n            p.tmplInsertionModeStack[0] = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_TABLE_BODY;\n            $546dc23fbaaf59e4$var$startTagInTableBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TD:\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TH:\n            p.tmplInsertionModeStack[0] = $546dc23fbaaf59e4$var$InsertionMode.IN_ROW;\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_ROW;\n            $546dc23fbaaf59e4$var$startTagInRow(p, token);\n            break;\n        default:\n            p.tmplInsertionModeStack[0] = $546dc23fbaaf59e4$var$InsertionMode.IN_BODY;\n            p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_BODY;\n            $546dc23fbaaf59e4$var$startTagInBody(p, token);\n    }\n}\nfunction $546dc23fbaaf59e4$var$endTagInTemplate(p, token) {\n    if (token.tagID === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE) $546dc23fbaaf59e4$var$templateEndTagInHead(p, token);\n}\nfunction $546dc23fbaaf59e4$var$eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped((0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    } else $546dc23fbaaf59e4$var$stopParsing(p, token);\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagAfterBody(p, token) {\n    if (token.tagID === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML) $546dc23fbaaf59e4$var$startTagInBody(p, token);\n    else $546dc23fbaaf59e4$var$tokenAfterBody(p, token);\n}\nfunction $546dc23fbaaf59e4$var$endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML) {\n        if (!p.fragmentContext) p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.AFTER_AFTER_BODY;\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) p._setEndLocation(bodyElement, token);\n        }\n    } else $546dc23fbaaf59e4$var$tokenAfterBody(p, token);\n}\nfunction $546dc23fbaaf59e4$var$tokenAfterBody(p, token) {\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_BODY;\n    $546dc23fbaaf59e4$var$modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagInFrameset(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n            $546dc23fbaaf59e4$var$startTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FRAMESET:\n            p._insertElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FRAME:\n            p._appendElement(token, (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML);\n            token.ackSelfClosing = true;\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOFRAMES:\n            $546dc23fbaaf59e4$var$startTagInHead(p, token);\n            break;\n        default:\n    }\n}\nfunction $546dc23fbaaf59e4$var$endTagInFrameset(p, token) {\n    if (token.tagID === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).FRAMESET) p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.AFTER_FRAMESET;\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagAfterFrameset(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n            $546dc23fbaaf59e4$var$startTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOFRAMES:\n            $546dc23fbaaf59e4$var$startTagInHead(p, token);\n            break;\n        default:\n    }\n}\nfunction $546dc23fbaaf59e4$var$endTagAfterFrameset(p, token) {\n    if (token.tagID === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML) p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.AFTER_AFTER_FRAMESET;\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagAfterAfterBody(p, token) {\n    if (token.tagID === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML) $546dc23fbaaf59e4$var$startTagInBody(p, token);\n    else $546dc23fbaaf59e4$var$tokenAfterAfterBody(p, token);\n}\nfunction $546dc23fbaaf59e4$var$tokenAfterAfterBody(p, token) {\n    p.insertionMode = $546dc23fbaaf59e4$var$InsertionMode.IN_BODY;\n    $546dc23fbaaf59e4$var$modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$startTagAfterAfterFrameset(p, token) {\n    switch(token.tagID){\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).HTML:\n            $546dc23fbaaf59e4$var$startTagInBody(p, token);\n            break;\n        case (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).NOFRAMES:\n            $546dc23fbaaf59e4$var$startTagInHead(p, token);\n            break;\n        default:\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction $546dc23fbaaf59e4$var$nullCharacterInForeignContent(p, token) {\n    token.chars = $13b6aff9b77366c5$export$e8d20e7a50e6c279;\n    p._insertCharacters(token);\n}\nfunction $546dc23fbaaf59e4$var$characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction $546dc23fbaaf59e4$var$popUntilHtmlOrIntegrationPoint(p) {\n    while(p.treeAdapter.getNamespaceURI(p.openElements.current) !== (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML && !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current))p.openElements.pop();\n}\nfunction $546dc23fbaaf59e4$var$startTagInForeignContent(p, token) {\n    if ($a7b4b99c1048c081$export$3435eb4ab4d2ed2d(token)) {\n        $546dc23fbaaf59e4$var$popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    } else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === (0, $5deb0c47e1a27c89$export$fb4028874a74450).MATHML) $a7b4b99c1048c081$export$c583cc5a9d633feb(token);\n        else if (currentNs === (0, $5deb0c47e1a27c89$export$fb4028874a74450).SVG) {\n            $a7b4b99c1048c081$export$95df78fe2e7f33e3(token);\n            $a7b4b99c1048c081$export$74ce06f755fb8f68(token);\n        }\n        $a7b4b99c1048c081$export$a5192af02995cbdc(token);\n        if (token.selfClosing) p._appendElement(token, currentNs);\n        else p._insertElement(token, currentNs);\n        token.ackSelfClosing = true;\n    }\n}\nfunction $546dc23fbaaf59e4$var$endTagInForeignContent(p, token) {\n    if (token.tagID === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).P || token.tagID === (0, $5deb0c47e1a27c89$export$cb0999a53e0acaed).BR) {\n        $546dc23fbaaf59e4$var$popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for(let i = p.openElements.stackTop; i > 0; i--){\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n} //# sourceMappingURL=index.js.map\n\n\n\n\nvar $69316fb51a1a0332$exports = {};\n\"use strict\";\nObject.defineProperty($69316fb51a1a0332$exports, \"__esModule\", {\n    value: true\n});\n$69316fb51a1a0332$exports.escapeText = $69316fb51a1a0332$exports.escapeAttribute = $69316fb51a1a0332$exports.escapeUTF8 = $69316fb51a1a0332$exports.escape = $69316fb51a1a0332$exports.encodeXML = $69316fb51a1a0332$exports.getCodePoint = $69316fb51a1a0332$exports.xmlReplacer = void 0;\n$69316fb51a1a0332$exports.xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nvar $69316fb51a1a0332$var$xmlCodeMap = new Map([\n    [\n        34,\n        \"&quot;\"\n    ],\n    [\n        38,\n        \"&amp;\"\n    ],\n    [\n        39,\n        \"&apos;\"\n    ],\n    [\n        60,\n        \"&lt;\"\n    ],\n    [\n        62,\n        \"&gt;\"\n    ]\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\n$69316fb51a1a0332$exports.getCodePoint = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null ? function(str, index) {\n    return str.codePointAt(index);\n} : function(c, index) {\n    return (c.charCodeAt(index) & 0xfc00) === 0xd800 ? (c.charCodeAt(index) - 0xd800) * 0x400 + c.charCodeAt(index + 1) - 0xdc00 + 0x10000 : c.charCodeAt(index);\n};\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */ function $69316fb51a1a0332$var$encodeXML(str) {\n    var ret = \"\";\n    var lastIdx = 0;\n    var match;\n    while((match = $69316fb51a1a0332$exports.xmlReplacer.exec(str)) !== null){\n        var i = match.index;\n        var char = str.charCodeAt(i);\n        var next = $69316fb51a1a0332$var$xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        } else {\n            ret += \"\".concat(str.substring(lastIdx, i), \"&#x\").concat((0, $69316fb51a1a0332$exports.getCodePoint)(str, i).toString(16), \";\");\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = $69316fb51a1a0332$exports.xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n$69316fb51a1a0332$exports.encodeXML = $69316fb51a1a0332$var$encodeXML;\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */ $69316fb51a1a0332$exports.escape = $69316fb51a1a0332$var$encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */ function $69316fb51a1a0332$var$getEscaper(regex, map) {\n    return function escape(data) {\n        var match;\n        var lastIdx = 0;\n        var result = \"\";\n        while(match = regex.exec(data)){\n            if (lastIdx !== match.index) result += data.substring(lastIdx, match.index);\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */ $69316fb51a1a0332$exports.escapeUTF8 = $69316fb51a1a0332$var$getEscaper(/[&<>'\"]/g, $69316fb51a1a0332$var$xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */ $69316fb51a1a0332$exports.escapeAttribute = $69316fb51a1a0332$var$getEscaper(/[\"&\\u00A0]/g, new Map([\n    [\n        34,\n        \"&quot;\"\n    ],\n    [\n        38,\n        \"&amp;\"\n    ],\n    [\n        160,\n        \"&nbsp;\"\n    ]\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */ $69316fb51a1a0332$exports.escapeText = $69316fb51a1a0332$var$getEscaper(/[&<>\\u00A0]/g, new Map([\n    [\n        38,\n        \"&amp;\"\n    ],\n    [\n        60,\n        \"&lt;\"\n    ],\n    [\n        62,\n        \"&gt;\"\n    ],\n    [\n        160,\n        \"&nbsp;\"\n    ]\n]));\n\n\n\n// Sets\nconst $6c820babda949dde$var$VOID_ELEMENTS = new Set([\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).AREA,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).BASE,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).BASEFONT,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).BGSOUND,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).BR,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).COL,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).EMBED,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).FRAME,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).HR,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).IMG,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).INPUT,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).KEYGEN,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).LINK,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).META,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).PARAM,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).SOURCE,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).TRACK,\n    (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).WBR\n]);\nfunction $6c820babda949dde$var$isVoidElement(node, options) {\n    return options.treeAdapter.isElementNode(node) && options.treeAdapter.getNamespaceURI(node) === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML && $6c820babda949dde$var$VOID_ELEMENTS.has(options.treeAdapter.getTagName(node));\n}\nconst $6c820babda949dde$var$defaultOpts = {\n    treeAdapter: (0, $96d1b2ecef66ec3e$export$7ddbba828dfa4796),\n    scriptingEnabled: true\n};\nfunction $6c820babda949dde$export$dfdc1655ccc5b9cb(node, options) {\n    const opts = {\n        ...$6c820babda949dde$var$defaultOpts,\n        ...options\n    };\n    if ($6c820babda949dde$var$isVoidElement(node, opts)) return \"\";\n    return $6c820babda949dde$var$serializeChildNodes(node, opts);\n}\nfunction $6c820babda949dde$export$71e9c1f1ceb5a856(node, options) {\n    const opts = {\n        ...$6c820babda949dde$var$defaultOpts,\n        ...options\n    };\n    return $6c820babda949dde$var$serializeNode(node, opts);\n}\nfunction $6c820babda949dde$var$serializeChildNodes(parentNode, options) {\n    let html = \"\";\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) && options.treeAdapter.getTagName(parentNode) === (0, $5deb0c47e1a27c89$export$7e674a85a2656dce).TEMPLATE && options.treeAdapter.getNamespaceURI(parentNode) === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML ? options.treeAdapter.getTemplateContent(parentNode) : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) for (const currentNode of childNodes)html += $6c820babda949dde$var$serializeNode(currentNode, options);\n    return html;\n}\nfunction $6c820babda949dde$var$serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) return $6c820babda949dde$var$serializeElement(node, options);\n    if (options.treeAdapter.isTextNode(node)) return $6c820babda949dde$var$serializeTextNode(node, options);\n    if (options.treeAdapter.isCommentNode(node)) return $6c820babda949dde$var$serializeCommentNode(node, options);\n    if (options.treeAdapter.isDocumentTypeNode(node)) return $6c820babda949dde$var$serializeDocumentTypeNode(node, options);\n    // Return an empty string for unknown nodes\n    return \"\";\n}\nfunction $6c820babda949dde$var$serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${$6c820babda949dde$var$serializeAttributes(node, options)}>${$6c820babda949dde$var$isVoidElement(node, options) ? \"\" : `${$6c820babda949dde$var$serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction $6c820babda949dde$var$serializeAttributes(node, { treeAdapter: treeAdapter }) {\n    let html = \"\";\n    for (const attr of treeAdapter.getAttrList(node)){\n        html += \" \";\n        if (!attr.namespace) html += attr.name;\n        else switch(attr.namespace){\n            case (0, $5deb0c47e1a27c89$export$fb4028874a74450).XML:\n                html += `xml:${attr.name}`;\n                break;\n            case (0, $5deb0c47e1a27c89$export$fb4028874a74450).XMLNS:\n                if (attr.name !== \"xmlns\") html += \"xmlns:\";\n                html += attr.name;\n                break;\n            case (0, $5deb0c47e1a27c89$export$fb4028874a74450).XLINK:\n                html += `xlink:${attr.name}`;\n                break;\n            default:\n                html += `${attr.prefix}:${attr.name}`;\n        }\n        html += `=\"${(0, $69316fb51a1a0332$exports.escapeAttribute)(attr.value)}\"`;\n    }\n    return html;\n}\nfunction $6c820babda949dde$var$serializeTextNode(node, options) {\n    const { treeAdapter: treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn && treeAdapter.getNamespaceURI(parent) === (0, $5deb0c47e1a27c89$export$fb4028874a74450).HTML && (0, $5deb0c47e1a27c89$export$4ce4f8c09f921aed)(parentTn, options.scriptingEnabled) ? content : (0, $69316fb51a1a0332$exports.escapeText)(content);\n}\nfunction $6c820babda949dde$var$serializeCommentNode(node, { treeAdapter: treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction $6c820babda949dde$var$serializeDocumentTypeNode(node, { treeAdapter: treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n} //# sourceMappingURL=index.js.map\n\n\n\n\n\n\n\nfunction $c7e9358d089ba8ff$export$98e6a39c04603d36(html, options) {\n    return (0, $546dc23fbaaf59e4$export$7acfa6ed01010e37).parse(html, options);\n}\nfunction $c7e9358d089ba8ff$export$e1152f5efcc82ad(fragmentContext, html, options) {\n    if (typeof fragmentContext === \"string\") {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = (0, $546dc23fbaaf59e4$export$7acfa6ed01010e37).getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n} //# sourceMappingURL=index.js.map\n\n\n\n\nfunction $acbd03306e728ee4$var$createTextNode(value) {\n    return new (0, $298fc1d08428934f$export$5f1af8db9871e1d6)(value);\n}\nfunction $acbd03306e728ee4$var$enquoteDoctypeId(id) {\n    const quote = id.includes('\"') ? \"'\" : '\"';\n    return quote + id + quote;\n}\nfunction $acbd03306e728ee4$export$28adbdf76da34d76(name, publicId, systemId) {\n    let str = \"!DOCTYPE \";\n    if (name) str += name;\n    if (publicId) str += ` PUBLIC ${$acbd03306e728ee4$var$enquoteDoctypeId(publicId)}`;\n    else if (systemId) str += \" SYSTEM\";\n    if (systemId) str += ` ${$acbd03306e728ee4$var$enquoteDoctypeId(systemId)}`;\n    return str;\n}\nconst $acbd03306e728ee4$export$e00c9c6684b0ace = {\n    // Re-exports from domhandler\n    isCommentNode: (0, $298fc1d08428934f$export$3ab01370f5e64ac8),\n    isElementNode: (0, $298fc1d08428934f$export$3bf645f08efe3292),\n    isTextNode: (0, $298fc1d08428934f$export$1879817ac5c922b7),\n    //Node construction\n    createDocument () {\n        const node = new (0, $298fc1d08428934f$export$b34a105447964f9f)([]);\n        node[\"x-mode\"] = (0, $5deb0c47e1a27c89$exports).DOCUMENT_MODE.NO_QUIRKS;\n        return node;\n    },\n    createDocumentFragment () {\n        return new (0, $298fc1d08428934f$export$b34a105447964f9f)([]);\n    },\n    createElement (tagName, namespaceURI, attrs) {\n        const attribs = Object.create(null);\n        const attribsNamespace = Object.create(null);\n        const attribsPrefix = Object.create(null);\n        for(let i = 0; i < attrs.length; i++){\n            const attrName = attrs[i].name;\n            attribs[attrName] = attrs[i].value;\n            attribsNamespace[attrName] = attrs[i].namespace;\n            attribsPrefix[attrName] = attrs[i].prefix;\n        }\n        const node = new (0, $298fc1d08428934f$export$db77ccec0bb4ccac)(tagName, attribs, []);\n        node.namespace = namespaceURI;\n        node[\"x-attribsNamespace\"] = attribsNamespace;\n        node[\"x-attribsPrefix\"] = attribsPrefix;\n        return node;\n    },\n    createCommentNode (data) {\n        return new (0, $298fc1d08428934f$export$4d299b491347818a)(data);\n    },\n    //Tree mutation\n    appendChild (parentNode, newNode) {\n        const prev = parentNode.children[parentNode.children.length - 1];\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        parentNode.children.push(newNode);\n        newNode.parent = parentNode;\n    },\n    insertBefore (parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.children.indexOf(referenceNode);\n        const { prev: prev } = referenceNode;\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        referenceNode.prev = newNode;\n        newNode.next = referenceNode;\n        parentNode.children.splice(insertionIdx, 0, newNode);\n        newNode.parent = parentNode;\n    },\n    setTemplateContent (templateElement, contentElement) {\n        $acbd03306e728ee4$export$e00c9c6684b0ace.appendChild(templateElement, contentElement);\n    },\n    getTemplateContent (templateElement) {\n        return templateElement.children[0];\n    },\n    setDocumentType (document, name, publicId, systemId) {\n        const data = $acbd03306e728ee4$export$28adbdf76da34d76(name, publicId, systemId);\n        let doctypeNode = document.children.find((node)=>(0, $298fc1d08428934f$export$4b5d79f26e0e3ad5)(node) && node.name === \"!doctype\");\n        if (doctypeNode) doctypeNode.data = data !== null && data !== void 0 ? data : null;\n        else {\n            doctypeNode = new (0, $298fc1d08428934f$export$9269dce19ee35e96)(\"!doctype\", data);\n            $acbd03306e728ee4$export$e00c9c6684b0ace.appendChild(document, doctypeNode);\n        }\n        doctypeNode[\"x-name\"] = name !== null && name !== void 0 ? name : undefined;\n        doctypeNode[\"x-publicId\"] = publicId !== null && publicId !== void 0 ? publicId : undefined;\n        doctypeNode[\"x-systemId\"] = systemId !== null && systemId !== void 0 ? systemId : undefined;\n    },\n    setDocumentMode (document, mode) {\n        document[\"x-mode\"] = mode;\n    },\n    getDocumentMode (document) {\n        return document[\"x-mode\"];\n    },\n    detachNode (node) {\n        if (node.parent) {\n            const idx = node.parent.children.indexOf(node);\n            const { prev: prev, next: next } = node;\n            node.prev = null;\n            node.next = null;\n            if (prev) prev.next = next;\n            if (next) next.prev = prev;\n            node.parent.children.splice(idx, 1);\n            node.parent = null;\n        }\n    },\n    insertText (parentNode, text) {\n        const lastChild = parentNode.children[parentNode.children.length - 1];\n        if (lastChild && (0, $298fc1d08428934f$export$1879817ac5c922b7)(lastChild)) lastChild.data += text;\n        else $acbd03306e728ee4$export$e00c9c6684b0ace.appendChild(parentNode, $acbd03306e728ee4$var$createTextNode(text));\n    },\n    insertTextBefore (parentNode, text, referenceNode) {\n        const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n        if (prevNode && (0, $298fc1d08428934f$export$1879817ac5c922b7)(prevNode)) prevNode.data += text;\n        else $acbd03306e728ee4$export$e00c9c6684b0ace.insertBefore(parentNode, $acbd03306e728ee4$var$createTextNode(text), referenceNode);\n    },\n    adoptAttributes (recipient, attrs) {\n        for(let i = 0; i < attrs.length; i++){\n            const attrName = attrs[i].name;\n            if (typeof recipient.attribs[attrName] === \"undefined\") {\n                recipient.attribs[attrName] = attrs[i].value;\n                recipient[\"x-attribsNamespace\"][attrName] = attrs[i].namespace;\n                recipient[\"x-attribsPrefix\"][attrName] = attrs[i].prefix;\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild (node) {\n        return node.children[0];\n    },\n    getChildNodes (node) {\n        return node.children;\n    },\n    getParentNode (node) {\n        return node.parent;\n    },\n    getAttrList (element) {\n        return element.attributes;\n    },\n    //Node data\n    getTagName (element) {\n        return element.name;\n    },\n    getNamespaceURI (element) {\n        return element.namespace;\n    },\n    getTextNodeContent (textNode) {\n        return textNode.data;\n    },\n    getCommentNodeContent (commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName (doctypeNode) {\n        var _a;\n        return (_a = doctypeNode[\"x-name\"]) !== null && _a !== void 0 ? _a : \"\";\n    },\n    getDocumentTypeNodePublicId (doctypeNode) {\n        var _a;\n        return (_a = doctypeNode[\"x-publicId\"]) !== null && _a !== void 0 ? _a : \"\";\n    },\n    getDocumentTypeNodeSystemId (doctypeNode) {\n        var _a;\n        return (_a = doctypeNode[\"x-systemId\"]) !== null && _a !== void 0 ? _a : \"\";\n    },\n    //Node types\n    isDocumentTypeNode (node) {\n        return (0, $298fc1d08428934f$export$4b5d79f26e0e3ad5)(node) && node.name === \"!doctype\";\n    },\n    // Source code location\n    setNodeSourceCodeLocation (node, location) {\n        if (location) {\n            node.startIndex = location.startOffset;\n            node.endIndex = location.endOffset;\n        }\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation (node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation (node, endLocation) {\n        if (endLocation.endOffset != null) node.endIndex = endLocation.endOffset;\n        node.sourceCodeLocation = {\n            ...node.sourceCodeLocation,\n            ...endLocation\n        };\n    }\n}; //# sourceMappingURL=index.js.map\n\n\nfunction $ed5b76e098a38311$export$2f1ddab8b648d7f6(content, options, isDocument, context) {\n    const opts = {\n        scriptingEnabled: typeof options.scriptingEnabled === \"boolean\" ? options.scriptingEnabled : true,\n        treeAdapter: (0, $acbd03306e728ee4$export$e00c9c6684b0ace),\n        sourceCodeLocationInfo: options.sourceCodeLocationInfo\n    };\n    return isDocument ? (0, $c7e9358d089ba8ff$export$98e6a39c04603d36)(content, opts) : (0, $c7e9358d089ba8ff$export$e1152f5efcc82ad)(context, content, opts);\n}\nconst $ed5b76e098a38311$var$renderOpts = {\n    treeAdapter: (0, $acbd03306e728ee4$export$e00c9c6684b0ace)\n};\nfunction $ed5b76e098a38311$export$af75b43ff4abe814(dom) {\n    /*\n     * `dom-serializer` passes over the special \"root\" node and renders the\n     * node's children in its place. To mimic this behavior with `parse5`, an\n     * equivalent operation must be applied to the input array.\n     */ const nodes = \"length\" in dom ? dom : [\n        dom\n    ];\n    for(let index = 0; index < nodes.length; index += 1){\n        const node = nodes[index];\n        if ((0, $298fc1d08428934f$export$62858bae88b53fd0)(node)) Array.prototype.splice.call(nodes, index, 1, ...node.children);\n    }\n    let result = \"\";\n    for(let index = 0; index < nodes.length; index += 1){\n        const node = nodes[index];\n        result += (0, $6c820babda949dde$export$71e9c1f1ceb5a856)(node, $ed5b76e098a38311$var$renderOpts);\n    }\n    return result;\n}\n\n\n\n\nvar $361de31a633664d8$var$CharCodes;\n(function(CharCodes) {\n    CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n    CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n    CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n    CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n    CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n    CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n    CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n    CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n    CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n    CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n    CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n    CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n    CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n    CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n    CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n    CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n    CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n    CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n    CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})($361de31a633664d8$var$CharCodes || ($361de31a633664d8$var$CharCodes = {}));\n/** All the states the tokenizer can be in. */ var $361de31a633664d8$var$State;\n(function(State) {\n    State[State[\"Text\"] = 1] = \"Text\";\n    State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n    State[State[\"InTagName\"] = 3] = \"InTagName\";\n    State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n    State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n    State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n    State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n    // Attributes\n    State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n    State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n    State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n    State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n    State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n    State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n    State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n    // Declarations\n    State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n    State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n    // Processing instructions\n    State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n    // Comments & CDATA\n    State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n    State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n    State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n    State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n    // Special tags\n    State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n    State[State[\"SpecialStartSequence\"] = 23] = \"SpecialStartSequence\";\n    State[State[\"InSpecialTag\"] = 24] = \"InSpecialTag\";\n    State[State[\"BeforeEntity\"] = 25] = \"BeforeEntity\";\n    State[State[\"BeforeNumericEntity\"] = 26] = \"BeforeNumericEntity\";\n    State[State[\"InNamedEntity\"] = 27] = \"InNamedEntity\";\n    State[State[\"InNumericEntity\"] = 28] = \"InNumericEntity\";\n    State[State[\"InHexEntity\"] = 29] = \"InHexEntity\";\n})($361de31a633664d8$var$State || ($361de31a633664d8$var$State = {}));\nfunction $361de31a633664d8$var$isWhitespace(c) {\n    return c === $361de31a633664d8$var$CharCodes.Space || c === $361de31a633664d8$var$CharCodes.NewLine || c === $361de31a633664d8$var$CharCodes.Tab || c === $361de31a633664d8$var$CharCodes.FormFeed || c === $361de31a633664d8$var$CharCodes.CarriageReturn;\n}\nfunction $361de31a633664d8$var$isEndOfTagSection(c) {\n    return c === $361de31a633664d8$var$CharCodes.Slash || c === $361de31a633664d8$var$CharCodes.Gt || $361de31a633664d8$var$isWhitespace(c);\n}\nfunction $361de31a633664d8$var$isNumber(c) {\n    return c >= $361de31a633664d8$var$CharCodes.Zero && c <= $361de31a633664d8$var$CharCodes.Nine;\n}\nfunction $361de31a633664d8$var$isASCIIAlpha(c) {\n    return c >= $361de31a633664d8$var$CharCodes.LowerA && c <= $361de31a633664d8$var$CharCodes.LowerZ || c >= $361de31a633664d8$var$CharCodes.UpperA && c <= $361de31a633664d8$var$CharCodes.UpperZ;\n}\nfunction $361de31a633664d8$var$isHexDigit(c) {\n    return c >= $361de31a633664d8$var$CharCodes.UpperA && c <= $361de31a633664d8$var$CharCodes.UpperF || c >= $361de31a633664d8$var$CharCodes.LowerA && c <= $361de31a633664d8$var$CharCodes.LowerF;\n}\nvar $361de31a633664d8$export$cbf5509cea2ad22;\n(function(QuoteType) {\n    QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n    QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n    QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n    QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})($361de31a633664d8$export$cbf5509cea2ad22 || ($361de31a633664d8$export$cbf5509cea2ad22 = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */ const $361de31a633664d8$var$Sequences = {\n    Cdata: new Uint8Array([\n        0x43,\n        0x44,\n        0x41,\n        0x54,\n        0x41,\n        0x5b\n    ]),\n    CdataEnd: new Uint8Array([\n        0x5d,\n        0x5d,\n        0x3e\n    ]),\n    CommentEnd: new Uint8Array([\n        0x2d,\n        0x2d,\n        0x3e\n    ]),\n    ScriptEnd: new Uint8Array([\n        0x3c,\n        0x2f,\n        0x73,\n        0x63,\n        0x72,\n        0x69,\n        0x70,\n        0x74\n    ]),\n    StyleEnd: new Uint8Array([\n        0x3c,\n        0x2f,\n        0x73,\n        0x74,\n        0x79,\n        0x6c,\n        0x65\n    ]),\n    TitleEnd: new Uint8Array([\n        0x3c,\n        0x2f,\n        0x74,\n        0x69,\n        0x74,\n        0x6c,\n        0x65\n    ])\n};\nclass $361de31a633664d8$export$2e2bcd8739ae039 {\n    constructor({ xmlMode: xmlMode = false, decodeEntities: decodeEntities = true }, cbs){\n        this.cbs = cbs;\n        /** The current state the tokenizer is in. */ this.state = $361de31a633664d8$var$State.Text;\n        /** The read buffer. */ this.buffer = \"\";\n        /** The beginning of the section that is currently being read. */ this.sectionStart = 0;\n        /** The index within the buffer that we are currently looking at. */ this.index = 0;\n        /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */ this.baseState = $361de31a633664d8$var$State.Text;\n        /** For special parsing behavior inside of script and style tags. */ this.isSpecial = false;\n        /** Indicates whether the tokenizer has been paused. */ this.running = true;\n        /** The offset of the current buffer. */ this.offset = 0;\n        this.currentSequence = undefined;\n        this.sequenceIndex = 0;\n        this.trieIndex = 0;\n        this.trieCurrent = 0;\n        /** For named entities, the index of the value. For numeric entities, the code point. */ this.entityResult = 0;\n        this.entityExcess = 0;\n        this.xmlMode = xmlMode;\n        this.decodeEntities = decodeEntities;\n        this.entityTrie = xmlMode ? (0, $108ddd412d07cc89$exports.xmlDecodeTree) : (0, $108ddd412d07cc89$exports.htmlDecodeTree);\n    }\n    reset() {\n        this.state = $361de31a633664d8$var$State.Text;\n        this.buffer = \"\";\n        this.sectionStart = 0;\n        this.index = 0;\n        this.baseState = $361de31a633664d8$var$State.Text;\n        this.currentSequence = undefined;\n        this.running = true;\n        this.offset = 0;\n    }\n    write(chunk) {\n        this.offset += this.buffer.length;\n        this.buffer = chunk;\n        this.parse();\n    }\n    end() {\n        if (this.running) this.finish();\n    }\n    pause() {\n        this.running = false;\n    }\n    resume() {\n        this.running = true;\n        if (this.index < this.buffer.length + this.offset) this.parse();\n    }\n    /**\n     * The current index within all of the written data.\n     */ getIndex() {\n        return this.index;\n    }\n    /**\n     * The start of the current section.\n     */ getSectionStart() {\n        return this.sectionStart;\n    }\n    stateText(c) {\n        if (c === $361de31a633664d8$var$CharCodes.Lt || !this.decodeEntities && this.fastForwardTo($361de31a633664d8$var$CharCodes.Lt)) {\n            if (this.index > this.sectionStart) this.cbs.ontext(this.sectionStart, this.index);\n            this.state = $361de31a633664d8$var$State.BeforeTagName;\n            this.sectionStart = this.index;\n        } else if (this.decodeEntities && c === $361de31a633664d8$var$CharCodes.Amp) this.state = $361de31a633664d8$var$State.BeforeEntity;\n    }\n    stateSpecialStartSequence(c) {\n        const isEnd = this.sequenceIndex === this.currentSequence.length;\n        const isMatch = isEnd ? $361de31a633664d8$var$isEndOfTagSection(c) : (c | 0x20) === this.currentSequence[this.sequenceIndex];\n        if (!isMatch) this.isSpecial = false;\n        else if (!isEnd) {\n            this.sequenceIndex++;\n            return;\n        }\n        this.sequenceIndex = 0;\n        this.state = $361de31a633664d8$var$State.InTagName;\n        this.stateInTagName(c);\n    }\n    /** Look for an end tag. For <title> tags, also decode entities. */ stateInSpecialTag(c) {\n        if (this.sequenceIndex === this.currentSequence.length) {\n            if (c === $361de31a633664d8$var$CharCodes.Gt || $361de31a633664d8$var$isWhitespace(c)) {\n                const endOfText = this.index - this.currentSequence.length;\n                if (this.sectionStart < endOfText) {\n                    // Spoof the index so that reported locations match up.\n                    const actualIndex = this.index;\n                    this.index = endOfText;\n                    this.cbs.ontext(this.sectionStart, endOfText);\n                    this.index = actualIndex;\n                }\n                this.isSpecial = false;\n                this.sectionStart = endOfText + 2; // Skip over the `</`\n                this.stateInClosingTagName(c);\n                return; // We are done; skip the rest of the function.\n            }\n            this.sequenceIndex = 0;\n        }\n        if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) this.sequenceIndex += 1;\n        else if (this.sequenceIndex === 0) {\n            if (this.currentSequence === $361de31a633664d8$var$Sequences.TitleEnd) // We have to parse entities in <title> tags.\n            {\n                if (this.decodeEntities && c === $361de31a633664d8$var$CharCodes.Amp) this.state = $361de31a633664d8$var$State.BeforeEntity;\n            } else if (this.fastForwardTo($361de31a633664d8$var$CharCodes.Lt)) // Outside of <title> tags, we can fast-forward.\n            this.sequenceIndex = 1;\n        } else // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n        this.sequenceIndex = Number(c === $361de31a633664d8$var$CharCodes.Lt);\n    }\n    stateCDATASequence(c) {\n        if (c === $361de31a633664d8$var$Sequences.Cdata[this.sequenceIndex]) {\n            if (++this.sequenceIndex === $361de31a633664d8$var$Sequences.Cdata.length) {\n                this.state = $361de31a633664d8$var$State.InCommentLike;\n                this.currentSequence = $361de31a633664d8$var$Sequences.CdataEnd;\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n            }\n        } else {\n            this.sequenceIndex = 0;\n            this.state = $361de31a633664d8$var$State.InDeclaration;\n            this.stateInDeclaration(c); // Reconsume the character\n        }\n    }\n    /**\n     * When we wait for one specific character, we can speed things up\n     * by skipping through the buffer until we find it.\n     *\n     * @returns Whether the character was found.\n     */ fastForwardTo(c) {\n        while(++this.index < this.buffer.length + this.offset){\n            if (this.buffer.charCodeAt(this.index - this.offset) === c) return true;\n        }\n        /*\n         * We increment the index at the end of the `parse` loop,\n         * so set it to `buffer.length - 1` here.\n         *\n         * TODO: Refactor `parse` to increment index before calling states.\n         */ this.index = this.buffer.length + this.offset - 1;\n        return false;\n    }\n    /**\n     * Comments and CDATA end with `-->` and `]]>`.\n     *\n     * Their common qualities are:\n     * - Their end sequences have a distinct character they start with.\n     * - That character is then repeated, so we have to check multiple repeats.\n     * - All characters but the start character of the sequence can be skipped.\n     */ stateInCommentLike(c) {\n        if (c === this.currentSequence[this.sequenceIndex]) {\n            if (++this.sequenceIndex === this.currentSequence.length) {\n                if (this.currentSequence === $361de31a633664d8$var$Sequences.CdataEnd) this.cbs.oncdata(this.sectionStart, this.index, 2);\n                else this.cbs.oncomment(this.sectionStart, this.index, 2);\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n                this.state = $361de31a633664d8$var$State.Text;\n            }\n        } else if (this.sequenceIndex === 0) // Fast-forward to the first character of the sequence\n        {\n            if (this.fastForwardTo(this.currentSequence[0])) this.sequenceIndex = 1;\n        } else if (c !== this.currentSequence[this.sequenceIndex - 1]) // Allow long sequences, eg. --->, ]]]>\n        this.sequenceIndex = 0;\n    }\n    /**\n     * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n     *\n     * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n     * We allow anything that wouldn't end the tag.\n     */ isTagStartChar(c) {\n        return this.xmlMode ? !$361de31a633664d8$var$isEndOfTagSection(c) : $361de31a633664d8$var$isASCIIAlpha(c);\n    }\n    startSpecial(sequence, offset) {\n        this.isSpecial = true;\n        this.currentSequence = sequence;\n        this.sequenceIndex = offset;\n        this.state = $361de31a633664d8$var$State.SpecialStartSequence;\n    }\n    stateBeforeTagName(c) {\n        if (c === $361de31a633664d8$var$CharCodes.ExclamationMark) {\n            this.state = $361de31a633664d8$var$State.BeforeDeclaration;\n            this.sectionStart = this.index + 1;\n        } else if (c === $361de31a633664d8$var$CharCodes.Questionmark) {\n            this.state = $361de31a633664d8$var$State.InProcessingInstruction;\n            this.sectionStart = this.index + 1;\n        } else if (this.isTagStartChar(c)) {\n            const lower = c | 0x20;\n            this.sectionStart = this.index;\n            if (!this.xmlMode && lower === $361de31a633664d8$var$Sequences.TitleEnd[2]) this.startSpecial($361de31a633664d8$var$Sequences.TitleEnd, 3);\n            else this.state = !this.xmlMode && lower === $361de31a633664d8$var$Sequences.ScriptEnd[2] ? $361de31a633664d8$var$State.BeforeSpecialS : $361de31a633664d8$var$State.InTagName;\n        } else if (c === $361de31a633664d8$var$CharCodes.Slash) this.state = $361de31a633664d8$var$State.BeforeClosingTagName;\n        else {\n            this.state = $361de31a633664d8$var$State.Text;\n            this.stateText(c);\n        }\n    }\n    stateInTagName(c) {\n        if ($361de31a633664d8$var$isEndOfTagSection(c)) {\n            this.cbs.onopentagname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = $361de31a633664d8$var$State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateBeforeClosingTagName(c) {\n        if ($361de31a633664d8$var$isWhitespace(c)) ;\n        else if (c === $361de31a633664d8$var$CharCodes.Gt) this.state = $361de31a633664d8$var$State.Text;\n        else {\n            this.state = this.isTagStartChar(c) ? $361de31a633664d8$var$State.InClosingTagName : $361de31a633664d8$var$State.InSpecialComment;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInClosingTagName(c) {\n        if (c === $361de31a633664d8$var$CharCodes.Gt || $361de31a633664d8$var$isWhitespace(c)) {\n            this.cbs.onclosetag(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = $361de31a633664d8$var$State.AfterClosingTagName;\n            this.stateAfterClosingTagName(c);\n        }\n    }\n    stateAfterClosingTagName(c) {\n        // Skip everything until \">\"\n        if (c === $361de31a633664d8$var$CharCodes.Gt || this.fastForwardTo($361de31a633664d8$var$CharCodes.Gt)) {\n            this.state = $361de31a633664d8$var$State.Text;\n            this.baseState = $361de31a633664d8$var$State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeAttributeName(c) {\n        if (c === $361de31a633664d8$var$CharCodes.Gt) {\n            this.cbs.onopentagend(this.index);\n            if (this.isSpecial) {\n                this.state = $361de31a633664d8$var$State.InSpecialTag;\n                this.sequenceIndex = 0;\n            } else this.state = $361de31a633664d8$var$State.Text;\n            this.baseState = this.state;\n            this.sectionStart = this.index + 1;\n        } else if (c === $361de31a633664d8$var$CharCodes.Slash) this.state = $361de31a633664d8$var$State.InSelfClosingTag;\n        else if (!$361de31a633664d8$var$isWhitespace(c)) {\n            this.state = $361de31a633664d8$var$State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInSelfClosingTag(c) {\n        if (c === $361de31a633664d8$var$CharCodes.Gt) {\n            this.cbs.onselfclosingtag(this.index);\n            this.state = $361de31a633664d8$var$State.Text;\n            this.baseState = $361de31a633664d8$var$State.Text;\n            this.sectionStart = this.index + 1;\n            this.isSpecial = false; // Reset special state, in case of self-closing special tags\n        } else if (!$361de31a633664d8$var$isWhitespace(c)) {\n            this.state = $361de31a633664d8$var$State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateInAttributeName(c) {\n        if (c === $361de31a633664d8$var$CharCodes.Eq || $361de31a633664d8$var$isEndOfTagSection(c)) {\n            this.cbs.onattribname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = $361de31a633664d8$var$State.AfterAttributeName;\n            this.stateAfterAttributeName(c);\n        }\n    }\n    stateAfterAttributeName(c) {\n        if (c === $361de31a633664d8$var$CharCodes.Eq) this.state = $361de31a633664d8$var$State.BeforeAttributeValue;\n        else if (c === $361de31a633664d8$var$CharCodes.Slash || c === $361de31a633664d8$var$CharCodes.Gt) {\n            this.cbs.onattribend($361de31a633664d8$export$cbf5509cea2ad22.NoValue, this.index);\n            this.state = $361de31a633664d8$var$State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        } else if (!$361de31a633664d8$var$isWhitespace(c)) {\n            this.cbs.onattribend($361de31a633664d8$export$cbf5509cea2ad22.NoValue, this.index);\n            this.state = $361de31a633664d8$var$State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateBeforeAttributeValue(c) {\n        if (c === $361de31a633664d8$var$CharCodes.DoubleQuote) {\n            this.state = $361de31a633664d8$var$State.InAttributeValueDq;\n            this.sectionStart = this.index + 1;\n        } else if (c === $361de31a633664d8$var$CharCodes.SingleQuote) {\n            this.state = $361de31a633664d8$var$State.InAttributeValueSq;\n            this.sectionStart = this.index + 1;\n        } else if (!$361de31a633664d8$var$isWhitespace(c)) {\n            this.sectionStart = this.index;\n            this.state = $361de31a633664d8$var$State.InAttributeValueNq;\n            this.stateInAttributeValueNoQuotes(c); // Reconsume token\n        }\n    }\n    handleInAttributeValue(c, quote) {\n        if (c === quote || !this.decodeEntities && this.fastForwardTo(quote)) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(quote === $361de31a633664d8$var$CharCodes.DoubleQuote ? $361de31a633664d8$export$cbf5509cea2ad22.Double : $361de31a633664d8$export$cbf5509cea2ad22.Single, this.index);\n            this.state = $361de31a633664d8$var$State.BeforeAttributeName;\n        } else if (this.decodeEntities && c === $361de31a633664d8$var$CharCodes.Amp) {\n            this.baseState = this.state;\n            this.state = $361de31a633664d8$var$State.BeforeEntity;\n        }\n    }\n    stateInAttributeValueDoubleQuotes(c) {\n        this.handleInAttributeValue(c, $361de31a633664d8$var$CharCodes.DoubleQuote);\n    }\n    stateInAttributeValueSingleQuotes(c) {\n        this.handleInAttributeValue(c, $361de31a633664d8$var$CharCodes.SingleQuote);\n    }\n    stateInAttributeValueNoQuotes(c) {\n        if ($361de31a633664d8$var$isWhitespace(c) || c === $361de31a633664d8$var$CharCodes.Gt) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend($361de31a633664d8$export$cbf5509cea2ad22.Unquoted, this.index);\n            this.state = $361de31a633664d8$var$State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        } else if (this.decodeEntities && c === $361de31a633664d8$var$CharCodes.Amp) {\n            this.baseState = this.state;\n            this.state = $361de31a633664d8$var$State.BeforeEntity;\n        }\n    }\n    stateBeforeDeclaration(c) {\n        if (c === $361de31a633664d8$var$CharCodes.OpeningSquareBracket) {\n            this.state = $361de31a633664d8$var$State.CDATASequence;\n            this.sequenceIndex = 0;\n        } else this.state = c === $361de31a633664d8$var$CharCodes.Dash ? $361de31a633664d8$var$State.BeforeComment : $361de31a633664d8$var$State.InDeclaration;\n    }\n    stateInDeclaration(c) {\n        if (c === $361de31a633664d8$var$CharCodes.Gt || this.fastForwardTo($361de31a633664d8$var$CharCodes.Gt)) {\n            this.cbs.ondeclaration(this.sectionStart, this.index);\n            this.state = $361de31a633664d8$var$State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateInProcessingInstruction(c) {\n        if (c === $361de31a633664d8$var$CharCodes.Gt || this.fastForwardTo($361de31a633664d8$var$CharCodes.Gt)) {\n            this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n            this.state = $361de31a633664d8$var$State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeComment(c) {\n        if (c === $361de31a633664d8$var$CharCodes.Dash) {\n            this.state = $361de31a633664d8$var$State.InCommentLike;\n            this.currentSequence = $361de31a633664d8$var$Sequences.CommentEnd;\n            // Allow short comments (eg. <!-->)\n            this.sequenceIndex = 2;\n            this.sectionStart = this.index + 1;\n        } else this.state = $361de31a633664d8$var$State.InDeclaration;\n    }\n    stateInSpecialComment(c) {\n        if (c === $361de31a633664d8$var$CharCodes.Gt || this.fastForwardTo($361de31a633664d8$var$CharCodes.Gt)) {\n            this.cbs.oncomment(this.sectionStart, this.index, 0);\n            this.state = $361de31a633664d8$var$State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeSpecialS(c) {\n        const lower = c | 0x20;\n        if (lower === $361de31a633664d8$var$Sequences.ScriptEnd[3]) this.startSpecial($361de31a633664d8$var$Sequences.ScriptEnd, 4);\n        else if (lower === $361de31a633664d8$var$Sequences.StyleEnd[3]) this.startSpecial($361de31a633664d8$var$Sequences.StyleEnd, 4);\n        else {\n            this.state = $361de31a633664d8$var$State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    }\n    stateBeforeEntity(c) {\n        // Start excess with 1 to include the '&'\n        this.entityExcess = 1;\n        this.entityResult = 0;\n        if (c === $361de31a633664d8$var$CharCodes.Number) this.state = $361de31a633664d8$var$State.BeforeNumericEntity;\n        else if (c === $361de31a633664d8$var$CharCodes.Amp) ;\n        else {\n            this.trieIndex = 0;\n            this.trieCurrent = this.entityTrie[0];\n            this.state = $361de31a633664d8$var$State.InNamedEntity;\n            this.stateInNamedEntity(c);\n        }\n    }\n    stateInNamedEntity(c) {\n        this.entityExcess += 1;\n        this.trieIndex = (0, $108ddd412d07cc89$exports.determineBranch)(this.entityTrie, this.trieCurrent, this.trieIndex + 1, c);\n        if (this.trieIndex < 0) {\n            this.emitNamedEntity();\n            this.index--;\n            return;\n        }\n        this.trieCurrent = this.entityTrie[this.trieIndex];\n        const masked = this.trieCurrent & (0, $108ddd412d07cc89$exports.BinTrieFlags).VALUE_LENGTH;\n        // If the branch is a value, store it and continue\n        if (masked) {\n            // The mask is the number of bytes of the value, including the current byte.\n            const valueLength = (masked >> 14) - 1;\n            // If we have a legacy entity while parsing strictly, just skip the number of bytes\n            if (!this.allowLegacyEntity() && c !== $361de31a633664d8$var$CharCodes.Semi) this.trieIndex += valueLength;\n            else {\n                // Add 1 as we have already incremented the excess\n                const entityStart = this.index - this.entityExcess + 1;\n                if (entityStart > this.sectionStart) this.emitPartial(this.sectionStart, entityStart);\n                // If this is a surrogate pair, consume the next two bytes\n                this.entityResult = this.trieIndex;\n                this.trieIndex += valueLength;\n                this.entityExcess = 0;\n                this.sectionStart = this.index + 1;\n                if (valueLength === 0) this.emitNamedEntity();\n            }\n        }\n    }\n    emitNamedEntity() {\n        this.state = this.baseState;\n        if (this.entityResult === 0) return;\n        const valueLength = (this.entityTrie[this.entityResult] & (0, $108ddd412d07cc89$exports.BinTrieFlags).VALUE_LENGTH) >> 14;\n        switch(valueLength){\n            case 1:\n                this.emitCodePoint(this.entityTrie[this.entityResult] & ~(0, $108ddd412d07cc89$exports.BinTrieFlags).VALUE_LENGTH);\n                break;\n            case 2:\n                this.emitCodePoint(this.entityTrie[this.entityResult + 1]);\n                break;\n            case 3:\n                this.emitCodePoint(this.entityTrie[this.entityResult + 1]);\n                this.emitCodePoint(this.entityTrie[this.entityResult + 2]);\n        }\n    }\n    stateBeforeNumericEntity(c) {\n        if ((c | 0x20) === $361de31a633664d8$var$CharCodes.LowerX) {\n            this.entityExcess++;\n            this.state = $361de31a633664d8$var$State.InHexEntity;\n        } else {\n            this.state = $361de31a633664d8$var$State.InNumericEntity;\n            this.stateInNumericEntity(c);\n        }\n    }\n    emitNumericEntity(strict) {\n        const entityStart = this.index - this.entityExcess - 1;\n        const numberStart = entityStart + 2 + Number(this.state === $361de31a633664d8$var$State.InHexEntity);\n        if (numberStart !== this.index) {\n            // Emit leading data if any\n            if (entityStart > this.sectionStart) this.emitPartial(this.sectionStart, entityStart);\n            this.sectionStart = this.index + Number(strict);\n            this.emitCodePoint((0, $108ddd412d07cc89$exports.replaceCodePoint)(this.entityResult));\n        }\n        this.state = this.baseState;\n    }\n    stateInNumericEntity(c) {\n        if (c === $361de31a633664d8$var$CharCodes.Semi) this.emitNumericEntity(true);\n        else if ($361de31a633664d8$var$isNumber(c)) {\n            this.entityResult = this.entityResult * 10 + (c - $361de31a633664d8$var$CharCodes.Zero);\n            this.entityExcess++;\n        } else {\n            if (this.allowLegacyEntity()) this.emitNumericEntity(false);\n            else this.state = this.baseState;\n            this.index--;\n        }\n    }\n    stateInHexEntity(c) {\n        if (c === $361de31a633664d8$var$CharCodes.Semi) this.emitNumericEntity(true);\n        else if ($361de31a633664d8$var$isNumber(c)) {\n            this.entityResult = this.entityResult * 16 + (c - $361de31a633664d8$var$CharCodes.Zero);\n            this.entityExcess++;\n        } else if ($361de31a633664d8$var$isHexDigit(c)) {\n            this.entityResult = this.entityResult * 16 + ((c | 0x20) - $361de31a633664d8$var$CharCodes.LowerA + 10);\n            this.entityExcess++;\n        } else {\n            if (this.allowLegacyEntity()) this.emitNumericEntity(false);\n            else this.state = this.baseState;\n            this.index--;\n        }\n    }\n    allowLegacyEntity() {\n        return !this.xmlMode && (this.baseState === $361de31a633664d8$var$State.Text || this.baseState === $361de31a633664d8$var$State.InSpecialTag);\n    }\n    /**\n     * Remove data that has already been consumed from the buffer.\n     */ cleanup() {\n        // If we are inside of text or attributes, emit what we already have.\n        if (this.running && this.sectionStart !== this.index) {\n            if (this.state === $361de31a633664d8$var$State.Text || this.state === $361de31a633664d8$var$State.InSpecialTag && this.sequenceIndex === 0) {\n                this.cbs.ontext(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            } else if (this.state === $361de31a633664d8$var$State.InAttributeValueDq || this.state === $361de31a633664d8$var$State.InAttributeValueSq || this.state === $361de31a633664d8$var$State.InAttributeValueNq) {\n                this.cbs.onattribdata(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n        }\n    }\n    shouldContinue() {\n        return this.index < this.buffer.length + this.offset && this.running;\n    }\n    /**\n     * Iterates through the buffer, calling the function corresponding to the current state.\n     *\n     * States that are more likely to be hit are higher up, as a performance improvement.\n     */ parse() {\n        while(this.shouldContinue()){\n            const c = this.buffer.charCodeAt(this.index - this.offset);\n            switch(this.state){\n                case $361de31a633664d8$var$State.Text:\n                    this.stateText(c);\n                    break;\n                case $361de31a633664d8$var$State.SpecialStartSequence:\n                    this.stateSpecialStartSequence(c);\n                    break;\n                case $361de31a633664d8$var$State.InSpecialTag:\n                    this.stateInSpecialTag(c);\n                    break;\n                case $361de31a633664d8$var$State.CDATASequence:\n                    this.stateCDATASequence(c);\n                    break;\n                case $361de31a633664d8$var$State.InAttributeValueDq:\n                    this.stateInAttributeValueDoubleQuotes(c);\n                    break;\n                case $361de31a633664d8$var$State.InAttributeName:\n                    this.stateInAttributeName(c);\n                    break;\n                case $361de31a633664d8$var$State.InCommentLike:\n                    this.stateInCommentLike(c);\n                    break;\n                case $361de31a633664d8$var$State.InSpecialComment:\n                    this.stateInSpecialComment(c);\n                    break;\n                case $361de31a633664d8$var$State.BeforeAttributeName:\n                    this.stateBeforeAttributeName(c);\n                    break;\n                case $361de31a633664d8$var$State.InTagName:\n                    this.stateInTagName(c);\n                    break;\n                case $361de31a633664d8$var$State.InClosingTagName:\n                    this.stateInClosingTagName(c);\n                    break;\n                case $361de31a633664d8$var$State.BeforeTagName:\n                    this.stateBeforeTagName(c);\n                    break;\n                case $361de31a633664d8$var$State.AfterAttributeName:\n                    this.stateAfterAttributeName(c);\n                    break;\n                case $361de31a633664d8$var$State.InAttributeValueSq:\n                    this.stateInAttributeValueSingleQuotes(c);\n                    break;\n                case $361de31a633664d8$var$State.BeforeAttributeValue:\n                    this.stateBeforeAttributeValue(c);\n                    break;\n                case $361de31a633664d8$var$State.BeforeClosingTagName:\n                    this.stateBeforeClosingTagName(c);\n                    break;\n                case $361de31a633664d8$var$State.AfterClosingTagName:\n                    this.stateAfterClosingTagName(c);\n                    break;\n                case $361de31a633664d8$var$State.BeforeSpecialS:\n                    this.stateBeforeSpecialS(c);\n                    break;\n                case $361de31a633664d8$var$State.InAttributeValueNq:\n                    this.stateInAttributeValueNoQuotes(c);\n                    break;\n                case $361de31a633664d8$var$State.InSelfClosingTag:\n                    this.stateInSelfClosingTag(c);\n                    break;\n                case $361de31a633664d8$var$State.InDeclaration:\n                    this.stateInDeclaration(c);\n                    break;\n                case $361de31a633664d8$var$State.BeforeDeclaration:\n                    this.stateBeforeDeclaration(c);\n                    break;\n                case $361de31a633664d8$var$State.BeforeComment:\n                    this.stateBeforeComment(c);\n                    break;\n                case $361de31a633664d8$var$State.InProcessingInstruction:\n                    this.stateInProcessingInstruction(c);\n                    break;\n                case $361de31a633664d8$var$State.InNamedEntity:\n                    this.stateInNamedEntity(c);\n                    break;\n                case $361de31a633664d8$var$State.BeforeEntity:\n                    this.stateBeforeEntity(c);\n                    break;\n                case $361de31a633664d8$var$State.InHexEntity:\n                    this.stateInHexEntity(c);\n                    break;\n                case $361de31a633664d8$var$State.InNumericEntity:\n                    this.stateInNumericEntity(c);\n                    break;\n                default:\n                    // `this._state === State.BeforeNumericEntity`\n                    this.stateBeforeNumericEntity(c);\n            }\n            this.index++;\n        }\n        this.cleanup();\n    }\n    finish() {\n        if (this.state === $361de31a633664d8$var$State.InNamedEntity) this.emitNamedEntity();\n        // If there is remaining data, emit it in a reasonable way\n        if (this.sectionStart < this.index) this.handleTrailingData();\n        this.cbs.onend();\n    }\n    /** Handle any trailing data. */ handleTrailingData() {\n        const endIndex = this.buffer.length + this.offset;\n        if (this.state === $361de31a633664d8$var$State.InCommentLike) {\n            if (this.currentSequence === $361de31a633664d8$var$Sequences.CdataEnd) this.cbs.oncdata(this.sectionStart, endIndex, 0);\n            else this.cbs.oncomment(this.sectionStart, endIndex, 0);\n        } else if (this.state === $361de31a633664d8$var$State.InNumericEntity && this.allowLegacyEntity()) this.emitNumericEntity(false);\n        else if (this.state === $361de31a633664d8$var$State.InHexEntity && this.allowLegacyEntity()) this.emitNumericEntity(false);\n        else if (this.state === $361de31a633664d8$var$State.InTagName || this.state === $361de31a633664d8$var$State.BeforeAttributeName || this.state === $361de31a633664d8$var$State.BeforeAttributeValue || this.state === $361de31a633664d8$var$State.AfterAttributeName || this.state === $361de31a633664d8$var$State.InAttributeName || this.state === $361de31a633664d8$var$State.InAttributeValueSq || this.state === $361de31a633664d8$var$State.InAttributeValueDq || this.state === $361de31a633664d8$var$State.InAttributeValueNq || this.state === $361de31a633664d8$var$State.InClosingTagName) ;\n        else this.cbs.ontext(this.sectionStart, endIndex);\n    }\n    emitPartial(start, endIndex) {\n        if (this.baseState !== $361de31a633664d8$var$State.Text && this.baseState !== $361de31a633664d8$var$State.InSpecialTag) this.cbs.onattribdata(start, endIndex);\n        else this.cbs.ontext(start, endIndex);\n    }\n    emitCodePoint(cp) {\n        if (this.baseState !== $361de31a633664d8$var$State.Text && this.baseState !== $361de31a633664d8$var$State.InSpecialTag) this.cbs.onattribentity(cp);\n        else this.cbs.ontextentity(cp);\n    }\n}\n\n\n\nconst $d52f9a6bad7ddacb$var$formTags = new Set([\n    \"input\",\n    \"option\",\n    \"optgroup\",\n    \"select\",\n    \"button\",\n    \"datalist\",\n    \"textarea\"\n]);\nconst $d52f9a6bad7ddacb$var$pTag = new Set([\n    \"p\"\n]);\nconst $d52f9a6bad7ddacb$var$tableSectionTags = new Set([\n    \"thead\",\n    \"tbody\"\n]);\nconst $d52f9a6bad7ddacb$var$ddtTags = new Set([\n    \"dd\",\n    \"dt\"\n]);\nconst $d52f9a6bad7ddacb$var$rtpTags = new Set([\n    \"rt\",\n    \"rp\"\n]);\nconst $d52f9a6bad7ddacb$var$openImpliesClose = new Map([\n    [\n        \"tr\",\n        new Set([\n            \"tr\",\n            \"th\",\n            \"td\"\n        ])\n    ],\n    [\n        \"th\",\n        new Set([\n            \"th\"\n        ])\n    ],\n    [\n        \"td\",\n        new Set([\n            \"thead\",\n            \"th\",\n            \"td\"\n        ])\n    ],\n    [\n        \"body\",\n        new Set([\n            \"head\",\n            \"link\",\n            \"script\"\n        ])\n    ],\n    [\n        \"li\",\n        new Set([\n            \"li\"\n        ])\n    ],\n    [\n        \"p\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"h1\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"h2\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"h3\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"h4\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"h5\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"h6\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"select\",\n        $d52f9a6bad7ddacb$var$formTags\n    ],\n    [\n        \"input\",\n        $d52f9a6bad7ddacb$var$formTags\n    ],\n    [\n        \"output\",\n        $d52f9a6bad7ddacb$var$formTags\n    ],\n    [\n        \"button\",\n        $d52f9a6bad7ddacb$var$formTags\n    ],\n    [\n        \"datalist\",\n        $d52f9a6bad7ddacb$var$formTags\n    ],\n    [\n        \"textarea\",\n        $d52f9a6bad7ddacb$var$formTags\n    ],\n    [\n        \"option\",\n        new Set([\n            \"option\"\n        ])\n    ],\n    [\n        \"optgroup\",\n        new Set([\n            \"optgroup\",\n            \"option\"\n        ])\n    ],\n    [\n        \"dd\",\n        $d52f9a6bad7ddacb$var$ddtTags\n    ],\n    [\n        \"dt\",\n        $d52f9a6bad7ddacb$var$ddtTags\n    ],\n    [\n        \"address\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"article\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"aside\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"blockquote\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"details\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"div\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"dl\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"fieldset\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"figcaption\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"figure\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"footer\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"form\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"header\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"hr\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"main\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"nav\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"ol\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"pre\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"section\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"table\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"ul\",\n        $d52f9a6bad7ddacb$var$pTag\n    ],\n    [\n        \"rt\",\n        $d52f9a6bad7ddacb$var$rtpTags\n    ],\n    [\n        \"rp\",\n        $d52f9a6bad7ddacb$var$rtpTags\n    ],\n    [\n        \"tbody\",\n        $d52f9a6bad7ddacb$var$tableSectionTags\n    ],\n    [\n        \"tfoot\",\n        $d52f9a6bad7ddacb$var$tableSectionTags\n    ]\n]);\nconst $d52f9a6bad7ddacb$var$voidElements = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\"\n]);\nconst $d52f9a6bad7ddacb$var$foreignContextElements = new Set([\n    \"math\",\n    \"svg\"\n]);\nconst $d52f9a6bad7ddacb$var$htmlIntegrationElements = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignobject\",\n    \"desc\",\n    \"title\"\n]);\nconst $d52f9a6bad7ddacb$var$reNameEnd = /\\s|\\//;\nclass $d52f9a6bad7ddacb$export$7acfa6ed01010e37 {\n    constructor(cbs, options = {}){\n        var _a, _b, _c, _d, _e;\n        this.options = options;\n        /** The start index of the last event. */ this.startIndex = 0;\n        /** The end index of the last event. */ this.endIndex = 0;\n        /**\n         * Store the start index of the current open tag,\n         * so we can update the start index for attributes.\n         */ this.openTagStart = 0;\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribvalue = \"\";\n        this.attribs = null;\n        this.stack = [];\n        this.foreignContext = [];\n        this.buffers = [];\n        this.bufferOffset = 0;\n        /** The index of the last written buffer. Used when resuming after a `pause()`. */ this.writeIndex = 0;\n        /** Indicates whether the parser has finished running / `.end` has been called. */ this.ended = false;\n        this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n        this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : !options.xmlMode;\n        this.lowerCaseAttributeNames = (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : !options.xmlMode;\n        this.tokenizer = new ((_c = options.Tokenizer) !== null && _c !== void 0 ? _c : (0, $361de31a633664d8$export$2e2bcd8739ae039))(this.options, this);\n        (_e = (_d = this.cbs).onparserinit) === null || _e === void 0 || _e.call(_d, this);\n    }\n    // Tokenizer event handlers\n    /** @internal */ ontext(start, endIndex) {\n        var _a, _b;\n        const data = this.getSlice(start, endIndex);\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 || _b.call(_a, data);\n        this.startIndex = endIndex;\n    }\n    /** @internal */ ontextentity(cp) {\n        var _a, _b;\n        /*\n         * Entities can be emitted on the character, or directly after.\n         * We use the section start here to get accurate indices.\n         */ const index = this.tokenizer.getSectionStart();\n        this.endIndex = index - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 || _b.call(_a, (0, $108ddd412d07cc89$exports.fromCodePoint)(cp));\n        this.startIndex = index;\n    }\n    isVoidElement(name) {\n        return !this.options.xmlMode && $d52f9a6bad7ddacb$var$voidElements.has(name);\n    }\n    /** @internal */ onopentagname(start, endIndex) {\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) name = name.toLowerCase();\n        this.emitOpenTag(name);\n    }\n    emitOpenTag(name) {\n        var _a, _b, _c, _d;\n        this.openTagStart = this.startIndex;\n        this.tagname = name;\n        const impliesClose = !this.options.xmlMode && $d52f9a6bad7ddacb$var$openImpliesClose.get(name);\n        if (impliesClose) while(this.stack.length > 0 && impliesClose.has(this.stack[this.stack.length - 1])){\n            const element = this.stack.pop();\n            (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 || _b.call(_a, element, true);\n        }\n        if (!this.isVoidElement(name)) {\n            this.stack.push(name);\n            if ($d52f9a6bad7ddacb$var$foreignContextElements.has(name)) this.foreignContext.push(true);\n            else if ($d52f9a6bad7ddacb$var$htmlIntegrationElements.has(name)) this.foreignContext.push(false);\n        }\n        (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 || _d.call(_c, name);\n        if (this.cbs.onopentag) this.attribs = {};\n    }\n    endOpenTag(isImplied) {\n        var _a, _b;\n        this.startIndex = this.openTagStart;\n        if (this.attribs) {\n            (_b = (_a = this.cbs).onopentag) === null || _b === void 0 || _b.call(_a, this.tagname, this.attribs, isImplied);\n            this.attribs = null;\n        }\n        if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) this.cbs.onclosetag(this.tagname, true);\n        this.tagname = \"\";\n    }\n    /** @internal */ onopentagend(endIndex) {\n        this.endIndex = endIndex;\n        this.endOpenTag(false);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */ onclosetag(start, endIndex) {\n        var _a, _b, _c, _d, _e, _f;\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) name = name.toLowerCase();\n        if ($d52f9a6bad7ddacb$var$foreignContextElements.has(name) || $d52f9a6bad7ddacb$var$htmlIntegrationElements.has(name)) this.foreignContext.pop();\n        if (!this.isVoidElement(name)) {\n            const pos = this.stack.lastIndexOf(name);\n            if (pos !== -1) {\n                if (this.cbs.onclosetag) {\n                    let count = this.stack.length - pos;\n                    while(count--)// We know the stack has sufficient elements.\n                    this.cbs.onclosetag(this.stack.pop(), count !== 0);\n                } else this.stack.length = pos;\n            } else if (!this.options.xmlMode && name === \"p\") {\n                // Implicit open before close\n                this.emitOpenTag(\"p\");\n                this.closeCurrentTag(true);\n            }\n        } else if (!this.options.xmlMode && name === \"br\") {\n            // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n            (_b = (_a = this.cbs).onopentagname) === null || _b === void 0 || _b.call(_a, \"br\");\n            (_d = (_c = this.cbs).onopentag) === null || _d === void 0 || _d.call(_c, \"br\", {}, true);\n            (_f = (_e = this.cbs).onclosetag) === null || _f === void 0 || _f.call(_e, \"br\", false);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */ onselfclosingtag(endIndex) {\n        this.endIndex = endIndex;\n        if (this.options.xmlMode || this.options.recognizeSelfClosing || this.foreignContext[this.foreignContext.length - 1]) {\n            this.closeCurrentTag(false);\n            // Set `startIndex` for next node\n            this.startIndex = endIndex + 1;\n        } else // Ignore the fact that the tag is self-closing.\n        this.onopentagend(endIndex);\n    }\n    closeCurrentTag(isOpenImplied) {\n        var _a, _b;\n        const name = this.tagname;\n        this.endOpenTag(isOpenImplied);\n        // Self-closing tags will be on the top of the stack\n        if (this.stack[this.stack.length - 1] === name) {\n            // If the opening tag isn't implied, the closing tag has to be implied.\n            (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 || _b.call(_a, name, !isOpenImplied);\n            this.stack.pop();\n        }\n    }\n    /** @internal */ onattribname(start, endIndex) {\n        this.startIndex = start;\n        const name = this.getSlice(start, endIndex);\n        this.attribname = this.lowerCaseAttributeNames ? name.toLowerCase() : name;\n    }\n    /** @internal */ onattribdata(start, endIndex) {\n        this.attribvalue += this.getSlice(start, endIndex);\n    }\n    /** @internal */ onattribentity(cp) {\n        this.attribvalue += (0, $108ddd412d07cc89$exports.fromCodePoint)(cp);\n    }\n    /** @internal */ onattribend(quote, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).onattribute) === null || _b === void 0 || _b.call(_a, this.attribname, this.attribvalue, quote === (0, $361de31a633664d8$export$cbf5509cea2ad22).Double ? '\"' : quote === (0, $361de31a633664d8$export$cbf5509cea2ad22).Single ? \"'\" : quote === (0, $361de31a633664d8$export$cbf5509cea2ad22).NoValue ? undefined : null);\n        if (this.attribs && !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) this.attribs[this.attribname] = this.attribvalue;\n        this.attribvalue = \"\";\n    }\n    getInstructionName(value) {\n        const index = value.search($d52f9a6bad7ddacb$var$reNameEnd);\n        let name = index < 0 ? value : value.substr(0, index);\n        if (this.lowerCaseTagNames) name = name.toLowerCase();\n        return name;\n    }\n    /** @internal */ ondeclaration(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */ onprocessinginstruction(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */ oncomment(start, endIndex, offset) {\n        var _a, _b, _c, _d;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).oncomment) === null || _b === void 0 || _b.call(_a, this.getSlice(start, endIndex - offset));\n        (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 || _d.call(_c);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */ oncdata(start, endIndex, offset) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex - offset);\n        if (this.options.xmlMode || this.options.recognizeCDATA) {\n            (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 || _b.call(_a);\n            (_d = (_c = this.cbs).ontext) === null || _d === void 0 || _d.call(_c, value);\n            (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 || _f.call(_e);\n        } else {\n            (_h = (_g = this.cbs).oncomment) === null || _h === void 0 || _h.call(_g, `[CDATA[${value}]]`);\n            (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 || _k.call(_j);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */ onend() {\n        var _a, _b;\n        if (this.cbs.onclosetag) {\n            // Set the end index for all remaining tags\n            this.endIndex = this.startIndex;\n            for(let index = this.stack.length; index > 0; this.cbs.onclosetag(this.stack[--index], true));\n        }\n        (_b = (_a = this.cbs).onend) === null || _b === void 0 || _b.call(_a);\n    }\n    /**\n     * Resets the parser to a blank state, ready to parse a new HTML document\n     */ reset() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.cbs).onreset) === null || _b === void 0 || _b.call(_a);\n        this.tokenizer.reset();\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribs = null;\n        this.stack.length = 0;\n        this.startIndex = 0;\n        this.endIndex = 0;\n        (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 || _d.call(_c, this);\n        this.buffers.length = 0;\n        this.bufferOffset = 0;\n        this.writeIndex = 0;\n        this.ended = false;\n    }\n    /**\n     * Resets the parser, then parses a complete document and\n     * pushes it to the handler.\n     *\n     * @param data Document to parse.\n     */ parseComplete(data) {\n        this.reset();\n        this.end(data);\n    }\n    getSlice(start, end) {\n        while(start - this.bufferOffset >= this.buffers[0].length)this.shiftBuffer();\n        let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n        while(end - this.bufferOffset > this.buffers[0].length){\n            this.shiftBuffer();\n            slice += this.buffers[0].slice(0, end - this.bufferOffset);\n        }\n        return slice;\n    }\n    shiftBuffer() {\n        this.bufferOffset += this.buffers[0].length;\n        this.writeIndex--;\n        this.buffers.shift();\n    }\n    /**\n     * Parses a chunk of data and calls the corresponding callbacks.\n     *\n     * @param chunk Chunk to parse.\n     */ write(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 || _b.call(_a, new Error(\".write() after done!\"));\n            return;\n        }\n        this.buffers.push(chunk);\n        if (this.tokenizer.running) {\n            this.tokenizer.write(chunk);\n            this.writeIndex++;\n        }\n    }\n    /**\n     * Parses the end of the buffer and clears the stack, calls onend.\n     *\n     * @param chunk Optional final chunk to parse.\n     */ end(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 || _b.call(_a, new Error(\".end() after done!\"));\n            return;\n        }\n        if (chunk) this.write(chunk);\n        this.ended = true;\n        this.tokenizer.end();\n    }\n    /**\n     * Pauses parsing. The parser won't emit events until `resume` is called.\n     */ pause() {\n        this.tokenizer.pause();\n    }\n    /**\n     * Resumes parsing after `pause` was called.\n     */ resume() {\n        this.tokenizer.resume();\n        while(this.tokenizer.running && this.writeIndex < this.buffers.length)this.tokenizer.write(this.buffers[this.writeIndex++]);\n        if (this.ended) this.tokenizer.end();\n    }\n    /**\n     * Alias of `write`, for backwards compatibility.\n     *\n     * @param chunk Chunk to parse.\n     * @deprecated\n     */ parseChunk(chunk) {\n        this.write(chunk);\n    }\n    /**\n     * Alias of `end`, for backwards compatibility.\n     *\n     * @param chunk Optional final chunk to parse.\n     * @deprecated\n     */ done(chunk) {\n        this.end(chunk);\n    }\n}\n\n\n\n\n\n\nfunction $404195b92aef7acb$export$b6a9369736b19f4d(data, options) {\n    const handler = new (0, $5d00ae21c5789654$export$ff8ccbac9225de62)(undefined, options);\n    new (0, $d52f9a6bad7ddacb$export$7acfa6ed01010e37)(handler, options).end(data);\n    return handler.root;\n}\nfunction $404195b92aef7acb$export$d66b332881d9723f(data, options) {\n    return $404195b92aef7acb$export$b6a9369736b19f4d(data, options).children;\n}\nfunction $404195b92aef7acb$export$2bbd0317573b00fc(callback, options, elementCallback) {\n    const handler = new (0, $5d00ae21c5789654$export$ff8ccbac9225de62)(callback, options, elementCallback);\n    return new (0, $d52f9a6bad7ddacb$export$7acfa6ed01010e37)(handler, options);\n}\nconst $404195b92aef7acb$var$parseFeedDefaultOptions = {\n    xmlMode: true\n};\nfunction $404195b92aef7acb$export$5267abf679cd576b(feed, options = $404195b92aef7acb$var$parseFeedDefaultOptions) {\n    return (0, $1f11e7a1ecde59b5$export$ad32138c9e09ad4)($404195b92aef7acb$export$d66b332881d9723f(feed, options));\n}\n\n\n\nconst $f3e04a7c11f77f94$var$parse = (0, $79cd7463df39241d$export$c94b5dd2e133d87c)((content, options, isDocument, context)=>options.xmlMode || options._useHtmlParser2 ? (0, $404195b92aef7acb$export$b6a9369736b19f4d)(content, options) : (0, $ed5b76e098a38311$export$2f1ddab8b648d7f6)(content, options, isDocument, context));\nconst $f3e04a7c11f77f94$export$11e63f7b0f3d9900 = (0, $d2f5fbf8095a538d$export$8b469b2b7efa8d79)($f3e04a7c11f77f94$var$parse, (dom, options)=>options.xmlMode || options._useHtmlParser2 ? (0, $e9cd942395a2f848$export$2e2bcd8739ae039)(dom, options) : (0, $ed5b76e098a38311$export$af75b43ff4abe814)(dom));\nvar /**\n * The default cheerio instance.\n *\n * @deprecated Use the function returned by `load` instead.\n */ $f3e04a7c11f77f94$export$2e2bcd8739ae039 = $f3e04a7c11f77f94$export$11e63f7b0f3d9900([]);\nconst { contains: $f3e04a7c11f77f94$export$2344b14b097df817 } = $c1bcc44f974e65ab$exports;\nconst { merge: $f3e04a7c11f77f94$export$4950aa0f605343fb } = $c1bcc44f974e65ab$exports;\nconst { parseHTML: $f3e04a7c11f77f94$export$8a49393be2d55148 } = $c1bcc44f974e65ab$exports;\nconst { root: $f3e04a7c11f77f94$export$e8e78c978b129247 } = $c1bcc44f974e65ab$exports;\n\n\n\nvar $30033f2c615b9910$var$CharCodes;\n(function(CharCodes) {\n    CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n    CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n    CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n    CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n    CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n    CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n    CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n    CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n    CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n    CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n    CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n    CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n    CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n    CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n    CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n    CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n    CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n    CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n    CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})($30033f2c615b9910$var$CharCodes || ($30033f2c615b9910$var$CharCodes = {}));\n/** All the states the tokenizer can be in. */ var $30033f2c615b9910$var$State;\n(function(State) {\n    State[State[\"Text\"] = 1] = \"Text\";\n    State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n    State[State[\"InTagName\"] = 3] = \"InTagName\";\n    State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n    State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n    State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n    State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n    // Attributes\n    State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n    State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n    State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n    State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n    State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n    State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n    State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n    // Declarations\n    State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n    State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n    // Processing instructions\n    State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n    // Comments & CDATA\n    State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n    State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n    State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n    State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n    // Special tags\n    State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n    State[State[\"SpecialStartSequence\"] = 23] = \"SpecialStartSequence\";\n    State[State[\"InSpecialTag\"] = 24] = \"InSpecialTag\";\n    State[State[\"InEntity\"] = 25] = \"InEntity\";\n})($30033f2c615b9910$var$State || ($30033f2c615b9910$var$State = {}));\nfunction $30033f2c615b9910$var$isWhitespace(c) {\n    return c === $30033f2c615b9910$var$CharCodes.Space || c === $30033f2c615b9910$var$CharCodes.NewLine || c === $30033f2c615b9910$var$CharCodes.Tab || c === $30033f2c615b9910$var$CharCodes.FormFeed || c === $30033f2c615b9910$var$CharCodes.CarriageReturn;\n}\nfunction $30033f2c615b9910$var$isEndOfTagSection(c) {\n    return c === $30033f2c615b9910$var$CharCodes.Slash || c === $30033f2c615b9910$var$CharCodes.Gt || $30033f2c615b9910$var$isWhitespace(c);\n}\nfunction $30033f2c615b9910$var$isASCIIAlpha(c) {\n    return c >= $30033f2c615b9910$var$CharCodes.LowerA && c <= $30033f2c615b9910$var$CharCodes.LowerZ || c >= $30033f2c615b9910$var$CharCodes.UpperA && c <= $30033f2c615b9910$var$CharCodes.UpperZ;\n}\nvar $30033f2c615b9910$export$cbf5509cea2ad22;\n(function(QuoteType) {\n    QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n    QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n    QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n    QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})($30033f2c615b9910$export$cbf5509cea2ad22 || ($30033f2c615b9910$export$cbf5509cea2ad22 = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */ const $30033f2c615b9910$var$Sequences = {\n    Cdata: new Uint8Array([\n        0x43,\n        0x44,\n        0x41,\n        0x54,\n        0x41,\n        0x5b\n    ]),\n    CdataEnd: new Uint8Array([\n        0x5d,\n        0x5d,\n        0x3e\n    ]),\n    CommentEnd: new Uint8Array([\n        0x2d,\n        0x2d,\n        0x3e\n    ]),\n    ScriptEnd: new Uint8Array([\n        0x3c,\n        0x2f,\n        0x73,\n        0x63,\n        0x72,\n        0x69,\n        0x70,\n        0x74\n    ]),\n    StyleEnd: new Uint8Array([\n        0x3c,\n        0x2f,\n        0x73,\n        0x74,\n        0x79,\n        0x6c,\n        0x65\n    ]),\n    TitleEnd: new Uint8Array([\n        0x3c,\n        0x2f,\n        0x74,\n        0x69,\n        0x74,\n        0x6c,\n        0x65\n    ])\n};\nclass $30033f2c615b9910$export$2e2bcd8739ae039 {\n    constructor({ xmlMode: xmlMode = false, decodeEntities: decodeEntities = true }, cbs){\n        this.cbs = cbs;\n        /** The current state the tokenizer is in. */ this.state = $30033f2c615b9910$var$State.Text;\n        /** The read buffer. */ this.buffer = \"\";\n        /** The beginning of the section that is currently being read. */ this.sectionStart = 0;\n        /** The index within the buffer that we are currently looking at. */ this.index = 0;\n        /** The start of the last entity. */ this.entityStart = 0;\n        /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */ this.baseState = $30033f2c615b9910$var$State.Text;\n        /** For special parsing behavior inside of script and style tags. */ this.isSpecial = false;\n        /** Indicates whether the tokenizer has been paused. */ this.running = true;\n        /** The offset of the current buffer. */ this.offset = 0;\n        this.currentSequence = undefined;\n        this.sequenceIndex = 0;\n        this.xmlMode = xmlMode;\n        this.decodeEntities = decodeEntities;\n        this.entityDecoder = new (0, $108ddd412d07cc89$exports.EntityDecoder)(xmlMode ? (0, $108ddd412d07cc89$exports.xmlDecodeTree) : (0, $108ddd412d07cc89$exports.htmlDecodeTree), (cp, consumed)=>this.emitCodePoint(cp, consumed));\n    }\n    reset() {\n        this.state = $30033f2c615b9910$var$State.Text;\n        this.buffer = \"\";\n        this.sectionStart = 0;\n        this.index = 0;\n        this.baseState = $30033f2c615b9910$var$State.Text;\n        this.currentSequence = undefined;\n        this.running = true;\n        this.offset = 0;\n    }\n    write(chunk) {\n        this.offset += this.buffer.length;\n        this.buffer = chunk;\n        this.parse();\n    }\n    end() {\n        if (this.running) this.finish();\n    }\n    pause() {\n        this.running = false;\n    }\n    resume() {\n        this.running = true;\n        if (this.index < this.buffer.length + this.offset) this.parse();\n    }\n    stateText(c) {\n        if (c === $30033f2c615b9910$var$CharCodes.Lt || !this.decodeEntities && this.fastForwardTo($30033f2c615b9910$var$CharCodes.Lt)) {\n            if (this.index > this.sectionStart) this.cbs.ontext(this.sectionStart, this.index);\n            this.state = $30033f2c615b9910$var$State.BeforeTagName;\n            this.sectionStart = this.index;\n        } else if (this.decodeEntities && c === $30033f2c615b9910$var$CharCodes.Amp) this.startEntity();\n    }\n    stateSpecialStartSequence(c) {\n        const isEnd = this.sequenceIndex === this.currentSequence.length;\n        const isMatch = isEnd ? $30033f2c615b9910$var$isEndOfTagSection(c) : (c | 0x20) === this.currentSequence[this.sequenceIndex];\n        if (!isMatch) this.isSpecial = false;\n        else if (!isEnd) {\n            this.sequenceIndex++;\n            return;\n        }\n        this.sequenceIndex = 0;\n        this.state = $30033f2c615b9910$var$State.InTagName;\n        this.stateInTagName(c);\n    }\n    /** Look for an end tag. For <title> tags, also decode entities. */ stateInSpecialTag(c) {\n        if (this.sequenceIndex === this.currentSequence.length) {\n            if (c === $30033f2c615b9910$var$CharCodes.Gt || $30033f2c615b9910$var$isWhitespace(c)) {\n                const endOfText = this.index - this.currentSequence.length;\n                if (this.sectionStart < endOfText) {\n                    // Spoof the index so that reported locations match up.\n                    const actualIndex = this.index;\n                    this.index = endOfText;\n                    this.cbs.ontext(this.sectionStart, endOfText);\n                    this.index = actualIndex;\n                }\n                this.isSpecial = false;\n                this.sectionStart = endOfText + 2; // Skip over the `</`\n                this.stateInClosingTagName(c);\n                return; // We are done; skip the rest of the function.\n            }\n            this.sequenceIndex = 0;\n        }\n        if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) this.sequenceIndex += 1;\n        else if (this.sequenceIndex === 0) {\n            if (this.currentSequence === $30033f2c615b9910$var$Sequences.TitleEnd) // We have to parse entities in <title> tags.\n            {\n                if (this.decodeEntities && c === $30033f2c615b9910$var$CharCodes.Amp) this.startEntity();\n            } else if (this.fastForwardTo($30033f2c615b9910$var$CharCodes.Lt)) // Outside of <title> tags, we can fast-forward.\n            this.sequenceIndex = 1;\n        } else // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n        this.sequenceIndex = Number(c === $30033f2c615b9910$var$CharCodes.Lt);\n    }\n    stateCDATASequence(c) {\n        if (c === $30033f2c615b9910$var$Sequences.Cdata[this.sequenceIndex]) {\n            if (++this.sequenceIndex === $30033f2c615b9910$var$Sequences.Cdata.length) {\n                this.state = $30033f2c615b9910$var$State.InCommentLike;\n                this.currentSequence = $30033f2c615b9910$var$Sequences.CdataEnd;\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n            }\n        } else {\n            this.sequenceIndex = 0;\n            this.state = $30033f2c615b9910$var$State.InDeclaration;\n            this.stateInDeclaration(c); // Reconsume the character\n        }\n    }\n    /**\n     * When we wait for one specific character, we can speed things up\n     * by skipping through the buffer until we find it.\n     *\n     * @returns Whether the character was found.\n     */ fastForwardTo(c) {\n        while(++this.index < this.buffer.length + this.offset){\n            if (this.buffer.charCodeAt(this.index - this.offset) === c) return true;\n        }\n        /*\n         * We increment the index at the end of the `parse` loop,\n         * so set it to `buffer.length - 1` here.\n         *\n         * TODO: Refactor `parse` to increment index before calling states.\n         */ this.index = this.buffer.length + this.offset - 1;\n        return false;\n    }\n    /**\n     * Comments and CDATA end with `-->` and `]]>`.\n     *\n     * Their common qualities are:\n     * - Their end sequences have a distinct character they start with.\n     * - That character is then repeated, so we have to check multiple repeats.\n     * - All characters but the start character of the sequence can be skipped.\n     */ stateInCommentLike(c) {\n        if (c === this.currentSequence[this.sequenceIndex]) {\n            if (++this.sequenceIndex === this.currentSequence.length) {\n                if (this.currentSequence === $30033f2c615b9910$var$Sequences.CdataEnd) this.cbs.oncdata(this.sectionStart, this.index, 2);\n                else this.cbs.oncomment(this.sectionStart, this.index, 2);\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n                this.state = $30033f2c615b9910$var$State.Text;\n            }\n        } else if (this.sequenceIndex === 0) // Fast-forward to the first character of the sequence\n        {\n            if (this.fastForwardTo(this.currentSequence[0])) this.sequenceIndex = 1;\n        } else if (c !== this.currentSequence[this.sequenceIndex - 1]) // Allow long sequences, eg. --->, ]]]>\n        this.sequenceIndex = 0;\n    }\n    /**\n     * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n     *\n     * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n     * We allow anything that wouldn't end the tag.\n     */ isTagStartChar(c) {\n        return this.xmlMode ? !$30033f2c615b9910$var$isEndOfTagSection(c) : $30033f2c615b9910$var$isASCIIAlpha(c);\n    }\n    startSpecial(sequence, offset) {\n        this.isSpecial = true;\n        this.currentSequence = sequence;\n        this.sequenceIndex = offset;\n        this.state = $30033f2c615b9910$var$State.SpecialStartSequence;\n    }\n    stateBeforeTagName(c) {\n        if (c === $30033f2c615b9910$var$CharCodes.ExclamationMark) {\n            this.state = $30033f2c615b9910$var$State.BeforeDeclaration;\n            this.sectionStart = this.index + 1;\n        } else if (c === $30033f2c615b9910$var$CharCodes.Questionmark) {\n            this.state = $30033f2c615b9910$var$State.InProcessingInstruction;\n            this.sectionStart = this.index + 1;\n        } else if (this.isTagStartChar(c)) {\n            const lower = c | 0x20;\n            this.sectionStart = this.index;\n            if (!this.xmlMode && lower === $30033f2c615b9910$var$Sequences.TitleEnd[2]) this.startSpecial($30033f2c615b9910$var$Sequences.TitleEnd, 3);\n            else this.state = !this.xmlMode && lower === $30033f2c615b9910$var$Sequences.ScriptEnd[2] ? $30033f2c615b9910$var$State.BeforeSpecialS : $30033f2c615b9910$var$State.InTagName;\n        } else if (c === $30033f2c615b9910$var$CharCodes.Slash) this.state = $30033f2c615b9910$var$State.BeforeClosingTagName;\n        else {\n            this.state = $30033f2c615b9910$var$State.Text;\n            this.stateText(c);\n        }\n    }\n    stateInTagName(c) {\n        if ($30033f2c615b9910$var$isEndOfTagSection(c)) {\n            this.cbs.onopentagname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = $30033f2c615b9910$var$State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateBeforeClosingTagName(c) {\n        if ($30033f2c615b9910$var$isWhitespace(c)) ;\n        else if (c === $30033f2c615b9910$var$CharCodes.Gt) this.state = $30033f2c615b9910$var$State.Text;\n        else {\n            this.state = this.isTagStartChar(c) ? $30033f2c615b9910$var$State.InClosingTagName : $30033f2c615b9910$var$State.InSpecialComment;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInClosingTagName(c) {\n        if (c === $30033f2c615b9910$var$CharCodes.Gt || $30033f2c615b9910$var$isWhitespace(c)) {\n            this.cbs.onclosetag(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = $30033f2c615b9910$var$State.AfterClosingTagName;\n            this.stateAfterClosingTagName(c);\n        }\n    }\n    stateAfterClosingTagName(c) {\n        // Skip everything until \">\"\n        if (c === $30033f2c615b9910$var$CharCodes.Gt || this.fastForwardTo($30033f2c615b9910$var$CharCodes.Gt)) {\n            this.state = $30033f2c615b9910$var$State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeAttributeName(c) {\n        if (c === $30033f2c615b9910$var$CharCodes.Gt) {\n            this.cbs.onopentagend(this.index);\n            if (this.isSpecial) {\n                this.state = $30033f2c615b9910$var$State.InSpecialTag;\n                this.sequenceIndex = 0;\n            } else this.state = $30033f2c615b9910$var$State.Text;\n            this.sectionStart = this.index + 1;\n        } else if (c === $30033f2c615b9910$var$CharCodes.Slash) this.state = $30033f2c615b9910$var$State.InSelfClosingTag;\n        else if (!$30033f2c615b9910$var$isWhitespace(c)) {\n            this.state = $30033f2c615b9910$var$State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInSelfClosingTag(c) {\n        if (c === $30033f2c615b9910$var$CharCodes.Gt) {\n            this.cbs.onselfclosingtag(this.index);\n            this.state = $30033f2c615b9910$var$State.Text;\n            this.sectionStart = this.index + 1;\n            this.isSpecial = false; // Reset special state, in case of self-closing special tags\n        } else if (!$30033f2c615b9910$var$isWhitespace(c)) {\n            this.state = $30033f2c615b9910$var$State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateInAttributeName(c) {\n        if (c === $30033f2c615b9910$var$CharCodes.Eq || $30033f2c615b9910$var$isEndOfTagSection(c)) {\n            this.cbs.onattribname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = $30033f2c615b9910$var$State.AfterAttributeName;\n            this.stateAfterAttributeName(c);\n        }\n    }\n    stateAfterAttributeName(c) {\n        if (c === $30033f2c615b9910$var$CharCodes.Eq) this.state = $30033f2c615b9910$var$State.BeforeAttributeValue;\n        else if (c === $30033f2c615b9910$var$CharCodes.Slash || c === $30033f2c615b9910$var$CharCodes.Gt) {\n            this.cbs.onattribend($30033f2c615b9910$export$cbf5509cea2ad22.NoValue, this.index);\n            this.state = $30033f2c615b9910$var$State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        } else if (!$30033f2c615b9910$var$isWhitespace(c)) {\n            this.cbs.onattribend($30033f2c615b9910$export$cbf5509cea2ad22.NoValue, this.index);\n            this.state = $30033f2c615b9910$var$State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateBeforeAttributeValue(c) {\n        if (c === $30033f2c615b9910$var$CharCodes.DoubleQuote) {\n            this.state = $30033f2c615b9910$var$State.InAttributeValueDq;\n            this.sectionStart = this.index + 1;\n        } else if (c === $30033f2c615b9910$var$CharCodes.SingleQuote) {\n            this.state = $30033f2c615b9910$var$State.InAttributeValueSq;\n            this.sectionStart = this.index + 1;\n        } else if (!$30033f2c615b9910$var$isWhitespace(c)) {\n            this.sectionStart = this.index;\n            this.state = $30033f2c615b9910$var$State.InAttributeValueNq;\n            this.stateInAttributeValueNoQuotes(c); // Reconsume token\n        }\n    }\n    handleInAttributeValue(c, quote) {\n        if (c === quote || !this.decodeEntities && this.fastForwardTo(quote)) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(quote === $30033f2c615b9910$var$CharCodes.DoubleQuote ? $30033f2c615b9910$export$cbf5509cea2ad22.Double : $30033f2c615b9910$export$cbf5509cea2ad22.Single, this.index);\n            this.state = $30033f2c615b9910$var$State.BeforeAttributeName;\n        } else if (this.decodeEntities && c === $30033f2c615b9910$var$CharCodes.Amp) this.startEntity();\n    }\n    stateInAttributeValueDoubleQuotes(c) {\n        this.handleInAttributeValue(c, $30033f2c615b9910$var$CharCodes.DoubleQuote);\n    }\n    stateInAttributeValueSingleQuotes(c) {\n        this.handleInAttributeValue(c, $30033f2c615b9910$var$CharCodes.SingleQuote);\n    }\n    stateInAttributeValueNoQuotes(c) {\n        if ($30033f2c615b9910$var$isWhitespace(c) || c === $30033f2c615b9910$var$CharCodes.Gt) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend($30033f2c615b9910$export$cbf5509cea2ad22.Unquoted, this.index);\n            this.state = $30033f2c615b9910$var$State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        } else if (this.decodeEntities && c === $30033f2c615b9910$var$CharCodes.Amp) this.startEntity();\n    }\n    stateBeforeDeclaration(c) {\n        if (c === $30033f2c615b9910$var$CharCodes.OpeningSquareBracket) {\n            this.state = $30033f2c615b9910$var$State.CDATASequence;\n            this.sequenceIndex = 0;\n        } else this.state = c === $30033f2c615b9910$var$CharCodes.Dash ? $30033f2c615b9910$var$State.BeforeComment : $30033f2c615b9910$var$State.InDeclaration;\n    }\n    stateInDeclaration(c) {\n        if (c === $30033f2c615b9910$var$CharCodes.Gt || this.fastForwardTo($30033f2c615b9910$var$CharCodes.Gt)) {\n            this.cbs.ondeclaration(this.sectionStart, this.index);\n            this.state = $30033f2c615b9910$var$State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateInProcessingInstruction(c) {\n        if (c === $30033f2c615b9910$var$CharCodes.Gt || this.fastForwardTo($30033f2c615b9910$var$CharCodes.Gt)) {\n            this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n            this.state = $30033f2c615b9910$var$State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeComment(c) {\n        if (c === $30033f2c615b9910$var$CharCodes.Dash) {\n            this.state = $30033f2c615b9910$var$State.InCommentLike;\n            this.currentSequence = $30033f2c615b9910$var$Sequences.CommentEnd;\n            // Allow short comments (eg. <!-->)\n            this.sequenceIndex = 2;\n            this.sectionStart = this.index + 1;\n        } else this.state = $30033f2c615b9910$var$State.InDeclaration;\n    }\n    stateInSpecialComment(c) {\n        if (c === $30033f2c615b9910$var$CharCodes.Gt || this.fastForwardTo($30033f2c615b9910$var$CharCodes.Gt)) {\n            this.cbs.oncomment(this.sectionStart, this.index, 0);\n            this.state = $30033f2c615b9910$var$State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeSpecialS(c) {\n        const lower = c | 0x20;\n        if (lower === $30033f2c615b9910$var$Sequences.ScriptEnd[3]) this.startSpecial($30033f2c615b9910$var$Sequences.ScriptEnd, 4);\n        else if (lower === $30033f2c615b9910$var$Sequences.StyleEnd[3]) this.startSpecial($30033f2c615b9910$var$Sequences.StyleEnd, 4);\n        else {\n            this.state = $30033f2c615b9910$var$State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    }\n    startEntity() {\n        this.baseState = this.state;\n        this.state = $30033f2c615b9910$var$State.InEntity;\n        this.entityStart = this.index;\n        this.entityDecoder.startEntity(this.xmlMode ? (0, $108ddd412d07cc89$exports.DecodingMode).Strict : this.baseState === $30033f2c615b9910$var$State.Text || this.baseState === $30033f2c615b9910$var$State.InSpecialTag ? (0, $108ddd412d07cc89$exports.DecodingMode).Legacy : (0, $108ddd412d07cc89$exports.DecodingMode).Attribute);\n    }\n    stateInEntity() {\n        const length = this.entityDecoder.write(this.buffer, this.index - this.offset);\n        // If `length` is positive, we are done with the entity.\n        if (length >= 0) {\n            this.state = this.baseState;\n            if (length === 0) this.index = this.entityStart;\n        } else // Mark buffer as consumed.\n        this.index = this.offset + this.buffer.length - 1;\n    }\n    /**\n     * Remove data that has already been consumed from the buffer.\n     */ cleanup() {\n        // If we are inside of text or attributes, emit what we already have.\n        if (this.running && this.sectionStart !== this.index) {\n            if (this.state === $30033f2c615b9910$var$State.Text || this.state === $30033f2c615b9910$var$State.InSpecialTag && this.sequenceIndex === 0) {\n                this.cbs.ontext(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            } else if (this.state === $30033f2c615b9910$var$State.InAttributeValueDq || this.state === $30033f2c615b9910$var$State.InAttributeValueSq || this.state === $30033f2c615b9910$var$State.InAttributeValueNq) {\n                this.cbs.onattribdata(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n        }\n    }\n    shouldContinue() {\n        return this.index < this.buffer.length + this.offset && this.running;\n    }\n    /**\n     * Iterates through the buffer, calling the function corresponding to the current state.\n     *\n     * States that are more likely to be hit are higher up, as a performance improvement.\n     */ parse() {\n        while(this.shouldContinue()){\n            const c = this.buffer.charCodeAt(this.index - this.offset);\n            switch(this.state){\n                case $30033f2c615b9910$var$State.Text:\n                    this.stateText(c);\n                    break;\n                case $30033f2c615b9910$var$State.SpecialStartSequence:\n                    this.stateSpecialStartSequence(c);\n                    break;\n                case $30033f2c615b9910$var$State.InSpecialTag:\n                    this.stateInSpecialTag(c);\n                    break;\n                case $30033f2c615b9910$var$State.CDATASequence:\n                    this.stateCDATASequence(c);\n                    break;\n                case $30033f2c615b9910$var$State.InAttributeValueDq:\n                    this.stateInAttributeValueDoubleQuotes(c);\n                    break;\n                case $30033f2c615b9910$var$State.InAttributeName:\n                    this.stateInAttributeName(c);\n                    break;\n                case $30033f2c615b9910$var$State.InCommentLike:\n                    this.stateInCommentLike(c);\n                    break;\n                case $30033f2c615b9910$var$State.InSpecialComment:\n                    this.stateInSpecialComment(c);\n                    break;\n                case $30033f2c615b9910$var$State.BeforeAttributeName:\n                    this.stateBeforeAttributeName(c);\n                    break;\n                case $30033f2c615b9910$var$State.InTagName:\n                    this.stateInTagName(c);\n                    break;\n                case $30033f2c615b9910$var$State.InClosingTagName:\n                    this.stateInClosingTagName(c);\n                    break;\n                case $30033f2c615b9910$var$State.BeforeTagName:\n                    this.stateBeforeTagName(c);\n                    break;\n                case $30033f2c615b9910$var$State.AfterAttributeName:\n                    this.stateAfterAttributeName(c);\n                    break;\n                case $30033f2c615b9910$var$State.InAttributeValueSq:\n                    this.stateInAttributeValueSingleQuotes(c);\n                    break;\n                case $30033f2c615b9910$var$State.BeforeAttributeValue:\n                    this.stateBeforeAttributeValue(c);\n                    break;\n                case $30033f2c615b9910$var$State.BeforeClosingTagName:\n                    this.stateBeforeClosingTagName(c);\n                    break;\n                case $30033f2c615b9910$var$State.AfterClosingTagName:\n                    this.stateAfterClosingTagName(c);\n                    break;\n                case $30033f2c615b9910$var$State.BeforeSpecialS:\n                    this.stateBeforeSpecialS(c);\n                    break;\n                case $30033f2c615b9910$var$State.InAttributeValueNq:\n                    this.stateInAttributeValueNoQuotes(c);\n                    break;\n                case $30033f2c615b9910$var$State.InSelfClosingTag:\n                    this.stateInSelfClosingTag(c);\n                    break;\n                case $30033f2c615b9910$var$State.InDeclaration:\n                    this.stateInDeclaration(c);\n                    break;\n                case $30033f2c615b9910$var$State.BeforeDeclaration:\n                    this.stateBeforeDeclaration(c);\n                    break;\n                case $30033f2c615b9910$var$State.BeforeComment:\n                    this.stateBeforeComment(c);\n                    break;\n                case $30033f2c615b9910$var$State.InProcessingInstruction:\n                    this.stateInProcessingInstruction(c);\n                    break;\n                case $30033f2c615b9910$var$State.InEntity:\n                    this.stateInEntity();\n                    break;\n            }\n            this.index++;\n        }\n        this.cleanup();\n    }\n    finish() {\n        if (this.state === $30033f2c615b9910$var$State.InEntity) {\n            this.entityDecoder.end();\n            this.state = this.baseState;\n        }\n        this.handleTrailingData();\n        this.cbs.onend();\n    }\n    /** Handle any trailing data. */ handleTrailingData() {\n        const endIndex = this.buffer.length + this.offset;\n        // If there is no remaining data, we are done.\n        if (this.sectionStart >= endIndex) return;\n        if (this.state === $30033f2c615b9910$var$State.InCommentLike) {\n            if (this.currentSequence === $30033f2c615b9910$var$Sequences.CdataEnd) this.cbs.oncdata(this.sectionStart, endIndex, 0);\n            else this.cbs.oncomment(this.sectionStart, endIndex, 0);\n        } else if (this.state === $30033f2c615b9910$var$State.InTagName || this.state === $30033f2c615b9910$var$State.BeforeAttributeName || this.state === $30033f2c615b9910$var$State.BeforeAttributeValue || this.state === $30033f2c615b9910$var$State.AfterAttributeName || this.state === $30033f2c615b9910$var$State.InAttributeName || this.state === $30033f2c615b9910$var$State.InAttributeValueSq || this.state === $30033f2c615b9910$var$State.InAttributeValueDq || this.state === $30033f2c615b9910$var$State.InAttributeValueNq || this.state === $30033f2c615b9910$var$State.InClosingTagName) ;\n        else this.cbs.ontext(this.sectionStart, endIndex);\n    }\n    emitCodePoint(cp, consumed) {\n        if (this.baseState !== $30033f2c615b9910$var$State.Text && this.baseState !== $30033f2c615b9910$var$State.InSpecialTag) {\n            if (this.sectionStart < this.entityStart) this.cbs.onattribdata(this.sectionStart, this.entityStart);\n            this.sectionStart = this.entityStart + consumed;\n            this.index = this.sectionStart - 1;\n            this.cbs.onattribentity(cp);\n        } else {\n            if (this.sectionStart < this.entityStart) this.cbs.ontext(this.sectionStart, this.entityStart);\n            this.sectionStart = this.entityStart + consumed;\n            this.index = this.sectionStart - 1;\n            this.cbs.ontextentity(cp, this.sectionStart);\n        }\n    }\n}\n\n\n\nconst $c835fa8cb49db29b$var$formTags = new Set([\n    \"input\",\n    \"option\",\n    \"optgroup\",\n    \"select\",\n    \"button\",\n    \"datalist\",\n    \"textarea\"\n]);\nconst $c835fa8cb49db29b$var$pTag = new Set([\n    \"p\"\n]);\nconst $c835fa8cb49db29b$var$tableSectionTags = new Set([\n    \"thead\",\n    \"tbody\"\n]);\nconst $c835fa8cb49db29b$var$ddtTags = new Set([\n    \"dd\",\n    \"dt\"\n]);\nconst $c835fa8cb49db29b$var$rtpTags = new Set([\n    \"rt\",\n    \"rp\"\n]);\nconst $c835fa8cb49db29b$var$openImpliesClose = new Map([\n    [\n        \"tr\",\n        new Set([\n            \"tr\",\n            \"th\",\n            \"td\"\n        ])\n    ],\n    [\n        \"th\",\n        new Set([\n            \"th\"\n        ])\n    ],\n    [\n        \"td\",\n        new Set([\n            \"thead\",\n            \"th\",\n            \"td\"\n        ])\n    ],\n    [\n        \"body\",\n        new Set([\n            \"head\",\n            \"link\",\n            \"script\"\n        ])\n    ],\n    [\n        \"li\",\n        new Set([\n            \"li\"\n        ])\n    ],\n    [\n        \"p\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"h1\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"h2\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"h3\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"h4\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"h5\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"h6\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"select\",\n        $c835fa8cb49db29b$var$formTags\n    ],\n    [\n        \"input\",\n        $c835fa8cb49db29b$var$formTags\n    ],\n    [\n        \"output\",\n        $c835fa8cb49db29b$var$formTags\n    ],\n    [\n        \"button\",\n        $c835fa8cb49db29b$var$formTags\n    ],\n    [\n        \"datalist\",\n        $c835fa8cb49db29b$var$formTags\n    ],\n    [\n        \"textarea\",\n        $c835fa8cb49db29b$var$formTags\n    ],\n    [\n        \"option\",\n        new Set([\n            \"option\"\n        ])\n    ],\n    [\n        \"optgroup\",\n        new Set([\n            \"optgroup\",\n            \"option\"\n        ])\n    ],\n    [\n        \"dd\",\n        $c835fa8cb49db29b$var$ddtTags\n    ],\n    [\n        \"dt\",\n        $c835fa8cb49db29b$var$ddtTags\n    ],\n    [\n        \"address\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"article\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"aside\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"blockquote\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"details\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"div\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"dl\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"fieldset\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"figcaption\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"figure\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"footer\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"form\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"header\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"hr\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"main\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"nav\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"ol\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"pre\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"section\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"table\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"ul\",\n        $c835fa8cb49db29b$var$pTag\n    ],\n    [\n        \"rt\",\n        $c835fa8cb49db29b$var$rtpTags\n    ],\n    [\n        \"rp\",\n        $c835fa8cb49db29b$var$rtpTags\n    ],\n    [\n        \"tbody\",\n        $c835fa8cb49db29b$var$tableSectionTags\n    ],\n    [\n        \"tfoot\",\n        $c835fa8cb49db29b$var$tableSectionTags\n    ]\n]);\nconst $c835fa8cb49db29b$var$voidElements = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\"\n]);\nconst $c835fa8cb49db29b$var$foreignContextElements = new Set([\n    \"math\",\n    \"svg\"\n]);\nconst $c835fa8cb49db29b$var$htmlIntegrationElements = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignobject\",\n    \"desc\",\n    \"title\"\n]);\nconst $c835fa8cb49db29b$var$reNameEnd = /\\s|\\//;\nclass $c835fa8cb49db29b$export$7acfa6ed01010e37 {\n    constructor(cbs, options = {}){\n        var _a, _b, _c, _d, _e;\n        this.options = options;\n        /** The start index of the last event. */ this.startIndex = 0;\n        /** The end index of the last event. */ this.endIndex = 0;\n        /**\n         * Store the start index of the current open tag,\n         * so we can update the start index for attributes.\n         */ this.openTagStart = 0;\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribvalue = \"\";\n        this.attribs = null;\n        this.stack = [];\n        this.buffers = [];\n        this.bufferOffset = 0;\n        /** The index of the last written buffer. Used when resuming after a `pause()`. */ this.writeIndex = 0;\n        /** Indicates whether the parser has finished running / `.end` has been called. */ this.ended = false;\n        this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n        this.htmlMode = !this.options.xmlMode;\n        this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : this.htmlMode;\n        this.lowerCaseAttributeNames = (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : this.htmlMode;\n        this.tokenizer = new ((_c = options.Tokenizer) !== null && _c !== void 0 ? _c : (0, $30033f2c615b9910$export$2e2bcd8739ae039))(this.options, this);\n        this.foreignContext = [\n            !this.htmlMode\n        ];\n        (_e = (_d = this.cbs).onparserinit) === null || _e === void 0 || _e.call(_d, this);\n    }\n    // Tokenizer event handlers\n    /** @internal */ ontext(start, endIndex) {\n        var _a, _b;\n        const data = this.getSlice(start, endIndex);\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 || _b.call(_a, data);\n        this.startIndex = endIndex;\n    }\n    /** @internal */ ontextentity(cp, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 || _b.call(_a, (0, $108ddd412d07cc89$exports.fromCodePoint)(cp));\n        this.startIndex = endIndex;\n    }\n    /**\n     * Checks if the current tag is a void element. Override this if you want\n     * to specify your own additional void elements.\n     */ isVoidElement(name) {\n        return this.htmlMode && $c835fa8cb49db29b$var$voidElements.has(name);\n    }\n    /** @internal */ onopentagname(start, endIndex) {\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) name = name.toLowerCase();\n        this.emitOpenTag(name);\n    }\n    emitOpenTag(name) {\n        var _a, _b, _c, _d;\n        this.openTagStart = this.startIndex;\n        this.tagname = name;\n        const impliesClose = this.htmlMode && $c835fa8cb49db29b$var$openImpliesClose.get(name);\n        if (impliesClose) while(this.stack.length > 0 && impliesClose.has(this.stack[0])){\n            const element = this.stack.shift();\n            (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 || _b.call(_a, element, true);\n        }\n        if (!this.isVoidElement(name)) {\n            this.stack.unshift(name);\n            if (this.htmlMode) {\n                if ($c835fa8cb49db29b$var$foreignContextElements.has(name)) this.foreignContext.unshift(true);\n                else if ($c835fa8cb49db29b$var$htmlIntegrationElements.has(name)) this.foreignContext.unshift(false);\n            }\n        }\n        (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 || _d.call(_c, name);\n        if (this.cbs.onopentag) this.attribs = {};\n    }\n    endOpenTag(isImplied) {\n        var _a, _b;\n        this.startIndex = this.openTagStart;\n        if (this.attribs) {\n            (_b = (_a = this.cbs).onopentag) === null || _b === void 0 || _b.call(_a, this.tagname, this.attribs, isImplied);\n            this.attribs = null;\n        }\n        if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) this.cbs.onclosetag(this.tagname, true);\n        this.tagname = \"\";\n    }\n    /** @internal */ onopentagend(endIndex) {\n        this.endIndex = endIndex;\n        this.endOpenTag(false);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */ onclosetag(start, endIndex) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) name = name.toLowerCase();\n        if (this.htmlMode && ($c835fa8cb49db29b$var$foreignContextElements.has(name) || $c835fa8cb49db29b$var$htmlIntegrationElements.has(name))) this.foreignContext.shift();\n        if (!this.isVoidElement(name)) {\n            const pos = this.stack.indexOf(name);\n            if (pos !== -1) for(let index = 0; index <= pos; index++){\n                const element = this.stack.shift();\n                // We know the stack has sufficient elements.\n                (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 || _b.call(_a, element, index !== pos);\n            }\n            else if (this.htmlMode && name === \"p\") {\n                // Implicit open before close\n                this.emitOpenTag(\"p\");\n                this.closeCurrentTag(true);\n            }\n        } else if (this.htmlMode && name === \"br\") {\n            // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n            (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 || _d.call(_c, \"br\");\n            (_f = (_e = this.cbs).onopentag) === null || _f === void 0 || _f.call(_e, \"br\", {}, true);\n            (_h = (_g = this.cbs).onclosetag) === null || _h === void 0 || _h.call(_g, \"br\", false);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */ onselfclosingtag(endIndex) {\n        this.endIndex = endIndex;\n        if (this.options.recognizeSelfClosing || this.foreignContext[0]) {\n            this.closeCurrentTag(false);\n            // Set `startIndex` for next node\n            this.startIndex = endIndex + 1;\n        } else // Ignore the fact that the tag is self-closing.\n        this.onopentagend(endIndex);\n    }\n    closeCurrentTag(isOpenImplied) {\n        var _a, _b;\n        const name = this.tagname;\n        this.endOpenTag(isOpenImplied);\n        // Self-closing tags will be on the top of the stack\n        if (this.stack[0] === name) {\n            // If the opening tag isn't implied, the closing tag has to be implied.\n            (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 || _b.call(_a, name, !isOpenImplied);\n            this.stack.shift();\n        }\n    }\n    /** @internal */ onattribname(start, endIndex) {\n        this.startIndex = start;\n        const name = this.getSlice(start, endIndex);\n        this.attribname = this.lowerCaseAttributeNames ? name.toLowerCase() : name;\n    }\n    /** @internal */ onattribdata(start, endIndex) {\n        this.attribvalue += this.getSlice(start, endIndex);\n    }\n    /** @internal */ onattribentity(cp) {\n        this.attribvalue += (0, $108ddd412d07cc89$exports.fromCodePoint)(cp);\n    }\n    /** @internal */ onattribend(quote, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).onattribute) === null || _b === void 0 || _b.call(_a, this.attribname, this.attribvalue, quote === (0, $30033f2c615b9910$export$cbf5509cea2ad22).Double ? '\"' : quote === (0, $30033f2c615b9910$export$cbf5509cea2ad22).Single ? \"'\" : quote === (0, $30033f2c615b9910$export$cbf5509cea2ad22).NoValue ? undefined : null);\n        if (this.attribs && !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) this.attribs[this.attribname] = this.attribvalue;\n        this.attribvalue = \"\";\n    }\n    getInstructionName(value) {\n        const index = value.search($c835fa8cb49db29b$var$reNameEnd);\n        let name = index < 0 ? value : value.substr(0, index);\n        if (this.lowerCaseTagNames) name = name.toLowerCase();\n        return name;\n    }\n    /** @internal */ ondeclaration(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */ onprocessinginstruction(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */ oncomment(start, endIndex, offset) {\n        var _a, _b, _c, _d;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).oncomment) === null || _b === void 0 || _b.call(_a, this.getSlice(start, endIndex - offset));\n        (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 || _d.call(_c);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */ oncdata(start, endIndex, offset) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex - offset);\n        if (!this.htmlMode || this.options.recognizeCDATA) {\n            (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 || _b.call(_a);\n            (_d = (_c = this.cbs).ontext) === null || _d === void 0 || _d.call(_c, value);\n            (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 || _f.call(_e);\n        } else {\n            (_h = (_g = this.cbs).oncomment) === null || _h === void 0 || _h.call(_g, `[CDATA[${value}]]`);\n            (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 || _k.call(_j);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */ onend() {\n        var _a, _b;\n        if (this.cbs.onclosetag) {\n            // Set the end index for all remaining tags\n            this.endIndex = this.startIndex;\n            for(let index = 0; index < this.stack.length; index++)this.cbs.onclosetag(this.stack[index], true);\n        }\n        (_b = (_a = this.cbs).onend) === null || _b === void 0 || _b.call(_a);\n    }\n    /**\n     * Resets the parser to a blank state, ready to parse a new HTML document\n     */ reset() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.cbs).onreset) === null || _b === void 0 || _b.call(_a);\n        this.tokenizer.reset();\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribs = null;\n        this.stack.length = 0;\n        this.startIndex = 0;\n        this.endIndex = 0;\n        (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 || _d.call(_c, this);\n        this.buffers.length = 0;\n        this.foreignContext.length = 0;\n        this.foreignContext.unshift(!this.htmlMode);\n        this.bufferOffset = 0;\n        this.writeIndex = 0;\n        this.ended = false;\n    }\n    /**\n     * Resets the parser, then parses a complete document and\n     * pushes it to the handler.\n     *\n     * @param data Document to parse.\n     */ parseComplete(data) {\n        this.reset();\n        this.end(data);\n    }\n    getSlice(start, end) {\n        while(start - this.bufferOffset >= this.buffers[0].length)this.shiftBuffer();\n        let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n        while(end - this.bufferOffset > this.buffers[0].length){\n            this.shiftBuffer();\n            slice += this.buffers[0].slice(0, end - this.bufferOffset);\n        }\n        return slice;\n    }\n    shiftBuffer() {\n        this.bufferOffset += this.buffers[0].length;\n        this.writeIndex--;\n        this.buffers.shift();\n    }\n    /**\n     * Parses a chunk of data and calls the corresponding callbacks.\n     *\n     * @param chunk Chunk to parse.\n     */ write(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 || _b.call(_a, new Error(\".write() after done!\"));\n            return;\n        }\n        this.buffers.push(chunk);\n        if (this.tokenizer.running) {\n            this.tokenizer.write(chunk);\n            this.writeIndex++;\n        }\n    }\n    /**\n     * Parses the end of the buffer and clears the stack, calls onend.\n     *\n     * @param chunk Optional final chunk to parse.\n     */ end(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 || _b.call(_a, new Error(\".end() after done!\"));\n            return;\n        }\n        if (chunk) this.write(chunk);\n        this.ended = true;\n        this.tokenizer.end();\n    }\n    /**\n     * Pauses parsing. The parser won't emit events until `resume` is called.\n     */ pause() {\n        this.tokenizer.pause();\n    }\n    /**\n     * Resumes parsing after `pause` was called.\n     */ resume() {\n        this.tokenizer.resume();\n        while(this.tokenizer.running && this.writeIndex < this.buffers.length)this.tokenizer.write(this.buffers[this.writeIndex++]);\n        if (this.ended) this.tokenizer.end();\n    }\n    /**\n     * Alias of `write`, for backwards compatibility.\n     *\n     * @param chunk Chunk to parse.\n     * @deprecated\n     */ parseChunk(chunk) {\n        this.write(chunk);\n    }\n    /**\n     * Alias of `end`, for backwards compatibility.\n     *\n     * @param chunk Optional final chunk to parse.\n     * @deprecated\n     */ done(chunk) {\n        this.end(chunk);\n    }\n}\n\n\n\n\n\n\nfunction $677e3d995fee76db$export$b6a9369736b19f4d(data, options) {\n    const handler = new (0, $5d00ae21c5789654$export$ff8ccbac9225de62)(undefined, options);\n    new (0, $c835fa8cb49db29b$export$7acfa6ed01010e37)(handler, options).end(data);\n    return handler.root;\n}\nfunction $677e3d995fee76db$export$d66b332881d9723f(data, options) {\n    return $677e3d995fee76db$export$b6a9369736b19f4d(data, options).children;\n}\nfunction $677e3d995fee76db$export$d6f7114fde618113(callback, options, elementCallback) {\n    const handler = new (0, $5d00ae21c5789654$export$ff8ccbac9225de62)((error)=>callback(error, handler.root), options, elementCallback);\n    return new (0, $c835fa8cb49db29b$export$7acfa6ed01010e37)(handler, options);\n}\nfunction $677e3d995fee76db$export$2bbd0317573b00fc(callback, options, elementCallback) {\n    const handler = new (0, $5d00ae21c5789654$export$ff8ccbac9225de62)(callback, options, elementCallback);\n    return new (0, $c835fa8cb49db29b$export$7acfa6ed01010e37)(handler, options);\n}\nconst $677e3d995fee76db$var$parseFeedDefaultOptions = {\n    xmlMode: true\n};\nfunction $677e3d995fee76db$export$5267abf679cd576b(feed, options = $677e3d995fee76db$var$parseFeedDefaultOptions) {\n    return (0, $1f11e7a1ecde59b5$export$ad32138c9e09ad4)($677e3d995fee76db$export$d66b332881d9723f(feed, options));\n}\n\n\nfunction $3fb77fbe57d68b10$var$extend(destination) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i];\n        for(var key in source)if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n    return destination;\n}\nfunction $3fb77fbe57d68b10$var$repeat(character, count) {\n    return Array(count + 1).join(character);\n}\nfunction $3fb77fbe57d68b10$var$trimLeadingNewlines(string) {\n    return string.replace(/^\\n*/, \"\");\n}\nfunction $3fb77fbe57d68b10$var$trimTrailingNewlines(string) {\n    // avoid match-at-end regexp bottleneck, see #370\n    var indexEnd = string.length;\n    while(indexEnd > 0 && string[indexEnd - 1] === \"\\n\")indexEnd--;\n    return string.substring(0, indexEnd);\n}\nvar $3fb77fbe57d68b10$var$blockElements = [\n    \"ADDRESS\",\n    \"ARTICLE\",\n    \"ASIDE\",\n    \"AUDIO\",\n    \"BLOCKQUOTE\",\n    \"BODY\",\n    \"CANVAS\",\n    \"CENTER\",\n    \"DD\",\n    \"DIR\",\n    \"DIV\",\n    \"DL\",\n    \"DT\",\n    \"FIELDSET\",\n    \"FIGCAPTION\",\n    \"FIGURE\",\n    \"FOOTER\",\n    \"FORM\",\n    \"FRAMESET\",\n    \"H1\",\n    \"H2\",\n    \"H3\",\n    \"H4\",\n    \"H5\",\n    \"H6\",\n    \"HEADER\",\n    \"HGROUP\",\n    \"HR\",\n    \"HTML\",\n    \"ISINDEX\",\n    \"LI\",\n    \"MAIN\",\n    \"MENU\",\n    \"NAV\",\n    \"NOFRAMES\",\n    \"NOSCRIPT\",\n    \"OL\",\n    \"OUTPUT\",\n    \"P\",\n    \"PRE\",\n    \"SECTION\",\n    \"TABLE\",\n    \"TBODY\",\n    \"TD\",\n    \"TFOOT\",\n    \"TH\",\n    \"THEAD\",\n    \"TR\",\n    \"UL\"\n];\nfunction $3fb77fbe57d68b10$var$isBlock(node) {\n    return $3fb77fbe57d68b10$var$is(node, $3fb77fbe57d68b10$var$blockElements);\n}\nvar $3fb77fbe57d68b10$var$voidElements = [\n    \"AREA\",\n    \"BASE\",\n    \"BR\",\n    \"COL\",\n    \"COMMAND\",\n    \"EMBED\",\n    \"HR\",\n    \"IMG\",\n    \"INPUT\",\n    \"KEYGEN\",\n    \"LINK\",\n    \"META\",\n    \"PARAM\",\n    \"SOURCE\",\n    \"TRACK\",\n    \"WBR\"\n];\nfunction $3fb77fbe57d68b10$var$isVoid(node) {\n    return $3fb77fbe57d68b10$var$is(node, $3fb77fbe57d68b10$var$voidElements);\n}\nfunction $3fb77fbe57d68b10$var$hasVoid(node) {\n    return $3fb77fbe57d68b10$var$has(node, $3fb77fbe57d68b10$var$voidElements);\n}\nvar $3fb77fbe57d68b10$var$meaningfulWhenBlankElements = [\n    \"A\",\n    \"TABLE\",\n    \"THEAD\",\n    \"TBODY\",\n    \"TFOOT\",\n    \"TH\",\n    \"TD\",\n    \"IFRAME\",\n    \"SCRIPT\",\n    \"AUDIO\",\n    \"VIDEO\"\n];\nfunction $3fb77fbe57d68b10$var$isMeaningfulWhenBlank(node) {\n    return $3fb77fbe57d68b10$var$is(node, $3fb77fbe57d68b10$var$meaningfulWhenBlankElements);\n}\nfunction $3fb77fbe57d68b10$var$hasMeaningfulWhenBlank(node) {\n    return $3fb77fbe57d68b10$var$has(node, $3fb77fbe57d68b10$var$meaningfulWhenBlankElements);\n}\nfunction $3fb77fbe57d68b10$var$is(node, tagNames) {\n    return tagNames.indexOf(node.nodeName) >= 0;\n}\nfunction $3fb77fbe57d68b10$var$has(node, tagNames) {\n    return node.getElementsByTagName && tagNames.some(function(tagName) {\n        return node.getElementsByTagName(tagName).length;\n    });\n}\nvar $3fb77fbe57d68b10$var$rules = {};\n$3fb77fbe57d68b10$var$rules.paragraph = {\n    filter: \"p\",\n    replacement: function(content) {\n        return \"\\n\\n\" + content + \"\\n\\n\";\n    }\n};\n$3fb77fbe57d68b10$var$rules.lineBreak = {\n    filter: \"br\",\n    replacement: function(content, node, options) {\n        return options.br + \"\\n\";\n    }\n};\n$3fb77fbe57d68b10$var$rules.heading = {\n    filter: [\n        \"h1\",\n        \"h2\",\n        \"h3\",\n        \"h4\",\n        \"h5\",\n        \"h6\"\n    ],\n    replacement: function(content, node, options) {\n        var hLevel = Number(node.nodeName.charAt(1));\n        if (options.headingStyle === \"setext\" && hLevel < 3) {\n            var underline = $3fb77fbe57d68b10$var$repeat(hLevel === 1 ? \"=\" : \"-\", content.length);\n            return \"\\n\\n\" + content + \"\\n\" + underline + \"\\n\\n\";\n        } else return \"\\n\\n\" + $3fb77fbe57d68b10$var$repeat(\"#\", hLevel) + \" \" + content + \"\\n\\n\";\n    }\n};\n$3fb77fbe57d68b10$var$rules.blockquote = {\n    filter: \"blockquote\",\n    replacement: function(content) {\n        content = content.replace(/^\\n+|\\n+$/g, \"\");\n        content = content.replace(/^/gm, \"> \");\n        return \"\\n\\n\" + content + \"\\n\\n\";\n    }\n};\n$3fb77fbe57d68b10$var$rules.list = {\n    filter: [\n        \"ul\",\n        \"ol\"\n    ],\n    replacement: function(content, node) {\n        var parent = node.parentNode;\n        if (parent.nodeName === \"LI\" && parent.lastElementChild === node) return \"\\n\" + content;\n        else return \"\\n\\n\" + content + \"\\n\\n\";\n    }\n};\n$3fb77fbe57d68b10$var$rules.listItem = {\n    filter: \"li\",\n    replacement: function(content, node, options) {\n        content = content.replace(/^\\n+/, \"\") // remove leading newlines\n        .replace(/\\n+$/, \"\\n\") // replace trailing newlines with just a single one\n        .replace(/\\n/gm, \"\\n    \"); // indent\n        var prefix = options.bulletListMarker + \"   \";\n        var parent = node.parentNode;\n        if (parent.nodeName === \"OL\") {\n            var start = parent.getAttribute(\"start\");\n            var index = Array.prototype.indexOf.call(parent.children, node);\n            prefix = (start ? Number(start) + index : index + 1) + \".  \";\n        }\n        return prefix + content + (node.nextSibling && !/\\n$/.test(content) ? \"\\n\" : \"\");\n    }\n};\n$3fb77fbe57d68b10$var$rules.indentedCodeBlock = {\n    filter: function(node, options) {\n        return options.codeBlockStyle === \"indented\" && node.nodeName === \"PRE\" && node.firstChild && node.firstChild.nodeName === \"CODE\";\n    },\n    replacement: function(content, node, options) {\n        return \"\\n\\n    \" + node.firstChild.textContent.replace(/\\n/g, \"\\n    \") + \"\\n\\n\";\n    }\n};\n$3fb77fbe57d68b10$var$rules.fencedCodeBlock = {\n    filter: function(node, options) {\n        return options.codeBlockStyle === \"fenced\" && node.nodeName === \"PRE\" && node.firstChild && node.firstChild.nodeName === \"CODE\";\n    },\n    replacement: function(content, node, options) {\n        var className = node.firstChild.getAttribute(\"class\") || \"\";\n        var language = (className.match(/language-(\\S+)/) || [\n            null,\n            \"\"\n        ])[1];\n        var code = node.firstChild.textContent;\n        var fenceChar = options.fence.charAt(0);\n        var fenceSize = 3;\n        var fenceInCodeRegex = new RegExp(\"^\" + fenceChar + \"{3,}\", \"gm\");\n        var match;\n        while(match = fenceInCodeRegex.exec(code))if (match[0].length >= fenceSize) fenceSize = match[0].length + 1;\n        var fence = $3fb77fbe57d68b10$var$repeat(fenceChar, fenceSize);\n        return \"\\n\\n\" + fence + language + \"\\n\" + code.replace(/\\n$/, \"\") + \"\\n\" + fence + \"\\n\\n\";\n    }\n};\n$3fb77fbe57d68b10$var$rules.horizontalRule = {\n    filter: \"hr\",\n    replacement: function(content, node, options) {\n        return \"\\n\\n\" + options.hr + \"\\n\\n\";\n    }\n};\n$3fb77fbe57d68b10$var$rules.inlineLink = {\n    filter: function(node, options) {\n        return options.linkStyle === \"inlined\" && node.nodeName === \"A\" && node.getAttribute(\"href\");\n    },\n    replacement: function(content, node) {\n        var href = node.getAttribute(\"href\");\n        var title = $3fb77fbe57d68b10$var$cleanAttribute(node.getAttribute(\"title\"));\n        if (title) title = ' \"' + title + '\"';\n        return \"[\" + content + \"](\" + href + title + \")\";\n    }\n};\n$3fb77fbe57d68b10$var$rules.referenceLink = {\n    filter: function(node, options) {\n        return options.linkStyle === \"referenced\" && node.nodeName === \"A\" && node.getAttribute(\"href\");\n    },\n    replacement: function(content, node, options) {\n        var href = node.getAttribute(\"href\");\n        var title = $3fb77fbe57d68b10$var$cleanAttribute(node.getAttribute(\"title\"));\n        if (title) title = ' \"' + title + '\"';\n        var replacement;\n        var reference;\n        switch(options.linkReferenceStyle){\n            case \"collapsed\":\n                replacement = \"[\" + content + \"][]\";\n                reference = \"[\" + content + \"]: \" + href + title;\n                break;\n            case \"shortcut\":\n                replacement = \"[\" + content + \"]\";\n                reference = \"[\" + content + \"]: \" + href + title;\n                break;\n            default:\n                var id = this.references.length + 1;\n                replacement = \"[\" + content + \"][\" + id + \"]\";\n                reference = \"[\" + id + \"]: \" + href + title;\n        }\n        this.references.push(reference);\n        return replacement;\n    },\n    references: [],\n    append: function(options) {\n        var references = \"\";\n        if (this.references.length) {\n            references = \"\\n\\n\" + this.references.join(\"\\n\") + \"\\n\\n\";\n            this.references = []; // Reset references\n        }\n        return references;\n    }\n};\n$3fb77fbe57d68b10$var$rules.emphasis = {\n    filter: [\n        \"em\",\n        \"i\"\n    ],\n    replacement: function(content, node, options) {\n        if (!content.trim()) return \"\";\n        return options.emDelimiter + content + options.emDelimiter;\n    }\n};\n$3fb77fbe57d68b10$var$rules.strong = {\n    filter: [\n        \"strong\",\n        \"b\"\n    ],\n    replacement: function(content, node, options) {\n        if (!content.trim()) return \"\";\n        return options.strongDelimiter + content + options.strongDelimiter;\n    }\n};\n$3fb77fbe57d68b10$var$rules.code = {\n    filter: function(node) {\n        var hasSiblings = node.previousSibling || node.nextSibling;\n        var isCodeBlock = node.parentNode.nodeName === \"PRE\" && !hasSiblings;\n        return node.nodeName === \"CODE\" && !isCodeBlock;\n    },\n    replacement: function(content) {\n        if (!content) return \"\";\n        content = content.replace(/\\r?\\n|\\r/g, \" \");\n        var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? \" \" : \"\";\n        var delimiter = \"`\";\n        var matches = content.match(/`+/gm) || [];\n        while(matches.indexOf(delimiter) !== -1)delimiter = delimiter + \"`\";\n        return delimiter + extraSpace + content + extraSpace + delimiter;\n    }\n};\n$3fb77fbe57d68b10$var$rules.image = {\n    filter: \"img\",\n    replacement: function(content, node) {\n        var alt = $3fb77fbe57d68b10$var$cleanAttribute(node.getAttribute(\"alt\"));\n        var src = node.getAttribute(\"src\") || \"\";\n        var title = $3fb77fbe57d68b10$var$cleanAttribute(node.getAttribute(\"title\"));\n        var titlePart = title ? ' \"' + title + '\"' : \"\";\n        return src ? \"![\" + alt + \"]\" + \"(\" + src + titlePart + \")\" : \"\";\n    }\n};\nfunction $3fb77fbe57d68b10$var$cleanAttribute(attribute) {\n    return attribute ? attribute.replace(/(\\n+\\s*)+/g, \"\\n\") : \"\";\n}\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */ function $3fb77fbe57d68b10$var$Rules(options) {\n    this.options = options;\n    this._keep = [];\n    this._remove = [];\n    this.blankRule = {\n        replacement: options.blankReplacement\n    };\n    this.keepReplacement = options.keepReplacement;\n    this.defaultRule = {\n        replacement: options.defaultReplacement\n    };\n    this.array = [];\n    for(var key in options.rules)this.array.push(options.rules[key]);\n}\n$3fb77fbe57d68b10$var$Rules.prototype = {\n    add: function(key, rule) {\n        this.array.unshift(rule);\n    },\n    keep: function(filter) {\n        this._keep.unshift({\n            filter: filter,\n            replacement: this.keepReplacement\n        });\n    },\n    remove: function(filter) {\n        this._remove.unshift({\n            filter: filter,\n            replacement: function() {\n                return \"\";\n            }\n        });\n    },\n    forNode: function(node) {\n        if (node.isBlank) return this.blankRule;\n        var rule;\n        if (rule = $3fb77fbe57d68b10$var$findRule(this.array, node, this.options)) return rule;\n        if (rule = $3fb77fbe57d68b10$var$findRule(this._keep, node, this.options)) return rule;\n        if (rule = $3fb77fbe57d68b10$var$findRule(this._remove, node, this.options)) return rule;\n        return this.defaultRule;\n    },\n    forEach: function(fn) {\n        for(var i = 0; i < this.array.length; i++)fn(this.array[i], i);\n    }\n};\nfunction $3fb77fbe57d68b10$var$findRule(rules, node, options) {\n    for(var i = 0; i < rules.length; i++){\n        var rule = rules[i];\n        if ($3fb77fbe57d68b10$var$filterValue(rule, node, options)) return rule;\n    }\n    return void 0;\n}\nfunction $3fb77fbe57d68b10$var$filterValue(rule, node, options) {\n    var filter = rule.filter;\n    if (typeof filter === \"string\") {\n        if (filter === node.nodeName.toLowerCase()) return true;\n    } else if (Array.isArray(filter)) {\n        if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true;\n    } else if (typeof filter === \"function\") {\n        if (filter.call(rule, node, options)) return true;\n    } else throw new TypeError(\"`filter` needs to be a string, array, or function\");\n}\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */ /**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */ function $3fb77fbe57d68b10$var$collapseWhitespace(options) {\n    var element = options.element;\n    var isBlock = options.isBlock;\n    var isVoid = options.isVoid;\n    var isPre = options.isPre || function(node) {\n        return node.nodeName === \"PRE\";\n    };\n    if (!element.firstChild || isPre(element)) return;\n    var prevText = null;\n    var keepLeadingWs = false;\n    var prev = null;\n    var node = $3fb77fbe57d68b10$var$next(prev, element, isPre);\n    while(node !== element){\n        if (node.nodeType === 3 || node.nodeType === 4) {\n            var text = node.data.replace(/[ \\r\\n\\t]+/g, \" \");\n            if ((!prevText || / $/.test(prevText.data)) && !keepLeadingWs && text[0] === \" \") text = text.substr(1);\n            // `text` might be empty at this point.\n            if (!text) {\n                node = $3fb77fbe57d68b10$var$remove(node);\n                continue;\n            }\n            node.data = text;\n            prevText = node;\n        } else if (node.nodeType === 1) {\n            if (isBlock(node) || node.nodeName === \"BR\") {\n                if (prevText) prevText.data = prevText.data.replace(/ $/, \"\");\n                prevText = null;\n                keepLeadingWs = false;\n            } else if (isVoid(node) || isPre(node)) {\n                // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n                prevText = null;\n                keepLeadingWs = true;\n            } else if (prevText) // Drop protection if set previously.\n            keepLeadingWs = false;\n        } else {\n            node = $3fb77fbe57d68b10$var$remove(node);\n            continue;\n        }\n        var nextNode = $3fb77fbe57d68b10$var$next(prev, node, isPre);\n        prev = node;\n        node = nextNode;\n    }\n    if (prevText) {\n        prevText.data = prevText.data.replace(/ $/, \"\");\n        if (!prevText.data) $3fb77fbe57d68b10$var$remove(prevText);\n    }\n}\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */ function $3fb77fbe57d68b10$var$remove(node) {\n    var next = node.nextSibling || node.parentNode;\n    node.parentNode.removeChild(node);\n    return next;\n}\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */ function $3fb77fbe57d68b10$var$next(prev, current, isPre) {\n    if (prev && prev.parentNode === current || isPre(current)) return current.nextSibling || current.parentNode;\n    return current.firstChild || current.nextSibling || current.parentNode;\n}\n/*\n * Set up window for Node.js\n */ var $3fb77fbe57d68b10$var$root = typeof window !== \"undefined\" ? window : {};\n/*\n * Parsing HTML strings\n */ function $3fb77fbe57d68b10$var$canParseHTMLNatively() {\n    var Parser = $3fb77fbe57d68b10$var$root.DOMParser;\n    var canParse = false;\n    // Adapted from https://gist.github.com/1129031\n    // Firefox/Opera/IE throw errors on unsupported types\n    try {\n        // WebKit returns null on unsupported types\n        if (new Parser().parseFromString(\"\", \"text/html\")) canParse = true;\n    } catch (e) {}\n    return canParse;\n}\nfunction $3fb77fbe57d68b10$var$createHTMLParser() {\n    var Parser = function() {};\n    if ($3fb77fbe57d68b10$var$shouldUseActiveX()) Parser.prototype.parseFromString = function(string) {\n        var doc = new window.ActiveXObject(\"htmlfile\");\n        doc.designMode = \"on\"; // disable on-page scripts\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc;\n    };\n    else Parser.prototype.parseFromString = function(string) {\n        var doc = document.implementation.createHTMLDocument(\"\");\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc;\n    };\n    return Parser;\n}\nfunction $3fb77fbe57d68b10$var$shouldUseActiveX() {\n    var useActiveX = false;\n    try {\n        document.implementation.createHTMLDocument(\"\").open();\n    } catch (e) {\n        if (window.ActiveXObject) useActiveX = true;\n    }\n    return useActiveX;\n}\nvar $3fb77fbe57d68b10$var$HTMLParser = $3fb77fbe57d68b10$var$canParseHTMLNatively() ? $3fb77fbe57d68b10$var$root.DOMParser : $3fb77fbe57d68b10$var$createHTMLParser();\nfunction $3fb77fbe57d68b10$var$RootNode(input, options) {\n    var root;\n    if (typeof input === \"string\") {\n        var doc = $3fb77fbe57d68b10$var$htmlParser().parseFromString(// DOM parsers arrange elements in the <head> and <body>.\n        // Wrapping in a custom element ensures elements are reliably arranged in\n        // a single element.\n        '<x-turndown id=\"turndown-root\">' + input + \"</x-turndown>\", \"text/html\");\n        root = doc.getElementById(\"turndown-root\");\n    } else root = input.cloneNode(true);\n    $3fb77fbe57d68b10$var$collapseWhitespace({\n        element: root,\n        isBlock: $3fb77fbe57d68b10$var$isBlock,\n        isVoid: $3fb77fbe57d68b10$var$isVoid,\n        isPre: options.preformattedCode ? $3fb77fbe57d68b10$var$isPreOrCode : null\n    });\n    return root;\n}\nvar $3fb77fbe57d68b10$var$_htmlParser;\nfunction $3fb77fbe57d68b10$var$htmlParser() {\n    $3fb77fbe57d68b10$var$_htmlParser = $3fb77fbe57d68b10$var$_htmlParser || new $3fb77fbe57d68b10$var$HTMLParser();\n    return $3fb77fbe57d68b10$var$_htmlParser;\n}\nfunction $3fb77fbe57d68b10$var$isPreOrCode(node) {\n    return node.nodeName === \"PRE\" || node.nodeName === \"CODE\";\n}\nfunction $3fb77fbe57d68b10$var$Node(node, options) {\n    node.isBlock = $3fb77fbe57d68b10$var$isBlock(node);\n    node.isCode = node.nodeName === \"CODE\" || node.parentNode.isCode;\n    node.isBlank = $3fb77fbe57d68b10$var$isBlank(node);\n    node.flankingWhitespace = $3fb77fbe57d68b10$var$flankingWhitespace(node, options);\n    return node;\n}\nfunction $3fb77fbe57d68b10$var$isBlank(node) {\n    return !$3fb77fbe57d68b10$var$isVoid(node) && !$3fb77fbe57d68b10$var$isMeaningfulWhenBlank(node) && /^\\s*$/i.test(node.textContent) && !$3fb77fbe57d68b10$var$hasVoid(node) && !$3fb77fbe57d68b10$var$hasMeaningfulWhenBlank(node);\n}\nfunction $3fb77fbe57d68b10$var$flankingWhitespace(node, options) {\n    if (node.isBlock || options.preformattedCode && node.isCode) return {\n        leading: \"\",\n        trailing: \"\"\n    };\n    var edges = $3fb77fbe57d68b10$var$edgeWhitespace(node.textContent);\n    // abandon leading ASCII WS if left-flanked by ASCII WS\n    if (edges.leadingAscii && $3fb77fbe57d68b10$var$isFlankedByWhitespace(\"left\", node, options)) edges.leading = edges.leadingNonAscii;\n    // abandon trailing ASCII WS if right-flanked by ASCII WS\n    if (edges.trailingAscii && $3fb77fbe57d68b10$var$isFlankedByWhitespace(\"right\", node, options)) edges.trailing = edges.trailingNonAscii;\n    return {\n        leading: edges.leading,\n        trailing: edges.trailing\n    };\n}\nfunction $3fb77fbe57d68b10$var$edgeWhitespace(string) {\n    var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))(?:(?=\\S)[\\s\\S]*\\S)?((\\s*?)([ \\t\\r\\n]*))$/);\n    return {\n        leading: m[1],\n        leadingAscii: m[2],\n        leadingNonAscii: m[3],\n        trailing: m[4],\n        trailingNonAscii: m[5],\n        trailingAscii: m[6]\n    };\n}\nfunction $3fb77fbe57d68b10$var$isFlankedByWhitespace(side, node, options) {\n    var sibling;\n    var regExp;\n    var isFlanked;\n    if (side === \"left\") {\n        sibling = node.previousSibling;\n        regExp = / $/;\n    } else {\n        sibling = node.nextSibling;\n        regExp = /^ /;\n    }\n    if (sibling) {\n        if (sibling.nodeType === 3) isFlanked = regExp.test(sibling.nodeValue);\n        else if (options.preformattedCode && sibling.nodeName === \"CODE\") isFlanked = false;\n        else if (sibling.nodeType === 1 && !$3fb77fbe57d68b10$var$isBlock(sibling)) isFlanked = regExp.test(sibling.textContent);\n    }\n    return isFlanked;\n}\nvar $3fb77fbe57d68b10$var$reduce = Array.prototype.reduce;\nvar $3fb77fbe57d68b10$var$escapes = [\n    [\n        /\\\\/g,\n        \"\\\\\\\\\"\n    ],\n    [\n        /\\*/g,\n        \"\\\\*\"\n    ],\n    [\n        /^-/g,\n        \"\\\\-\"\n    ],\n    [\n        /^\\+ /g,\n        \"\\\\+ \"\n    ],\n    [\n        /^(=+)/g,\n        \"\\\\$1\"\n    ],\n    [\n        /^(#{1,6}) /g,\n        \"\\\\$1 \"\n    ],\n    [\n        /`/g,\n        \"\\\\`\"\n    ],\n    [\n        /^~~~/g,\n        \"\\\\~~~\"\n    ],\n    [\n        /\\[/g,\n        \"\\\\[\"\n    ],\n    [\n        /\\]/g,\n        \"\\\\]\"\n    ],\n    [\n        /^>/g,\n        \"\\\\>\"\n    ],\n    [\n        /_/g,\n        \"\\\\_\"\n    ],\n    [\n        /^(\\d+)\\. /g,\n        \"$1\\\\. \"\n    ]\n];\nfunction $3fb77fbe57d68b10$var$TurndownService(options) {\n    if (!(this instanceof $3fb77fbe57d68b10$var$TurndownService)) return new $3fb77fbe57d68b10$var$TurndownService(options);\n    var defaults = {\n        rules: $3fb77fbe57d68b10$var$rules,\n        headingStyle: \"setext\",\n        hr: \"* * *\",\n        bulletListMarker: \"*\",\n        codeBlockStyle: \"indented\",\n        fence: \"```\",\n        emDelimiter: \"_\",\n        strongDelimiter: \"**\",\n        linkStyle: \"inlined\",\n        linkReferenceStyle: \"full\",\n        br: \"  \",\n        preformattedCode: false,\n        blankReplacement: function(content, node) {\n            return node.isBlock ? \"\\n\\n\" : \"\";\n        },\n        keepReplacement: function(content, node) {\n            return node.isBlock ? \"\\n\\n\" + node.outerHTML + \"\\n\\n\" : node.outerHTML;\n        },\n        defaultReplacement: function(content, node) {\n            return node.isBlock ? \"\\n\\n\" + content + \"\\n\\n\" : content;\n        }\n    };\n    this.options = $3fb77fbe57d68b10$var$extend({}, defaults, options);\n    this.rules = new $3fb77fbe57d68b10$var$Rules(this.options);\n}\n$3fb77fbe57d68b10$var$TurndownService.prototype = {\n    /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */ turndown: function(input) {\n        if (!$3fb77fbe57d68b10$var$canConvert(input)) throw new TypeError(input + \" is not a string, or an element/document/fragment node.\");\n        if (input === \"\") return \"\";\n        var output = $3fb77fbe57d68b10$var$process.call(this, new $3fb77fbe57d68b10$var$RootNode(input, this.options));\n        return $3fb77fbe57d68b10$var$postProcess.call(this, output);\n    },\n    /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */ use: function(plugin) {\n        if (Array.isArray(plugin)) for(var i = 0; i < plugin.length; i++)this.use(plugin[i]);\n        else if (typeof plugin === \"function\") plugin(this);\n        else throw new TypeError(\"plugin must be a Function or an Array of Functions\");\n        return this;\n    },\n    /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */ addRule: function(key, rule) {\n        this.rules.add(key, rule);\n        return this;\n    },\n    /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */ keep: function(filter) {\n        this.rules.keep(filter);\n        return this;\n    },\n    /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */ remove: function(filter) {\n        this.rules.remove(filter);\n        return this;\n    },\n    /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */ escape: function(string) {\n        return $3fb77fbe57d68b10$var$escapes.reduce(function(accumulator, escape) {\n            return accumulator.replace(escape[0], escape[1]);\n        }, string);\n    }\n};\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */ function $3fb77fbe57d68b10$var$process(parentNode) {\n    var self = this;\n    return $3fb77fbe57d68b10$var$reduce.call(parentNode.childNodes, function(output, node) {\n        node = new $3fb77fbe57d68b10$var$Node(node, self.options);\n        var replacement = \"\";\n        if (node.nodeType === 3) replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n        else if (node.nodeType === 1) replacement = $3fb77fbe57d68b10$var$replacementForNode.call(self, node);\n        return $3fb77fbe57d68b10$var$join(output, replacement);\n    }, \"\");\n}\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */ function $3fb77fbe57d68b10$var$postProcess(output) {\n    var self = this;\n    this.rules.forEach(function(rule) {\n        if (typeof rule.append === \"function\") output = $3fb77fbe57d68b10$var$join(output, rule.append(self.options));\n    });\n    return output.replace(/^[\\t\\r\\n]+/, \"\").replace(/[\\t\\r\\n\\s]+$/, \"\");\n}\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */ function $3fb77fbe57d68b10$var$replacementForNode(node) {\n    var rule = this.rules.forNode(node);\n    var content = $3fb77fbe57d68b10$var$process.call(this, node);\n    var whitespace = node.flankingWhitespace;\n    if (whitespace.leading || whitespace.trailing) content = content.trim();\n    return whitespace.leading + rule.replacement(content, node, this.options) + whitespace.trailing;\n}\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */ function $3fb77fbe57d68b10$var$join(output, replacement) {\n    var s1 = $3fb77fbe57d68b10$var$trimTrailingNewlines(output);\n    var s2 = $3fb77fbe57d68b10$var$trimLeadingNewlines(replacement);\n    var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n    var separator = \"\\n\\n\".substring(0, nls);\n    return s1 + separator + s2;\n}\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */ function $3fb77fbe57d68b10$var$canConvert(input) {\n    return input != null && (typeof input === \"string\" || input.nodeType && (input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11));\n}\nvar $3fb77fbe57d68b10$export$2e2bcd8739ae039 = $3fb77fbe57d68b10$var$TurndownService;\n\n\n/** indicates how text is aligned in a column */ var $663deac50d96ff47$export$84b2d1b68830363f;\n(function(TextAlignment) {\n    TextAlignment[\"left\"] = \"left\";\n    TextAlignment[\"center\"] = \"center\";\n    TextAlignment[\"right\"] = \"right\";\n    TextAlignment[\"default\"] = \"start\";\n})($663deac50d96ff47$export$84b2d1b68830363f || ($663deac50d96ff47$export$84b2d1b68830363f = {}));\n/** indicates how a cell is merged with a neighboring cell */ var $663deac50d96ff47$export$fcef1edb02975fb9;\n(function(TableCellMerge) {\n    TableCellMerge[TableCellMerge[\"above\"] = 0] = \"above\";\n    TableCellMerge[TableCellMerge[\"left\"] = 1] = \"left\";\n    TableCellMerge[TableCellMerge[\"none\"] = 2] = \"none\";\n})($663deac50d96ff47$export$fcef1edb02975fb9 || ($663deac50d96ff47$export$fcef1edb02975fb9 = {}));\n/** indicates the placement of the table caption */ var $663deac50d96ff47$export$ea0aeb8d0cfa7f2;\n(function(TableCaptionPosition) {\n    TableCaptionPosition[\"top\"] = \"top\";\n    TableCaptionPosition[\"bottom\"] = \"bottom\";\n})($663deac50d96ff47$export$ea0aeb8d0cfa7f2 || ($663deac50d96ff47$export$ea0aeb8d0cfa7f2 = {}));\nclass $663deac50d96ff47$var$IndexOutOfBoundsError extends Error {\n    constructor(msg){\n        super(msg);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, $663deac50d96ff47$var$IndexOutOfBoundsError.prototype);\n    }\n}\nclass $663deac50d96ff47$export$35468a455d619eb3 {\n    text;\n    label;\n    position;\n    constructor(text = \"\", label = \"\", position = $663deac50d96ff47$export$ea0aeb8d0cfa7f2.top){\n        this.text = text;\n        this.label = label;\n        this.position = position;\n    }\n    getLabel() {\n        // \"If you have a caption, you can also have a label, allowing you to create anchors pointing to the table. If there is no label, then the caption acts as the label\"\n        if (typeof this.label === \"string\" && this.label.trim() !== \"\") return this.label.trim().replace(/\\s/g, \"-\");\n        return this.text.trim().toLowerCase().replace(/\\s/g, \"-\").replace(/[^a-zA-Z0-9]/g, \"\");\n    }\n}\nclass $663deac50d96ff47$export$1e4baea7053fc0e3 {\n    text;\n    table;\n    row;\n    column;\n    merged;\n    isHeader;\n    textAlign;\n    constructor(table, row, column){\n        this.text = \"\";\n        this.table = table;\n        this.row = row;\n        this.column = column;\n        this.merged = $663deac50d96ff47$export$fcef1edb02975fb9.none;\n        this.isHeader = false;\n        this.textAlign = $663deac50d96ff47$export$84b2d1b68830363f.default;\n    }\n    isHeaderCell() {\n        return this.row.isHeader || this.isHeader;\n    }\n    getTextAlignment() {\n        if (this.textAlign != $663deac50d96ff47$export$84b2d1b68830363f.default) return this.textAlign;\n        return this.column.textAlign;\n    }\n    setText(text) {\n        this.text = text;\n    }\n    getColspan() {\n        if (this.merged != $663deac50d96ff47$export$fcef1edb02975fb9.left) {\n            let col = this.table.indexOfColumn(this.column) + 1;\n            if (col > this.table.columnCount()) return 1;\n            let colspan = 1;\n            let cells = this.table.getCellsInRow(this.row);\n            for(; col < this.table.columnCount(); col++){\n                if (cells[col].merged == $663deac50d96ff47$export$fcef1edb02975fb9.left) colspan++;\n                else break;\n            }\n            return colspan;\n        }\n        return 1;\n    }\n    getRowspan() {\n        if (this.merged != $663deac50d96ff47$export$fcef1edb02975fb9.above) {\n            let row = this.table.indexOfRow(this.row) + 1;\n            if (row > this.table.rowCount()) return 1;\n            let rowspan = 1;\n            let cells = this.table.getCellsInColumn(this.column);\n            for(; row < this.table.rowCount(); row++){\n                if (cells[row].merged == $663deac50d96ff47$export$fcef1edb02975fb9.above) rowspan++;\n                else break;\n            }\n            return rowspan;\n        }\n        return 1;\n    }\n}\nclass $663deac50d96ff47$export$b05581f4e764e162 {\n    index;\n    isHeader;\n    isMultiline;\n    startsNewSection;\n    cells;\n    constructor(index = 0, isHeader = false, /** Only pertains to MultiMarkdown multiline feature. Ignored by other parsers/renderers. See Table.mergeMultilineRows() */ isMultiline = false, startsNewSection = false){\n        this.index = index;\n        this.isHeader = isHeader;\n        this.isMultiline = isMultiline;\n        this.startsNewSection = startsNewSection;\n        this.cells = [];\n    }\n    updateCells(table) {\n        if (table.columnCount() != this.cells.length) this.cells = table.getCells().filter((cell)=>cell.row == this);\n        this.cells = this.cells.sort((a, b)=>a.column.index - b.column.index);\n    }\n    getCell(index) {\n        return this.cells.at(index);\n    }\n    getCells() {\n        return this.cells;\n    }\n}\nclass $663deac50d96ff47$export$8b338ed8502b024 {\n    index;\n    textAlign;\n    wrappable;\n    cells;\n    constructor(index = 0, textAlign = $663deac50d96ff47$export$84b2d1b68830363f.default, wrappable = false){\n        this.index = index;\n        this.textAlign = textAlign;\n        this.wrappable = wrappable;\n        this.cells = [];\n    }\n    updateCells(table) {\n        if (table.rowCount() != this.cells.length) this.cells = table.getCells().filter((cell)=>cell.column == this);\n        this.cells = this.cells.sort((a, b)=>a.row.index - b.row.index);\n    }\n    getCell(index) {\n        return this.cells.at(index);\n    }\n    getCells() {\n        return this.cells;\n    }\n}\nclass $663deac50d96ff47$export$54ec01a60f47d33d {\n    cells;\n    rows;\n    columns;\n    caption;\n    /** Text before the table */ beforeTable;\n    /** Text after the table */ afterTable;\n    constructor(rowNum = 0, colNum = 0){\n        this.cells = [];\n        this.rows = Array.from({\n            length: rowNum\n        }, (_, i)=>new $663deac50d96ff47$export$b05581f4e764e162(i));\n        this.columns = Array.from({\n            length: colNum\n        }, (_, i)=>new $663deac50d96ff47$export$8b338ed8502b024(i));\n        this.caption = null;\n        this.beforeTable = \"\";\n        this.afterTable = \"\";\n    }\n    /**\n     * Adds a TableRow to the table.\n     * @param index Insert row at index. -1 means it's appended.\n     * @param row (optional)\n     * @returns The added row.\n     */ addRow(index = -1, row = new $663deac50d96ff47$export$b05581f4e764e162()) {\n        if (index < 0) row.index = this.rows.push(row) - 1;\n        else {\n            row.index = index;\n            this.rows.splice(index, 0, row);\n        }\n        return row;\n    }\n    /**\n     * Adds a TableColumn to the table.\n     * @param index Insert column at index. -1 means it's appended.\n     * @param col (optional)\n     * @returns The added column.\n     */ addColumn(index = -1, col = new $663deac50d96ff47$export$8b338ed8502b024()) {\n        if (index < 0) col.index = this.columns.push(col);\n        else {\n            col.index = index;\n            this.columns.splice(index, 0, col);\n        }\n        return col;\n    }\n    /** Gets the row at index. Negative index counts back from the end. Returns undefined if out-of-bounds. */ getRow(index) {\n        return this.rows.at(index);\n    }\n    /** Gets the index of the row. -1 if it hasn't been found. */ indexOfRow(row) {\n        return this.rows.indexOf(row);\n    }\n    /** Gets the column at index. Negative index counts back from the end. Returns undefined if out-of-bounds. */ getColumn(index) {\n        return this.columns.at(index);\n    }\n    /** Gets the index of the column. -1 if it hasn't been found. */ indexOfColumn(col) {\n        return this.columns.indexOf(col);\n    }\n    /**\n     * Removes the given column. Also removes all cells within the column.\n     * @param col Either index or object reference.\n    */ removeColumn(col) {\n        let colObj = typeof col === \"number\" ? this.columns.at(col) : col;\n        let columnCells = this.getCellsInColumn(colObj);\n        this.cells = this.cells.filter((cell)=>!columnCells.includes(cell));\n        this.columns = this.columns.filter((c)=>c != colObj);\n    }\n    /**\n     * Removes the given row. Also removes all cells within the row.\n     * @param row Either index or object reference.\n     */ removeRow(row) {\n        let rowObj = typeof row === \"number\" ? this.rows.at(row) : row;\n        let rowCells = this.getCellsInRow(rowObj);\n        this.cells = this.cells.filter((cell)=>!rowCells.includes(cell));\n        this.rows = this.rows.filter((r)=>r != rowObj);\n    }\n    /**\n     * Moves the given column to the new index.\n     * @param col Either index or object reference.\n     * @param newIndex The new index of the given column.\n     * @throws {IndexOutOfBoundsError} Can't move column outside of table.\n     */ moveColumn(col, newIndex) {\n        let colObj = typeof col === \"number\" ? this.columns.at(col) : col;\n        if (colObj === undefined || newIndex >= this.columnCount() || newIndex < 0) throw new $663deac50d96ff47$var$IndexOutOfBoundsError(\"(IndexOutOfBoundsError) Can't move column outside of table.\");\n        this.columns.splice(colObj.index, 1);\n        this.columns.splice(newIndex, 0, colObj);\n        colObj.index = newIndex;\n    }\n    /**\n     * Moves the given row to the new index.\n     * @param row Either index or object reference.\n     * @param newIndex The new index of the given row.\n     * @throws {IndexOutOfBoundsError} Can't move row outside of table.\n     */ moveRow(row, newIndex) {\n        let rowObj = typeof row === \"number\" ? this.rows.at(row) : row;\n        if (rowObj === undefined || newIndex >= this.rowCount() || newIndex < 0) throw new $663deac50d96ff47$var$IndexOutOfBoundsError(\"(IndexOutOfBoundsError) Can't move row outside of table.\");\n        this.rows.splice(rowObj.index, 1);\n        this.rows.splice(newIndex, 0, rowObj);\n        rowObj.index = newIndex;\n    }\n    /** Returns a list of all rows that are headers. */ getHeaderRows() {\n        return this.rows.filter((r)=>r.isHeader);\n    }\n    /** Returns a list of all rows that aren't headers. */ getNormalRows() {\n        return this.rows.filter((r)=>!r.isHeader);\n    }\n    /** Retruns all rows in the table, from top to bottom, including header rows. */ getRows() {\n        return this.rows;\n    }\n    /** Returns all columns in the table, from left to right. */ getColumns() {\n        return this.columns;\n    }\n    /** Returns all cells in the table. Isn't necessarily sorted! */ getCells() {\n        return this.cells;\n    }\n    /**\n     * Returns all cells within the given row.\n     * See also: {@link TableRow.getCells()}\n     * @param row Either index or object reference.\n     */ getCellsInRow(row) {\n        return (typeof row === \"number\" ? this.rows[row] : row).cells;\n    }\n    /**\n     * Returns all cells within the given column.\n     * See also: {@link TableColumn.getCells()}\n     * @param column Either index or object reference.\n     */ getCellsInColumn(column) {\n        return (typeof column === \"number\" ? this.columns[column] : column).cells;\n    }\n    /** Returns the cell at row and column. */ getCellByObjs(rowObj, columnObj) {\n        // Intersection of row / column:\n        for (const cell of rowObj.cells){\n            if (columnObj.cells.includes(cell)) return cell;\n        }\n        let newCell = new $663deac50d96ff47$export$1e4baea7053fc0e3(this, rowObj, columnObj);\n        this.addCell(newCell);\n        return newCell;\n    }\n    /**\n     * Returns the cell at row and column.\n     * If the cell doesn't already exist, it will be created.\n     * @param row Either index or object reference.\n     * @param column Either index or object reference.\n     * @returns The cell at row and column.\n     */ getCell(row, column) {\n        return this.getCellByObjs(typeof row === \"number\" ? this.rows.at(row) : row, typeof column === \"number\" ? this.columns.at(column) : column);\n    }\n    /**\n     * Adds the cell to the Table and the cell's respective TableRow and TableColumn.\n     * (Be careful not to add a cell with row/column that already exist. Otherwise, the added cell will be overshadowed and not be used.)\n     */ addCell(cell) {\n        this.cells.push(cell);\n        cell.row.cells.push(cell);\n        cell.column.cells.push(cell);\n    }\n    /** Returns the total amount of rows in the table, including the header rows. */ rowCount() {\n        return this.rows.length;\n    }\n    /** Returns the total amount of columns in the table. */ columnCount() {\n        return this.columns.length;\n    }\n    /**\n     * → Ensures that all table cells exist.\n     * → Updates indices and sorts the cells within rows and columns.\n     * → Tries to find invalid configurations and sanitize them.\n     *\n     * Call this method after altering the table.\n     */ update() {\n        // Iterate over the entire table:\n        let columnObj;\n        let rowObj;\n        for(let colIndex = 0; colIndex < this.columns.length; colIndex++){\n            // Update the column's index:\n            columnObj = this.columns[colIndex];\n            columnObj.index = colIndex;\n            for(let rowIndex = 0; rowIndex < this.rows.length; rowIndex++){\n                // Update the row's index:\n                rowObj = this.rows[rowIndex];\n                rowObj.index = rowIndex;\n                // Use \"getCellByObjs\" to ensure that the cell gets created, if it doesn't exist already:\n                this.getCellByObjs(rowObj, columnObj);\n            }\n        }\n        // Update the column's 'cells' array:\n        for (const column of this.columns)column.updateCells(this);\n        // Update the row's 'cells' array:\n        for (const row of this.rows)row.updateCells(this);\n        this.sanitize();\n        return this;\n    }\n    /** Tries to find invalid configurations and sanitize them. */ sanitize() {\n        if (this.getNormalRows().length > 0) {\n            // Cannot merge cell above if in first row:\n            for (const cell of this.getCellsInRow(this.getNormalRows()[0]))if (cell.merged == $663deac50d96ff47$export$fcef1edb02975fb9.above) cell.merged = $663deac50d96ff47$export$fcef1edb02975fb9.none;\n            this.getNormalRows()[0].startsNewSection = false;\n        }\n        for (const cell of this.cells){\n            // Cannot merge cell left if in first column:\n            if (cell.column == this.columns[0] && cell.merged == $663deac50d96ff47$export$fcef1edb02975fb9.left) cell.merged = $663deac50d96ff47$export$fcef1edb02975fb9.none;\n            // Cannot merge cell above if in first row:\n            if ((cell.row == this.rows[0] || cell.row.startsNewSection) && cell.merged == $663deac50d96ff47$export$fcef1edb02975fb9.above) cell.merged = $663deac50d96ff47$export$fcef1edb02975fb9.none;\n        }\n        return this;\n    }\n    /**\n     * Merges multiline rows (from MultiMarkdown feature) into \"normal\" rows.\n     * This will destroy MultiMarkdown formatting! Only use when rendering into different formats.\n     */ mergeMultilineRows() {\n        let newRows = [];\n        let merging = false;\n        let actualRowIndex = 0;\n        this.getRows().forEach((row, index)=>{\n            if (merging) row.getCells().forEach((cell, index)=>{\n                const parentCell = newRows[actualRowIndex - 1].getCell(index);\n                parentCell.setText(parentCell.text + \"\\n\" + cell.text);\n            });\n            else {\n                row.index = actualRowIndex;\n                newRows.push(row);\n                actualRowIndex++;\n            }\n            if (!merging && row.isMultiline) merging = true;\n            else if (merging && !row.isMultiline) merging = false;\n            row.isMultiline = false;\n        });\n        this.rows = newRows;\n        this.update();\n        return this;\n    }\n}\n/*\n * Due to the nature of CSV tables, some data will be lost when converting MMD (or HTML) to CSV.\n *\n * CSV file specifications and implementation:\n * https://www.rfc-editor.org/rfc/rfc4180\n * http://super-csv.github.io/super-csv/csv_specification.html\n */ class $663deac50d96ff47$export$5f566d85f76e0514 {\n    separator;\n    quote;\n    assumeFirstLineIsHeader;\n    constructor(separator = \",\", quote = '\"', assumeFirstLineIsHeader = true){\n        this.separator = separator;\n        this.quote = quote;\n        this.assumeFirstLineIsHeader = assumeFirstLineIsHeader;\n    }\n    parse(table) {\n        /*\n            Prepare csv string:\n        */ let csv = table.replace(/\\r?\\n/g, \"\\n\");\n        if (!csv.endsWith(\"\\n\")) csv += \"\\n\";\n        /*\n            Parse csv string:\n        */ let parsedTable = new $663deac50d96ff47$export$54ec01a60f47d33d();\n        let tableRow = parsedTable.addRow();\n        tableRow.isHeader = this.assumeFirstLineIsHeader;\n        let cellContent = \"\";\n        let rowIndex = 0;\n        let colIndex = 0;\n        let isQuoted = false;\n        let lastChar = null;\n        for (const char of csv){\n            // Comma or newline:\n            if ((char == this.separator || char == \"\\n\") && !isQuoted) {\n                // Get column:\n                let tableColumn;\n                if (rowIndex == 0) tableColumn = parsedTable.addColumn();\n                else tableColumn = parsedTable.getColumn(colIndex);\n                // Set table cell content:\n                let tableCell = new $663deac50d96ff47$export$1e4baea7053fc0e3(parsedTable, tableRow, tableColumn);\n                tableCell.setText(cellContent);\n                parsedTable.addCell(tableCell);\n                //parsedTable.getCellByObjs(tableRow, tableColumn).setText(cellContent);\n                cellContent = \"\";\n                colIndex++;\n                // If it's a newline:\n                if (char == \"\\n\") {\n                    // Add a new row to the table:\n                    tableRow = parsedTable.addRow();\n                    rowIndex++;\n                    colIndex = 0;\n                }\n            } else if (char == this.quote) {\n                if (!isQuoted && lastChar == this.quote) cellContent += this.quote;\n                isQuoted = !isQuoted;\n            } else cellContent += char;\n            lastChar = char;\n        }\n        // Remove unused row:\n        parsedTable.removeRow(tableRow);\n        return parsedTable;\n    }\n}\n/** changes the output of CSVTableRenderer */ var $663deac50d96ff47$export$75aa5ef37edb24b7;\n(function(CSVTableRendererMode) {\n    CSVTableRendererMode[CSVTableRendererMode[\"OmitSpecialCharacters\"] = 0] = \"OmitSpecialCharacters\";\n    CSVTableRendererMode[CSVTableRendererMode[\"EscapeWithQuotes\"] = 1] = \"EscapeWithQuotes\";\n    CSVTableRendererMode[CSVTableRendererMode[\"AlwaysUseQuotes\"] = 2] = \"AlwaysUseQuotes\";\n})($663deac50d96ff47$export$75aa5ef37edb24b7 || ($663deac50d96ff47$export$75aa5ef37edb24b7 = {}));\nclass $663deac50d96ff47$export$e86a64deae89b2af {\n    separator;\n    quote;\n    lineBreak;\n    mode;\n    constructor(separator = \",\", quote = '\"', lineBreak = \"\\r\\n\", mode = $663deac50d96ff47$export$75aa5ef37edb24b7.EscapeWithQuotes){\n        this.separator = separator;\n        this.quote = quote;\n        this.lineBreak = lineBreak;\n        this.mode = mode;\n    }\n    render(table) {\n        let specialCharactersRegex = new RegExp(`([${this.separator}${this.quote}]|\\r\\n|\\n)`);\n        let specialCharactersRegexGlobal = new RegExp(`([${this.separator}${this.quote}]|\\r\\n|\\n)`, \"g\");\n        let quoteRegex = new RegExp(this.quote, \"g\");\n        let csv = [];\n        for (const row of table.getRows()){\n            let renderedRow = [];\n            for (const cell of table.getCellsInRow(row))switch(this.mode){\n                case $663deac50d96ff47$export$75aa5ef37edb24b7.AlwaysUseQuotes:\n                    renderedRow.push(`${this.quote}${cell.text.replace(quoteRegex, this.quote.repeat(2))}${this.quote}`);\n                    break;\n                case $663deac50d96ff47$export$75aa5ef37edb24b7.EscapeWithQuotes:\n                    if (specialCharactersRegex.test(cell.text)) renderedRow.push(`${this.quote}${cell.text.replace(quoteRegex, this.quote.repeat(2))}${this.quote}`);\n                    else renderedRow.push(cell.text);\n                    break;\n                case $663deac50d96ff47$export$75aa5ef37edb24b7.OmitSpecialCharacters:\n                    renderedRow.push(cell.text.replace(specialCharactersRegexGlobal, \"\"));\n                    break;\n            }\n            csv.push(renderedRow.join(this.separator));\n        }\n        return csv.join(this.lineBreak);\n    }\n}\nclass $663deac50d96ff47$var$ParsingError extends Error {\n    constructor(msg){\n        super(msg);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, $663deac50d96ff47$var$ParsingError.prototype);\n    }\n}\n/*\n    Specification: https://github.github.com/gfm/#tables-extension-\n*/ const $663deac50d96ff47$var$rowRegex$2 = /^\\|(.+)\\|$/;\nconst $663deac50d96ff47$var$delimiterRowRegex = /^\\|(\\s*:?\\-+:?\\s*\\|)+$/;\nvar $663deac50d96ff47$var$ParsingState$2;\n(function(ParsingState) {\n    ParsingState[ParsingState[\"BeforeTable\"] = 0] = \"BeforeTable\";\n    ParsingState[ParsingState[\"HeaderRow\"] = 1] = \"HeaderRow\";\n    ParsingState[ParsingState[\"DelimiterRow\"] = 2] = \"DelimiterRow\";\n    ParsingState[ParsingState[\"DataRows\"] = 3] = \"DataRows\";\n    ParsingState[ParsingState[\"AfterTable\"] = 4] = \"AfterTable\";\n})($663deac50d96ff47$var$ParsingState$2 || ($663deac50d96ff47$var$ParsingState$2 = {}));\nclass $663deac50d96ff47$export$b688a1ca98be0cc2 {\n    parse(table) {\n        let parsedTable = new $663deac50d96ff47$export$54ec01a60f47d33d();\n        let state = $663deac50d96ff47$var$ParsingState$2.BeforeTable;\n        let hasDelimiterRow = false;\n        let beforeTable = [];\n        let afterTable = [];\n        // Now parse line by line:\n        for (let line of table.split(\"\\n\")){\n            /*\n                Determine parsing state and prepare:\n            */ // Check if we are in the table:\n            if (state == $663deac50d96ff47$var$ParsingState$2.BeforeTable && line.match(/[^|\\\\`]\\|/g)) state = $663deac50d96ff47$var$ParsingState$2.HeaderRow;\n            // The table is broken at the first empty line, or beginning of another block-level structure:\n            if (line.trim() === \"\" || line.trim().startsWith(\"> \")) state = $663deac50d96ff47$var$ParsingState$2.AfterTable;\n            // If not inside table:\n            if (state == $663deac50d96ff47$var$ParsingState$2.BeforeTable) {\n                beforeTable.push(line);\n                continue; // Skip the rest\n            } else if (state == $663deac50d96ff47$var$ParsingState$2.AfterTable) {\n                afterTable.push(line);\n                continue; // Skip the rest\n            }\n            // Format table line:\n            line = line.trim();\n            if (!line.startsWith(\"|\")) line = \"|\" + line;\n            if (!line.endsWith(\"|\") || line.charAt(line.length - 3) != \"\\\\\" && line.endsWith(\"\\\\|\")) line = line + \"|\";\n            if (!line.match($663deac50d96ff47$var$rowRegex$2)) throw new $663deac50d96ff47$var$ParsingError(`Invalid row: ${line}`);\n            // Is delimiter row too early?\n            if (state == $663deac50d96ff47$var$ParsingState$2.HeaderRow && line.match($663deac50d96ff47$var$delimiterRowRegex)) throw new $663deac50d96ff47$var$ParsingError(\"Header row missing.\");\n            /*\n                Parse line depending on parsing state:\n            */ if (state == $663deac50d96ff47$var$ParsingState$2.HeaderRow || state == $663deac50d96ff47$var$ParsingState$2.DataRows) {\n                let tableRow = new $663deac50d96ff47$export$b05581f4e764e162();\n                tableRow.isHeader = state == $663deac50d96ff47$var$ParsingState$2.HeaderRow;\n                parsedTable.addRow(-1, tableRow);\n                // Parse each character:\n                let cellContent = \"\";\n                let colIndex = 0;\n                let slashEscaped = false;\n                let fenceEscaped = false;\n                for (let char of line.substring(1, line.length)){\n                    if (!slashEscaped && !fenceEscaped && char == \"|\") {\n                        // Ignore excess cells:\n                        if (state == $663deac50d96ff47$var$ParsingState$2.HeaderRow || colIndex < parsedTable.columnCount()) {\n                            let tableColumn = parsedTable.getColumn(colIndex);\n                            if (!tableColumn) tableColumn = parsedTable.addColumn();\n                            let cell = new $663deac50d96ff47$export$1e4baea7053fc0e3(parsedTable, tableRow, tableColumn);\n                            parsedTable.addCell(cell);\n                            cell.setText(cellContent.trim().replace(/(<[bB][rR]\\s*\\/?>)/g, \"\\n\"));\n                        }\n                        cellContent = \"\";\n                        colIndex++;\n                    } else if (!slashEscaped && char == \"\\\\\") slashEscaped = true;\n                    else {\n                        if (!slashEscaped && char == \"`\") fenceEscaped = !fenceEscaped;\n                        if (slashEscaped) cellContent += \"\\\\\";\n                        cellContent += char;\n                        slashEscaped = false;\n                    }\n                }\n                // Insert empty cells if missing:\n                for(; colIndex < parsedTable.columnCount(); colIndex++){\n                    let cell = new $663deac50d96ff47$export$1e4baea7053fc0e3(parsedTable, tableRow, parsedTable.getColumn(colIndex));\n                    parsedTable.addCell(cell);\n                }\n                // If the header row has been parsed, parse the delimiter row next:\n                if (state == $663deac50d96ff47$var$ParsingState$2.HeaderRow) state = $663deac50d96ff47$var$ParsingState$2.DelimiterRow;\n            } else if (state == $663deac50d96ff47$var$ParsingState$2.DelimiterRow) {\n                if (!line.match($663deac50d96ff47$var$delimiterRowRegex)) throw new $663deac50d96ff47$var$ParsingError(\"Invalid delimiter row\");\n                hasDelimiterRow = true;\n                let colIndex = 0;\n                let alignment = $663deac50d96ff47$export$84b2d1b68830363f.default;\n                let separator = false;\n                for (let char of line.substring(1, line.length)){\n                    if (char == \"|\") {\n                        let tableColumn = parsedTable.getColumn(colIndex);\n                        if (!tableColumn) throw new $663deac50d96ff47$var$ParsingError(\"Header row doesn't match the delimiter row in the number of cells.\");\n                        tableColumn.textAlign = alignment;\n                        alignment = $663deac50d96ff47$export$84b2d1b68830363f.default;\n                        separator = false;\n                        colIndex++;\n                    } else if (char == \":\") {\n                        if (!separator) alignment = $663deac50d96ff47$export$84b2d1b68830363f.left;\n                        else if (alignment == $663deac50d96ff47$export$84b2d1b68830363f.left) alignment = $663deac50d96ff47$export$84b2d1b68830363f.center;\n                        else alignment = $663deac50d96ff47$export$84b2d1b68830363f.right;\n                    } else if (char == \"-\") {\n                        separator = true;\n                        if (alignment == $663deac50d96ff47$export$84b2d1b68830363f.right) throw new $663deac50d96ff47$var$ParsingError(\"Invalid delimiter row (minus sign after colon)\");\n                    } else if (!char.match(/\\s/g)) throw new $663deac50d96ff47$var$ParsingError(`Unexpected character in delimiter row: '${char}'`);\n                }\n                if (colIndex < parsedTable.columnCount()) throw new $663deac50d96ff47$var$ParsingError(\"Header row doesn't match the delimiter row in the number of cells.\");\n                // Once the delimiter row has been parsed, parse the data rows next:\n                state = $663deac50d96ff47$var$ParsingState$2.DataRows;\n            } else throw new $663deac50d96ff47$var$ParsingError(`Not implemented ParsingState: ${state}`);\n        }\n        if (!hasDelimiterRow) throw new $663deac50d96ff47$var$ParsingError(\"No delimiter row found.\");\n        parsedTable.beforeTable = beforeTable.join(\"\\n\");\n        parsedTable.afterTable = afterTable.join(\"\\n\");\n        return parsedTable.update();\n    }\n}\nclass $663deac50d96ff47$export$da5c6a65d7c20a2a {\n    prettify;\n    renderOutsideTable;\n    constructor(prettify = true, renderOutsideTable = true){\n        this.prettify = prettify;\n        this.renderOutsideTable = renderOutsideTable;\n    }\n    render(table) {\n        const headerRow = table.getHeaderRows()[0];\n        const dataRows = table.getNormalRows();\n        const columnWidths = this.prettify ? this.determineColumnWidths(table) : null;\n        let result = [];\n        if (this.renderOutsideTable && table.beforeTable.trim() !== \"\") result.push(table.beforeTable);\n        // Header row:\n        result.push(this.renderRow(table, headerRow, columnWidths));\n        // Delimiter row:\n        result.push(this.renderDelimiterRow(table, columnWidths));\n        // Data rows:\n        for (const row of dataRows)result.push(this.renderRow(table, row, columnWidths));\n        if (this.renderOutsideTable && table.afterTable.trim() !== \"\") result.push(table.afterTable);\n        return result.join(\"\\n\");\n    }\n    renderDelimiterRow(table, columnWidths) {\n        let result = [];\n        table.getColumns().forEach((col, i)=>{\n            let width = this.prettify ? columnWidths[i] : null;\n            switch(col.textAlign){\n                case $663deac50d96ff47$export$84b2d1b68830363f.left:\n                    result.push(this.prettify ? `:${\"-\".repeat(width + 1)}` : \":-\");\n                    break;\n                case $663deac50d96ff47$export$84b2d1b68830363f.center:\n                    result.push(this.prettify ? `:${\"-\".repeat(width)}:` : \":-:\");\n                    break;\n                case $663deac50d96ff47$export$84b2d1b68830363f.right:\n                    result.push(this.prettify ? `${\"-\".repeat(width + 1)}:` : \"-:\");\n                    break;\n                case $663deac50d96ff47$export$84b2d1b68830363f.default:\n                default:\n                    result.push(this.prettify ? \"-\".repeat(width + 2) : \"-\");\n                    break;\n            }\n        });\n        if (this.prettify) return `|${result.join(\"|\")}|`;\n        else return result.join(\"|\");\n    }\n    renderRow(table, row, columnWidths) {\n        let result = [];\n        row.getCells().forEach((cell, i)=>{\n            result.push(this.renderCell(cell, this.prettify ? columnWidths[i] : null));\n            if (!this.prettify && i == row.getCells().length - 1 && cell.text.trim() == \"\") result.push(\"\");\n        });\n        if (this.prettify) return `|${result.join(\"|\")}|`;\n        else return result.join(\"|\");\n    }\n    renderCell(cell, cellWidth = -1) {\n        let text = cell.text.replace(/\\r?\\n/g, \"<br>\");\n        if (!this.prettify) return text;\n        const textLength = (0, $e7b00ddbb5cafea0$export$2e2bcd8739ae039)(text);\n        switch(cell.column.textAlign){\n            case $663deac50d96ff47$export$84b2d1b68830363f.center:\n                return `${\" \".repeat(Math.max(0, Math.floor((cellWidth - textLength) / 2)))} ${text} ${\" \".repeat(Math.max(0, Math.ceil((cellWidth - textLength) / 2)))}`;\n            case $663deac50d96ff47$export$84b2d1b68830363f.right:\n                return `${\" \".repeat(Math.max(0, cellWidth - textLength))} ${text} `;\n            case $663deac50d96ff47$export$84b2d1b68830363f.left:\n            case $663deac50d96ff47$export$84b2d1b68830363f.default:\n            default:\n                return ` ${text} ${\" \".repeat(Math.max(0, cellWidth - textLength))}`;\n        }\n    }\n    determineColumnWidth(table, column) {\n        let width = 0;\n        for (const cell of table.getCellsInColumn(column)){\n            const cellTextLength = (0, $e7b00ddbb5cafea0$export$2e2bcd8739ae039)(cell.text.replace(/\\r?\\n/g, \"<br>\"));\n            width = Math.max(cellTextLength, width);\n        }\n        return width;\n    }\n    determineColumnWidths(table) {\n        return table.getColumns().map((column)=>this.determineColumnWidth(table, column));\n    }\n}\nfunction $663deac50d96ff47$var$removeInvisibleCharacters(str) {\n    // See: https://www.utf8-chartable.de/unicode-utf8-table.pl\n    //      https://stackoverflow.com/a/13836410\n    // /[^\\u0000-\\u007E]/g\n    // /\\u00AD/g - soft hyphen\n    // /[^\\u0020-\\u007E\\u00A1-\\u00AC\\u00AE-\\u00FF]/g\n    return str.replace(/[\\u0000-\\u0009\\u000B\\u000C\\u000E-\\u001F\\u007F-\\u009F]/g, \"\") // Control characters\n    .replace(/[\\u00AD\\u2007\\u200C\\u2028-\\u202F\\u2060-\\u206F\\uFEFF]/g, \"\") // Invisible characters, such as &shy; or \"Zero Width Non-Joiner\"\n    .replace(/\\u00A0/g, \"&nbsp;\").replace(/\\u2002/g, \"&ensp;\").replace(/\\u2003/g, \"&emsp;\").replace(/\\u2009/g, \"&thinsp;\");\n//.replace(/[\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F5-\\u05FF\\u070E\\u074B\\u074C\\u07B2-\\u07BF\\u07FB\\u07FC\\u082E\\u082F\\u083F]/g, \"\"); // Weird characters\n}\n/**\n * Returns a TurndownService object configured for my own taste...\n * (of course, if you don't like it, you can configure it to fit your needs)\n */ function $663deac50d96ff47$var$getTurndownService() {\n    const turndownService = new (0, $3fb77fbe57d68b10$export$2e2bcd8739ae039)({\n        headingStyle: \"atx\",\n        hr: \"---\",\n        bulletListMarker: \"-\",\n        codeBlockStyle: \"fenced\",\n        fence: \"```\",\n        emDelimiter: \"*\",\n        strongDelimiter: \"**\",\n        linkStyle: \"inlined\",\n        linkReferenceStyle: \"full\"\n    });\n    // Add strikethrough:\n    turndownService.addRule(\"strikethrough\", {\n        filter: [\n            \"del\",\n            \"s\"\n        ],\n        replacement: function(content) {\n            return \"~~\" + content + \"~~\";\n        }\n    });\n    // Add blockquote:\n    /*turndownService.addRule('blockquote', {\n        filter: ['blockquote'],\n        replacement: function (content) {\n            return '> ' + content;\n        }\n    });*/ // Filter table tags:\n    turndownService.remove(\"table\").remove(\"tbody\").remove(\"thead\").remove(\"tr\").remove(\"td\").remove(\"th\");\n    return turndownService;\n}\nfunction $663deac50d96ff47$var$escapeMarkdown(mdStr) {\n    return mdStr.replace(/\\|/g, \"\\\\|\");\n}\nfunction $663deac50d96ff47$var$mdToHtml(markdown, inline = true) {\n    let html = markdown.trim(); // escape(markdown);\n    // Blockquote:\n    if (!inline) {\n        let lines = [];\n        let quoted = false;\n        for (let line of html.split(/\\r?\\n/)){\n            if (line.startsWith(\"> \")) {\n                if (!quoted) lines.push(\"<blockquote>\");\n                quoted = true;\n                lines.push(`<p>${$663deac50d96ff47$var$mdToHtml(line.substring(2))}</p>`);\n            } else {\n                if (quoted) lines.push(\"</blockquote>\");\n                quoted = false;\n                lines.push(line);\n            }\n            if (quoted) lines.push(\"</blockquote>\");\n        }\n        html = lines.join(\"\\n\");\n        if (!html.startsWith(\"<blockquote>\")) html = `<p>${html}</p>`;\n    }\n    // Image:\n    html = html.replace(/!\\[([^\\[\\]]+)\\]\\(([^\\(\\)]+)\\)/g, '<img src=\"$2\" alt=\"$1\">');\n    // Links:\n    html = html.replace(/\\[([^\\[\\]]+)\\]\\(([^\\(\\)]+)\\)/g, '<a href=\"$2\">$1</a>');\n    // Block code:\n    html = html.replace(/```[a-z]*?\\n(.*?)\\n```/g, \"<code>$1</code>\");\n    // Inline code:\n    html = html.replace(/`(.*?)`/g, \"<code>$1</code>\");\n    // Strikethrough:\n    html = html.replace(/~~(.*?)~~/g, \"<del>$1</del>\");\n    // Oblique:\n    html = html.replace(/___(.*?)___/g, \"<em><strong>$1</strong></em>\");\n    html = html.replace(/\\*\\*\\*(.*?)\\*\\*\\*/g, \"<em><strong>$1</strong></em>\");\n    // Bold:\n    html = html.replace(/__(.*?)__/g, \"<strong>$1</strong>\");\n    html = html.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\n    // Italic:\n    html = html.replace(/_(.*?)_/g, \"<em>$1</em>\");\n    html = html.replace(/\\*(.*?)\\*/g, \"<em>$1</em>\");\n    // Escaped characters:\n    html = html.replace(/\\\\([#\\.\\|\\*_\\s`\\[\\]\\-])/g, \"$1\");\n    // Newlines:\n    if (inline) html = html.replace(/\\r?\\n/g, \"<br>\");\n    else html = html.replace(/(\\r?\\n){2}/g, \"</p>\\n<p>\").replace(/(?<!\\<\\\\p\\>)\\r?\\n(?!\\<p\\>)/g, \" \");\n    // Remove unnecessary whitespace:\n    html = html.replace(/[ \\t]{2,}/g, \" \");\n    return html;\n}\nfunction $663deac50d96ff47$var$htmlToMd(html, turndownService) {\n    return turndownService.turndown(html);\n}\nfunction $663deac50d96ff47$var$textAlignToCSS(textAlign) {\n    switch(textAlign){\n        case $663deac50d96ff47$export$84b2d1b68830363f.left:\n            return \"text-align: left\";\n        case $663deac50d96ff47$export$84b2d1b68830363f.right:\n            return \"text-align: right\";\n        case $663deac50d96ff47$export$84b2d1b68830363f.center:\n            return \"text-align: center\";\n        case $663deac50d96ff47$export$84b2d1b68830363f.default:\n        default:\n            return \"text-align: start\";\n    }\n}\nfunction $663deac50d96ff47$var$cssToTextAlign(element) {\n    if (!element.css(\"text-align\")) return $663deac50d96ff47$export$84b2d1b68830363f.default;\n    switch(element.css(\"text-align\").toLowerCase()){\n        case \"left\":\n            return $663deac50d96ff47$export$84b2d1b68830363f.left;\n        case \"center\":\n            return $663deac50d96ff47$export$84b2d1b68830363f.center;\n        case \"right\":\n            return $663deac50d96ff47$export$84b2d1b68830363f.right;\n        default:\n            return $663deac50d96ff47$export$84b2d1b68830363f.default;\n    }\n}\n/** changes the behavior of HTMLTableParser */ var $663deac50d96ff47$export$674e5aeb45120251;\n(function(HTMLTableParserMode) {\n    /** uses only text (`Cheerio.text()`) */ HTMLTableParserMode[HTMLTableParserMode[\"StripHTMLElements\"] = 0] = \"StripHTMLElements\";\n    /** uses the HTML code (`Cheerio.html()`) without any converting */ HTMLTableParserMode[HTMLTableParserMode[\"PreserveHTMLElements\"] = 1] = \"PreserveHTMLElements\";\n    /** uses the HTML code (`Cheerio.html()`) and converts to Markdown using Turndown if possible (default) */ HTMLTableParserMode[HTMLTableParserMode[\"ConvertHTMLElements\"] = 2] = \"ConvertHTMLElements\";\n})($663deac50d96ff47$export$674e5aeb45120251 || ($663deac50d96ff47$export$674e5aeb45120251 = {}));\nclass $663deac50d96ff47$export$64f347afd00f39e6 {\n    mode;\n    turndownService;\n    constructor(mode = $663deac50d96ff47$export$674e5aeb45120251.ConvertHTMLElements, turndownService = $663deac50d96ff47$var$getTurndownService()){\n        this.mode = mode;\n        this.turndownService = turndownService;\n    }\n    parse(table) {\n        /*\n            Parse the html string and find our <table> tag to start:\n        */ const dom = $677e3d995fee76db$export$b6a9369736b19f4d(table, {\n            xmlMode: false,\n            lowerCaseTags: true,\n            lowerCaseAttributeNames: true,\n            decodeEntities: true\n        });\n        const $ = $f3e04a7c11f77f94$export$11e63f7b0f3d9900(dom);\n        const $tables = $(\"table\");\n        if ($tables.length === 0) throw new $663deac50d96ff47$var$ParsingError(\"Couldn't find <table> tag in DOM.\");\n        const $table = $($tables[0]);\n        /*\n            Converting table to Markdown:\n        */ let parsedTable = new $663deac50d96ff47$export$54ec01a60f47d33d();\n        let hasSections = false;\n        let tableTextAlign = $663deac50d96ff47$var$cssToTextAlign($table);\n        // Get everything before <table>:\n        let m = table.match(/((.|\\n)*)<\\s*[tT][aA][bB][lL][eE][^<>]*>/m);\n        if (m) parsedTable.beforeTable = $663deac50d96ff47$var$htmlToMd(m[1], this.turndownService);\n        // Get everything after </table>:\n        m = table.match(/<\\/\\s*[tT][aA][bB][lL][eE]\\s*>((.|\\n)*)/m);\n        if (m) parsedTable.afterTable = $663deac50d96ff47$var$htmlToMd(m[1], this.turndownService);\n        // Parse <thead> tag in <table>:\n        let $theads = $table.find(\"thead\");\n        if ($theads.length != 0) {\n            let sectionTextAlign = $663deac50d96ff47$var$cssToTextAlign($theads);\n            this.parseSection($, parsedTable, $theads.find(\"tr\"), sectionTextAlign != $663deac50d96ff47$export$84b2d1b68830363f.default ? sectionTextAlign : tableTextAlign, true);\n            hasSections = true;\n        }\n        // Parse <tbody> tags in <table>:\n        const self = this;\n        let $tbodies = $table.find(\"tbody\");\n        if ($tbodies.length > 0) {\n            $tbodies.each((i, element)=>{\n                const domTBody = $(element);\n                let sectionTextAlign = $663deac50d96ff47$var$cssToTextAlign(domTBody);\n                self.parseSection($, parsedTable, domTBody.find(\"tr\"), sectionTextAlign != $663deac50d96ff47$export$84b2d1b68830363f.default ? sectionTextAlign : tableTextAlign, false, $theads == null, i > 0);\n            });\n            hasSections = true;\n        }\n        // No <thead> or <tbody> tags?\n        if (!hasSections) // Parse table that doesn't have thead or tbody tags as one section with no header:\n        this.parseSection($, parsedTable, $table.find(\"tr\"), tableTextAlign, false, true, false);\n        // Parse <caption> tag in <table>:\n        let $captions = $table.find(\"caption\");\n        if ($captions.length != 0) {\n            const $caption = $($captions);\n            let caption = new $663deac50d96ff47$export$35468a455d619eb3();\n            caption.text = $663deac50d96ff47$var$htmlToMd($caption.html() ? $caption.html() : \"\", this.turndownService).replace(/(\\r?\\n)/g, \"\").trim(); // domCaption.innerText.replace(/(\\r?\\n|\\[|\\])/g, \"\").trim();\n            if ($caption.attr(\"id\") && caption.getLabel() != $caption.attr(\"id\")) caption.label = $caption.attr(\"id\").replace(/(\\r?\\n|\\[|\\])/g, \"\").trim();\n            switch($caption.css(\"caption-side\") && $caption.css(\"caption-side\").toLowerCase()){\n                case \"bottom\":\n                    caption.position = $663deac50d96ff47$export$ea0aeb8d0cfa7f2.bottom;\n                    break;\n                case \"top\":\n                default:\n                    caption.position = $663deac50d96ff47$export$ea0aeb8d0cfa7f2.top;\n            }\n            parsedTable.caption = caption;\n        }\n        return parsedTable.update();\n    }\n    parseSection($, table, $rows, defaultTextAlign, isHeader = false, allowHeaderDetection = false, firstRowStartsNewSection = false) {\n        // HTML skips \"ghost\" cells that are overshadowed by other cells that have a rowspan > 1.\n        // We'll memorize them:\n        let rowspanGhostCells = [];\n        // Remember how many rows we already have:\n        let rowOffset = table.rowCount();\n        // Iterate over each row (<tr>) of the HTML table:\n        $rows.each((domRowIndex, element)=>{\n            let rowIndex = domRowIndex + rowOffset;\n            let row = table.getRow(rowIndex);\n            if (!row) row = table.addRow();\n            row.isHeader = isHeader;\n            if (domRowIndex == 0) row.startsNewSection = firstRowStartsNewSection;\n            // Memorize an offset (colspan):\n            let colOffset = 0;\n            // Iterate over each cell (<td> or <th>) of the HTML table row:\n            const $row = $(element);\n            let $cells = $row.find(\"td, th\");\n            let allCellsAreTH = true;\n            $cells.each((domColIndex, element)=>{\n                const $cell = $(element);\n                // Get the TableColumn of our Table object, taking the memorized rowspans and colOffset into account:\n                let colIndex = domColIndex + colOffset;\n                while(rowspanGhostCells.filter((ghost)=>ghost.row == rowIndex && ghost.col == colIndex).length > 0)colIndex = domColIndex + ++colOffset;\n                let column = table.getColumn(colIndex);\n                if (!column) column = table.addColumn();\n                // Add cell to our Table object:\n                let cellContent = this.parseCell($cell);\n                let textAlign = $663deac50d96ff47$var$cssToTextAlign($cell);\n                let wrappable = $cell.hasClass(\"extend\");\n                textAlign = textAlign != $663deac50d96ff47$export$84b2d1b68830363f.default ? textAlign : defaultTextAlign;\n                let cellIsHeader = $cell.prop(\"tagName\").toLowerCase() == \"th\";\n                allCellsAreTH = allCellsAreTH && cellIsHeader;\n                let cell = new $663deac50d96ff47$export$1e4baea7053fc0e3(table, row, column);\n                cell.setText(cellContent);\n                cell.textAlign = textAlign;\n                cell.isHeader = cellIsHeader;\n                if (column.textAlign == $663deac50d96ff47$export$84b2d1b68830363f.default) column.textAlign = textAlign;\n                column.wrappable = wrappable;\n                table.addCell(cell);\n                // Take \"colspan\" into account:\n                let colspan = $cell.prop(\"colspan\");\n                if (colspan > 1) {\n                    // Add empty cells to our Table object:\n                    for(let i = 1; i < colspan; i++){\n                        let nextColumn = table.getColumn(colIndex + i);\n                        if (!nextColumn) nextColumn = table.addColumn();\n                        let mergedCell = table.getCell(row, nextColumn);\n                        mergedCell.merged = $663deac50d96ff47$export$fcef1edb02975fb9.left;\n                    }\n                    // Add colspan to colOffset:\n                    colOffset += colspan - 1;\n                }\n                // Take \"rowspan\" into account:\n                let rowspan = $cell.prop(\"rowspan\");\n                if (rowspan > 1) // Add empty cells to our Table object:\n                for(let i = 1; i < rowspan; i++){\n                    let nextRow = table.getRow(rowIndex + i);\n                    if (!nextRow) nextRow = table.addRow();\n                    nextRow.isHeader = isHeader;\n                    let mergedCell = table.getCell(nextRow, column);\n                    mergedCell.merged = $663deac50d96ff47$export$fcef1edb02975fb9.above;\n                    // Memorize \"ghost\" cells:\n                    rowspanGhostCells.push({\n                        \"row\": rowIndex + i,\n                        \"col\": colIndex\n                    });\n                }\n            });\n            // Detect headers:\n            if (allowHeaderDetection && !isHeader) row.isHeader = allCellsAreTH;\n        });\n    }\n    parseCell($cell) {\n        switch(this.mode){\n            case $663deac50d96ff47$export$674e5aeb45120251.PreserveHTMLElements:\n                return $663deac50d96ff47$var$removeInvisibleCharacters($663deac50d96ff47$var$escapeMarkdown($cell.html()));\n            case $663deac50d96ff47$export$674e5aeb45120251.StripHTMLElements:\n                return $663deac50d96ff47$var$removeInvisibleCharacters($663deac50d96ff47$var$escapeMarkdown($cell.text()));\n            case $663deac50d96ff47$export$674e5aeb45120251.ConvertHTMLElements:\n            default:\n                return $663deac50d96ff47$var$removeInvisibleCharacters($663deac50d96ff47$var$escapeMarkdown($663deac50d96ff47$var$htmlToMd($cell.html(), this.turndownService)));\n        }\n    }\n}\nclass $663deac50d96ff47$export$1786c8c776e51fe7 {\n    prettify;\n    indent;\n    renderOutsideTable;\n    constructor(prettify = true, indent = \"  \", renderOutsideTable = true){\n        this.prettify = prettify;\n        this.indent = indent;\n        this.renderOutsideTable = renderOutsideTable;\n    }\n    render(table) {\n        let result = [];\n        if (this.renderOutsideTable && table.beforeTable.trim() !== \"\") result.push($663deac50d96ff47$var$mdToHtml(table.beforeTable, false));\n        result.push(\"<table>\");\n        let headerRows = table.getHeaderRows();\n        let normalRows = table.getNormalRows();\n        if (headerRows.length > 0) {\n            result.push(this.indentString(\"<thead>\", 1));\n            for (const row of headerRows)result.push(...this.renderRow(table, row));\n            result.push(this.indentString(\"</thead>\", 1));\n        }\n        if (normalRows.length > 0) {\n            result.push(this.indentString(\"<tbody>\", 1));\n            for (const row of normalRows){\n                if (row.startsNewSection) result.push(this.indentString(\"</tbody>\", 1), this.indentString(\"<tbody>\", 1));\n                result.push(...this.renderRow(table, row));\n            }\n            result.push(this.indentString(\"</tbody>\", 1));\n        }\n        if (table.caption && table.caption.text.length > 0) result.push(this.indentString(`<caption id=\"${table.caption.getLabel()}\" style=\"caption-side: ${table.caption.position}\">${$663deac50d96ff47$var$mdToHtml(table.caption.text)}</caption>`, 1));\n        result.push(\"</table>\");\n        if (this.renderOutsideTable && table.afterTable.trim() !== \"\") result.push($663deac50d96ff47$var$mdToHtml(table.afterTable, false));\n        return result.join(this.prettify ? \"\\n\" : \"\");\n    }\n    renderRow(table, row) {\n        let result = [];\n        result.push(this.indentString(\"<tr>\", 2));\n        for (let cell of table.getCellsInRow(row)){\n            let renderedCell = this.indentString(this.renderCell(cell), 3);\n            if (renderedCell.trim() !== \"\") result.push(renderedCell);\n        }\n        result.push(this.indentString(\"</tr>\", 2));\n        return result;\n    }\n    renderCell(cell) {\n        let colspan = cell.getColspan();\n        let rowspan = cell.getRowspan();\n        if (cell.merged == $663deac50d96ff47$export$fcef1edb02975fb9.none) {\n            let cellProps = (colspan > 1 ? ` colspan=\"${colspan}\"` : \"\") + (rowspan > 1 ? ` rowspan=\"${rowspan}\"` : \"\") + (cell.getTextAlignment() != $663deac50d96ff47$export$84b2d1b68830363f.default ? ` style=\"${$663deac50d96ff47$var$textAlignToCSS(cell.getTextAlignment())}\"` : \"\") + // ` align=\"${cell.getTextAlignment()}\"`\n            (cell.column.wrappable ? ` class=\"extend\"` : \"\");\n            let cellTag = cell.isHeaderCell() ? \"th\" : \"td\";\n            return [\n                \"<\",\n                cellTag,\n                cellProps,\n                \">\",\n                $663deac50d96ff47$var$mdToHtml(cell.text),\n                \"</\",\n                cellTag,\n                \">\"\n            ].join(\"\"); // (markdown-it) mdIt.renderInline(cell.text)\n        }\n        return \"\";\n    }\n    indentString(str, indentLevel = 0) {\n        if (this.prettify) return this.indent.repeat(indentLevel) + str;\n        else return str;\n    }\n}\n/*\n    Specification: https://fletcher.github.io/MultiMarkdown-6/syntax/tables.html\n*/ const $663deac50d96ff47$var$rowRegex$1 = /^\\|(.+)\\|$/;\nconst $663deac50d96ff47$var$separatorRegex = /^\\|([\\s\\.]*:?[\\-=\\.]+:?\\+?[\\s\\.]*\\|)+$/;\nconst $663deac50d96ff47$var$captionRegex = /^(\\[.+\\]){1,2}$/;\nvar $663deac50d96ff47$var$ParsingState$1;\n(function(ParsingState) {\n    ParsingState[ParsingState[\"BeforeTable\"] = 0] = \"BeforeTable\";\n    ParsingState[ParsingState[\"TopCaption\"] = 1] = \"TopCaption\";\n    ParsingState[ParsingState[\"Header\"] = 2] = \"Header\";\n    ParsingState[ParsingState[\"Separator\"] = 3] = \"Separator\";\n    ParsingState[ParsingState[\"Row\"] = 4] = \"Row\";\n    ParsingState[ParsingState[\"BottomCaption\"] = 5] = \"BottomCaption\";\n    ParsingState[ParsingState[\"AfterTable\"] = 6] = \"AfterTable\";\n})($663deac50d96ff47$var$ParsingState$1 || ($663deac50d96ff47$var$ParsingState$1 = {}));\nclass $663deac50d96ff47$export$bf050a0bf8d85cbc {\n    parse(table) {\n        let parsedTable = new $663deac50d96ff47$export$54ec01a60f47d33d();\n        let state = $663deac50d96ff47$var$ParsingState$1.BeforeTable;\n        let startNewSection = false;\n        let hasSeparator = false;\n        let beforeTable = [];\n        let afterTable = [];\n        let isMultiline = false;\n        let wasMultiline = false;\n        // Parse line by line:\n        for (let line of table.split(\"\\n\")){\n            /*\n                Determine parsing state and prepare:\n            */ // Reset values:\n            wasMultiline = isMultiline;\n            isMultiline = false;\n            // Check if we are in the table:\n            if (state == $663deac50d96ff47$var$ParsingState$1.BeforeTable && (line.match(/[^|\\\\`]\\|/g) || line.trim().match($663deac50d96ff47$var$captionRegex))) {\n                if (line.trim().match($663deac50d96ff47$var$captionRegex)) state = $663deac50d96ff47$var$ParsingState$1.TopCaption;\n                else state = $663deac50d96ff47$var$ParsingState$1.Header;\n            }\n            // Check if we are no longer in the table:\n            if (state != $663deac50d96ff47$var$ParsingState$1.BeforeTable && state != $663deac50d96ff47$var$ParsingState$1.AfterTable && !(line.trim().endsWith(\"\\\\\") || wasMultiline || line.replace(/\\`[^\\`]*\\`/g, \"\").match(/[^|\\\\`]\\|/g) || // row\n            // ↑ What was I thinking?\n            line.trim().match($663deac50d96ff47$var$captionRegex) && (state == $663deac50d96ff47$var$ParsingState$1.TopCaption || parsedTable.caption == null) || // valid caption\n            line.trim() === \"\" && !startNewSection && state != $663deac50d96ff47$var$ParsingState$1.Separator)) {\n                state = $663deac50d96ff47$var$ParsingState$1.AfterTable;\n                if (startNewSection) afterTable.push(\"\");\n            }\n            // If not inside table:\n            if (state == $663deac50d96ff47$var$ParsingState$1.BeforeTable) {\n                beforeTable.push(line);\n                continue; // Skip the rest\n            } else if (state == $663deac50d96ff47$var$ParsingState$1.AfterTable) {\n                afterTable.push(line);\n                continue; // Skip the rest\n            }\n            // Is empty line?\n            if (line === \"\") {\n                if (startNewSection) throw new $663deac50d96ff47$var$ParsingError(\"Invalid table: No more than one empty line allowed.\");\n                if (state == $663deac50d96ff47$var$ParsingState$1.Row) startNewSection = true;\n                continue;\n            }\n            // Format table line:\n            line = line.trim();\n            if (!line.match($663deac50d96ff47$var$captionRegex)) {\n                if (!line.startsWith(\"|\")) line = \"|\" + line;\n                if (line.endsWith(\"\\\\\")) {\n                    isMultiline = true;\n                    line = line.substring(0, line.length - 1).trim();\n                }\n                if (!line.endsWith(\"|\") || line.charAt(line.length - 3) != \"\\\\\" && line.endsWith(\"\\\\|\")) line = line + \"|\";\n                if (!line.match($663deac50d96ff47$var$rowRegex$1)) throw new $663deac50d96ff47$var$ParsingError(`Invalid row: ${line}`);\n            }\n            // Is separator?\n            if ((state == $663deac50d96ff47$var$ParsingState$1.TopCaption || state == $663deac50d96ff47$var$ParsingState$1.Header) && line.match($663deac50d96ff47$var$separatorRegex)) state = $663deac50d96ff47$var$ParsingState$1.Separator;\n            else if (state == $663deac50d96ff47$var$ParsingState$1.TopCaption && line.match($663deac50d96ff47$var$rowRegex$1)) state = $663deac50d96ff47$var$ParsingState$1.Header;\n            else if ((state == $663deac50d96ff47$var$ParsingState$1.Separator || state == $663deac50d96ff47$var$ParsingState$1.Row) && line.match($663deac50d96ff47$var$captionRegex)) state = $663deac50d96ff47$var$ParsingState$1.BottomCaption;\n            else if (state == $663deac50d96ff47$var$ParsingState$1.Separator) state = $663deac50d96ff47$var$ParsingState$1.Row;\n            /*\n                Parse line depending on parsing state:\n            */ if (state == $663deac50d96ff47$var$ParsingState$1.Header || state == $663deac50d96ff47$var$ParsingState$1.Row) {\n                let tableRow = new $663deac50d96ff47$export$b05581f4e764e162();\n                if (state == $663deac50d96ff47$var$ParsingState$1.Header) tableRow.isHeader = true;\n                else {\n                    tableRow.startsNewSection = startNewSection;\n                    tableRow.isMultiline = isMultiline;\n                    startNewSection = false;\n                }\n                parsedTable.addRow(-1, tableRow);\n                // Parse each character:\n                let cellContent = \"\";\n                let colIndex = 0;\n                let slashEscaped = false;\n                let fenceEscaped = false;\n                for (let char of line.substring(1, line.length)){\n                    if (!slashEscaped && !fenceEscaped && char == \"|\") {\n                        let tableColumn = parsedTable.getColumn(colIndex);\n                        if (!tableColumn) tableColumn = parsedTable.addColumn();\n                        let cell = new $663deac50d96ff47$export$1e4baea7053fc0e3(parsedTable, tableRow, tableColumn);\n                        parsedTable.addCell(cell);\n                        if (cellContent.trim() == \"^^\") cell.merged = $663deac50d96ff47$export$fcef1edb02975fb9.above;\n                        else if (cellContent === \"\") cell.merged = $663deac50d96ff47$export$fcef1edb02975fb9.left;\n                        else cell.setText(cellContent.trim().replace(/(<\\s*[bB][rR]\\s*\\/?>)/g, \"\\n\"));\n                        cellContent = \"\";\n                        colIndex++;\n                    } else if (!slashEscaped && char == \"\\\\\") slashEscaped = true;\n                    else {\n                        if (!slashEscaped && char == \"`\" && !isMultiline && !wasMultiline) fenceEscaped = !fenceEscaped;\n                        if (slashEscaped) cellContent += \"\\\\\";\n                        cellContent += char;\n                        slashEscaped = false;\n                    }\n                }\n                // Insert empty cells if missing:\n                for(; colIndex < parsedTable.columnCount(); colIndex++){\n                    let cell = new $663deac50d96ff47$export$1e4baea7053fc0e3(parsedTable, tableRow, parsedTable.getColumn(colIndex));\n                    parsedTable.addCell(cell);\n                }\n            } else if (state == $663deac50d96ff47$var$ParsingState$1.Separator) {\n                hasSeparator = true;\n                let colIndex = 0;\n                let alignment = $663deac50d96ff47$export$84b2d1b68830363f.default;\n                let wrappable = false;\n                let separator = false;\n                for (let char of line.substring(1, line.length)){\n                    if (char == \"|\") {\n                        let tableColumn = parsedTable.getColumn(colIndex);\n                        if (!tableColumn) tableColumn = parsedTable.addColumn();\n                        tableColumn.textAlign = alignment;\n                        tableColumn.wrappable = wrappable;\n                        alignment = $663deac50d96ff47$export$84b2d1b68830363f.default;\n                        separator = false;\n                        wrappable = false;\n                        colIndex++;\n                    } else if (char == \":\") {\n                        if (!separator) alignment = $663deac50d96ff47$export$84b2d1b68830363f.left;\n                        else if (alignment == $663deac50d96ff47$export$84b2d1b68830363f.left) alignment = $663deac50d96ff47$export$84b2d1b68830363f.center;\n                        else alignment = $663deac50d96ff47$export$84b2d1b68830363f.right;\n                    } else if (char == \"-\" || char == \"=\") {\n                        separator = true;\n                        if (alignment == $663deac50d96ff47$export$84b2d1b68830363f.right || wrappable) throw new $663deac50d96ff47$var$ParsingError(\"Invalid separator\");\n                    } else if (char == \"+\") wrappable = true;\n                // char == \".\" => idk ???\n                }\n            } else if (state == $663deac50d96ff47$var$ParsingState$1.TopCaption || state == $663deac50d96ff47$var$ParsingState$1.BottomCaption) {\n                // \"If you have a caption before and after the table, only the first match will be used.\"\n                if (parsedTable.caption != null) continue;\n                let caption = new $663deac50d96ff47$export$35468a455d619eb3();\n                caption.position = state == $663deac50d96ff47$var$ParsingState$1.TopCaption ? $663deac50d96ff47$export$ea0aeb8d0cfa7f2.top : $663deac50d96ff47$export$ea0aeb8d0cfa7f2.bottom;\n                let split = line.split(/[\\[\\]]+/).filter((s)=>s.trim() !== \"\");\n                caption.text = split[0].trim().replace(/(<\\s*[bB][rR]\\s*\\/?>)/g, \"\\n\");\n                if (split.length > 1) caption.label = split[1].trim().replace(/\\s+/g, \"-\");\n                parsedTable.caption = caption;\n            } else throw new $663deac50d96ff47$var$ParsingError(`Not implemented ParsingState: ${state}`);\n        }\n        if (!hasSeparator) throw new $663deac50d96ff47$var$ParsingError(\"No separator row found.\");\n        parsedTable.beforeTable = beforeTable.join(\"\\n\");\n        parsedTable.afterTable = afterTable.join(\"\\n\");\n        return parsedTable.update();\n    }\n}\nclass $663deac50d96ff47$export$72f222e251087828 {\n    renderOutsideTable;\n    constructor(renderOutsideTable = true){\n        this.renderOutsideTable = renderOutsideTable;\n    }\n    render(table) {\n        const headerRows = table.getHeaderRows();\n        const normalRows = table.getNormalRows();\n        let result = [];\n        if (this.renderOutsideTable && table.beforeTable.trim() !== \"\") result.push(table.beforeTable);\n        // Caption (if position is top):\n        if (table.caption && table.caption.position == $663deac50d96ff47$export$ea0aeb8d0cfa7f2.top) result.push(this.renderCaption(table.caption));\n        // Header:\n        if (headerRows.length > 0) for (const row of headerRows)result.push(this.renderRow(table, row));\n        // Separator:\n        result.push(this.renderSeparator(table));\n        // Rows:\n        for (const row of normalRows){\n            if (row.startsNewSection) result.push(\"\");\n            result.push(this.renderRow(table, row));\n        }\n        // Caption (if position is bottom):\n        if (table.caption && table.caption.position == $663deac50d96ff47$export$ea0aeb8d0cfa7f2.bottom) result.push(this.renderCaption(table.caption));\n        if (this.renderOutsideTable && table.afterTable.trim() !== \"\") result.push(table.afterTable);\n        return result.join(\"\\n\");\n    }\n    renderCaption(caption) {\n        let result = [];\n        if (caption.text.length > 0) {\n            result.push(`[${caption.text}]`);\n            if (caption.label.length > 0) result.push(`[${caption.label}]`);\n        }\n        return result.join(\"\");\n    }\n    renderSeparator(table) {\n        let result = [];\n        table.getColumns().forEach((col, i)=>{\n            let chunk;\n            switch(col.textAlign){\n                case $663deac50d96ff47$export$84b2d1b68830363f.left:\n                    chunk = \":-\";\n                    break;\n                case $663deac50d96ff47$export$84b2d1b68830363f.center:\n                    chunk = \":-:\";\n                    break;\n                case $663deac50d96ff47$export$84b2d1b68830363f.right:\n                    chunk = \"-:\";\n                    break;\n                case $663deac50d96ff47$export$84b2d1b68830363f.default:\n                default:\n                    chunk = \"-\";\n                    break;\n            }\n            result.push(chunk + (col.wrappable ? \"+\" : \"\"));\n        });\n        return result.join(\"|\");\n    }\n    renderRow(table, row) {\n        let result = \"\";\n        let cells = table.getCellsInRow(row);\n        cells.forEach((cell, i)=>{\n            if (cell.merged == $663deac50d96ff47$export$fcef1edb02975fb9.left) result += \"|\";\n            else if (cell.merged == $663deac50d96ff47$export$fcef1edb02975fb9.above) result += \"^^|\";\n            else if (i == 0 && cell.text.trim() === \"\") result += \"| |\";\n            else if (cell.text.trim() === \"\") result += \" |\";\n            else {\n                let text = cell.text.trim().replace(/\\r?\\n/g, \"<br>\");\n                result += `${text}|`;\n            }\n            // Last cell:\n            if (i == cells.length - 1 && cell.text.trim() != \"\" && cell.merged != $663deac50d96ff47$export$fcef1edb02975fb9.left) result = result.substring(0, result.length - 1); // Omit last '|' if possible\n        });\n        if (row.isMultiline) result += \" \\\\\";\n        return result;\n    }\n}\nclass $663deac50d96ff47$export$1f9dc7d14750712e {\n    renderOutsideTable;\n    constructor(renderOutsideTable = true){\n        this.renderOutsideTable = renderOutsideTable;\n    }\n    render(table) {\n        const headerRows = table.getHeaderRows();\n        const normalRows = table.getNormalRows();\n        const columnWidths = this.determineColumnWidths(table);\n        let result = [];\n        if (this.renderOutsideTable && table.beforeTable.trim() !== \"\") result.push(table.beforeTable);\n        // Caption (if position is top):\n        if (table.caption && table.caption.position == $663deac50d96ff47$export$ea0aeb8d0cfa7f2.top) result.push(this.renderCaption(table.caption));\n        // Header:\n        if (headerRows.length > 0) for (const row of headerRows)result.push(this.renderRow(table, row, columnWidths));\n        // Separator:\n        result.push(this.renderSeparator(table, columnWidths));\n        // Rows:\n        for (const row of normalRows){\n            if (row.startsNewSection) result.push(\"\");\n            result.push(this.renderRow(table, row, columnWidths));\n        }\n        // Caption (if position is bottom):\n        if (table.caption && table.caption.position == $663deac50d96ff47$export$ea0aeb8d0cfa7f2.bottom) result.push(this.renderCaption(table.caption));\n        if (this.renderOutsideTable && table.afterTable.trim() !== \"\") result.push(table.afterTable);\n        return result.join(\"\\n\");\n    }\n    renderCaption(caption) {\n        let result = [];\n        if (caption.text.length > 0) {\n            result.push(`[${caption.text}]`);\n            if (caption.label.length > 0) result.push(`[${caption.getLabel()}]`);\n        }\n        return result.join(\"\");\n    }\n    renderSeparator(table, columnWidths) {\n        let result = [];\n        table.getColumns().forEach((col, i)=>{\n            let width = columnWidths[i];\n            switch(col.textAlign){\n                case $663deac50d96ff47$export$84b2d1b68830363f.left:\n                    if (col.wrappable) result.push(`:${\"-\".repeat(width)}+`);\n                    else result.push(`:${\"-\".repeat(width + 1)}`);\n                    break;\n                case $663deac50d96ff47$export$84b2d1b68830363f.center:\n                    if (col.wrappable) result.push(`:${\"-\".repeat(width - 1)}:+`);\n                    else result.push(`:${\"-\".repeat(width)}:`);\n                    break;\n                case $663deac50d96ff47$export$84b2d1b68830363f.right:\n                    if (col.wrappable) result.push(`${\"-\".repeat(width)}:+`);\n                    else result.push(`${\"-\".repeat(width + 1)}:`);\n                    break;\n                case $663deac50d96ff47$export$84b2d1b68830363f.default:\n                default:\n                    if (col.wrappable) result.push(`${\"-\".repeat(width + 1)}+`);\n                    else result.push(\"-\".repeat(width + 2));\n                    break;\n            }\n        });\n        return `|${result.join(\"|\")}|`;\n    }\n    renderRow(table, row, columnWidths) {\n        let result = [];\n        table.getCellsInRow(row).forEach((cell, i)=>{\n            let colspan = cell.getColspan();\n            let cellWidth = columnWidths[i];\n            if (colspan > 1) {\n                for(let col = i + 1; col < i + colspan; col++)cellWidth += columnWidths[col];\n                cellWidth += colspan * 2 - 2; // + Math.floor((colspan - 1) / 2);\n            }\n            result.push(this.renderCell(cell, colspan, cellWidth));\n        });\n        return `|${result.join(\"|\")}|` + (row.isMultiline ? \" \\\\\" : \"\");\n    }\n    renderCell(cell, colspan = 1, cellWidth = -1) {\n        if (cell.merged == $663deac50d96ff47$export$fcef1edb02975fb9.left) return \"\";\n        let text = cell.merged == $663deac50d96ff47$export$fcef1edb02975fb9.above ? \"^^\" : cell.text.replace(/\\r?\\n/g, \"<br>\");\n        const textLength = (0, $e7b00ddbb5cafea0$export$2e2bcd8739ae039)(text);\n        switch(cell.column.textAlign){\n            case $663deac50d96ff47$export$84b2d1b68830363f.center:\n                return `${\" \".repeat(Math.max(0, Math.floor((cellWidth - textLength + colspan - 1) / 2)))} ${text} ${\" \".repeat(Math.max(0, Math.ceil((cellWidth - textLength - colspan + 1) / 2)))}`;\n            case $663deac50d96ff47$export$84b2d1b68830363f.right:\n                return `${\" \".repeat(Math.max(0, cellWidth - textLength))} ${text} `;\n            case $663deac50d96ff47$export$84b2d1b68830363f.left:\n            case $663deac50d96ff47$export$84b2d1b68830363f.default:\n            default:\n                return ` ${text} ${\" \".repeat(Math.max(0, cellWidth - textLength))}`;\n        }\n    }\n    determineColumnWidths(table) {\n        let columnWidths = Array.from({\n            length: table.columnCount()\n        }, ()=>0);\n        for(let colIndex = table.columnCount() - 1; colIndex >= 0; colIndex--){\n            const column = table.getColumn(colIndex);\n            let width = 0;\n            for (const cell of table.getCellsInColumn(column)){\n                let colspan = cell.getColspan();\n                let textWidth = cell.merged == $663deac50d96ff47$export$fcef1edb02975fb9.above ? 2 : (0, $e7b00ddbb5cafea0$export$2e2bcd8739ae039)(cell.text.replace(/\\r?\\n/g, \"<br>\"));\n                if (colspan == 1) width = Math.max(textWidth, width);\n                else {\n                    let leftoverWidth = columnWidths.slice(colIndex + 1, colIndex + colspan).reduce((pv, cv)=>pv + cv);\n                    // let combinedWidth = width + leftoverWidth;\n                    width = Math.max(textWidth - leftoverWidth, width);\n                }\n            }\n            columnWidths.splice(colIndex, 1, width);\n        }\n        return columnWidths;\n    }\n}\n/*\n    Syntax: https://www.dokuwiki.org/wiki:syntax#tables\n*/ function $663deac50d96ff47$var$dokuWikiToMarkdown(markup) {\n    // Image:\n    markup = markup.replace(/{{([^\\|]*?)\\|?([^\\|]*?)}}/g, \"![$2]($1)\");\n    // Links:\n    markup = markup.replace(/\\[\\[([^\\|]*?)\\|?([^\\|]*?)\\]\\]/g, \"[$2]($1)\");\n    // Block code:\n    markup = markup.replace(/<code\\s+?([a-zA-Z0-9]*?)>\\n(.*?)<\\/code>/gs, \"```$1\\n$2```\");\n    // Inline code / monospaced text:\n    markup = markup.replace(/''(.*?)''/g, \"`$1`\");\n    // Oblique:\n    markup = markup.replace(/\\/\\/\\*\\*(.*?)\\*\\*\\/\\//g, \"***$1***\");\n    markup = markup.replace(/\\*\\*\\/\\/(.*?)\\/\\/\\*\\*/g, \"***$1***\");\n    // Italic:\n    markup = markup.replace(/\\/\\/(.*?)\\/\\//g, \"*$1*\");\n    // Underlined:\n    markup = markup.replace(/__(.*?)__/g, \"<u>$1</u>\");\n    // Newlines:\n    markup = markup.replace(/\\\\\\\\ /g, \"\\n\");\n    return markup;\n}\nfunction $663deac50d96ff47$var$markdownToDokuWiki(markup) {\n    // Image:\n    markup = markup.replace(/!\\[([^\\[\\]]+)\\]\\(([^\\(\\)]+)\\)/g, \"{{$2|$1}}\");\n    // Links:\n    markup = markup.replace(/\\[([^\\[\\]]+)\\]\\(([^\\(\\)]+)\\)/g, \"[[$2|$1]]\");\n    // Block code:\n    markup = markup.replace(/```([a-zA-Z0-9]*?)\\n(.*?)\\n```/gs, \"<code $1>\\n$2\\n</code>\");\n    // Inline code / monospaced text:\n    markup = markup.replace(/`(.*?)`/g, \"''$1''\");\n    // Strikethrough:\n    markup = markup.replace(/~~(.*?)~~/g, \"<del>$1</del>\");\n    // Oblique:\n    markup = markup.replace(/___(.*?)___/g, \"//**$1**//\");\n    markup = markup.replace(/\\*\\*\\*(.*?)\\*\\*\\*/g, \"//**$1**//\");\n    // Bold:\n    markup = markup.replace(/__(.*?)__/g, \"**$1**\");\n    // Italic:\n    markup = markup.replace(/_(.*?)_/g, \"//$1//\");\n    markup = markup.replace(/\\*(.*?)\\*/g, \"//$1//\");\n    // Underlined:\n    markup = markup.replace(/<ins>(.*?)<\\/ins>/g, \"__$1__\");\n    markup = markup.replace(/<u>(.*?)<\\/u>/g, \"__$1__\");\n    // Superscript:\n    markup = markup.replace(/\\^(.*?)\\^/g, \"<sup>$1</sup>\");\n    // Subscript:\n    markup = markup.replace(/~(.*?)~/g, \"<sub>$1</sub>\");\n    // Escaped characters:\n    markup = markup.replace(/\\\\([#\\.\\|\\*_\\s`\\[\\]\\-])/g, \"$1\");\n    // Newlines:\n    markup = markup.replace(/<br\\s?\\/?>/g, \"\\\\\\\\ \");\n    markup = markup.replace(/\\r?\\n/g, \"\\\\\\\\ \");\n    return markup;\n}\nconst $663deac50d96ff47$var$rowRegex = /^[\\|\\^](.+)[\\|\\^]$/;\nvar $663deac50d96ff47$var$ParsingState;\n(function(ParsingState) {\n    ParsingState[ParsingState[\"BeforeTable\"] = 0] = \"BeforeTable\";\n    ParsingState[ParsingState[\"Row\"] = 1] = \"Row\";\n    ParsingState[ParsingState[\"AfterTable\"] = 2] = \"AfterTable\";\n})($663deac50d96ff47$var$ParsingState || ($663deac50d96ff47$var$ParsingState = {}));\nclass $663deac50d96ff47$export$a8a7e00e796682d9 {\n    convertMarkup;\n    constructor(/** If true, converts DokuWiki syntax to Markdown syntax */ convertMarkup = true){\n        this.convertMarkup = convertMarkup;\n    }\n    parse(table) {\n        let parsedTable = new $663deac50d96ff47$export$54ec01a60f47d33d();\n        let state = $663deac50d96ff47$var$ParsingState.BeforeTable;\n        let beforeTable = [];\n        let afterTable = [];\n        // Parse line by line:\n        for (let line of table.trim().split(\"\\n\")){\n            // Check if we are in the table:\n            if (state == $663deac50d96ff47$var$ParsingState.BeforeTable && line.match($663deac50d96ff47$var$rowRegex)) state = $663deac50d96ff47$var$ParsingState.Row;\n            // Check if we are no longer in the table:\n            if (state != $663deac50d96ff47$var$ParsingState.BeforeTable && state != $663deac50d96ff47$var$ParsingState.AfterTable && !line.match($663deac50d96ff47$var$rowRegex)) state = $663deac50d96ff47$var$ParsingState.AfterTable;\n            // If not inside table:\n            if (state == $663deac50d96ff47$var$ParsingState.BeforeTable) {\n                beforeTable.push(line);\n                continue; // Skip the rest\n            } else if (state == $663deac50d96ff47$var$ParsingState.AfterTable) {\n                afterTable.push(line);\n                continue; // Skip the rest\n            }\n            // Parse row:\n            if (state == $663deac50d96ff47$var$ParsingState.Row) {\n                let tableRow = new $663deac50d96ff47$export$b05581f4e764e162();\n                parsedTable.addRow(-1, tableRow);\n                // Parse each character:\n                let cellContent = \"\";\n                let colIndex = 0;\n                let spaces = 0;\n                let leftHasSpaces = false;\n                let rightHasSpaces = false;\n                let foundCellContent = false;\n                let cellIsHeader = line.trim()[0] == \"^\";\n                let rowIsHeader = line.trim()[0] == \"^\";\n                for (let char of line.trim().substring(1, line.length)){\n                    if (char == \"|\" || char == \"^\") {\n                        let tableColumn = parsedTable.getColumn(colIndex);\n                        if (!tableColumn) tableColumn = parsedTable.addColumn();\n                        let cell = new $663deac50d96ff47$export$1e4baea7053fc0e3(parsedTable, tableRow, tableColumn);\n                        parsedTable.addCell(cell);\n                        if (foundCellContent && spaces >= 2) rightHasSpaces = true;\n                        cell.isHeader = cellIsHeader;\n                        if (leftHasSpaces && rightHasSpaces) {\n                            if (tableColumn.textAlign == $663deac50d96ff47$export$84b2d1b68830363f.default) tableColumn.textAlign = $663deac50d96ff47$export$84b2d1b68830363f.center;\n                            cell.textAlign = $663deac50d96ff47$export$84b2d1b68830363f.center;\n                        } else if (leftHasSpaces) {\n                            if (tableColumn.textAlign == $663deac50d96ff47$export$84b2d1b68830363f.default) tableColumn.textAlign = $663deac50d96ff47$export$84b2d1b68830363f.right;\n                            cell.textAlign = $663deac50d96ff47$export$84b2d1b68830363f.right;\n                        } else if (rightHasSpaces) {\n                            if (tableColumn.textAlign == $663deac50d96ff47$export$84b2d1b68830363f.default) tableColumn.textAlign = $663deac50d96ff47$export$84b2d1b68830363f.left;\n                            cell.textAlign = $663deac50d96ff47$export$84b2d1b68830363f.left;\n                        }\n                        if (cellContent.trim() == \":::\") cell.merged = $663deac50d96ff47$export$fcef1edb02975fb9.above;\n                        else if (cellContent === \"\") cell.merged = $663deac50d96ff47$export$fcef1edb02975fb9.left;\n                        else {\n                            cellContent = this.convertMarkup ? $663deac50d96ff47$var$dokuWikiToMarkdown(cellContent.trim()) : cellContent.trim();\n                            cell.setText(cellContent);\n                        }\n                        cellContent = \"\";\n                        colIndex++;\n                        if (char == \"|\") {\n                            cellIsHeader = false;\n                            rowIsHeader = false;\n                        } else if (char == \"^\") cellIsHeader = true;\n                        spaces = 0;\n                        leftHasSpaces = false;\n                        rightHasSpaces = false;\n                        foundCellContent = false;\n                    } else if (char == \" \") {\n                        spaces++;\n                        cellContent += char;\n                    } else {\n                        if (!foundCellContent && spaces >= 2) leftHasSpaces = true;\n                        cellContent += char;\n                        spaces = 0;\n                        foundCellContent = true;\n                    }\n                }\n                // Insert empty cells if missing:\n                for(; colIndex < parsedTable.columnCount(); colIndex++){\n                    let cell = new $663deac50d96ff47$export$1e4baea7053fc0e3(parsedTable, tableRow, parsedTable.getColumn(colIndex));\n                    parsedTable.addCell(cell);\n                }\n                tableRow.isHeader = rowIsHeader;\n            }\n        }\n        parsedTable.beforeTable = beforeTable.join(\"\\n\");\n        parsedTable.afterTable = afterTable.join(\"\\n\");\n        return parsedTable.update();\n    }\n}\nclass $663deac50d96ff47$export$df45379b9628d41c {\n    convertMarkup;\n    constructor(/** If true, converts Markdown syntax to DokuWiki syntax */ convertMarkup = true){\n        this.convertMarkup = convertMarkup;\n    }\n    render(table) {\n        const rows = table.getRows();\n        const columnWidths = this.determineColumnWidths(table);\n        let result = [];\n        if (table.beforeTable.trim() !== \"\") result.push(table.beforeTable);\n        // DokuWiki has no table caption -- insert \"caption\" (if position is top):\n        if (table.caption && table.caption.position == $663deac50d96ff47$export$ea0aeb8d0cfa7f2.top) result.push(this.renderCaption(table.caption));\n        // Rows:\n        for (const row of rows)result.push(this.renderRow(table, row, columnWidths));\n        // DokuWiki has no table caption -- insert \"caption\" (if position is bottom):\n        if (table.caption && table.caption.position == $663deac50d96ff47$export$ea0aeb8d0cfa7f2.bottom) result.push(this.renderCaption(table.caption));\n        if (table.afterTable.trim() !== \"\") result.push(table.afterTable);\n        return result.join(\"\\n\");\n    }\n    renderCaption(caption) {\n        let result = \"\";\n        if (caption.position == $663deac50d96ff47$export$ea0aeb8d0cfa7f2.bottom) result += \"\\n\";\n        result += \"> \" + caption.text;\n        if (caption.position == $663deac50d96ff47$export$ea0aeb8d0cfa7f2.top) result += \"\\n\";\n        return result;\n    }\n    renderRow(table, row, columnWidths) {\n        let result = [];\n        let lastCellIsHeader = false;\n        table.getCellsInRow(row).forEach((cell, i)=>{\n            let colspan = cell.getColspan();\n            let cellWidth = columnWidths[i];\n            if (colspan > 1) {\n                for(let col = i + 1; col < i + colspan; col++)cellWidth += columnWidths[col];\n                cellWidth += colspan * 2 - 2;\n            }\n            lastCellIsHeader = cell.isHeaderCell();\n            result.push(this.renderCell(cell, colspan, cellWidth));\n        });\n        if (lastCellIsHeader) return `${result.join(\"\")}^`;\n        else return `${result.join(\"\")}|`;\n    }\n    renderCell(cell, colspan = 1, cellWidth = -1) {\n        let isHeader = cell.isHeaderCell();\n        let separator = isHeader ? \"^\" : \"|\";\n        if (cell.merged == $663deac50d96ff47$export$fcef1edb02975fb9.left) return separator;\n        // `:::` => merge cell above\n        // `\\\\ ` => insert a newline\n        let text = cell.merged == $663deac50d96ff47$export$fcef1edb02975fb9.above ? \":::\" : this.renderText(cell.text);\n        const textLength = (0, $e7b00ddbb5cafea0$export$2e2bcd8739ae039)(text);\n        switch(cell.getTextAlignment()){\n            case $663deac50d96ff47$export$84b2d1b68830363f.center:\n                return `${separator}${\" \".repeat(Math.max(0, Math.floor((cellWidth - textLength + colspan - 1) / 2)))} ${text} ${\" \".repeat(Math.max(0, Math.ceil((cellWidth - textLength - colspan + 1) / 2)))}`;\n            case $663deac50d96ff47$export$84b2d1b68830363f.right:\n                return `${separator}${\" \".repeat(Math.max(0, cellWidth - textLength))} ${text} `;\n            case $663deac50d96ff47$export$84b2d1b68830363f.left:\n            case $663deac50d96ff47$export$84b2d1b68830363f.default:\n            default:\n                return `${separator} ${text} ${\" \".repeat(Math.max(0, cellWidth - textLength))}`;\n        }\n    }\n    renderText(text) {\n        return this.convertMarkup ? $663deac50d96ff47$var$markdownToDokuWiki(text) : text;\n    }\n    determineColumnWidths(table) {\n        let columnWidths = Array.from({\n            length: table.columnCount()\n        }, ()=>0);\n        for(let colIndex = table.columnCount() - 1; colIndex >= 0; colIndex--){\n            const column = table.getColumn(colIndex);\n            let colWidth = 0;\n            for (const cell of table.getCellsInColumn(column)){\n                let colspan = cell.getColspan();\n                let cellWidth = cell.merged == $663deac50d96ff47$export$fcef1edb02975fb9.above ? 3 : (0, $e7b00ddbb5cafea0$export$2e2bcd8739ae039)(this.renderText(cell.text));\n                // Is alignment spacing needed?\n                switch(cell.getTextAlignment()){\n                    case $663deac50d96ff47$export$84b2d1b68830363f.center:\n                        // \"Add two spaces at least at both ends for centered text\"\n                        cellWidth += 2;\n                        break;\n                    case $663deac50d96ff47$export$84b2d1b68830363f.right:\n                    case $663deac50d96ff47$export$84b2d1b68830363f.left:\n                        // \"Add two spaces on the left to align right, two spaces on the right to align left\"\n                        cellWidth += 1;\n                        break;\n                    case $663deac50d96ff47$export$84b2d1b68830363f.default:\n                }\n                if (colspan == 1) colWidth = Math.max(cellWidth, colWidth);\n                else {\n                    let leftoverWidth = columnWidths.slice(colIndex + 1, colIndex + colspan).reduce((pv, cv)=>pv + cv);\n                    colWidth = Math.max(cellWidth - leftoverWidth, colWidth);\n                }\n            }\n            columnWidths.splice(colIndex, 1, colWidth);\n        }\n        return columnWidths;\n    }\n}\n\n\nvar $2b6e161c9edcf319$require$HTMLTableRenderer = $663deac50d96ff47$export$1786c8c776e51fe7;\nvar $2b6e161c9edcf319$require$MultiMarkdownTableParser = $663deac50d96ff47$export$bf050a0bf8d85cbc;\nvar $2b6e161c9edcf319$require$GitHubFlavoredMarkdownTableParser = $663deac50d96ff47$export$b688a1ca98be0cc2;\nvar $2b6e161c9edcf319$require$HTMLTableParser = $663deac50d96ff47$export$64f347afd00f39e6;\nvar $2b6e161c9edcf319$require$CSVTableParser = $663deac50d96ff47$export$5f566d85f76e0514;\nvar $2b6e161c9edcf319$require$CSVTableRenderer = $663deac50d96ff47$export$e86a64deae89b2af;\nvar $2b6e161c9edcf319$require$PrettyMultiMarkdownTableRenderer = $663deac50d96ff47$export$1f9dc7d14750712e;\nvar $2b6e161c9edcf319$require$MinifiedMultiMarkdownTableRenderer = $663deac50d96ff47$export$72f222e251087828;\nvar $2b6e161c9edcf319$require$GitHubFlavoredMarkdownTableRenderer = $663deac50d96ff47$export$da5c6a65d7c20a2a;\nvar $2b6e161c9edcf319$require$DokuWikiTableParser = $663deac50d96ff47$export$a8a7e00e796682d9;\nvar $2b6e161c9edcf319$require$DokuWikiTableRenderer = $663deac50d96ff47$export$df45379b9628d41c;\n/*\n    Instantiate all parsers/renderers\n*/ const $2b6e161c9edcf319$var$mmdParser = new $2b6e161c9edcf319$require$MultiMarkdownTableParser();\nconst $2b6e161c9edcf319$var$gfmParser = new $2b6e161c9edcf319$require$GitHubFlavoredMarkdownTableParser();\nconst $2b6e161c9edcf319$var$htmlParser = new $2b6e161c9edcf319$require$HTMLTableParser();\nconst $2b6e161c9edcf319$var$dokuWikiParser = new $2b6e161c9edcf319$require$DokuWikiTableParser();\nconst $2b6e161c9edcf319$var$csvParser = new $2b6e161c9edcf319$require$CSVTableParser();\nconst $2b6e161c9edcf319$var$csvSemicolonParser = new $2b6e161c9edcf319$require$CSVTableParser(\";\");\nconst $2b6e161c9edcf319$var$mmdPrettyRenderer = new $2b6e161c9edcf319$require$PrettyMultiMarkdownTableRenderer();\nconst $2b6e161c9edcf319$var$mmdMinifiedRenderer = new $2b6e161c9edcf319$require$MinifiedMultiMarkdownTableRenderer();\nconst $2b6e161c9edcf319$var$gfmPrettyRenderer = new $2b6e161c9edcf319$require$GitHubFlavoredMarkdownTableRenderer(true);\nconst $2b6e161c9edcf319$var$gfmMinifiedRenderer = new $2b6e161c9edcf319$require$GitHubFlavoredMarkdownTableRenderer(false);\nconst $2b6e161c9edcf319$var$htmlPrettyRenderer = new $2b6e161c9edcf319$require$HTMLTableRenderer(true);\nconst $2b6e161c9edcf319$var$htmlMinifiedRenderer = new $2b6e161c9edcf319$require$HTMLTableRenderer(false);\nconst $2b6e161c9edcf319$var$dokuWikiRenderer = new $2b6e161c9edcf319$require$DokuWikiTableRenderer();\nconst $2b6e161c9edcf319$var$csvRenderer = new $2b6e161c9edcf319$require$CSVTableRenderer();\nconst $2b6e161c9edcf319$var$csvSemicolonRenderer = new $2b6e161c9edcf319$require$CSVTableRenderer(\";\");\n/*\n    Helpers\n*/ function $2b6e161c9edcf319$var$escapeHTML(value) {\n    return value.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\"); // &#039;\n}\nfunction $2b6e161c9edcf319$var$detectFormat(input) {\n    // <table></table> tags found?\n    if (input.match(/<\\s*[tT][aA][bB][lL][eE].*\\s*>/) && input.match(/<\\/\\s*[tT][aA][bB][lL][eE]\\s*>/)) return \"html\";\n    else if (input.match(/^\\|?([\\s\\.]*:?[\\-=\\.]+[:\\+]?[\\s\\.]*\\|?)+\\|?$/m)) return \"mmd\";\n    else if (!input.split(\"\\n\").find((line)=>line.trim() != \"\" && !line.trim().startsWith(\"^\") && !line.trim().startsWith(\"|\"))) return \"dokuwiki\";\n    else if (input.match(/(.*,)+.*/)) return \"csv\";\n    else if (input.match(/(.*;)+.*/)) return \"csv-semi\";\n    else throw new Error(\"Couldn't guess input format.\");\n}\n/**\n * Determine the cursor position inside of a text.\n * @param {number} index Cursor position as index\n * @param {string} str Text\n * @returns {{line: number, ch: number}} Line number and character/column\n */ function $2b6e161c9edcf319$var$determineCursorPosition(index, str) {\n    const substr = str.substring(0, index); // Get a substring from the start of the text to the current cursor position.\n    const line = (substr.match(/\\n/g) || []).length + 1; // Count the number of newlines and add 1 as we start from line 1.\n    const ch = substr.length - substr.lastIndexOf(\"\\n\") - 1; // Determine the number of characters from the start of the line.\n    return {\n        line: line,\n        ch: ch\n    };\n}\n/**\n * The opposite of determineCursorPosition. Determine the cursor index inside of a text.\n * @param {number} line Line number\n * @param {number} ch Character/column\n * @param {string} str Text\n * @returns {number} index\n */ function $2b6e161c9edcf319$var$determineCursorIndex(line, ch, str) {\n    // Very primitive way of determining it... just iterating over the string and counting.\n    let currentLine = 1;\n    let currentCh = 0;\n    let currentIndex = 0;\n    for (const c of str){\n        if (currentLine == line && currentCh == ch) return currentIndex;\n        if (c == \"\\n\") {\n            currentLine++;\n            currentCh = 0;\n        } else currentCh++;\n        currentIndex++;\n    }\n    return -1;\n}\n/*\n    Table parsing (determine row index, column index, and text range)\n*/ const $2b6e161c9edcf319$var$separatorRegex = /^\\|?([\\s\\.]*:?[\\-=\\.]+[:\\+]?[\\s\\.]*\\|?)+\\|?$/;\nconst $2b6e161c9edcf319$var$captionRegex = /^(\\[.+\\]){1,2}$/;\n/**\n * Determine the column index inside of a table.\n * @param {string} lineStr Line/row\n * @param {number} ch Cursor position from the start of the line\n * @returns {number} Column index\n */ function $2b6e161c9edcf319$var$determineColumnIndex(lineStr, ch) {\n    let row = lineStr.substring(0, ch).trim();\n    if (row.startsWith(\"|\")) row = row.substring(1);\n    let colIndex = 0;\n    let escape = false;\n    for (const ch of row){\n        if (ch == \"|\" && !escape) colIndex++;\n        else if (ch == \"\\\\\") escape = !escape;\n    }\n    return colIndex;\n}\n/**\n * Returns the range (line numbers and character numbers) of the table and the selected row/column at the cursor. If there is no table at the cursor, it returns null.\n * @returns {{ start: { line: number, ch: number }, end: { line: number, ch: number }, row: number, column: number, line: number, ch: number } | null}\n */ function $2b6e161c9edcf319$var$getTableCursor() {\n    const cursor = $2b6e161c9edcf319$var$getCursor();\n    let hasSeparator = false;\n    // Determine startLine:\n    let rowIndex = 0;\n    let startLine = cursor.line;\n    let rememberEmptyLine = false;\n    while(startLine > 0){\n        let line = $2b6e161c9edcf319$var$getLine(startLine).trim();\n        // Does line match criteria?\n        if (line.includes(\"|\") || line.match($2b6e161c9edcf319$var$captionRegex)) {\n            if (line.match($2b6e161c9edcf319$var$separatorRegex)) hasSeparator = true;\n            if (!line.match($2b6e161c9edcf319$var$captionRegex)) rowIndex++;\n            startLine--; // Move up.\n            rememberEmptyLine = false;\n        // Ignore a single empty line:\n        } else if (line.trim() === \"\" && !rememberEmptyLine) {\n            startLine--; // Move up.\n            rememberEmptyLine = true;\n        // Break once a line doesn't match criteria:\n        } else {\n            if (rememberEmptyLine) startLine++; // Move back...\n            break;\n        }\n    }\n    startLine++; // Move back...\n    rowIndex--;\n    if (hasSeparator) rowIndex--;\n    // Determine endLine:\n    let endLine = cursor.line;\n    while(endLine <= $2b6e161c9edcf319$var$lineCount()){\n        let line = $2b6e161c9edcf319$var$getLine(endLine).trim();\n        // Does line match criteria?\n        if (line.includes(\"|\") || line.match($2b6e161c9edcf319$var$captionRegex)) {\n            if (line.match($2b6e161c9edcf319$var$separatorRegex)) hasSeparator = true;\n            endLine++; // Move down.\n            rememberEmptyLine = false;\n        // Ignore a single empty line:\n        } else if (line.trim() === \"\" && !rememberEmptyLine) {\n            endLine++; // Move down.\n            rememberEmptyLine = true;\n        // Break once a line doesn't match criteria:\n        } else {\n            if (rememberEmptyLine) endLine--; // Move back...\n            break;\n        }\n    }\n    endLine--; // Move back...\n    if (hasSeparator && endLine != startLine) return {\n        \"start\": {\n            \"line\": startLine,\n            \"ch\": 0\n        },\n        \"end\": {\n            \"line\": endLine,\n            \"ch\": $2b6e161c9edcf319$var$getLine(endLine).length\n        },\n        \"row\": rowIndex,\n        \"column\": $2b6e161c9edcf319$var$determineColumnIndex($2b6e161c9edcf319$var$getLine(cursor.line), cursor.ch),\n        \"line\": cursor.line,\n        \"ch\": cursor.ch\n    };\n    else return null;\n}\n/*\n    UI Getter and Setter\n*/ /**\n * @returns {\"mmd\"|\"gfm\"|\"html\"|\"dokuwiki\"|\"csv\"|\"csv-semi\"}\n */ function $2b6e161c9edcf319$var$getInputFormat() {\n    const format = document.getElementById(\"input-format\").value;\n    if (format == \"auto\") return $2b6e161c9edcf319$var$detectFormat($2b6e161c9edcf319$var$getInput());\n    return format;\n}\nfunction $2b6e161c9edcf319$var$getInput() {\n    return document.getElementById(\"input\").value;\n}\nfunction $2b6e161c9edcf319$var$setInput(value) {\n    document.getElementById(\"input\").value = value;\n}\n/**\n * Get the line inside of textarea.\n * @param {number} line \n * @returns {string}\n */ function $2b6e161c9edcf319$var$getLine(line) {\n    return document.getElementById(\"input\").value.split(\"\\n\")[line - 1];\n}\nfunction $2b6e161c9edcf319$var$lineCount() {\n    return (document.getElementById(\"input\").value.match(/\\n/g) || []).length + 1;\n}\n/**\n * Get the cursor position inside of textarea.\n * @param {number} line\n */ function $2b6e161c9edcf319$var$getCursor() {\n    const textarea = document.getElementById(\"input\");\n    return $2b6e161c9edcf319$var$determineCursorPosition(textarea.selectionEnd, textarea.value);\n}\n/**\n * Get the selection inside of textarea.\n * @param {number} line\n */ function $2b6e161c9edcf319$var$getSelection() {\n    const textarea = document.getElementById(\"input\");\n    return {\n        start: $2b6e161c9edcf319$var$determineCursorPosition(textarea.selectionStart, textarea.value),\n        end: $2b6e161c9edcf319$var$determineCursorPosition(textarea.selectionEnd, textarea.value)\n    };\n}\n/**\n * @returns {\"preview\"|\"mmd-pretty\"|\"mmd-mini\"|\"gfm-pretty\"|\"gfm-mini\"|\"html-pretty\"|\"html-mini\"|\"dokuwiki\"|\"csv\"|\"csv-semi\"}\n */ function $2b6e161c9edcf319$var$getOutputFormat() {\n    return document.getElementById(\"output-format\").value;\n}\nfunction $2b6e161c9edcf319$var$setOutputRaw(value) {\n    document.getElementById(\"output\").innerHTML = value;\n}\nfunction $2b6e161c9edcf319$var$setOutputPre(value) {\n    document.getElementById(\"output\").innerHTML = `<pre style=\"text-align: left;\">${$2b6e161c9edcf319$var$escapeHTML(value)}</pre>`;\n}\nfunction $2b6e161c9edcf319$var$setErrorOutput(value) {\n    const error = document.getElementById(\"error\");\n    error.innerHTML = $2b6e161c9edcf319$var$escapeHTML(value);\n    error.style.visibility = \"visible\";\n    document.getElementById(\"output\").innerHTML = \"\";\n}\nfunction $2b6e161c9edcf319$var$hideError() {\n    document.getElementById(\"error\").style.visibility = \"hidden\";\n}\n/*\n    Use md-table-tools lib\n*/ function $2b6e161c9edcf319$var$formatInput(input, format) {\n    switch(format){\n        case \"mmd\":\n            return $2b6e161c9edcf319$var$mmdPrettyRenderer.render($2b6e161c9edcf319$var$mmdParser.parse(input));\n        case \"gfm\":\n            return $2b6e161c9edcf319$var$gfmPrettyRenderer.render($2b6e161c9edcf319$var$gfmParser.parse(input));\n        case \"html\":\n            return $2b6e161c9edcf319$var$htmlPrettyRenderer.render($2b6e161c9edcf319$var$htmlParser.parse(input));\n        case \"dokuwiki\":\n            return $2b6e161c9edcf319$var$dokuWikiRenderer.render($2b6e161c9edcf319$var$dokuWikiParser.parse(input));\n        default:\n            throw new Error(`Cannot format input of type \"${format}\"`);\n    }\n}\nfunction $2b6e161c9edcf319$var$parseInput(input, format) {\n    switch(format){\n        case \"mmd\":\n            return $2b6e161c9edcf319$var$mmdParser.parse(input);\n        case \"gfm\":\n            return $2b6e161c9edcf319$var$gfmParser.parse(input);\n        case \"html\":\n            return $2b6e161c9edcf319$var$htmlParser.parse(input);\n        case \"dokuwiki\":\n            return $2b6e161c9edcf319$var$dokuWikiParser.parse(input);\n        case \"csv\":\n            return $2b6e161c9edcf319$var$csvParser.parse(input);\n        case \"csv-semi\":\n            return $2b6e161c9edcf319$var$csvSemicolonParser.parse(input);\n        default:\n            throw new Error(`Unknown input format: ${format}`);\n    }\n}\nfunction $2b6e161c9edcf319$var$renderOutput(table, format) {\n    switch(format){\n        case \"preview\":\n        case \"html-pretty\":\n            table.mergeMultilineRows();\n            return $2b6e161c9edcf319$var$htmlPrettyRenderer.render(table);\n        case \"html-mini\":\n            table.mergeMultilineRows();\n            return $2b6e161c9edcf319$var$htmlMinifiedRenderer.render(table);\n        case \"mmd-pretty\":\n            return $2b6e161c9edcf319$var$mmdPrettyRenderer.render(table);\n        case \"mmd-mini\":\n            return $2b6e161c9edcf319$var$mmdMinifiedRenderer.render(table);\n        case \"gfm-pretty\":\n            return $2b6e161c9edcf319$var$gfmPrettyRenderer.render(table);\n        case \"gfm-mini\":\n            return $2b6e161c9edcf319$var$gfmMinifiedRenderer.render(table);\n        case \"dokuwiki\":\n            table.mergeMultilineRows();\n            return $2b6e161c9edcf319$var$dokuWikiRenderer.render(table);\n        case \"csv\":\n            return $2b6e161c9edcf319$var$csvRenderer.render(table);\n        case \"csv-semi\":\n            return $2b6e161c9edcf319$var$csvSemicolonRenderer.render(table);\n        default:\n            throw new Error(`Unknown output format: ${format}`);\n    }\n}\n/*\n    UI Event Handler\n*/ function $2b6e161c9edcf319$var$onChange() {\n    try {\n        const inputFormat = $2b6e161c9edcf319$var$getInputFormat();\n        // Hide table tools depending on input format...\n        if (inputFormat == \"mmd\") document.getElementById(\"tools\").classList.remove(\"hide\");\n        else document.getElementById(\"tools\").classList.add(\"hide\");\n        const outputFormat = $2b6e161c9edcf319$var$getOutputFormat();\n        const input = $2b6e161c9edcf319$var$getInput();\n        const table = $2b6e161c9edcf319$var$parseInput(input, inputFormat);\n        const output = $2b6e161c9edcf319$var$renderOutput(table, outputFormat);\n        if (outputFormat == \"preview\") $2b6e161c9edcf319$var$setOutputRaw(output);\n        else $2b6e161c9edcf319$var$setOutputPre(output);\n        $2b6e161c9edcf319$var$hideError();\n    } catch (e) {\n        $2b6e161c9edcf319$var$setErrorOutput(e.toString());\n        document.getElementById(\"tools\").classList.add(\"hide\");\n        throw e;\n    }\n}\nfunction $2b6e161c9edcf319$var$onBtnFormat() {\n    try {\n        $2b6e161c9edcf319$var$setInput($2b6e161c9edcf319$var$formatInput($2b6e161c9edcf319$var$getInput(), $2b6e161c9edcf319$var$getInputFormat()));\n        $2b6e161c9edcf319$var$onChange();\n    } catch (e) {\n        $2b6e161c9edcf319$var$setErrorOutput(e.toString());\n        throw e;\n    }\n}\nfunction $2b6e161c9edcf319$var$actionWrapper(callback) {\n    try {\n        // Get stuff:\n        const input = $2b6e161c9edcf319$var$getInput();\n        const outputFormat = $2b6e161c9edcf319$var$getOutputFormat();\n        const cursor = $2b6e161c9edcf319$var$getTableCursor();\n        if (cursor == null) {\n            $2b6e161c9edcf319$var$setErrorOutput(\"Couldn't determine cursor position in table.\");\n            return;\n        }\n        // Parse table:\n        const table = $2b6e161c9edcf319$var$parseInput(input, \"mmd\");\n        // Manipulate table:\n        callback(table, cursor);\n        // Write rendered result back into input textarea:\n        $2b6e161c9edcf319$var$setInput($2b6e161c9edcf319$var$mmdPrettyRenderer.render(table));\n        // Render output:\n        const output = $2b6e161c9edcf319$var$renderOutput(table, outputFormat);\n        if (outputFormat == \"preview\") $2b6e161c9edcf319$var$setOutputRaw(output);\n        else $2b6e161c9edcf319$var$setOutputPre(output);\n        // Restore textarea focus and cursor position:\n        const textarea = document.getElementById(\"input\");\n        const newCursorIndex = $2b6e161c9edcf319$var$determineCursorIndex(cursor.line, cursor.ch, textarea.value);\n        textarea.focus();\n        textarea.selectionEnd = newCursorIndex;\n    } catch (e) {\n        $2b6e161c9edcf319$var$setErrorOutput(e.toString());\n        throw e;\n    }\n}\nfunction $2b6e161c9edcf319$var$onBtnRowAddAbove() {\n    $2b6e161c9edcf319$var$actionWrapper((table, cursor)=>{\n        table.addRow(cursor.row);\n        table.update();\n    });\n}\nfunction $2b6e161c9edcf319$var$onBtnRowAddBelow() {\n    $2b6e161c9edcf319$var$actionWrapper((table, cursor)=>{\n        table.addRow(cursor.row + 1);\n        table.update();\n    });\n}\nfunction $2b6e161c9edcf319$var$onBtnRowDelete() {\n    $2b6e161c9edcf319$var$actionWrapper((table, cursor)=>{\n        table.removeRow(cursor.row);\n        table.update();\n    });\n}\nfunction $2b6e161c9edcf319$var$onBtnColAddLeft() {\n    $2b6e161c9edcf319$var$actionWrapper((table, cursor)=>{\n        table.addColumn(cursor.column);\n        table.update();\n    });\n}\nfunction $2b6e161c9edcf319$var$onBtnColAddRight() {\n    $2b6e161c9edcf319$var$actionWrapper((table, cursor)=>{\n        table.addColumn(cursor.column + 1);\n        table.update();\n    });\n}\nfunction $2b6e161c9edcf319$var$onBtnColDelete() {\n    $2b6e161c9edcf319$var$actionWrapper((table, cursor)=>{\n        table.removeColumn(cursor.column);\n        table.update();\n    });\n}\nfunction $2b6e161c9edcf319$var$onBtnAlignLeft() {\n    $2b6e161c9edcf319$var$actionWrapper((table, cursor)=>{\n        const column = table.getColumn(cursor.column);\n        column.textAlign = column.textAlign == \"left\" ? \"default\" : \"left\";\n    });\n}\nfunction $2b6e161c9edcf319$var$onBtnAlignCenter() {\n    $2b6e161c9edcf319$var$actionWrapper((table, cursor)=>{\n        const column = table.getColumn(cursor.column);\n        column.textAlign = column.textAlign == \"center\" ? \"default\" : \"center\";\n    });\n}\nfunction $2b6e161c9edcf319$var$onBtnAlignRight() {\n    $2b6e161c9edcf319$var$actionWrapper((table, cursor)=>{\n        const column = table.getColumn(cursor.column);\n        column.textAlign = column.textAlign == \"right\" ? \"default\" : \"right\";\n    });\n}\n/*\n    Initialize web page\n*/ // Register event handler\ndocument.getElementById(\"input\").addEventListener(\"input\", $2b6e161c9edcf319$var$onChange);\ndocument.getElementById(\"input-format\").addEventListener(\"change\", $2b6e161c9edcf319$var$onChange);\ndocument.getElementById(\"output-format\").addEventListener(\"change\", $2b6e161c9edcf319$var$onChange);\n// Register event handler for table tool buttons\ndocument.getElementById(\"btn-row-add-above\").addEventListener(\"click\", $2b6e161c9edcf319$var$onBtnRowAddAbove);\ndocument.getElementById(\"btn-row-add-below\").addEventListener(\"click\", $2b6e161c9edcf319$var$onBtnRowAddBelow);\ndocument.getElementById(\"btn-row-delete\").addEventListener(\"click\", $2b6e161c9edcf319$var$onBtnRowDelete);\ndocument.getElementById(\"btn-col-add-left\").addEventListener(\"click\", $2b6e161c9edcf319$var$onBtnColAddLeft);\ndocument.getElementById(\"btn-col-add-right\").addEventListener(\"click\", $2b6e161c9edcf319$var$onBtnColAddRight);\ndocument.getElementById(\"btn-col-delete\").addEventListener(\"click\", $2b6e161c9edcf319$var$onBtnColDelete);\ndocument.getElementById(\"btn-align-left\").addEventListener(\"click\", $2b6e161c9edcf319$var$onBtnAlignLeft);\ndocument.getElementById(\"btn-align-center\").addEventListener(\"click\", $2b6e161c9edcf319$var$onBtnAlignCenter);\ndocument.getElementById(\"btn-align-right\").addEventListener(\"click\", $2b6e161c9edcf319$var$onBtnAlignRight);\ndocument.getElementById(\"btn-format\").addEventListener(\"click\", $2b6e161c9edcf319$var$onBtnFormat);\n// Init UI\n$2b6e161c9edcf319$var$onChange();\n$2b6e161c9edcf319$var$hideError();\n// Enable bootstrap tooltips\nconst $2b6e161c9edcf319$var$tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\nconst $2b6e161c9edcf319$var$tooltipList = [\n    ...$2b6e161c9edcf319$var$tooltipTriggerList\n].map((tooltipTriggerEl)=>new bootstrap.Tooltip(tooltipTriggerEl));\n\n\n//# sourceMappingURL=index.aeae72dc.js.map\n","\"use strict\";\n// Generated using scripts/write-decode-map.ts\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map(function (c) { return c.charCodeAt(0); }));\n//# sourceMappingURL=decode-data-html.js.map",null,"\"use strict\";\n// Generated using scripts/write-decode-map.ts\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map(function (c) { return c.charCodeAt(0); }));\n//# sourceMappingURL=decode-data-xml.js.map",null,"\"use strict\";\n// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceCodePoint = exports.fromCodePoint = void 0;\nvar decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexports.fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    var output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nfunction replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\nexports.replaceCodePoint = replaceCodePoint;\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nfunction decodeCodePoint(codePoint) {\n    return (0, exports.fromCodePoint)(replaceCodePoint(codePoint));\n}\nexports.default = decodeCodePoint;\n//# sourceMappingURL=decode_codepoint.js.map",null,"/*\n    Import all parsers/renderers from md-table-tools\n*/\n\nconst {\n    HTMLTableRenderer,\n    MultiMarkdownTableParser,\n    GitHubFlavoredMarkdownTableParser,\n    HTMLTableParser,\n    CSVTableParser,\n    CSVTableRenderer,\n    PrettyMultiMarkdownTableRenderer,\n    MinifiedMultiMarkdownTableRenderer,\n    GitHubFlavoredMarkdownTableRenderer,\n    DokuWikiTableParser,\n    DokuWikiTableRenderer,\n} = require(\"@felisdiligens/md-table-tools\");\n\n\n/*\n    Instantiate all parsers/renderers\n*/\n\nconst mmdParser = new MultiMarkdownTableParser();\nconst gfmParser = new GitHubFlavoredMarkdownTableParser();\nconst htmlParser = new HTMLTableParser();\nconst dokuWikiParser = new DokuWikiTableParser();\nconst csvParser = new CSVTableParser();\nconst csvSemicolonParser = new CSVTableParser(\";\");\n\nconst mmdPrettyRenderer = new PrettyMultiMarkdownTableRenderer();\nconst mmdMinifiedRenderer = new MinifiedMultiMarkdownTableRenderer();\nconst gfmPrettyRenderer = new GitHubFlavoredMarkdownTableRenderer(true);\nconst gfmMinifiedRenderer = new GitHubFlavoredMarkdownTableRenderer(false);\nconst htmlPrettyRenderer = new HTMLTableRenderer(true);\nconst htmlMinifiedRenderer = new HTMLTableRenderer(false);\nconst dokuWikiRenderer = new DokuWikiTableRenderer();\nconst csvRenderer = new CSVTableRenderer();\nconst csvSemicolonRenderer = new CSVTableRenderer(\";\");\n\n\n/*\n    Helpers\n*/\n\nfunction escapeHTML(value) {\n    return value\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&apos;\"); // &#039;\n}\n\nfunction detectFormat(input) {\n    // <table></table> tags found?\n    if (input.match(/<\\s*[tT][aA][bB][lL][eE].*\\s*>/) && input.match(/<\\/\\s*[tT][aA][bB][lL][eE]\\s*>/))\n        return \"html\";\n    // Markdown separator row found?\n    else if (input.match(/^\\|?([\\s\\.]*:?[\\-=\\.]+[:\\+]?[\\s\\.]*\\|?)+\\|?$/m))\n        return \"mmd\";\n    // All rows start with `^` or `|`?\n    else if (!input.split(\"\\n\").find((line) => line.trim() != \"\" && !line.trim().startsWith(\"^\") && !line.trim().startsWith(\"|\")))\n        return \"dokuwiki\"\n    // At least one comma found?\n    else if (input.match(/(.*,)+.*/))\n        return \"csv\";\n    // At least one semicolon found?\n    else if (input.match(/(.*;)+.*/))\n        return \"csv-semi\";\n    else\n        throw new Error(\"Couldn't guess input format.\");\n}\n\n/**\n * Determine the cursor position inside of a text.\n * @param {number} index Cursor position as index\n * @param {string} str Text\n * @returns {{line: number, ch: number}} Line number and character/column\n */\nfunction determineCursorPosition(index, str) {\n    const substr = str.substring(0, index); // Get a substring from the start of the text to the current cursor position.\n    const line = (substr.match(/\\n/g)||[]).length + 1; // Count the number of newlines and add 1 as we start from line 1.\n    const ch = substr.length - substr.lastIndexOf(\"\\n\") - 1; // Determine the number of characters from the start of the line.\n    return {\n        line,\n        ch\n    }\n}\n\n/**\n * The opposite of determineCursorPosition. Determine the cursor index inside of a text.\n * @param {number} line Line number\n * @param {number} ch Character/column\n * @param {string} str Text\n * @returns {number} index\n */\nfunction determineCursorIndex(line, ch, str) {\n    // Very primitive way of determining it... just iterating over the string and counting.\n    let currentLine = 1;\n    let currentCh = 0;\n    let currentIndex = 0;\n    for (const c of str) {\n        if (currentLine == line && currentCh == ch) {\n            return currentIndex;\n        }\n        if (c == \"\\n\") {\n            currentLine++;\n            currentCh = 0;\n        } else {\n            currentCh++;\n        }\n        currentIndex++;\n    }\n    return -1;\n}\n\n\n/*\n    Table parsing (determine row index, column index, and text range)\n*/\n\nconst separatorRegex = /^\\|?([\\s\\.]*:?[\\-=\\.]+[:\\+]?[\\s\\.]*\\|?)+\\|?$/;\nconst captionRegex = /^(\\[.+\\]){1,2}$/;\n\n/**\n * Determine the column index inside of a table.\n * @param {string} lineStr Line/row\n * @param {number} ch Cursor position from the start of the line\n * @returns {number} Column index\n */\nfunction determineColumnIndex(lineStr, ch) {\n    let row = lineStr.substring(0, ch).trim();\n    if (row.startsWith(\"|\"))\n        row = row.substring(1);\n    let colIndex = 0;\n    let escape = false;\n    for (const ch of row) {\n        if (ch == \"|\" && !escape) {\n            colIndex++;\n        } else if (ch == \"\\\\\") {\n            escape = !escape;\n        }\n    }\n    return colIndex;\n}\n\n/**\n * Returns the range (line numbers and character numbers) of the table and the selected row/column at the cursor. If there is no table at the cursor, it returns null.\n * @returns {{ start: { line: number, ch: number }, end: { line: number, ch: number }, row: number, column: number, line: number, ch: number } | null}\n */\nfunction getTableCursor() {\n    const cursor = getCursor();\n    let hasSeparator = false;\n\n    // Determine startLine:\n    let rowIndex = 0;\n    let startLine = cursor.line;\n    let rememberEmptyLine = false;\n    while (startLine > 0) {\n        let line = getLine(startLine).trim();\n\n        // Does line match criteria?\n        if (line.includes(\"|\") || line.match(captionRegex)) {\n            if (line.match(separatorRegex))\n                hasSeparator = true;\n\n            if (!line.match(captionRegex))\n                rowIndex++;\n\n            startLine--; // Move up.\n            rememberEmptyLine = false;\n        // Ignore a single empty line:\n        } else if (line.trim() === \"\" && !rememberEmptyLine) {\n            startLine--; // Move up.\n            rememberEmptyLine = true;\n        // Break once a line doesn't match criteria:\n        } else {\n            if (rememberEmptyLine)\n                startLine++; // Move back...\n            break;\n        }\n    }\n    startLine++; // Move back...\n    rowIndex--;\n\n    if (hasSeparator)\n        rowIndex--;\n\n    // Determine endLine:\n    let endLine = cursor.line;\n    while (endLine <= lineCount()) {\n        let line = getLine(endLine).trim();\n\n        // Does line match criteria?\n        if (line.includes(\"|\") || line.match(captionRegex)) {\n            if (line.match(separatorRegex))\n                hasSeparator = true;\n\n            endLine++; // Move down.\n            rememberEmptyLine = false;\n        // Ignore a single empty line:\n        } else if (line.trim() === \"\" && !rememberEmptyLine) {\n            endLine++; // Move down.\n            rememberEmptyLine = true;\n        // Break once a line doesn't match criteria:\n        } else {\n            if (rememberEmptyLine)\n                endLine--; // Move back...\n            break;\n        }\n    }\n    endLine--; // Move back...\n\n    if (hasSeparator && (endLine != startLine))\n        return {\n            \"start\": {\n                \"line\": startLine,\n                \"ch\": 0\n            },\n            \"end\": {\n                \"line\": endLine,\n                \"ch\": getLine(endLine).length\n            },\n            \"row\": rowIndex,\n            \"column\": determineColumnIndex(getLine(cursor.line), cursor.ch),\n            \"line\": cursor.line,\n            \"ch\": cursor.ch\n        };\n    else\n        return null;\n}\n\n\n/*\n    UI Getter and Setter\n*/\n\n/**\n * @returns {\"mmd\"|\"gfm\"|\"html\"|\"dokuwiki\"|\"csv\"|\"csv-semi\"}\n */\nfunction getInputFormat() {\n    const format = document.getElementById(\"input-format\").value;\n    if (format == \"auto\")\n        return detectFormat(getInput());\n    return format;\n}\n\nfunction getInput() {\n    return document.getElementById(\"input\").value;\n}\n\nfunction setInput(value) {\n    document.getElementById(\"input\").value = value;\n}\n\n/**\n * Get the line inside of textarea.\n * @param {number} line \n * @returns {string}\n */\nfunction getLine(line) {\n    return document.getElementById(\"input\").value.split('\\n')[line - 1];\n}\n\nfunction lineCount() {\n    return (document.getElementById(\"input\").value.match(/\\n/g)||[]).length + 1;\n}\n\n/**\n * Get the cursor position inside of textarea.\n * @param {number} line\n */\nfunction getCursor() {\n    const textarea = document.getElementById(\"input\");\n    return determineCursorPosition(textarea.selectionEnd, textarea.value);\n}\n\n/**\n * Get the selection inside of textarea.\n * @param {number} line\n */\nfunction getSelection() {\n    const textarea = document.getElementById(\"input\");\n    return {\n        start: determineCursorPosition(textarea.selectionStart, textarea.value),\n        end: determineCursorPosition(textarea.selectionEnd, textarea.value)\n    }\n}\n\n/**\n * @returns {\"preview\"|\"mmd-pretty\"|\"mmd-mini\"|\"gfm-pretty\"|\"gfm-mini\"|\"html-pretty\"|\"html-mini\"|\"dokuwiki\"|\"csv\"|\"csv-semi\"}\n */\nfunction getOutputFormat() {\n    return document.getElementById(\"output-format\").value;\n}\n\nfunction setOutputRaw(value) {\n    document.getElementById(\"output\").innerHTML = value;\n}\n\nfunction setOutputPre(value) {\n    document.getElementById(\"output\").innerHTML = `<pre style=\"text-align: left;\">${escapeHTML(value)}</pre>`;\n}\n\nfunction setErrorOutput(value) {\n    const error = document.getElementById(\"error\");\n    error.innerHTML = escapeHTML(value);\n    error.style.visibility = \"visible\";\n    document.getElementById(\"output\").innerHTML = \"\";\n}\n\nfunction hideError() {\n    document.getElementById(\"error\").style.visibility = \"hidden\";\n}\n\n\n/*\n    Use md-table-tools lib\n*/\n\nfunction formatInput(input, format) {\n    switch (format) {\n        case \"mmd\":\n            return mmdPrettyRenderer.render(mmdParser.parse(input));\n        case \"gfm\":\n            return gfmPrettyRenderer.render(gfmParser.parse(input));\n        case \"html\":\n            return htmlPrettyRenderer.render(htmlParser.parse(input));\n        case \"dokuwiki\":\n            return dokuWikiRenderer.render(dokuWikiParser.parse(input));\n        default:\n            throw new Error(`Cannot format input of type \"${format}\"`);\n    }\n}\n\nfunction parseInput(input, format) {\n    switch (format) {\n        case \"mmd\":\n            return mmdParser.parse(input);\n        case \"gfm\":\n            return gfmParser.parse(input);\n        case \"html\":\n            return htmlParser.parse(input);\n        case \"dokuwiki\":\n            return dokuWikiParser.parse(input);\n        case \"csv\":\n            return csvParser.parse(input);\n        case \"csv-semi\":\n            return csvSemicolonParser.parse(input);\n        default:\n            throw new Error(`Unknown input format: ${format}`);\n    }\n}\n\nfunction renderOutput(table, format) {\n    switch (format) {\n        case \"preview\":\n        case \"html-pretty\":\n            table.mergeMultilineRows();\n            return htmlPrettyRenderer.render(table);\n        case \"html-mini\":\n            table.mergeMultilineRows();\n            return htmlMinifiedRenderer.render(table);\n        case \"mmd-pretty\":\n            return mmdPrettyRenderer.render(table);\n        case \"mmd-mini\":\n            return mmdMinifiedRenderer.render(table);\n        case \"gfm-pretty\":\n            return gfmPrettyRenderer.render(table);\n        case \"gfm-mini\":\n            return gfmMinifiedRenderer.render(table);\n        case \"dokuwiki\":\n            table.mergeMultilineRows();\n            return dokuWikiRenderer.render(table);\n        case \"csv\":\n            return csvRenderer.render(table);\n        case \"csv-semi\":\n            return csvSemicolonRenderer.render(table);\n        default:\n            throw new Error(`Unknown output format: ${format}`);\n    }\n}\n\n\n/*\n    UI Event Handler\n*/\n\nfunction onChange() {\n    try {\n        const inputFormat = getInputFormat();\n\n        // Hide table tools depending on input format...\n        if (inputFormat == \"mmd\")\n            document.getElementById(\"tools\").classList.remove(\"hide\");\n        else\n            document.getElementById(\"tools\").classList.add(\"hide\");\n\n        const outputFormat = getOutputFormat();\n        const input = getInput();\n        const table = parseInput(input, inputFormat);\n        const output = renderOutput(table, outputFormat);\n        if (outputFormat == \"preview\")\n            setOutputRaw(output);\n        else\n            setOutputPre(output);\n        hideError();\n    } catch (e) {\n        setErrorOutput(e.toString());\n        document.getElementById(\"tools\").classList.add(\"hide\");\n        throw e;\n    }\n}\n\nfunction onBtnFormat() {\n    try {\n        setInput(formatInput(getInput(), getInputFormat()));\n        onChange();\n    } catch (e) {\n        setErrorOutput(e.toString());\n        throw e;\n    }\n}\n\nfunction actionWrapper(callback) {\n    try {\n        // Get stuff:\n        const input = getInput();\n        const outputFormat = getOutputFormat();\n        const cursor = getTableCursor();\n        if (cursor == null) {\n            setErrorOutput(\"Couldn't determine cursor position in table.\");\n            return;\n        }\n\n        // Parse table:\n        const table = parseInput(input, \"mmd\");\n\n        // Manipulate table:\n        callback(table, cursor);\n\n        // Write rendered result back into input textarea:\n        setInput(mmdPrettyRenderer.render(table));\n\n        // Render output:\n        const output = renderOutput(table, outputFormat);\n        if (outputFormat == \"preview\")\n            setOutputRaw(output);\n        else\n            setOutputPre(output);\n\n        // Restore textarea focus and cursor position:\n        const textarea = document.getElementById(\"input\");\n        const newCursorIndex = determineCursorIndex(cursor.line, cursor.ch, textarea.value);\n        textarea.focus();\n        textarea.selectionEnd = newCursorIndex;\n    } catch (e) {\n        setErrorOutput(e.toString());\n        throw e;\n    }\n}\n\nfunction onBtnRowAddAbove() {\n    actionWrapper((table, cursor) => {\n        table.addRow(cursor.row);\n        table.update();\n    });\n}\n\nfunction onBtnRowAddBelow() {\n    actionWrapper((table, cursor) => {\n        table.addRow(cursor.row + 1);\n        table.update();\n    });\n}\n\nfunction onBtnRowDelete() {\n    actionWrapper((table, cursor) => {\n        table.removeRow(cursor.row);\n        table.update();\n    });\n}\n\nfunction onBtnColAddLeft() {\n    actionWrapper((table, cursor) => {\n        table.addColumn(cursor.column);\n        table.update();\n    });\n}\n\nfunction onBtnColAddRight() {\n    actionWrapper((table, cursor) => {\n        table.addColumn(cursor.column + 1);\n        table.update();\n    });\n}\n\nfunction onBtnColDelete() {\n    actionWrapper((table, cursor) => {\n        table.removeColumn(cursor.column);\n        table.update();\n    });\n}\n\nfunction onBtnAlignLeft() {\n    actionWrapper((table, cursor) => {\n        const column = table.getColumn(cursor.column);\n        column.textAlign = column.textAlign == \"left\" ? \"default\" : \"left\";\n    });\n}\n\nfunction onBtnAlignCenter() {\n    actionWrapper((table, cursor) => {\n        const column = table.getColumn(cursor.column);\n        column.textAlign = column.textAlign == \"center\" ? \"default\" : \"center\";\n    });\n}\n\nfunction onBtnAlignRight() {\n    actionWrapper((table, cursor) => {\n        const column = table.getColumn(cursor.column);\n        column.textAlign = column.textAlign == \"right\" ? \"default\" : \"right\";\n    });\n}\n\n\n/*\n    Initialize web page\n*/\n\n// Register event handler\ndocument.getElementById(\"input\").addEventListener(\"input\", onChange);\ndocument.getElementById(\"input-format\").addEventListener(\"change\", onChange);\ndocument.getElementById(\"output-format\").addEventListener(\"change\", onChange);\n\n// Register event handler for table tool buttons\ndocument.getElementById(\"btn-row-add-above\").addEventListener(\"click\", onBtnRowAddAbove);\ndocument.getElementById(\"btn-row-add-below\").addEventListener(\"click\", onBtnRowAddBelow);\ndocument.getElementById(\"btn-row-delete\").addEventListener(\"click\", onBtnRowDelete);\ndocument.getElementById(\"btn-col-add-left\").addEventListener(\"click\", onBtnColAddLeft);\ndocument.getElementById(\"btn-col-add-right\").addEventListener(\"click\", onBtnColAddRight);\ndocument.getElementById(\"btn-col-delete\").addEventListener(\"click\", onBtnColDelete);\ndocument.getElementById(\"btn-align-left\").addEventListener(\"click\", onBtnAlignLeft);\ndocument.getElementById(\"btn-align-center\").addEventListener(\"click\", onBtnAlignCenter);\ndocument.getElementById(\"btn-align-right\").addEventListener(\"click\", onBtnAlignRight);\ndocument.getElementById(\"btn-format\").addEventListener(\"click\", onBtnFormat);\n\n// Init UI\nonChange();\nhideError();\n\n// Enable bootstrap tooltips\nconst tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\nconst tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));","import stringWidth from 'string-width';\nimport * as cheerio from 'cheerio';\nimport * as htmlparser2 from 'htmlparser2';\nimport TurndownService from 'turndown';\n\n/** indicates how text is aligned in a column */\nvar TextAlignment;\n(function (TextAlignment) {\n    TextAlignment[\"left\"] = \"left\";\n    TextAlignment[\"center\"] = \"center\";\n    TextAlignment[\"right\"] = \"right\";\n    TextAlignment[\"default\"] = \"start\";\n})(TextAlignment || (TextAlignment = {}));\n/** indicates how a cell is merged with a neighboring cell */\nvar TableCellMerge;\n(function (TableCellMerge) {\n    TableCellMerge[TableCellMerge[\"above\"] = 0] = \"above\";\n    TableCellMerge[TableCellMerge[\"left\"] = 1] = \"left\";\n    TableCellMerge[TableCellMerge[\"none\"] = 2] = \"none\";\n})(TableCellMerge || (TableCellMerge = {}));\n/** indicates the placement of the table caption */\nvar TableCaptionPosition;\n(function (TableCaptionPosition) {\n    TableCaptionPosition[\"top\"] = \"top\";\n    TableCaptionPosition[\"bottom\"] = \"bottom\";\n})(TableCaptionPosition || (TableCaptionPosition = {}));\nclass IndexOutOfBoundsError extends Error {\n    constructor(msg) {\n        super(msg);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, IndexOutOfBoundsError.prototype);\n    }\n}\nclass TableCaption {\n    text;\n    label;\n    position;\n    constructor(text = \"\", label = \"\", position = TableCaptionPosition.top) {\n        this.text = text;\n        this.label = label;\n        this.position = position;\n    }\n    getLabel() {\n        // \"If you have a caption, you can also have a label, allowing you to create anchors pointing to the table. If there is no label, then the caption acts as the label\"\n        if (typeof this.label === 'string' && this.label.trim() !== \"\")\n            return this.label.trim().replace(/\\s/g, \"-\");\n        return this.text.trim().toLowerCase().replace(/\\s/g, \"-\").replace(/[^a-zA-Z0-9]/g, \"\");\n    }\n}\nclass TableCell {\n    text;\n    table;\n    row;\n    column;\n    merged;\n    isHeader;\n    textAlign;\n    constructor(table, row, column) {\n        this.text = \"\";\n        this.table = table;\n        this.row = row;\n        this.column = column;\n        this.merged = TableCellMerge.none;\n        this.isHeader = false;\n        this.textAlign = TextAlignment.default;\n    }\n    isHeaderCell() {\n        return this.row.isHeader || this.isHeader;\n    }\n    getTextAlignment() {\n        if (this.textAlign != TextAlignment.default)\n            return this.textAlign;\n        return this.column.textAlign;\n    }\n    setText(text) {\n        this.text = text;\n    }\n    getColspan() {\n        if (this.merged != TableCellMerge.left) {\n            let col = this.table.indexOfColumn(this.column) + 1;\n            if (col > this.table.columnCount())\n                return 1;\n            let colspan = 1;\n            let cells = this.table.getCellsInRow(this.row);\n            for (; col < this.table.columnCount(); col++) {\n                if (cells[col].merged == TableCellMerge.left)\n                    colspan++;\n                else\n                    break;\n            }\n            return colspan;\n        }\n        return 1;\n    }\n    getRowspan() {\n        if (this.merged != TableCellMerge.above) {\n            let row = this.table.indexOfRow(this.row) + 1;\n            if (row > this.table.rowCount())\n                return 1;\n            let rowspan = 1;\n            let cells = this.table.getCellsInColumn(this.column);\n            for (; row < this.table.rowCount(); row++) {\n                if (cells[row].merged == TableCellMerge.above)\n                    rowspan++;\n                else\n                    break;\n            }\n            return rowspan;\n        }\n        return 1;\n    }\n}\nclass TableRow {\n    index;\n    isHeader;\n    isMultiline;\n    startsNewSection;\n    cells;\n    constructor(index = 0, isHeader = false, \n    /** Only pertains to MultiMarkdown multiline feature. Ignored by other parsers/renderers. See Table.mergeMultilineRows() */\n    isMultiline = false, startsNewSection = false) {\n        this.index = index;\n        this.isHeader = isHeader;\n        this.isMultiline = isMultiline;\n        this.startsNewSection = startsNewSection;\n        this.cells = [];\n    }\n    updateCells(table) {\n        if (table.columnCount() != this.cells.length)\n            this.cells = table.getCells().filter(cell => cell.row == this);\n        this.cells = this.cells.sort((a, b) => a.column.index - b.column.index);\n    }\n    getCell(index) {\n        return this.cells.at(index);\n    }\n    getCells() {\n        return this.cells;\n    }\n}\nclass TableColumn {\n    index;\n    textAlign;\n    wrappable;\n    cells;\n    constructor(index = 0, textAlign = TextAlignment.default, wrappable = false) {\n        this.index = index;\n        this.textAlign = textAlign;\n        this.wrappable = wrappable;\n        this.cells = [];\n    }\n    updateCells(table) {\n        if (table.rowCount() != this.cells.length)\n            this.cells = table.getCells().filter(cell => cell.column == this);\n        this.cells = this.cells.sort((a, b) => a.row.index - b.row.index);\n    }\n    getCell(index) {\n        return this.cells.at(index);\n    }\n    getCells() {\n        return this.cells;\n    }\n}\nclass Table {\n    cells;\n    rows;\n    columns;\n    caption;\n    /** Text before the table */\n    beforeTable;\n    /** Text after the table */\n    afterTable;\n    constructor(rowNum = 0, colNum = 0) {\n        this.cells = [];\n        this.rows = Array.from({ length: rowNum }, (_, i) => new TableRow(i));\n        this.columns = Array.from({ length: colNum }, (_, i) => new TableColumn(i));\n        this.caption = null;\n        this.beforeTable = \"\";\n        this.afterTable = \"\";\n    }\n    /**\n     * Adds a TableRow to the table.\n     * @param index Insert row at index. -1 means it's appended.\n     * @param row (optional)\n     * @returns The added row.\n     */\n    addRow(index = -1, row = new TableRow()) {\n        if (index < 0) {\n            row.index = this.rows.push(row) - 1;\n        }\n        else {\n            row.index = index;\n            this.rows.splice(index, 0, row);\n        }\n        return row;\n    }\n    /**\n     * Adds a TableColumn to the table.\n     * @param index Insert column at index. -1 means it's appended.\n     * @param col (optional)\n     * @returns The added column.\n     */\n    addColumn(index = -1, col = new TableColumn()) {\n        if (index < 0) {\n            col.index = this.columns.push(col);\n        }\n        else {\n            col.index = index;\n            this.columns.splice(index, 0, col);\n        }\n        return col;\n    }\n    /** Gets the row at index. Negative index counts back from the end. Returns undefined if out-of-bounds. */\n    getRow(index) {\n        return this.rows.at(index);\n    }\n    /** Gets the index of the row. -1 if it hasn't been found. */\n    indexOfRow(row) {\n        return this.rows.indexOf(row);\n    }\n    /** Gets the column at index. Negative index counts back from the end. Returns undefined if out-of-bounds. */\n    getColumn(index) {\n        return this.columns.at(index);\n    }\n    /** Gets the index of the column. -1 if it hasn't been found. */\n    indexOfColumn(col) {\n        return this.columns.indexOf(col);\n    }\n    /**\n     * Removes the given column. Also removes all cells within the column.\n     * @param col Either index or object reference.\n    */\n    removeColumn(col) {\n        let colObj = typeof col === \"number\" ? this.columns.at(col) : col;\n        let columnCells = this.getCellsInColumn(colObj);\n        this.cells = this.cells.filter(cell => !columnCells.includes(cell));\n        this.columns = this.columns.filter(c => c != colObj);\n    }\n    /**\n     * Removes the given row. Also removes all cells within the row.\n     * @param row Either index or object reference.\n     */\n    removeRow(row) {\n        let rowObj = typeof row === \"number\" ? this.rows.at(row) : row;\n        let rowCells = this.getCellsInRow(rowObj);\n        this.cells = this.cells.filter(cell => !rowCells.includes(cell));\n        this.rows = this.rows.filter(r => r != rowObj);\n    }\n    /**\n     * Moves the given column to the new index.\n     * @param col Either index or object reference.\n     * @param newIndex The new index of the given column.\n     * @throws {IndexOutOfBoundsError} Can't move column outside of table.\n     */\n    moveColumn(col, newIndex) {\n        let colObj = typeof col === \"number\" ? this.columns.at(col) : col;\n        if (colObj === undefined || newIndex >= this.columnCount() || newIndex < 0)\n            throw new IndexOutOfBoundsError(\"(IndexOutOfBoundsError) Can't move column outside of table.\");\n        this.columns.splice(colObj.index, 1);\n        this.columns.splice(newIndex, 0, colObj);\n        colObj.index = newIndex;\n    }\n    /**\n     * Moves the given row to the new index.\n     * @param row Either index or object reference.\n     * @param newIndex The new index of the given row.\n     * @throws {IndexOutOfBoundsError} Can't move row outside of table.\n     */\n    moveRow(row, newIndex) {\n        let rowObj = typeof row === \"number\" ? this.rows.at(row) : row;\n        if (rowObj === undefined || newIndex >= this.rowCount() || newIndex < 0)\n            throw new IndexOutOfBoundsError(\"(IndexOutOfBoundsError) Can't move row outside of table.\");\n        this.rows.splice(rowObj.index, 1);\n        this.rows.splice(newIndex, 0, rowObj);\n        rowObj.index = newIndex;\n    }\n    /** Returns a list of all rows that are headers. */\n    getHeaderRows() {\n        return this.rows.filter(r => r.isHeader);\n    }\n    /** Returns a list of all rows that aren't headers. */\n    getNormalRows() {\n        return this.rows.filter(r => !r.isHeader);\n    }\n    /** Retruns all rows in the table, from top to bottom, including header rows. */\n    getRows() {\n        return this.rows;\n    }\n    /** Returns all columns in the table, from left to right. */\n    getColumns() {\n        return this.columns;\n    }\n    /** Returns all cells in the table. Isn't necessarily sorted! */\n    getCells() {\n        return this.cells;\n    }\n    /**\n     * Returns all cells within the given row.\n     * See also: {@link TableRow.getCells()}\n     * @param row Either index or object reference.\n     */\n    getCellsInRow(row) {\n        return (typeof row === \"number\" ? this.rows[row] : row).cells;\n    }\n    /**\n     * Returns all cells within the given column.\n     * See also: {@link TableColumn.getCells()}\n     * @param column Either index or object reference.\n     */\n    getCellsInColumn(column) {\n        return (typeof column === \"number\" ? this.columns[column] : column).cells;\n    }\n    /** Returns the cell at row and column. */\n    getCellByObjs(rowObj, columnObj) {\n        // Intersection of row / column:\n        for (const cell of rowObj.cells) {\n            if (columnObj.cells.includes(cell))\n                return cell;\n        }\n        let newCell = new TableCell(this, rowObj, columnObj);\n        this.addCell(newCell);\n        return newCell;\n    }\n    /**\n     * Returns the cell at row and column.\n     * If the cell doesn't already exist, it will be created.\n     * @param row Either index or object reference.\n     * @param column Either index or object reference.\n     * @returns The cell at row and column.\n     */\n    getCell(row, column) {\n        return this.getCellByObjs(typeof row === \"number\" ? this.rows.at(row) : row, typeof column === \"number\" ? this.columns.at(column) : column);\n    }\n    /**\n     * Adds the cell to the Table and the cell's respective TableRow and TableColumn.\n     * (Be careful not to add a cell with row/column that already exist. Otherwise, the added cell will be overshadowed and not be used.)\n     */\n    addCell(cell) {\n        this.cells.push(cell);\n        cell.row.cells.push(cell);\n        cell.column.cells.push(cell);\n    }\n    /** Returns the total amount of rows in the table, including the header rows. */\n    rowCount() {\n        return this.rows.length;\n    }\n    /** Returns the total amount of columns in the table. */\n    columnCount() {\n        return this.columns.length;\n    }\n    /**\n     * → Ensures that all table cells exist.\n     * → Updates indices and sorts the cells within rows and columns.\n     * → Tries to find invalid configurations and sanitize them.\n     *\n     * Call this method after altering the table.\n     */\n    update() {\n        // Iterate over the entire table:\n        let columnObj;\n        let rowObj;\n        for (let colIndex = 0; colIndex < this.columns.length; colIndex++) {\n            // Update the column's index:\n            columnObj = this.columns[colIndex];\n            columnObj.index = colIndex;\n            for (let rowIndex = 0; rowIndex < this.rows.length; rowIndex++) {\n                // Update the row's index:\n                rowObj = this.rows[rowIndex];\n                rowObj.index = rowIndex;\n                // Use \"getCellByObjs\" to ensure that the cell gets created, if it doesn't exist already:\n                this.getCellByObjs(rowObj, columnObj);\n            }\n        }\n        // Update the column's 'cells' array:\n        for (const column of this.columns)\n            column.updateCells(this);\n        // Update the row's 'cells' array:\n        for (const row of this.rows)\n            row.updateCells(this);\n        this.sanitize();\n        return this;\n    }\n    /** Tries to find invalid configurations and sanitize them. */\n    sanitize() {\n        if (this.getNormalRows().length > 0) {\n            // Cannot merge cell above if in first row:\n            for (const cell of this.getCellsInRow(this.getNormalRows()[0])) {\n                if (cell.merged == TableCellMerge.above)\n                    cell.merged = TableCellMerge.none;\n            }\n            this.getNormalRows()[0].startsNewSection = false;\n        }\n        for (const cell of this.cells) {\n            // Cannot merge cell left if in first column:\n            if (cell.column == this.columns[0] && cell.merged == TableCellMerge.left)\n                cell.merged = TableCellMerge.none;\n            // Cannot merge cell above if in first row:\n            if ((cell.row == this.rows[0] || cell.row.startsNewSection) && cell.merged == TableCellMerge.above)\n                cell.merged = TableCellMerge.none;\n        }\n        return this;\n    }\n    /**\n     * Merges multiline rows (from MultiMarkdown feature) into \"normal\" rows.\n     * This will destroy MultiMarkdown formatting! Only use when rendering into different formats.\n     */\n    mergeMultilineRows() {\n        let newRows = [];\n        let merging = false;\n        let actualRowIndex = 0;\n        this.getRows().forEach((row, index) => {\n            if (merging) {\n                row.getCells().forEach((cell, index) => {\n                    const parentCell = newRows[actualRowIndex - 1].getCell(index);\n                    parentCell.setText(parentCell.text + \"\\n\" + cell.text);\n                });\n            }\n            else {\n                row.index = actualRowIndex;\n                newRows.push(row);\n                actualRowIndex++;\n            }\n            if (!merging && row.isMultiline) {\n                merging = true;\n            }\n            else if (merging && !row.isMultiline) {\n                merging = false;\n            }\n            row.isMultiline = false;\n        });\n        this.rows = newRows;\n        this.update();\n        return this;\n    }\n}\n\n/*\n * Due to the nature of CSV tables, some data will be lost when converting MMD (or HTML) to CSV.\n *\n * CSV file specifications and implementation:\n * https://www.rfc-editor.org/rfc/rfc4180\n * http://super-csv.github.io/super-csv/csv_specification.html\n */\nclass CSVTableParser {\n    separator;\n    quote;\n    assumeFirstLineIsHeader;\n    constructor(separator = \",\", quote = \"\\\"\", assumeFirstLineIsHeader = true) {\n        this.separator = separator;\n        this.quote = quote;\n        this.assumeFirstLineIsHeader = assumeFirstLineIsHeader;\n    }\n    parse(table) {\n        /*\n            Prepare csv string:\n        */\n        let csv = table.replace(/\\r?\\n/g, \"\\n\");\n        if (!csv.endsWith(\"\\n\"))\n            csv += \"\\n\";\n        /*\n            Parse csv string:\n        */\n        let parsedTable = new Table();\n        let tableRow = parsedTable.addRow();\n        tableRow.isHeader = this.assumeFirstLineIsHeader;\n        let cellContent = \"\";\n        let rowIndex = 0;\n        let colIndex = 0;\n        let isQuoted = false;\n        let lastChar = null;\n        for (const char of csv) {\n            // Comma or newline:\n            if ((char == this.separator || char == \"\\n\") && !isQuoted) {\n                // Get column:\n                let tableColumn;\n                if (rowIndex == 0)\n                    tableColumn = parsedTable.addColumn();\n                else\n                    tableColumn = parsedTable.getColumn(colIndex);\n                // Set table cell content:\n                let tableCell = new TableCell(parsedTable, tableRow, tableColumn);\n                tableCell.setText(cellContent);\n                parsedTable.addCell(tableCell);\n                //parsedTable.getCellByObjs(tableRow, tableColumn).setText(cellContent);\n                cellContent = \"\";\n                colIndex++;\n                // If it's a newline:\n                if (char == \"\\n\") {\n                    // Add a new row to the table:\n                    tableRow = parsedTable.addRow();\n                    rowIndex++;\n                    colIndex = 0;\n                }\n            }\n            else if (char == this.quote) {\n                if (!isQuoted && lastChar == this.quote) {\n                    cellContent += this.quote;\n                }\n                isQuoted = !isQuoted;\n            }\n            else {\n                cellContent += char;\n            }\n            lastChar = char;\n        }\n        // Remove unused row:\n        parsedTable.removeRow(tableRow);\n        return parsedTable;\n    }\n}\n/** changes the output of CSVTableRenderer */\nvar CSVTableRendererMode;\n(function (CSVTableRendererMode) {\n    CSVTableRendererMode[CSVTableRendererMode[\"OmitSpecialCharacters\"] = 0] = \"OmitSpecialCharacters\";\n    CSVTableRendererMode[CSVTableRendererMode[\"EscapeWithQuotes\"] = 1] = \"EscapeWithQuotes\";\n    CSVTableRendererMode[CSVTableRendererMode[\"AlwaysUseQuotes\"] = 2] = \"AlwaysUseQuotes\";\n})(CSVTableRendererMode || (CSVTableRendererMode = {}));\nclass CSVTableRenderer {\n    separator;\n    quote;\n    lineBreak;\n    mode;\n    constructor(separator = \",\", quote = \"\\\"\", lineBreak = \"\\r\\n\", mode = CSVTableRendererMode.EscapeWithQuotes) {\n        this.separator = separator;\n        this.quote = quote;\n        this.lineBreak = lineBreak;\n        this.mode = mode;\n    }\n    render(table) {\n        let specialCharactersRegex = new RegExp(`([${this.separator}${this.quote}]|\\r\\n|\\n)`);\n        let specialCharactersRegexGlobal = new RegExp(`([${this.separator}${this.quote}]|\\r\\n|\\n)`, \"g\");\n        let quoteRegex = new RegExp(this.quote, \"g\");\n        let csv = [];\n        for (const row of table.getRows()) {\n            let renderedRow = [];\n            for (const cell of table.getCellsInRow(row)) {\n                switch (this.mode) {\n                    case CSVTableRendererMode.AlwaysUseQuotes:\n                        renderedRow.push(`${this.quote}${cell.text.replace(quoteRegex, this.quote.repeat(2))}${this.quote}`);\n                        break;\n                    case CSVTableRendererMode.EscapeWithQuotes:\n                        if (specialCharactersRegex.test(cell.text)) {\n                            renderedRow.push(`${this.quote}${cell.text.replace(quoteRegex, this.quote.repeat(2))}${this.quote}`);\n                        }\n                        else {\n                            renderedRow.push(cell.text);\n                        }\n                        break;\n                    case CSVTableRendererMode.OmitSpecialCharacters:\n                        renderedRow.push(cell.text.replace(specialCharactersRegexGlobal, \"\"));\n                        break;\n                }\n            }\n            csv.push(renderedRow.join(this.separator));\n        }\n        return csv.join(this.lineBreak);\n    }\n}\n\nclass ParsingError extends Error {\n    constructor(msg) {\n        super(msg);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, ParsingError.prototype);\n    }\n}\n\n/*\n    Specification: https://github.github.com/gfm/#tables-extension-\n*/\nconst rowRegex$2 = /^\\|(.+)\\|$/;\nconst delimiterRowRegex = /^\\|(\\s*:?\\-+:?\\s*\\|)+$/;\nvar ParsingState$2;\n(function (ParsingState) {\n    ParsingState[ParsingState[\"BeforeTable\"] = 0] = \"BeforeTable\";\n    ParsingState[ParsingState[\"HeaderRow\"] = 1] = \"HeaderRow\";\n    ParsingState[ParsingState[\"DelimiterRow\"] = 2] = \"DelimiterRow\";\n    ParsingState[ParsingState[\"DataRows\"] = 3] = \"DataRows\";\n    ParsingState[ParsingState[\"AfterTable\"] = 4] = \"AfterTable\";\n})(ParsingState$2 || (ParsingState$2 = {}));\nclass GitHubFlavoredMarkdownTableParser {\n    parse(table) {\n        let parsedTable = new Table();\n        let state = ParsingState$2.BeforeTable;\n        let hasDelimiterRow = false;\n        let beforeTable = [];\n        let afterTable = [];\n        // Now parse line by line:\n        for (let line of table.split(\"\\n\")) {\n            /*\n                Determine parsing state and prepare:\n            */\n            // Check if we are in the table:\n            if (state == ParsingState$2.BeforeTable && line.match(/[^|\\\\`]\\|/g)) {\n                state = ParsingState$2.HeaderRow;\n            }\n            // The table is broken at the first empty line, or beginning of another block-level structure:\n            if (line.trim() === \"\" || line.trim().startsWith(\"> \")) {\n                state = ParsingState$2.AfterTable;\n            }\n            // If not inside table:\n            if (state == ParsingState$2.BeforeTable) {\n                beforeTable.push(line);\n                continue; // Skip the rest\n            }\n            else if (state == ParsingState$2.AfterTable) {\n                afterTable.push(line);\n                continue; // Skip the rest\n            }\n            // Format table line:\n            line = line.trim();\n            if (!line.startsWith(\"|\"))\n                line = \"|\" + line;\n            if (!line.endsWith(\"|\") ||\n                (line.charAt(line.length - 3) != \"\\\\\" && line.endsWith(\"\\\\|\"))) // Check if last pipe is escaped ('\\|')\n                line = line + \"|\";\n            if (!line.match(rowRegex$2))\n                throw new ParsingError(`Invalid row: ${line}`);\n            // Is delimiter row too early?\n            if (state == ParsingState$2.HeaderRow && line.match(delimiterRowRegex)) {\n                throw new ParsingError(\"Header row missing.\");\n            }\n            /*\n                Parse line depending on parsing state:\n            */\n            if (state == ParsingState$2.HeaderRow || state == ParsingState$2.DataRows) {\n                let tableRow = new TableRow();\n                tableRow.isHeader = state == ParsingState$2.HeaderRow;\n                parsedTable.addRow(-1, tableRow);\n                // Parse each character:\n                let cellContent = \"\";\n                let colIndex = 0;\n                let slashEscaped = false;\n                let fenceEscaped = false;\n                for (let char of line.substring(1, line.length)) {\n                    if (!slashEscaped && !fenceEscaped && char == \"|\") {\n                        // Ignore excess cells:\n                        if (state == ParsingState$2.HeaderRow || colIndex < parsedTable.columnCount()) {\n                            let tableColumn = parsedTable.getColumn(colIndex);\n                            if (!tableColumn)\n                                tableColumn = parsedTable.addColumn();\n                            let cell = new TableCell(parsedTable, tableRow, tableColumn);\n                            parsedTable.addCell(cell);\n                            cell.setText(cellContent\n                                .trim()\n                                .replace(/(<[bB][rR]\\s*\\/?>)/g, \"\\n\"));\n                        }\n                        cellContent = \"\";\n                        colIndex++;\n                    }\n                    else if (!slashEscaped && char == \"\\\\\") {\n                        slashEscaped = true;\n                    }\n                    else {\n                        if (!slashEscaped && char == \"\\`\")\n                            fenceEscaped = !fenceEscaped;\n                        if (slashEscaped)\n                            cellContent += \"\\\\\";\n                        cellContent += char;\n                        slashEscaped = false;\n                    }\n                }\n                // Insert empty cells if missing:\n                for (; colIndex < parsedTable.columnCount(); colIndex++) {\n                    let cell = new TableCell(parsedTable, tableRow, parsedTable.getColumn(colIndex));\n                    parsedTable.addCell(cell);\n                }\n                // If the header row has been parsed, parse the delimiter row next:\n                if (state == ParsingState$2.HeaderRow)\n                    state = ParsingState$2.DelimiterRow;\n            }\n            else if (state == ParsingState$2.DelimiterRow) {\n                if (!line.match(delimiterRowRegex))\n                    throw new ParsingError(\"Invalid delimiter row\");\n                hasDelimiterRow = true;\n                let colIndex = 0;\n                let alignment = TextAlignment.default;\n                let separator = false;\n                for (let char of line.substring(1, line.length)) {\n                    if (char == \"|\") {\n                        let tableColumn = parsedTable.getColumn(colIndex);\n                        if (!tableColumn)\n                            throw new ParsingError(\"Header row doesn't match the delimiter row in the number of cells.\");\n                        tableColumn.textAlign = alignment;\n                        alignment = TextAlignment.default;\n                        separator = false;\n                        colIndex++;\n                    }\n                    else if (char == \":\") {\n                        if (!separator) {\n                            alignment = TextAlignment.left;\n                        }\n                        else {\n                            if (alignment == TextAlignment.left)\n                                alignment = TextAlignment.center;\n                            else\n                                alignment = TextAlignment.right;\n                        }\n                    }\n                    else if (char == \"-\") {\n                        separator = true;\n                        if (alignment == TextAlignment.right)\n                            throw new ParsingError(\"Invalid delimiter row (minus sign after colon)\");\n                    }\n                    else if (!char.match(/\\s/g)) {\n                        throw new ParsingError(`Unexpected character in delimiter row: '${char}'`);\n                    }\n                }\n                if (colIndex < parsedTable.columnCount()) {\n                    throw new ParsingError(\"Header row doesn't match the delimiter row in the number of cells.\");\n                }\n                // Once the delimiter row has been parsed, parse the data rows next:\n                state = ParsingState$2.DataRows;\n            }\n            else {\n                throw new ParsingError(`Not implemented ParsingState: ${state}`);\n            }\n        }\n        if (!hasDelimiterRow)\n            throw new ParsingError(\"No delimiter row found.\");\n        parsedTable.beforeTable = beforeTable.join(\"\\n\");\n        parsedTable.afterTable = afterTable.join(\"\\n\");\n        return parsedTable.update();\n    }\n}\nclass GitHubFlavoredMarkdownTableRenderer {\n    prettify;\n    renderOutsideTable;\n    constructor(prettify = true, renderOutsideTable = true) {\n        this.prettify = prettify;\n        this.renderOutsideTable = renderOutsideTable;\n    }\n    render(table) {\n        const headerRow = table.getHeaderRows()[0];\n        const dataRows = table.getNormalRows();\n        const columnWidths = this.prettify ? this.determineColumnWidths(table) : null;\n        let result = [];\n        if (this.renderOutsideTable && table.beforeTable.trim() !== \"\")\n            result.push(table.beforeTable);\n        // Header row:\n        result.push(this.renderRow(table, headerRow, columnWidths));\n        // Delimiter row:\n        result.push(this.renderDelimiterRow(table, columnWidths));\n        // Data rows:\n        for (const row of dataRows)\n            result.push(this.renderRow(table, row, columnWidths));\n        if (this.renderOutsideTable && table.afterTable.trim() !== \"\")\n            result.push(table.afterTable);\n        return result.join(\"\\n\");\n    }\n    renderDelimiterRow(table, columnWidths) {\n        let result = [];\n        table.getColumns().forEach((col, i) => {\n            let width = this.prettify ? columnWidths[i] : null;\n            switch (col.textAlign) {\n                case TextAlignment.left:\n                    result.push(this.prettify ? `:${\"-\".repeat(width + 1)}` : \":-\");\n                    break;\n                case TextAlignment.center:\n                    result.push(this.prettify ? `:${\"-\".repeat(width)}:` : \":-:\");\n                    break;\n                case TextAlignment.right:\n                    result.push(this.prettify ? `${\"-\".repeat(width + 1)}:` : \"-:\");\n                    break;\n                case TextAlignment.default:\n                default:\n                    result.push(this.prettify ? \"-\".repeat(width + 2) : \"-\");\n                    break;\n            }\n        });\n        if (this.prettify)\n            return `|${result.join(\"|\")}|`;\n        else\n            return result.join(\"|\");\n    }\n    renderRow(table, row, columnWidths) {\n        let result = [];\n        row.getCells().forEach((cell, i) => {\n            result.push(this.renderCell(cell, this.prettify ? columnWidths[i] : null));\n            if (!this.prettify && i == row.getCells().length - 1 && cell.text.trim() == \"\")\n                result.push(\"\");\n        });\n        if (this.prettify)\n            return `|${result.join(\"|\")}|`;\n        else\n            return result.join(\"|\");\n    }\n    renderCell(cell, cellWidth = -1) {\n        let text = cell.text.replace(/\\r?\\n/g, \"<br>\");\n        if (!this.prettify) {\n            return text;\n        }\n        const textLength = stringWidth(text);\n        switch (cell.column.textAlign) {\n            case TextAlignment.center:\n                return `${\" \".repeat(Math.max(0, Math.floor((cellWidth - textLength) / 2)))} ${text} ${\" \".repeat(Math.max(0, Math.ceil((cellWidth - textLength) / 2)))}`;\n            case TextAlignment.right:\n                return `${\" \".repeat(Math.max(0, cellWidth - textLength))} ${text} `;\n            case TextAlignment.left:\n            case TextAlignment.default:\n            default:\n                return ` ${text} ${\" \".repeat(Math.max(0, cellWidth - textLength))}`;\n        }\n    }\n    determineColumnWidth(table, column) {\n        let width = 0;\n        for (const cell of table.getCellsInColumn(column)) {\n            const cellTextLength = stringWidth(cell.text.replace(/\\r?\\n/g, \"<br>\"));\n            width = Math.max(cellTextLength, width);\n        }\n        return width;\n    }\n    determineColumnWidths(table) {\n        return table.getColumns().map(column => this.determineColumnWidth(table, column));\n    }\n}\n\nfunction removeInvisibleCharacters(str) {\n    // See: https://www.utf8-chartable.de/unicode-utf8-table.pl\n    //      https://stackoverflow.com/a/13836410\n    // /[^\\u0000-\\u007E]/g\n    // /\\u00AD/g - soft hyphen\n    // /[^\\u0020-\\u007E\\u00A1-\\u00AC\\u00AE-\\u00FF]/g\n    return str\n        .replace(/[\\u0000-\\u0009\\u000B\\u000C\\u000E-\\u001F\\u007F-\\u009F]/g, \"\") // Control characters\n        .replace(/[\\u00AD\\u2007\\u200C\\u2028-\\u202F\\u2060-\\u206F\\uFEFF]/g, \"\") // Invisible characters, such as &shy; or \"Zero Width Non-Joiner\"\n        .replace(/\\u00A0/g, \"&nbsp;\")\n        .replace(/\\u2002/g, \"&ensp;\")\n        .replace(/\\u2003/g, \"&emsp;\")\n        .replace(/\\u2009/g, \"&thinsp;\");\n    //.replace(/[\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F5-\\u05FF\\u070E\\u074B\\u074C\\u07B2-\\u07BF\\u07FB\\u07FC\\u082E\\u082F\\u083F]/g, \"\"); // Weird characters\n}\n/**\n * Returns a TurndownService object configured for my own taste...\n * (of course, if you don't like it, you can configure it to fit your needs)\n */\nfunction getTurndownService() {\n    const turndownService = new TurndownService({\n        headingStyle: \"atx\",\n        hr: \"---\",\n        bulletListMarker: \"-\",\n        codeBlockStyle: \"fenced\",\n        fence: \"```\",\n        emDelimiter: \"*\",\n        strongDelimiter: \"**\",\n        linkStyle: \"inlined\",\n        linkReferenceStyle: \"full\",\n    });\n    // Add strikethrough:\n    turndownService.addRule(\"strikethrough\", {\n        filter: [\"del\", \"s\"],\n        replacement: function (content) {\n            return \"~~\" + content + \"~~\";\n        },\n    });\n    // Add blockquote:\n    /*turndownService.addRule('blockquote', {\n        filter: ['blockquote'],\n        replacement: function (content) {\n            return '> ' + content;\n        }\n    });*/\n    // Filter table tags:\n    turndownService\n        .remove(\"table\")\n        .remove(\"tbody\")\n        .remove(\"thead\")\n        .remove(\"tr\")\n        .remove(\"td\")\n        .remove(\"th\");\n    return turndownService;\n}\n\nfunction escapeMarkdown(mdStr) {\n    return mdStr.replace(/\\|/g, \"\\\\|\");\n}\nfunction mdToHtml(markdown, inline = true) {\n    let html = markdown.trim(); // escape(markdown);\n    // Blockquote:\n    if (!inline) {\n        let lines = [];\n        let quoted = false;\n        for (let line of html.split(/\\r?\\n/)) {\n            if (line.startsWith(\"> \")) {\n                if (!quoted)\n                    lines.push(\"<blockquote>\");\n                quoted = true;\n                lines.push(`<p>${mdToHtml(line.substring(2))}</p>`);\n            }\n            else {\n                if (quoted)\n                    lines.push(\"</blockquote>\");\n                quoted = false;\n                lines.push(line);\n            }\n            if (quoted)\n                lines.push(\"</blockquote>\");\n        }\n        html = lines.join(\"\\n\");\n        if (!html.startsWith(\"<blockquote>\"))\n            html = `<p>${html}</p>`;\n    }\n    // Image:\n    html = html.replace(/!\\[([^\\[\\]]+)\\]\\(([^\\(\\)]+)\\)/g, \"<img src=\\\"$2\\\" alt=\\\"$1\\\">\");\n    // Links:\n    html = html.replace(/\\[([^\\[\\]]+)\\]\\(([^\\(\\)]+)\\)/g, \"<a href=\\\"$2\\\">$1</a>\");\n    // Block code:\n    html = html.replace(/```[a-z]*?\\n(.*?)\\n```/g, \"<code>$1</code>\");\n    // Inline code:\n    html = html.replace(/`(.*?)`/g, \"<code>$1</code>\");\n    // Strikethrough:\n    html = html.replace(/~~(.*?)~~/g, \"<del>$1</del>\");\n    // Oblique:\n    html = html.replace(/___(.*?)___/g, \"<em><strong>$1</strong></em>\");\n    html = html.replace(/\\*\\*\\*(.*?)\\*\\*\\*/g, \"<em><strong>$1</strong></em>\");\n    // Bold:\n    html = html.replace(/__(.*?)__/g, \"<strong>$1</strong>\");\n    html = html.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\n    // Italic:\n    html = html.replace(/_(.*?)_/g, \"<em>$1</em>\");\n    html = html.replace(/\\*(.*?)\\*/g, \"<em>$1</em>\");\n    // Escaped characters:\n    html = html.replace(/\\\\([#\\.\\|\\*_\\s`\\[\\]\\-])/g, \"$1\");\n    // Newlines:\n    if (inline)\n        html = html.replace(/\\r?\\n/g, \"<br>\");\n    else\n        html = html.replace(/(\\r?\\n){2}/g, \"</p>\\n<p>\").replace(/(?<!\\<\\\\p\\>)\\r?\\n(?!\\<p\\>)/g, \" \");\n    // Remove unnecessary whitespace:\n    html = html.replace(/[ \\t]{2,}/g, \" \");\n    return html;\n}\nfunction htmlToMd(html, turndownService) {\n    return turndownService.turndown(html);\n}\nfunction textAlignToCSS(textAlign) {\n    switch (textAlign) {\n        case TextAlignment.left:\n            return \"text-align: left\";\n        case TextAlignment.right:\n            return \"text-align: right\";\n        case TextAlignment.center:\n            return \"text-align: center\";\n        case TextAlignment.default:\n        default:\n            return \"text-align: start\";\n    }\n}\nfunction cssToTextAlign(element) {\n    if (!element.css(\"text-align\")) // Might return 'undefined'\n        return TextAlignment.default;\n    switch (element.css(\"text-align\").toLowerCase()) {\n        case \"left\":\n            return TextAlignment.left;\n        case \"center\":\n            return TextAlignment.center;\n        case \"right\":\n            return TextAlignment.right;\n        default:\n            return TextAlignment.default;\n    }\n}\n/** changes the behavior of HTMLTableParser */\nvar HTMLTableParserMode;\n(function (HTMLTableParserMode) {\n    /** uses only text (`Cheerio.text()`) */\n    HTMLTableParserMode[HTMLTableParserMode[\"StripHTMLElements\"] = 0] = \"StripHTMLElements\";\n    /** uses the HTML code (`Cheerio.html()`) without any converting */\n    HTMLTableParserMode[HTMLTableParserMode[\"PreserveHTMLElements\"] = 1] = \"PreserveHTMLElements\";\n    /** uses the HTML code (`Cheerio.html()`) and converts to Markdown using Turndown if possible (default) */\n    HTMLTableParserMode[HTMLTableParserMode[\"ConvertHTMLElements\"] = 2] = \"ConvertHTMLElements\";\n})(HTMLTableParserMode || (HTMLTableParserMode = {}));\nclass HTMLTableParser {\n    mode;\n    turndownService;\n    constructor(mode = HTMLTableParserMode.ConvertHTMLElements, turndownService = getTurndownService()) {\n        this.mode = mode;\n        this.turndownService = turndownService;\n    }\n    parse(table) {\n        /*\n            Parse the html string and find our <table> tag to start:\n        */\n        const dom = htmlparser2.parseDocument(table, {\n            xmlMode: false,\n            lowerCaseTags: true,\n            lowerCaseAttributeNames: true,\n            decodeEntities: true,\n        });\n        const $ = cheerio.load(dom);\n        const $tables = $(\"table\");\n        if ($tables.length === 0) {\n            throw new ParsingError(\"Couldn't find <table> tag in DOM.\");\n        }\n        const $table = $($tables[0]);\n        /*\n            Converting table to Markdown:\n        */\n        let parsedTable = new Table();\n        let hasSections = false;\n        let tableTextAlign = cssToTextAlign($table);\n        // Get everything before <table>:\n        let m = table.match(/((.|\\n)*)<\\s*[tT][aA][bB][lL][eE][^<>]*>/m);\n        if (m) {\n            parsedTable.beforeTable = htmlToMd(m[1], this.turndownService);\n        }\n        // Get everything after </table>:\n        m = table.match(/<\\/\\s*[tT][aA][bB][lL][eE]\\s*>((.|\\n)*)/m);\n        if (m) {\n            parsedTable.afterTable = htmlToMd(m[1], this.turndownService);\n        }\n        // Parse <thead> tag in <table>:\n        let $theads = $table.find(\"thead\");\n        if ($theads.length != 0) {\n            let sectionTextAlign = cssToTextAlign($theads);\n            this.parseSection($, parsedTable, $theads.find(\"tr\"), (sectionTextAlign != TextAlignment.default ? sectionTextAlign : tableTextAlign), true);\n            hasSections = true;\n        }\n        // Parse <tbody> tags in <table>:\n        const self = this;\n        let $tbodies = $table.find(\"tbody\");\n        if ($tbodies.length > 0) {\n            $tbodies.each((i, element) => {\n                const domTBody = $(element);\n                let sectionTextAlign = cssToTextAlign(domTBody);\n                self.parseSection($, parsedTable, domTBody.find(\"tr\"), (sectionTextAlign != TextAlignment.default ? sectionTextAlign : tableTextAlign), false, $theads == null, i > 0);\n            });\n            hasSections = true;\n        }\n        // No <thead> or <tbody> tags?\n        if (!hasSections) {\n            // Parse table that doesn't have thead or tbody tags as one section with no header:\n            this.parseSection($, parsedTable, $table.find(\"tr\"), tableTextAlign, false, true, false);\n        }\n        // Parse <caption> tag in <table>:\n        let $captions = $table.find(\"caption\");\n        if ($captions.length != 0) {\n            const $caption = $($captions);\n            let caption = new TableCaption();\n            caption.text = htmlToMd($caption.html() ? $caption.html() : \"\", this.turndownService).replace(/(\\r?\\n)/g, \"\").trim(); // domCaption.innerText.replace(/(\\r?\\n|\\[|\\])/g, \"\").trim();\n            if ($caption.attr('id') && caption.getLabel() != $caption.attr('id'))\n                caption.label = $caption.attr('id').replace(/(\\r?\\n|\\[|\\])/g, \"\").trim();\n            switch ($caption.css(\"caption-side\") && $caption.css(\"caption-side\").toLowerCase()) {\n                case \"bottom\":\n                    caption.position = TableCaptionPosition.bottom;\n                    break;\n                case \"top\":\n                default:\n                    caption.position = TableCaptionPosition.top;\n            }\n            parsedTable.caption = caption;\n        }\n        return parsedTable.update();\n    }\n    parseSection($, table, $rows, defaultTextAlign, isHeader = false, allowHeaderDetection = false, firstRowStartsNewSection = false) {\n        // HTML skips \"ghost\" cells that are overshadowed by other cells that have a rowspan > 1.\n        // We'll memorize them:\n        let rowspanGhostCells = [];\n        // Remember how many rows we already have:\n        let rowOffset = table.rowCount();\n        // Iterate over each row (<tr>) of the HTML table:\n        $rows.each((domRowIndex, element) => {\n            let rowIndex = domRowIndex + rowOffset;\n            let row = table.getRow(rowIndex);\n            if (!row)\n                row = table.addRow();\n            row.isHeader = isHeader;\n            if (domRowIndex == 0)\n                row.startsNewSection = firstRowStartsNewSection;\n            // Memorize an offset (colspan):\n            let colOffset = 0;\n            // Iterate over each cell (<td> or <th>) of the HTML table row:\n            const $row = $(element);\n            let $cells = $row.find(\"td, th\");\n            let allCellsAreTH = true;\n            $cells.each((domColIndex, element) => {\n                const $cell = $(element);\n                // Get the TableColumn of our Table object, taking the memorized rowspans and colOffset into account:\n                let colIndex = domColIndex + colOffset;\n                while (rowspanGhostCells.filter(ghost => ghost.row == rowIndex && ghost.col == colIndex).length > 0) {\n                    colIndex = domColIndex + ++colOffset;\n                }\n                let column = table.getColumn(colIndex);\n                if (!column)\n                    column = table.addColumn();\n                // Add cell to our Table object:\n                let cellContent = this.parseCell($cell);\n                let textAlign = cssToTextAlign($cell);\n                let wrappable = $cell.hasClass(\"extend\");\n                textAlign = textAlign != TextAlignment.default ? textAlign : defaultTextAlign;\n                let cellIsHeader = $cell.prop(\"tagName\").toLowerCase() == \"th\";\n                allCellsAreTH = allCellsAreTH && cellIsHeader;\n                let cell = new TableCell(table, row, column);\n                cell.setText(cellContent);\n                cell.textAlign = textAlign;\n                cell.isHeader = cellIsHeader;\n                if (column.textAlign == TextAlignment.default) {\n                    column.textAlign = textAlign;\n                }\n                column.wrappable = wrappable;\n                table.addCell(cell);\n                // Take \"colspan\" into account:\n                let colspan = $cell.prop(\"colspan\");\n                if (colspan > 1) {\n                    // Add empty cells to our Table object:\n                    for (let i = 1; i < colspan; i++) {\n                        let nextColumn = table.getColumn(colIndex + i);\n                        if (!nextColumn)\n                            nextColumn = table.addColumn();\n                        let mergedCell = table.getCell(row, nextColumn);\n                        mergedCell.merged = TableCellMerge.left;\n                    }\n                    // Add colspan to colOffset:\n                    colOffset += colspan - 1;\n                }\n                // Take \"rowspan\" into account:\n                let rowspan = $cell.prop(\"rowspan\");\n                if (rowspan > 1) {\n                    // Add empty cells to our Table object:\n                    for (let i = 1; i < rowspan; i++) {\n                        let nextRow = table.getRow(rowIndex + i);\n                        if (!nextRow)\n                            nextRow = table.addRow();\n                        nextRow.isHeader = isHeader;\n                        let mergedCell = table.getCell(nextRow, column);\n                        mergedCell.merged = TableCellMerge.above;\n                        // Memorize \"ghost\" cells:\n                        rowspanGhostCells.push({\n                            \"row\": rowIndex + i,\n                            \"col\": colIndex\n                        });\n                    }\n                }\n            });\n            // Detect headers:\n            if (allowHeaderDetection && !isHeader) {\n                row.isHeader = allCellsAreTH;\n            }\n        });\n    }\n    parseCell($cell) {\n        switch (this.mode) {\n            case HTMLTableParserMode.PreserveHTMLElements:\n                return removeInvisibleCharacters(escapeMarkdown($cell.html()));\n            case HTMLTableParserMode.StripHTMLElements:\n                return removeInvisibleCharacters(escapeMarkdown($cell.text()));\n            case HTMLTableParserMode.ConvertHTMLElements:\n            default:\n                return removeInvisibleCharacters(escapeMarkdown(htmlToMd($cell.html(), this.turndownService)));\n        }\n    }\n}\nclass HTMLTableRenderer {\n    prettify;\n    indent;\n    renderOutsideTable;\n    constructor(prettify = true, indent = \"  \", renderOutsideTable = true) {\n        this.prettify = prettify;\n        this.indent = indent;\n        this.renderOutsideTable = renderOutsideTable;\n    }\n    render(table) {\n        let result = [];\n        if (this.renderOutsideTable && table.beforeTable.trim() !== \"\")\n            result.push(mdToHtml(table.beforeTable, false));\n        result.push(\"<table>\");\n        let headerRows = table.getHeaderRows();\n        let normalRows = table.getNormalRows();\n        if (headerRows.length > 0) {\n            result.push(this.indentString(\"<thead>\", 1));\n            for (const row of headerRows)\n                result.push(...this.renderRow(table, row));\n            result.push(this.indentString(\"</thead>\", 1));\n        }\n        if (normalRows.length > 0) {\n            result.push(this.indentString(\"<tbody>\", 1));\n            for (const row of normalRows) {\n                if (row.startsNewSection)\n                    result.push(this.indentString(\"</tbody>\", 1), this.indentString(\"<tbody>\", 1));\n                result.push(...this.renderRow(table, row));\n            }\n            result.push(this.indentString(\"</tbody>\", 1));\n        }\n        if (table.caption && table.caption.text.length > 0)\n            result.push(this.indentString(`<caption id=\"${table.caption.getLabel()}\" style=\"caption-side: ${table.caption.position}\">${mdToHtml(table.caption.text)}</caption>`, 1));\n        result.push(\"</table>\");\n        if (this.renderOutsideTable && table.afterTable.trim() !== \"\")\n            result.push(mdToHtml(table.afterTable, false));\n        return result.join(this.prettify ? \"\\n\" : \"\");\n    }\n    renderRow(table, row) {\n        let result = [];\n        result.push(this.indentString(\"<tr>\", 2));\n        for (let cell of table.getCellsInRow(row)) {\n            let renderedCell = this.indentString(this.renderCell(cell), 3);\n            if (renderedCell.trim() !== \"\")\n                result.push(renderedCell);\n        }\n        result.push(this.indentString(\"</tr>\", 2));\n        return result;\n    }\n    renderCell(cell) {\n        let colspan = cell.getColspan();\n        let rowspan = cell.getRowspan();\n        if (cell.merged == TableCellMerge.none) {\n            let cellProps = (colspan > 1 ? ` colspan=\"${colspan}\"` : \"\") +\n                (rowspan > 1 ? ` rowspan=\"${rowspan}\"` : \"\") +\n                (cell.getTextAlignment() != TextAlignment.default ? ` style=\"${textAlignToCSS(cell.getTextAlignment())}\"` : \"\") + // ` align=\"${cell.getTextAlignment()}\"`\n                (cell.column.wrappable ? ` class=\"extend\"` : \"\");\n            let cellTag = cell.isHeaderCell() ? \"th\" : \"td\";\n            return [\"<\", cellTag, cellProps, \">\", mdToHtml(cell.text), \"</\", cellTag, \">\"].join(\"\"); // (markdown-it) mdIt.renderInline(cell.text)\n        }\n        return \"\";\n    }\n    indentString(str, indentLevel = 0) {\n        if (this.prettify)\n            return this.indent.repeat(indentLevel) + str;\n        else\n            return str;\n    }\n}\n\n/*\n    Specification: https://fletcher.github.io/MultiMarkdown-6/syntax/tables.html\n*/\nconst rowRegex$1 = /^\\|(.+)\\|$/;\nconst separatorRegex = /^\\|([\\s\\.]*:?[\\-=\\.]+:?\\+?[\\s\\.]*\\|)+$/;\nconst captionRegex = /^(\\[.+\\]){1,2}$/;\nvar ParsingState$1;\n(function (ParsingState) {\n    ParsingState[ParsingState[\"BeforeTable\"] = 0] = \"BeforeTable\";\n    ParsingState[ParsingState[\"TopCaption\"] = 1] = \"TopCaption\";\n    ParsingState[ParsingState[\"Header\"] = 2] = \"Header\";\n    ParsingState[ParsingState[\"Separator\"] = 3] = \"Separator\";\n    ParsingState[ParsingState[\"Row\"] = 4] = \"Row\";\n    ParsingState[ParsingState[\"BottomCaption\"] = 5] = \"BottomCaption\";\n    ParsingState[ParsingState[\"AfterTable\"] = 6] = \"AfterTable\";\n})(ParsingState$1 || (ParsingState$1 = {}));\nclass MultiMarkdownTableParser {\n    parse(table) {\n        let parsedTable = new Table();\n        let state = ParsingState$1.BeforeTable;\n        let startNewSection = false;\n        let hasSeparator = false;\n        let beforeTable = [];\n        let afterTable = [];\n        let isMultiline = false;\n        let wasMultiline = false;\n        // Parse line by line:\n        for (let line of table.split(\"\\n\")) {\n            /*\n                Determine parsing state and prepare:\n            */\n            // Reset values:\n            wasMultiline = isMultiline;\n            isMultiline = false;\n            // Check if we are in the table:\n            if (state == ParsingState$1.BeforeTable && (line.match(/[^|\\\\`]\\|/g) || line.trim().match(captionRegex))) {\n                if (line.trim().match(captionRegex))\n                    state = ParsingState$1.TopCaption;\n                else\n                    state = ParsingState$1.Header;\n            }\n            // Check if we are no longer in the table:\n            if (state != ParsingState$1.BeforeTable && state != ParsingState$1.AfterTable && !( // If not:\n            ((line.trim().endsWith(\"\\\\\") || wasMultiline || line.replace(/\\`[^\\`]*\\`/g, \"\").match(/[^|\\\\`]\\|/g)) /* && !line.startsWith(\"[\") && !line.endsWith(\"]\") */) || // row\n                // ↑ What was I thinking?\n                (line.trim().match(captionRegex) && (state == ParsingState$1.TopCaption || parsedTable.caption == null)) || // valid caption\n                (line.trim() === \"\" && !startNewSection && state != ParsingState$1.Separator))) { // single empty line allowed (except after separator)\n                state = ParsingState$1.AfterTable;\n                if (startNewSection)\n                    afterTable.push(\"\");\n            }\n            // If not inside table:\n            if (state == ParsingState$1.BeforeTable) {\n                beforeTable.push(line);\n                continue; // Skip the rest\n            }\n            else if (state == ParsingState$1.AfterTable) {\n                afterTable.push(line);\n                continue; // Skip the rest\n            }\n            // Is empty line?\n            if (line === \"\") {\n                if (startNewSection)\n                    throw new ParsingError(\"Invalid table: No more than one empty line allowed.\");\n                if (state == ParsingState$1.Row)\n                    startNewSection = true;\n                continue;\n            }\n            // Format table line:\n            line = line.trim();\n            if (!line.match(captionRegex)) {\n                if (!line.startsWith(\"|\")) {\n                    line = \"|\" + line;\n                }\n                if (line.endsWith(\"\\\\\")) {\n                    isMultiline = true;\n                    line = line.substring(0, line.length - 1).trim();\n                }\n                if (!line.endsWith(\"|\") ||\n                    (line.charAt(line.length - 3) != \"\\\\\" && line.endsWith(\"\\\\|\"))) { // Check if last pipe is escaped ('\\|')\n                    line = line + \"|\";\n                }\n                if (!line.match(rowRegex$1)) {\n                    throw new ParsingError(`Invalid row: ${line}`);\n                }\n            }\n            // Is separator?\n            if ((state == ParsingState$1.TopCaption || state == ParsingState$1.Header) && line.match(separatorRegex)) {\n                state = ParsingState$1.Separator;\n            }\n            // Is header?\n            else if (state == ParsingState$1.TopCaption && line.match(rowRegex$1)) {\n                state = ParsingState$1.Header;\n            }\n            // Is bottom caption?\n            else if ((state == ParsingState$1.Separator || state == ParsingState$1.Row) && line.match(captionRegex)) {\n                state = ParsingState$1.BottomCaption;\n            }\n            // If separator has been parsed last iteration:\n            else if (state == ParsingState$1.Separator) {\n                state = ParsingState$1.Row;\n            }\n            /*\n                Parse line depending on parsing state:\n            */\n            if (state == ParsingState$1.Header || state == ParsingState$1.Row) {\n                let tableRow = new TableRow();\n                if (state == ParsingState$1.Header) {\n                    tableRow.isHeader = true;\n                }\n                else {\n                    tableRow.startsNewSection = startNewSection;\n                    tableRow.isMultiline = isMultiline;\n                    startNewSection = false;\n                }\n                parsedTable.addRow(-1, tableRow);\n                // Parse each character:\n                let cellContent = \"\";\n                let colIndex = 0;\n                let slashEscaped = false;\n                let fenceEscaped = false;\n                for (let char of line.substring(1, line.length)) {\n                    if (!slashEscaped && !fenceEscaped && char == \"|\") {\n                        let tableColumn = parsedTable.getColumn(colIndex);\n                        if (!tableColumn)\n                            tableColumn = parsedTable.addColumn();\n                        let cell = new TableCell(parsedTable, tableRow, tableColumn);\n                        parsedTable.addCell(cell);\n                        if (cellContent.trim() == \"^^\") {\n                            cell.merged = TableCellMerge.above;\n                        }\n                        else if (cellContent === \"\") {\n                            cell.merged = TableCellMerge.left;\n                        }\n                        else {\n                            cell.setText(cellContent\n                                .trim()\n                                .replace(/(<\\s*[bB][rR]\\s*\\/?>)/g, \"\\n\"));\n                        }\n                        cellContent = \"\";\n                        colIndex++;\n                    }\n                    else if (!slashEscaped && char == \"\\\\\") {\n                        slashEscaped = true;\n                    }\n                    else {\n                        if (!slashEscaped && char == \"\\`\" && !isMultiline && !wasMultiline)\n                            fenceEscaped = !fenceEscaped;\n                        if (slashEscaped)\n                            cellContent += \"\\\\\";\n                        cellContent += char;\n                        slashEscaped = false;\n                    }\n                }\n                // Insert empty cells if missing:\n                for (; colIndex < parsedTable.columnCount(); colIndex++) {\n                    let cell = new TableCell(parsedTable, tableRow, parsedTable.getColumn(colIndex));\n                    parsedTable.addCell(cell);\n                }\n            }\n            else if (state == ParsingState$1.Separator) {\n                hasSeparator = true;\n                let colIndex = 0;\n                let alignment = TextAlignment.default;\n                let wrappable = false;\n                let separator = false;\n                for (let char of line.substring(1, line.length)) {\n                    if (char == \"|\") {\n                        let tableColumn = parsedTable.getColumn(colIndex);\n                        if (!tableColumn)\n                            tableColumn = parsedTable.addColumn();\n                        tableColumn.textAlign = alignment;\n                        tableColumn.wrappable = wrappable;\n                        alignment = TextAlignment.default;\n                        separator = false;\n                        wrappable = false;\n                        colIndex++;\n                    }\n                    else if (char == \":\") {\n                        if (!separator) {\n                            alignment = TextAlignment.left;\n                        }\n                        else {\n                            if (alignment == TextAlignment.left)\n                                alignment = TextAlignment.center;\n                            else\n                                alignment = TextAlignment.right;\n                        }\n                    }\n                    else if (char == \"-\" || char == \"=\") {\n                        separator = true;\n                        if (alignment == TextAlignment.right || wrappable)\n                            throw new ParsingError(\"Invalid separator\");\n                    }\n                    else if (char == \"+\") { // \"If the separator line ends with +, then cells in that column will be wrapped when exporting to LaTeX if they are long enough.\"\n                        wrappable = true;\n                    }\n                    // char == \".\" => idk ???\n                }\n            }\n            else if (state == ParsingState$1.TopCaption || state == ParsingState$1.BottomCaption) {\n                // \"If you have a caption before and after the table, only the first match will be used.\"\n                if (parsedTable.caption != null)\n                    continue;\n                let caption = new TableCaption();\n                caption.position = state == ParsingState$1.TopCaption ? TableCaptionPosition.top : TableCaptionPosition.bottom;\n                let split = line.split(/[\\[\\]]+/).filter(s => s.trim() !== \"\");\n                caption.text = split[0]\n                    .trim()\n                    .replace(/(<\\s*[bB][rR]\\s*\\/?>)/g, \"\\n\");\n                if (split.length > 1)\n                    caption.label = split[1]\n                        .trim()\n                        .replace(/\\s+/g, \"-\");\n                parsedTable.caption = caption;\n            }\n            else {\n                throw new ParsingError(`Not implemented ParsingState: ${state}`);\n            }\n        }\n        if (!hasSeparator)\n            throw new ParsingError(\"No separator row found.\");\n        parsedTable.beforeTable = beforeTable.join(\"\\n\");\n        parsedTable.afterTable = afterTable.join(\"\\n\");\n        return parsedTable.update();\n    }\n}\nclass MinifiedMultiMarkdownTableRenderer {\n    renderOutsideTable;\n    constructor(renderOutsideTable = true) {\n        this.renderOutsideTable = renderOutsideTable;\n    }\n    render(table) {\n        const headerRows = table.getHeaderRows();\n        const normalRows = table.getNormalRows();\n        let result = [];\n        if (this.renderOutsideTable && table.beforeTable.trim() !== \"\")\n            result.push(table.beforeTable);\n        // Caption (if position is top):\n        if (table.caption && table.caption.position == TableCaptionPosition.top) {\n            result.push(this.renderCaption(table.caption));\n        }\n        // Header:\n        if (headerRows.length > 0)\n            for (const row of headerRows)\n                result.push(this.renderRow(table, row));\n        // Separator:\n        result.push(this.renderSeparator(table));\n        // Rows:\n        for (const row of normalRows) {\n            if (row.startsNewSection)\n                result.push(\"\");\n            result.push(this.renderRow(table, row));\n        }\n        // Caption (if position is bottom):\n        if (table.caption && table.caption.position == TableCaptionPosition.bottom) {\n            result.push(this.renderCaption(table.caption));\n        }\n        if (this.renderOutsideTable && table.afterTable.trim() !== \"\")\n            result.push(table.afterTable);\n        return result.join(\"\\n\");\n    }\n    renderCaption(caption) {\n        let result = [];\n        if (caption.text.length > 0) {\n            result.push(`[${caption.text}]`);\n            if (caption.label.length > 0) {\n                result.push(`[${caption.label}]`);\n            }\n        }\n        return result.join(\"\");\n    }\n    renderSeparator(table) {\n        let result = [];\n        table.getColumns().forEach((col, i) => {\n            let chunk;\n            switch (col.textAlign) {\n                case TextAlignment.left:\n                    chunk = \":-\";\n                    break;\n                case TextAlignment.center:\n                    chunk = \":-:\";\n                    break;\n                case TextAlignment.right:\n                    chunk = \"-:\";\n                    break;\n                case TextAlignment.default:\n                default:\n                    chunk = \"-\";\n                    break;\n            }\n            result.push(chunk + (col.wrappable ? \"+\" : \"\"));\n        });\n        return result.join(\"|\");\n    }\n    renderRow(table, row) {\n        let result = \"\";\n        let cells = table.getCellsInRow(row);\n        cells.forEach((cell, i) => {\n            if (cell.merged == TableCellMerge.left) {\n                result += \"|\";\n            }\n            else if (cell.merged == TableCellMerge.above) {\n                result += \"^^|\";\n            }\n            else if (i == 0 && cell.text.trim() === \"\") {\n                result += \"| |\";\n            }\n            else if (cell.text.trim() === \"\") {\n                result += \" |\";\n            }\n            else {\n                let text = cell.text.trim().replace(/\\r?\\n/g, \"<br>\");\n                result += `${text}|`;\n            }\n            // Last cell:\n            if (i == cells.length - 1 && cell.text.trim() != \"\" && cell.merged != TableCellMerge.left)\n                result = result.substring(0, result.length - 1); // Omit last '|' if possible\n        });\n        if (row.isMultiline)\n            result += \" \\\\\";\n        return result;\n    }\n}\nclass PrettyMultiMarkdownTableRenderer {\n    renderOutsideTable;\n    constructor(renderOutsideTable = true) {\n        this.renderOutsideTable = renderOutsideTable;\n    }\n    render(table) {\n        const headerRows = table.getHeaderRows();\n        const normalRows = table.getNormalRows();\n        const columnWidths = this.determineColumnWidths(table);\n        let result = [];\n        if (this.renderOutsideTable && table.beforeTable.trim() !== \"\")\n            result.push(table.beforeTable);\n        // Caption (if position is top):\n        if (table.caption && table.caption.position == TableCaptionPosition.top) {\n            result.push(this.renderCaption(table.caption));\n        }\n        // Header:\n        if (headerRows.length > 0)\n            for (const row of headerRows)\n                result.push(this.renderRow(table, row, columnWidths));\n        // Separator:\n        result.push(this.renderSeparator(table, columnWidths));\n        // Rows:\n        for (const row of normalRows) {\n            if (row.startsNewSection)\n                result.push(\"\");\n            result.push(this.renderRow(table, row, columnWidths));\n        }\n        // Caption (if position is bottom):\n        if (table.caption && table.caption.position == TableCaptionPosition.bottom) {\n            result.push(this.renderCaption(table.caption));\n        }\n        if (this.renderOutsideTable && table.afterTable.trim() !== \"\")\n            result.push(table.afterTable);\n        return result.join(\"\\n\");\n    }\n    renderCaption(caption) {\n        let result = [];\n        if (caption.text.length > 0) {\n            result.push(`[${caption.text}]`);\n            if (caption.label.length > 0) {\n                result.push(`[${caption.getLabel()}]`);\n            }\n        }\n        return result.join(\"\");\n    }\n    renderSeparator(table, columnWidths) {\n        let result = [];\n        table.getColumns().forEach((col, i) => {\n            let width = columnWidths[i];\n            switch (col.textAlign) {\n                case TextAlignment.left:\n                    if (col.wrappable)\n                        result.push(`:${\"-\".repeat(width)}+`);\n                    else\n                        result.push(`:${\"-\".repeat(width + 1)}`);\n                    break;\n                case TextAlignment.center:\n                    if (col.wrappable)\n                        result.push(`:${\"-\".repeat(width - 1)}:+`);\n                    else\n                        result.push(`:${\"-\".repeat(width)}:`);\n                    break;\n                case TextAlignment.right:\n                    if (col.wrappable)\n                        result.push(`${\"-\".repeat(width)}:+`);\n                    else\n                        result.push(`${\"-\".repeat(width + 1)}:`);\n                    break;\n                case TextAlignment.default:\n                default:\n                    if (col.wrappable)\n                        result.push(`${\"-\".repeat(width + 1)}+`);\n                    else\n                        result.push(\"-\".repeat(width + 2));\n                    break;\n            }\n        });\n        return `|${result.join(\"|\")}|`;\n    }\n    renderRow(table, row, columnWidths) {\n        let result = [];\n        table.getCellsInRow(row).forEach((cell, i) => {\n            let colspan = cell.getColspan();\n            let cellWidth = columnWidths[i];\n            if (colspan > 1) {\n                for (let col = i + 1; col < i + colspan; col++)\n                    cellWidth += columnWidths[col];\n                cellWidth += colspan * 2 - 2; // + Math.floor((colspan - 1) / 2);\n            }\n            result.push(this.renderCell(cell, colspan, cellWidth));\n        });\n        return `|${result.join(\"|\")}|` + (row.isMultiline ? \" \\\\\" : \"\");\n    }\n    renderCell(cell, colspan = 1, cellWidth = -1) {\n        if (cell.merged == TableCellMerge.left)\n            return \"\";\n        let text = cell.merged == TableCellMerge.above ? \"^^\" : cell.text.replace(/\\r?\\n/g, \"<br>\");\n        const textLength = stringWidth(text);\n        switch (cell.column.textAlign) {\n            case TextAlignment.center:\n                return `${\" \".repeat(Math.max(0, Math.floor((cellWidth - textLength + colspan - 1) / 2)))} ${text} ${\" \".repeat(Math.max(0, Math.ceil((cellWidth - textLength - colspan + 1) / 2)))}`;\n            case TextAlignment.right:\n                return `${\" \".repeat(Math.max(0, cellWidth - textLength))} ${text} `;\n            case TextAlignment.left:\n            case TextAlignment.default:\n            default:\n                return ` ${text} ${\" \".repeat(Math.max(0, cellWidth - textLength))}`;\n        }\n    }\n    determineColumnWidths(table) {\n        let columnWidths = Array.from({ length: table.columnCount() }, () => 0);\n        for (let colIndex = table.columnCount() - 1; colIndex >= 0; colIndex--) {\n            const column = table.getColumn(colIndex);\n            let width = 0;\n            for (const cell of table.getCellsInColumn(column)) {\n                let colspan = cell.getColspan();\n                let textWidth = cell.merged == TableCellMerge.above ? 2 : stringWidth(cell.text.replace(/\\r?\\n/g, \"<br>\"));\n                if (colspan == 1) {\n                    width = Math.max(textWidth, width);\n                }\n                else {\n                    let leftoverWidth = columnWidths.slice(colIndex + 1, colIndex + colspan).reduce((pv, cv) => pv + cv);\n                    // let combinedWidth = width + leftoverWidth;\n                    width = Math.max(textWidth - leftoverWidth, width);\n                }\n            }\n            columnWidths.splice(colIndex, 1, width);\n        }\n        return columnWidths;\n    }\n}\n\n/*\n    Syntax: https://www.dokuwiki.org/wiki:syntax#tables\n*/\nfunction dokuWikiToMarkdown(markup) {\n    // Image:\n    markup = markup.replace(/{{([^\\|]*?)\\|?([^\\|]*?)}}/g, \"![$2]($1)\");\n    // Links:\n    markup = markup.replace(/\\[\\[([^\\|]*?)\\|?([^\\|]*?)\\]\\]/g, \"[$2]($1)\");\n    // Block code:\n    markup = markup.replace(/<code\\s+?([a-zA-Z0-9]*?)>\\n(.*?)<\\/code>/gs, \"```$1\\n$2```\");\n    // Inline code / monospaced text:\n    markup = markup.replace(/''(.*?)''/g, \"`$1`\");\n    // Oblique:\n    markup = markup.replace(/\\/\\/\\*\\*(.*?)\\*\\*\\/\\//g, \"***$1***\");\n    markup = markup.replace(/\\*\\*\\/\\/(.*?)\\/\\/\\*\\*/g, \"***$1***\");\n    // Italic:\n    markup = markup.replace(/\\/\\/(.*?)\\/\\//g, \"*$1*\");\n    // Underlined:\n    markup = markup.replace(/__(.*?)__/g, \"<u>$1</u>\");\n    // Newlines:\n    markup = markup.replace(/\\\\\\\\ /g, \"\\n\");\n    return markup;\n}\nfunction markdownToDokuWiki(markup) {\n    // Image:\n    markup = markup.replace(/!\\[([^\\[\\]]+)\\]\\(([^\\(\\)]+)\\)/g, \"{{$2|$1}}\");\n    // Links:\n    markup = markup.replace(/\\[([^\\[\\]]+)\\]\\(([^\\(\\)]+)\\)/g, \"[[$2|$1]]\");\n    // Block code:\n    markup = markup.replace(/```([a-zA-Z0-9]*?)\\n(.*?)\\n```/gs, \"<code $1>\\n$2\\n</code>\");\n    // Inline code / monospaced text:\n    markup = markup.replace(/`(.*?)`/g, \"''$1''\");\n    // Strikethrough:\n    markup = markup.replace(/~~(.*?)~~/g, \"<del>$1</del>\");\n    // Oblique:\n    markup = markup.replace(/___(.*?)___/g, \"//**$1**//\");\n    markup = markup.replace(/\\*\\*\\*(.*?)\\*\\*\\*/g, \"//**$1**//\");\n    // Bold:\n    markup = markup.replace(/__(.*?)__/g, \"**$1**\");\n    // Italic:\n    markup = markup.replace(/_(.*?)_/g, \"//$1//\");\n    markup = markup.replace(/\\*(.*?)\\*/g, \"//$1//\");\n    // Underlined:\n    markup = markup.replace(/<ins>(.*?)<\\/ins>/g, \"__$1__\");\n    markup = markup.replace(/<u>(.*?)<\\/u>/g, \"__$1__\");\n    // Superscript:\n    markup = markup.replace(/\\^(.*?)\\^/g, \"<sup>$1</sup>\");\n    // Subscript:\n    markup = markup.replace(/~(.*?)~/g, \"<sub>$1</sub>\");\n    // Escaped characters:\n    markup = markup.replace(/\\\\([#\\.\\|\\*_\\s`\\[\\]\\-])/g, \"$1\");\n    // Newlines:\n    markup = markup.replace(/<br\\s?\\/?>/g, \"\\\\\\\\ \");\n    markup = markup.replace(/\\r?\\n/g, \"\\\\\\\\ \");\n    return markup;\n}\nconst rowRegex = /^[\\|\\^](.+)[\\|\\^]$/;\nvar ParsingState;\n(function (ParsingState) {\n    ParsingState[ParsingState[\"BeforeTable\"] = 0] = \"BeforeTable\";\n    ParsingState[ParsingState[\"Row\"] = 1] = \"Row\";\n    ParsingState[ParsingState[\"AfterTable\"] = 2] = \"AfterTable\";\n})(ParsingState || (ParsingState = {}));\nclass DokuWikiTableParser {\n    convertMarkup;\n    constructor(\n    /** If true, converts DokuWiki syntax to Markdown syntax */\n    convertMarkup = true) {\n        this.convertMarkup = convertMarkup;\n    }\n    parse(table) {\n        let parsedTable = new Table();\n        let state = ParsingState.BeforeTable;\n        let beforeTable = [];\n        let afterTable = [];\n        // Parse line by line:\n        for (let line of table.trim().split(\"\\n\")) {\n            // Check if we are in the table:\n            if (state == ParsingState.BeforeTable && line.match(rowRegex)) {\n                state = ParsingState.Row;\n            }\n            // Check if we are no longer in the table:\n            if (state != ParsingState.BeforeTable && state != ParsingState.AfterTable && !line.match(rowRegex)) {\n                state = ParsingState.AfterTable;\n            }\n            // If not inside table:\n            if (state == ParsingState.BeforeTable) {\n                beforeTable.push(line);\n                continue; // Skip the rest\n            }\n            else if (state == ParsingState.AfterTable) {\n                afterTable.push(line);\n                continue; // Skip the rest\n            }\n            // Parse row:\n            if (state == ParsingState.Row) {\n                let tableRow = new TableRow();\n                parsedTable.addRow(-1, tableRow);\n                // Parse each character:\n                let cellContent = \"\";\n                let colIndex = 0;\n                let spaces = 0;\n                let leftHasSpaces = false;\n                let rightHasSpaces = false;\n                let foundCellContent = false;\n                let cellIsHeader = line.trim()[0] == \"^\";\n                let rowIsHeader = line.trim()[0] == \"^\";\n                for (let char of line.trim().substring(1, line.length)) {\n                    if (char == \"|\" || char == \"^\") {\n                        let tableColumn = parsedTable.getColumn(colIndex);\n                        if (!tableColumn)\n                            tableColumn = parsedTable.addColumn();\n                        let cell = new TableCell(parsedTable, tableRow, tableColumn);\n                        parsedTable.addCell(cell);\n                        if (foundCellContent && spaces >= 2) {\n                            rightHasSpaces = true;\n                        }\n                        cell.isHeader = cellIsHeader;\n                        if (leftHasSpaces && rightHasSpaces) {\n                            if (tableColumn.textAlign == TextAlignment.default) {\n                                tableColumn.textAlign = TextAlignment.center;\n                            }\n                            cell.textAlign = TextAlignment.center;\n                        }\n                        else if (leftHasSpaces) {\n                            if (tableColumn.textAlign == TextAlignment.default) {\n                                tableColumn.textAlign = TextAlignment.right;\n                            }\n                            cell.textAlign = TextAlignment.right;\n                        }\n                        else if (rightHasSpaces) {\n                            if (tableColumn.textAlign == TextAlignment.default) {\n                                tableColumn.textAlign = TextAlignment.left;\n                            }\n                            cell.textAlign = TextAlignment.left;\n                        }\n                        if (cellContent.trim() == \":::\") {\n                            cell.merged = TableCellMerge.above;\n                        }\n                        else if (cellContent === \"\") {\n                            cell.merged = TableCellMerge.left;\n                        }\n                        else {\n                            cellContent = this.convertMarkup\n                                ? dokuWikiToMarkdown(cellContent.trim())\n                                : cellContent.trim();\n                            cell.setText(cellContent);\n                        }\n                        cellContent = \"\";\n                        colIndex++;\n                        if (char == \"|\") {\n                            cellIsHeader = false;\n                            rowIsHeader = false;\n                        }\n                        else if (char == \"^\") {\n                            cellIsHeader = true;\n                        }\n                        spaces = 0;\n                        leftHasSpaces = false;\n                        rightHasSpaces = false;\n                        foundCellContent = false;\n                    }\n                    else if (char == \" \") {\n                        spaces++;\n                        cellContent += char;\n                    }\n                    else {\n                        if (!foundCellContent && spaces >= 2) {\n                            leftHasSpaces = true;\n                        }\n                        cellContent += char;\n                        spaces = 0;\n                        foundCellContent = true;\n                    }\n                }\n                // Insert empty cells if missing:\n                for (; colIndex < parsedTable.columnCount(); colIndex++) {\n                    let cell = new TableCell(parsedTable, tableRow, parsedTable.getColumn(colIndex));\n                    parsedTable.addCell(cell);\n                }\n                tableRow.isHeader = rowIsHeader;\n            }\n        }\n        parsedTable.beforeTable = beforeTable.join(\"\\n\");\n        parsedTable.afterTable = afterTable.join(\"\\n\");\n        return parsedTable.update();\n    }\n}\nclass DokuWikiTableRenderer {\n    convertMarkup;\n    constructor(\n    /** If true, converts Markdown syntax to DokuWiki syntax */\n    convertMarkup = true) {\n        this.convertMarkup = convertMarkup;\n    }\n    render(table) {\n        const rows = table.getRows();\n        const columnWidths = this.determineColumnWidths(table);\n        let result = [];\n        if (table.beforeTable.trim() !== \"\") {\n            result.push(table.beforeTable);\n        }\n        // DokuWiki has no table caption -- insert \"caption\" (if position is top):\n        if (table.caption && table.caption.position == TableCaptionPosition.top) {\n            result.push(this.renderCaption(table.caption));\n        }\n        // Rows:\n        for (const row of rows) {\n            result.push(this.renderRow(table, row, columnWidths));\n        }\n        // DokuWiki has no table caption -- insert \"caption\" (if position is bottom):\n        if (table.caption && table.caption.position == TableCaptionPosition.bottom) {\n            result.push(this.renderCaption(table.caption));\n        }\n        if (table.afterTable.trim() !== \"\") {\n            result.push(table.afterTable);\n        }\n        return result.join(\"\\n\");\n    }\n    renderCaption(caption) {\n        let result = \"\";\n        if (caption.position == TableCaptionPosition.bottom) {\n            result += \"\\n\";\n        }\n        result += \"> \" + caption.text;\n        if (caption.position == TableCaptionPosition.top) {\n            result += \"\\n\";\n        }\n        return result;\n    }\n    renderRow(table, row, columnWidths) {\n        let result = [];\n        let lastCellIsHeader = false;\n        table.getCellsInRow(row).forEach((cell, i) => {\n            let colspan = cell.getColspan();\n            let cellWidth = columnWidths[i];\n            if (colspan > 1) {\n                for (let col = i + 1; col < i + colspan; col++) {\n                    cellWidth += columnWidths[col];\n                }\n                cellWidth += colspan * 2 - 2;\n            }\n            lastCellIsHeader = cell.isHeaderCell();\n            result.push(this.renderCell(cell, colspan, cellWidth));\n        });\n        if (lastCellIsHeader) {\n            return `${result.join(\"\")}^`;\n        }\n        else {\n            return `${result.join(\"\")}|`;\n        }\n    }\n    renderCell(cell, colspan = 1, cellWidth = -1) {\n        let isHeader = cell.isHeaderCell();\n        let separator = isHeader ? \"^\" : \"|\";\n        if (cell.merged == TableCellMerge.left) {\n            return separator;\n        }\n        // `:::` => merge cell above\n        // `\\\\ ` => insert a newline\n        let text = cell.merged == TableCellMerge.above ? \":::\" : this.renderText(cell.text);\n        const textLength = stringWidth(text);\n        switch (cell.getTextAlignment()) {\n            case TextAlignment.center:\n                return `${separator}${\" \".repeat(Math.max(0, Math.floor((cellWidth - textLength + colspan - 1) / 2)))} ${text} ${\" \".repeat(Math.max(0, Math.ceil((cellWidth - textLength - colspan + 1) / 2)))}`;\n            case TextAlignment.right:\n                return `${separator}${\" \".repeat(Math.max(0, cellWidth - textLength))} ${text} `;\n            case TextAlignment.left:\n            case TextAlignment.default:\n            default:\n                return `${separator} ${text} ${\" \".repeat(Math.max(0, cellWidth - textLength))}`;\n        }\n    }\n    renderText(text) {\n        return this.convertMarkup ? markdownToDokuWiki(text) : text;\n    }\n    determineColumnWidths(table) {\n        let columnWidths = Array.from({ length: table.columnCount() }, () => 0);\n        for (let colIndex = table.columnCount() - 1; colIndex >= 0; colIndex--) {\n            const column = table.getColumn(colIndex);\n            let colWidth = 0;\n            for (const cell of table.getCellsInColumn(column)) {\n                let colspan = cell.getColspan();\n                let cellWidth = cell.merged == TableCellMerge.above ? 3 : stringWidth(this.renderText(cell.text));\n                // Is alignment spacing needed?\n                switch (cell.getTextAlignment()) {\n                    case TextAlignment.center:\n                        // \"Add two spaces at least at both ends for centered text\"\n                        cellWidth += 2;\n                        break;\n                    case TextAlignment.right:\n                    case TextAlignment.left:\n                        // \"Add two spaces on the left to align right, two spaces on the right to align left\"\n                        cellWidth += 1;\n                        break;\n                    case TextAlignment.default:\n                }\n                if (colspan == 1) {\n                    colWidth = Math.max(cellWidth, colWidth);\n                }\n                else {\n                    let leftoverWidth = columnWidths\n                        .slice(colIndex + 1, colIndex + colspan)\n                        .reduce((pv, cv) => pv + cv);\n                    colWidth = Math.max(cellWidth - leftoverWidth, colWidth);\n                }\n            }\n            columnWidths.splice(colIndex, 1, colWidth);\n        }\n        return columnWidths;\n    }\n}\n\nexport { CSVTableParser, CSVTableRenderer, CSVTableRendererMode, DokuWikiTableParser, DokuWikiTableRenderer, GitHubFlavoredMarkdownTableParser, GitHubFlavoredMarkdownTableRenderer, HTMLTableParser, HTMLTableParserMode, HTMLTableRenderer, MinifiedMultiMarkdownTableRenderer, MultiMarkdownTableParser, PrettyMultiMarkdownTableRenderer, Table, TableCaption, TableCaptionPosition, TableCell, TableCellMerge, TableColumn, TableRow, TextAlignment };\n//# sourceMappingURL=bundle.js.map\n","/** indicates how text is aligned in a column */\nexport enum TextAlignment {\n    left = \"left\",\n    center = \"center\",\n    right = \"right\",\n    default = \"start\"\n}\n\n/** indicates how a cell is merged with a neighboring cell */\nexport enum TableCellMerge {\n    above,\n    left,\n    none\n}\n\n/** indicates the placement of the table caption */\nexport enum TableCaptionPosition {\n    top = \"top\",\n    bottom = \"bottom\"\n}\n\nexport class IndexOutOfBoundsError extends Error {\n    constructor(msg: string) {\n        super(msg);\n\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, IndexOutOfBoundsError.prototype);\n    }\n}\n\nexport class TableCaption {\n    public constructor(\n        public text = \"\",\n        public label = \"\",\n        public position = TableCaptionPosition.top) { }\n\n    public getLabel(): string {\n        // \"If you have a caption, you can also have a label, allowing you to create anchors pointing to the table. If there is no label, then the caption acts as the label\"\n        if (typeof this.label === 'string' && this.label.trim() !== \"\")\n            return this.label.trim().replace(/\\s/g, \"-\");\n        return this.text.trim().toLowerCase().replace(/\\s/g, \"-\").replace(/[^a-zA-Z0-9]/g, \"\");\n    }\n}\n\nexport class TableCell {\n    public text: string;\n    public table: Table;\n    public row: TableRow;\n    public column: TableColumn;\n    public merged: TableCellMerge;\n    public isHeader: boolean;\n    public textAlign: TextAlignment;\n\n    public constructor(table: Table, row: TableRow, column: TableColumn) {\n        this.text = \"\";\n        this.table = table;\n        this.row = row;\n        this.column = column;\n        this.merged = TableCellMerge.none;\n        this.isHeader = false;\n        this.textAlign = TextAlignment.default;\n    }\n\n    public isHeaderCell(): boolean {\n        return this.row.isHeader || this.isHeader;\n    }\n\n    public getTextAlignment(): TextAlignment {\n        if (this.textAlign != TextAlignment.default)\n            return this.textAlign;\n        return this.column.textAlign;\n    }\n\n    public setText(text: string) {\n        this.text = text;\n    }\n\n    public getColspan(): number {\n        if (this.merged != TableCellMerge.left) {\n            let col = this.table.indexOfColumn(this.column) + 1;\n            if (col > this.table.columnCount())\n                return 1;\n\n            let colspan = 1;\n            let cells = this.table.getCellsInRow(this.row);\n            for (; col < this.table.columnCount(); col++) {\n                if (cells[col].merged == TableCellMerge.left)\n                    colspan++;\n                else\n                    break;\n            }\n            return colspan;\n        }\n        return 1;\n    }\n\n    public getRowspan(): number {\n        if (this.merged != TableCellMerge.above) {\n            let row = this.table.indexOfRow(this.row) + 1;\n            if (row > this.table.rowCount())\n                return 1;\n\n            let rowspan = 1;\n            let cells = this.table.getCellsInColumn(this.column);\n            for (; row < this.table.rowCount(); row++) {\n                if (cells[row].merged == TableCellMerge.above)\n                    rowspan++;\n                else\n                    break;\n            }\n            return rowspan;\n        }\n        return 1;\n    }\n}\n\nexport class TableRow {\n    public cells: TableCell[];\n\n    public constructor(\n        public index: number = 0,\n        public isHeader: boolean = false,\n        /** Only pertains to MultiMarkdown multiline feature. Ignored by other parsers/renderers. See Table.mergeMultilineRows() */\n        public isMultiline: boolean = false,\n        public startsNewSection: boolean = false) {\n        this.cells = [];\n    }\n\n    public updateCells(table: Table) {\n        if (table.columnCount() != this.cells.length)\n            this.cells = table.getCells().filter(cell => cell.row == this);\n        this.cells = this.cells.sort((a, b) => a.column.index - b.column.index);\n    }\n    \n    public getCell(index: number): TableCell {\n        return this.cells.at(index);\n    }\n    \n    public getCells(): TableCell[] {\n        return this.cells;\n    }\n}\n\nexport class TableColumn {\n    public cells: TableCell[];\n\n    public constructor(\n        public index: number = 0,\n        public textAlign: TextAlignment = TextAlignment.default,\n        public wrappable: boolean = false) {\n        this.cells = [];\n    }\n\n    public updateCells(table: Table) {\n        if (table.rowCount() != this.cells.length)\n            this.cells = table.getCells().filter(cell => cell.column == this);\n        this.cells = this.cells.sort((a, b) => a.row.index - b.row.index);\n    }\n    \n    public getCell(index: number): TableCell {\n        return this.cells.at(index);\n    }\n    \n    public getCells(): TableCell[] {\n        return this.cells;\n    }\n}\n\nexport class Table {\n    private cells: TableCell[];\n    private rows: TableRow[];\n    private columns: TableColumn[];\n    public caption: TableCaption;\n\n    /** Text before the table */\n    public beforeTable: string;\n\n    /** Text after the table */\n    public afterTable: string;\n\n    public constructor(rowNum: number = 0, colNum: number = 0) {\n        this.cells = [];\n        this.rows = Array.from({length: rowNum}, (_, i: number) => new TableRow(i));\n        this.columns = Array.from({length: colNum}, (_, i: number) => new TableColumn(i));\n        this.caption = null;\n        this.beforeTable = \"\";\n        this.afterTable = \"\";\n    }\n\n    /**\n     * Adds a TableRow to the table.\n     * @param index Insert row at index. -1 means it's appended.\n     * @param row (optional)\n     * @returns The added row.\n     */\n    public addRow(index: number = -1, row: TableRow = new TableRow()): TableRow {\n        if (index < 0) {\n            row.index = this.rows.push(row) - 1;\n        } else {\n            row.index = index;\n            this.rows.splice(index, 0, row);\n        }\n        return row;\n    }\n\n    /**\n     * Adds a TableColumn to the table.\n     * @param index Insert column at index. -1 means it's appended.\n     * @param col (optional)\n     * @returns The added column.\n     */\n    public addColumn(index: number = -1, col: TableColumn = new TableColumn()): TableColumn {\n        if (index < 0) {\n            col.index = this.columns.push(col);\n        } else {\n            col.index = index;\n            this.columns.splice(index, 0, col);\n        }\n        return col;\n    }\n\n    /** Gets the row at index. Negative index counts back from the end. Returns undefined if out-of-bounds. */\n    public getRow(index: number): TableRow {\n        return this.rows.at(index);\n    }\n\n    /** Gets the index of the row. -1 if it hasn't been found. */\n    public indexOfRow(row: TableRow): number {\n        return this.rows.indexOf(row);\n    }\n\n    /** Gets the column at index. Negative index counts back from the end. Returns undefined if out-of-bounds. */\n    public getColumn(index: number): TableColumn {\n        return this.columns.at(index);\n    }\n\n    /** Gets the index of the column. -1 if it hasn't been found. */\n    public indexOfColumn(col: TableColumn): number {\n        return this.columns.indexOf(col);\n    }\n\n    /**\n     * Removes the given column. Also removes all cells within the column. \n     * @param col Either index or object reference.\n    */\n    public removeColumn(col: number | TableColumn) {\n        let colObj = typeof col === \"number\" ? this.columns.at(col) : col;\n        let columnCells = this.getCellsInColumn(colObj);\n        this.cells = this.cells.filter(cell => !columnCells.includes(cell));\n        this.columns = this.columns.filter(c => c != colObj);\n    }\n\n    /**\n     * Removes the given row. Also removes all cells within the row.\n     * @param row Either index or object reference.\n     */\n    public removeRow(row: number | TableRow) {\n        let rowObj = typeof row === \"number\" ? this.rows.at(row) : row;\n        let rowCells = this.getCellsInRow(rowObj);\n        this.cells = this.cells.filter(cell => !rowCells.includes(cell));\n        this.rows = this.rows.filter(r => r != rowObj);\n    }\n\n    /**\n     * Moves the given column to the new index.\n     * @param col Either index or object reference.\n     * @param newIndex The new index of the given column.\n     * @throws {IndexOutOfBoundsError} Can't move column outside of table.\n     */\n    public moveColumn(col: number | TableColumn, newIndex: number) {\n        let colObj = typeof col === \"number\" ? this.columns.at(col) : col;\n        if (colObj === undefined || newIndex >= this.columnCount() || newIndex < 0)\n            throw new IndexOutOfBoundsError(\"(IndexOutOfBoundsError) Can't move column outside of table.\");\n        this.columns.splice(colObj.index, 1);\n        this.columns.splice(newIndex, 0, colObj);\n        colObj.index = newIndex;\n    }\n\n    /**\n     * Moves the given row to the new index.\n     * @param row Either index or object reference.\n     * @param newIndex The new index of the given row.\n     * @throws {IndexOutOfBoundsError} Can't move row outside of table.\n     */\n    public moveRow(row: number | TableRow, newIndex: number) {\n        let rowObj = typeof row === \"number\" ? this.rows.at(row) : row;\n        if (rowObj === undefined || newIndex >= this.rowCount() || newIndex < 0)\n            throw new IndexOutOfBoundsError(\"(IndexOutOfBoundsError) Can't move row outside of table.\");\n        this.rows.splice(rowObj.index, 1);\n        this.rows.splice(newIndex, 0, rowObj);\n        rowObj.index = newIndex;\n    }\n\n    /** Returns a list of all rows that are headers. */\n    public getHeaderRows(): TableRow[] {\n        return this.rows.filter(r => r.isHeader);\n    }\n\n    /** Returns a list of all rows that aren't headers. */\n    public getNormalRows(): TableRow[] {\n        return this.rows.filter(r => !r.isHeader);\n    }\n\n    /** Retruns all rows in the table, from top to bottom, including header rows. */\n    public getRows(): TableRow[] {\n        return this.rows;\n    }\n\n    /** Returns all columns in the table, from left to right. */\n    public getColumns(): TableColumn[] {\n        return this.columns;\n    }\n\n    /** Returns all cells in the table. Isn't necessarily sorted! */\n    public getCells(): TableCell[] {\n        return this.cells;\n    }\n\n    /**\n     * Returns all cells within the given row.\n     * See also: {@link TableRow.getCells()}\n     * @param row Either index or object reference.\n     */\n    public getCellsInRow(row: number | TableRow): TableCell[] {\n        return (typeof row === \"number\" ? this.rows[row] : row).cells;\n    }\n\n    /**\n     * Returns all cells within the given column.\n     * See also: {@link TableColumn.getCells()}\n     * @param column Either index or object reference.\n     */\n    public getCellsInColumn(column: number | TableColumn): TableCell[] {\n        return (typeof column === \"number\" ? this.columns[column] : column).cells;\n    }\n\n    /** Returns the cell at row and column. */\n    private getCellByObjs(rowObj: TableRow, columnObj: TableColumn): TableCell {\n        // Intersection of row / column:\n        for (const cell of rowObj.cells) {\n            if (columnObj.cells.includes(cell))\n                return cell;\n        }\n\n        let newCell = new TableCell(this, rowObj, columnObj);\n        this.addCell(newCell);\n        return newCell;\n    }\n\n    /**\n     * Returns the cell at row and column.\n     * If the cell doesn't already exist, it will be created.\n     * @param row Either index or object reference.\n     * @param column Either index or object reference.\n     * @returns The cell at row and column.\n     */\n    public getCell(row: number | TableRow, column: number | TableColumn): TableCell {\n        return this.getCellByObjs(\n            typeof row === \"number\" ? this.rows.at(row) : row,\n            typeof column === \"number\" ? this.columns.at(column) : column\n        );\n    }\n\n    /**\n     * Adds the cell to the Table and the cell's respective TableRow and TableColumn.  \n     * (Be careful not to add a cell with row/column that already exist. Otherwise, the added cell will be overshadowed and not be used.)\n     */\n    public addCell(cell: TableCell) {\n        this.cells.push(cell);\n        cell.row.cells.push(cell);\n        cell.column.cells.push(cell);\n    }\n\n    /** Returns the total amount of rows in the table, including the header rows. */\n    public rowCount(): number {\n        return this.rows.length;\n    }\n\n    /** Returns the total amount of columns in the table. */\n    public columnCount(): number {\n        return this.columns.length;\n    }\n\n    /**\n     * → Ensures that all table cells exist.  \n     * → Updates indices and sorts the cells within rows and columns.  \n     * → Tries to find invalid configurations and sanitize them.  \n     * \n     * Call this method after altering the table.\n     */\n    public update(): Table {\n        // Iterate over the entire table:\n        let columnObj: TableColumn;\n        let rowObj: TableRow;\n        for (let colIndex = 0; colIndex < this.columns.length; colIndex++) {\n            // Update the column's index:\n            columnObj = this.columns[colIndex];\n            columnObj.index = colIndex;\n\n            for (let rowIndex = 0; rowIndex < this.rows.length; rowIndex++) {\n                // Update the row's index:\n                rowObj = this.rows[rowIndex];\n                rowObj.index = rowIndex;\n\n                // Use \"getCellByObjs\" to ensure that the cell gets created, if it doesn't exist already:\n                this.getCellByObjs(rowObj, columnObj);\n            }\n        }\n\n        // Update the column's 'cells' array:\n        for (const column of this.columns)\n            column.updateCells(this);\n\n        // Update the row's 'cells' array:\n        for (const row of this.rows)\n            row.updateCells(this);\n\n        this.sanitize();\n        return this;\n    }\n\n    /** Tries to find invalid configurations and sanitize them. */\n    private sanitize(): Table {\n        if (this.getNormalRows().length > 0) {\n            // Cannot merge cell above if in first row:\n            for (const cell of this.getCellsInRow(this.getNormalRows()[0])) {\n                if (cell.merged == TableCellMerge.above)\n                    cell.merged = TableCellMerge.none;\n            }\n    \n            this.getNormalRows()[0].startsNewSection = false;\n        }\n\n        for (const cell of this.cells) {\n            // Cannot merge cell left if in first column:\n            if (cell.column == this.columns[0] && cell.merged == TableCellMerge.left)\n                cell.merged = TableCellMerge.none;\n\n            // Cannot merge cell above if in first row:\n            if ((cell.row == this.rows[0] || cell.row.startsNewSection) && cell.merged == TableCellMerge.above)\n                cell.merged = TableCellMerge.none;\n        }\n        \n        return this;\n    }\n\n    /**\n     * Merges multiline rows (from MultiMarkdown feature) into \"normal\" rows.  \n     * This will destroy MultiMarkdown formatting! Only use when rendering into different formats.\n     */\n    public mergeMultilineRows(): Table {\n        let newRows: TableRow[] = [];\n\n        let merging = false;\n        let actualRowIndex = 0;\n        this.getRows().forEach((row, index) => {\n            if (merging) {\n                row.getCells().forEach((cell, index) => {\n                    const parentCell = newRows[actualRowIndex - 1].getCell(index);\n                    parentCell.setText(parentCell.text + \"\\n\" + cell.text);\n                });\n            } else {\n                row.index = actualRowIndex;\n                newRows.push(row);\n                actualRowIndex++;\n            }\n\n            if (!merging && row.isMultiline) {\n                merging = true;\n            } else if (merging && !row.isMultiline) {\n                merging = false;\n            }\n\n            row.isMultiline = false;\n        });\n\n        this.rows = newRows;\n        this.update();\n\n        return this;\n    }\n}\n\n","import { Table, TableCell } from \"./table.js\";\nimport { TableParser } from \"./tableParser.js\";\nimport { TableRenderer } from \"./tableRenderer.js\";\n\n/*\n * Due to the nature of CSV tables, some data will be lost when converting MMD (or HTML) to CSV.\n *\n * CSV file specifications and implementation:\n * https://www.rfc-editor.org/rfc/rfc4180\n * http://super-csv.github.io/super-csv/csv_specification.html\n */\n\nexport class CSVTableParser implements TableParser {\n    public constructor(\n        public separator = \",\",\n        public quote = \"\\\"\",\n        public assumeFirstLineIsHeader = true) { }\n\n    public parse(table: string): Table {\n        /*\n            Prepare csv string:\n        */\n        let csv = table.replace(/\\r?\\n/g, \"\\n\");\n        if (!csv.endsWith(\"\\n\"))\n            csv += \"\\n\";\n\n        /*\n            Parse csv string:\n        */\n        let parsedTable = new Table();\n        let tableRow = parsedTable.addRow();\n        tableRow.isHeader = this.assumeFirstLineIsHeader;\n        let cellContent: string = \"\";\n        let rowIndex = 0;\n        let colIndex = 0;\n        let isQuoted = false;\n        let lastChar = null;\n\n        for (const char of csv) {\n            // Comma or newline:\n            if ((char == this.separator || char == \"\\n\") && !isQuoted) {\n                // Get column:\n                let tableColumn;\n                if (rowIndex == 0)\n                    tableColumn = parsedTable.addColumn();\n                else\n                    tableColumn = parsedTable.getColumn(colIndex);\n\n                // Set table cell content:\n                let tableCell = new TableCell(parsedTable, tableRow, tableColumn);\n                tableCell.setText(cellContent);\n                parsedTable.addCell(tableCell);\n                //parsedTable.getCellByObjs(tableRow, tableColumn).setText(cellContent);\n\n                cellContent = \"\";\n                colIndex++;\n\n                // If it's a newline:\n                if (char == \"\\n\") {\n                    // Add a new row to the table:\n                    tableRow = parsedTable.addRow();\n                    rowIndex++;\n                    colIndex = 0;\n                }\n            } else if (char == this.quote) {\n                if (!isQuoted && lastChar == this.quote) {\n                    cellContent += this.quote;\n                }\n                isQuoted = !isQuoted;\n            } else {\n                cellContent += char;\n            }\n            lastChar = char;\n        }\n\n        // Remove unused row:\n        parsedTable.removeRow(tableRow);\n\n        return parsedTable;\n    }\n}\n\n/** changes the output of CSVTableRenderer */\nexport enum CSVTableRendererMode {\n    OmitSpecialCharacters,\n    EscapeWithQuotes,\n    AlwaysUseQuotes\n}\n\nexport class CSVTableRenderer implements TableRenderer {\n    public constructor(\n        public separator = \",\",\n        public quote = \"\\\"\",\n        public lineBreak = \"\\r\\n\",\n        public mode = CSVTableRendererMode.EscapeWithQuotes) { }\n\n    public render(table: Table): string {\n        let specialCharactersRegex = new RegExp(`([${this.separator}${this.quote}]|\\r\\n|\\n)`);\n        let specialCharactersRegexGlobal = new RegExp(`([${this.separator}${this.quote}]|\\r\\n|\\n)`, \"g\");\n        let quoteRegex = new RegExp(this.quote, \"g\");\n        let csv: string[] = [];\n        for (const row of table.getRows()) {\n            let renderedRow: string[] = [];\n            for (const cell of table.getCellsInRow(row)) {\n                switch (this.mode) {\n                    case CSVTableRendererMode.AlwaysUseQuotes:\n                        renderedRow.push(`${this.quote}${cell.text.replace(quoteRegex, this.quote.repeat(2))}${this.quote}`);\n                        break;\n                    case CSVTableRendererMode.EscapeWithQuotes:\n                        if (specialCharactersRegex.test(cell.text)) {\n                            renderedRow.push(`${this.quote}${cell.text.replace(quoteRegex, this.quote.repeat(2))}${this.quote}`);\n                        } else {\n                            renderedRow.push(cell.text);\n                        }\n                        break;\n                    case CSVTableRendererMode.OmitSpecialCharacters:\n                        renderedRow.push(cell.text.replace(specialCharactersRegexGlobal, \"\"));\n                        break;\n                }\n            }\n            csv.push(renderedRow.join(this.separator));\n        }\n        return csv.join(this.lineBreak);\n    }\n}","import { Table } from \"./table.js\";\n\nexport class ParsingError extends Error {\n    constructor(msg: string) {\n        super(msg);\n\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, ParsingError.prototype);\n    }\n}\n\nexport interface TableParser {\n    parse(table: string): Table;\n}","import { Table, TableCaption, TableCaptionPosition, TableCell, TableCellMerge, TableColumn, TableRow, TextAlignment } from \"./table.js\";\nimport { ParsingError, TableParser } from \"./tableParser.js\";\nimport { TableRenderer } from \"./tableRenderer.js\";\nimport stringWidth from \"string-width\";\n\n/*\n    Specification: https://github.github.com/gfm/#tables-extension-\n*/\n\nconst rowRegex = /^\\|(.+)\\|$/\nconst delimiterRowRegex = /^\\|(\\s*:?\\-+:?\\s*\\|)+$/;\n\nenum ParsingState {\n    BeforeTable,\n    HeaderRow,\n    DelimiterRow,\n    DataRows,\n    AfterTable\n}\n\nexport class GitHubFlavoredMarkdownTableParser implements TableParser {\n    public parse(table: string): Table {\n        let parsedTable = new Table();\n        let state = ParsingState.BeforeTable;\n        let hasDelimiterRow = false;\n        let beforeTable = [];\n        let afterTable = [];\n\n        // Now parse line by line:\n        for (let line of table.split(\"\\n\")) {\n            /*\n                Determine parsing state and prepare:\n            */\n\n            // Check if we are in the table:\n            if (state == ParsingState.BeforeTable && line.match(/[^|\\\\`]\\|/g)) {\n                state = ParsingState.HeaderRow;\n            }\n\n            // The table is broken at the first empty line, or beginning of another block-level structure:\n            if (line.trim() === \"\" || line.trim().startsWith(\"> \")){\n                state = ParsingState.AfterTable;\n            }\n\n            // If not inside table:\n            if (state == ParsingState.BeforeTable) {\n                beforeTable.push(line);\n                continue; // Skip the rest\n            } else if (state == ParsingState.AfterTable) {\n                afterTable.push(line);\n                continue; // Skip the rest\n            }\n\n            // Format table line:\n            line = line.trim();\n            if (!line.startsWith(\"|\"))\n                line = \"|\" + line;\n\n            if (!line.endsWith(\"|\") ||\n                (line.charAt(line.length - 3) != \"\\\\\" && line.endsWith(\"\\\\|\"))) // Check if last pipe is escaped ('\\|')\n                line = line + \"|\";\n\n            if (!line.match(rowRegex))\n                throw new ParsingError(`Invalid row: ${line}`);\n\n            // Is delimiter row too early?\n            if (state == ParsingState.HeaderRow && line.match(delimiterRowRegex)) {\n                throw new ParsingError(\"Header row missing.\");\n            }\n\n            /*\n                Parse line depending on parsing state:\n            */\n            \n            if (state == ParsingState.HeaderRow || state == ParsingState.DataRows) {\n                let tableRow = new TableRow();\n                tableRow.isHeader = state == ParsingState.HeaderRow;\n                parsedTable.addRow(-1, tableRow);\n\n                // Parse each character:\n                let cellContent = \"\";\n                let colIndex = 0;\n                let slashEscaped = false;\n                let fenceEscaped = false;\n                for (let char of line.substring(1, line.length)) {\n                    if (!slashEscaped && !fenceEscaped && char == \"|\") {\n                        // Ignore excess cells:\n                        if (state == ParsingState.HeaderRow || colIndex < parsedTable.columnCount()) {\n                            let tableColumn = parsedTable.getColumn(colIndex);\n                            if (!tableColumn)\n                                tableColumn = parsedTable.addColumn();\n                            let cell = new TableCell(parsedTable, tableRow, tableColumn);\n                            parsedTable.addCell(cell);\n                            cell.setText(\n                                cellContent\n                                .trim()\n                                .replace(/(<[bB][rR]\\s*\\/?>)/g, \"\\n\")\n                            );\n                        }\n                        cellContent = \"\";\n                        colIndex++;\n                    } else if (!slashEscaped && char == \"\\\\\") {\n                        slashEscaped = true;\n                    } else {\n                        if (!slashEscaped && char == \"\\`\")\n                            fenceEscaped = !fenceEscaped;\n                        if (slashEscaped)\n                            cellContent += \"\\\\\";\n                        cellContent += char;\n                        slashEscaped = false;\n                    }\n                }\n\n                // Insert empty cells if missing:\n                for (; colIndex < parsedTable.columnCount(); colIndex++) {\n                    let cell = new TableCell(parsedTable, tableRow, parsedTable.getColumn(colIndex));\n                    parsedTable.addCell(cell);\n                }\n\n                // If the header row has been parsed, parse the delimiter row next:\n                if (state == ParsingState.HeaderRow)\n                    state = ParsingState.DelimiterRow;\n            }\n            else if (state == ParsingState.DelimiterRow) {\n                if (!line.match(delimiterRowRegex))\n                    throw new ParsingError(\"Invalid delimiter row\");\n\n                hasDelimiterRow = true;\n                let colIndex = 0;\n                let alignment = TextAlignment.default;\n                let separator = false;\n                for (let char of line.substring(1, line.length)) {\n                    if (char == \"|\") {\n                        let tableColumn = parsedTable.getColumn(colIndex);\n                        if (!tableColumn)\n                            throw new ParsingError(\"Header row doesn't match the delimiter row in the number of cells.\");\n                        tableColumn.textAlign = alignment;\n\n                        alignment = TextAlignment.default;\n                        separator = false;\n                        colIndex++;\n                    } else if (char == \":\") {\n                        if (!separator) {\n                            alignment = TextAlignment.left;\n                        } else {\n                            if (alignment == TextAlignment.left)\n                                alignment = TextAlignment.center;\n                            else\n                                alignment = TextAlignment.right;\n                        }\n                    } else if (char == \"-\") {\n                        separator = true;\n                        if (alignment == TextAlignment.right)\n                            throw new ParsingError(\"Invalid delimiter row (minus sign after colon)\");\n                    } else if (!char.match(/\\s/g)) {\n                        throw new ParsingError(`Unexpected character in delimiter row: '${char}'`);\n                    }\n                }\n                \n                if (colIndex < parsedTable.columnCount()) {\n                    throw new ParsingError(\"Header row doesn't match the delimiter row in the number of cells.\");\n                }\n\n                // Once the delimiter row has been parsed, parse the data rows next:\n                state = ParsingState.DataRows;\n            }\n            else {\n                throw new ParsingError(`Not implemented ParsingState: ${state}`);\n            }\n        }\n\n        if (!hasDelimiterRow)\n            throw new ParsingError(\"No delimiter row found.\");\n\n        parsedTable.beforeTable = beforeTable.join(\"\\n\");\n        parsedTable.afterTable = afterTable.join(\"\\n\");\n\n        return parsedTable.update();\n    }\n}\n\nexport class GitHubFlavoredMarkdownTableRenderer implements TableRenderer {\n    public constructor(\n        public prettify = true,\n        public renderOutsideTable = true) { }\n\n    public render(table: Table): string {\n        const headerRow = table.getHeaderRows()[0];\n        const dataRows = table.getNormalRows();\n        const columnWidths: number[] = this.prettify ? this.determineColumnWidths(table) : null;\n\n        let result: string[] = [];\n\n        if (this.renderOutsideTable && table.beforeTable.trim() !== \"\")\n            result.push(table.beforeTable);\n\n        // Header row:\n        result.push(this.renderRow(table, headerRow, columnWidths));\n\n        // Delimiter row:\n        result.push(this.renderDelimiterRow(table, columnWidths));\n\n        // Data rows:\n        for (const row of dataRows)\n            result.push(this.renderRow(table, row, columnWidths));\n\n        if (this.renderOutsideTable && table.afterTable.trim() !== \"\")\n            result.push(table.afterTable);\n\n        return result.join(\"\\n\");\n    }\n\n    private renderDelimiterRow(table: Table, columnWidths: number[]): string {\n        let result: string[] = [];\n\n        table.getColumns().forEach((col, i) => {\n            let width = this.prettify ? columnWidths[i] : null;\n            switch (col.textAlign) {\n                case TextAlignment.left:\n                    result.push(this.prettify ? `:${\"-\".repeat(width + 1)}` : \":-\");\n                    break;\n                case TextAlignment.center:\n                    result.push(this.prettify ? `:${\"-\".repeat(width)}:` : \":-:\");\n                    break;\n                case TextAlignment.right:\n                    result.push(this.prettify ? `${\"-\".repeat(width + 1)}:` : \"-:\");\n                    break;\n                case TextAlignment.default:\n                default:\n                    result.push(this.prettify ? \"-\".repeat(width + 2) : \"-\");\n                    break;\n            }\n        });\n\n        if (this.prettify)\n            return `|${result.join(\"|\")}|`;\n        else\n            return result.join(\"|\");\n    }\n\n    private renderRow(table: Table, row: TableRow, columnWidths: number[]): string {\n        let result: string[] = [];\n\n        row.getCells().forEach((cell, i) => {\n            result.push(this.renderCell(cell, this.prettify ? columnWidths[i] : null));\n            if (!this.prettify && i == row.getCells().length - 1 && cell.text.trim() == \"\")\n                result.push(\"\");\n        });\n\n        if (this.prettify)\n            return `|${result.join(\"|\")}|`;\n        else\n            return result.join(\"|\");\n    }\n\n    private renderCell(cell: TableCell, cellWidth: number = -1): string {\n        let text = cell.text.replace(/\\r?\\n/g, \"<br>\");\n\n        if (!this.prettify){\n            return text;\n        }\n\n        const textLength = stringWidth(text);\n\n        switch (cell.column.textAlign) {\n            case TextAlignment.center:\n                return `${\" \".repeat(Math.max(0, Math.floor((cellWidth - textLength) / 2)))} ${text} ${\" \".repeat(Math.max(0, Math.ceil((cellWidth - textLength) / 2)))}`;\n            case TextAlignment.right:\n                return `${\" \".repeat(Math.max(0, cellWidth - textLength))} ${text} `;\n            case TextAlignment.left:\n            case TextAlignment.default:\n            default:\n                return ` ${text} ${\" \".repeat(Math.max(0, cellWidth - textLength))}`;\n        }\n    }\n    \n    private determineColumnWidth(table: Table, column: TableColumn): number {\n        let width = 0;\n        for (const cell of table.getCellsInColumn(column)) {\n            const cellTextLength = stringWidth(cell.text.replace(/\\r?\\n/g, \"<br>\"));\n            width = Math.max(cellTextLength, width);\n        }\n        return width;\n    }\n\n    private determineColumnWidths(table: Table): number[] {\n        return table.getColumns().map(column => this.determineColumnWidth(table, column));\n    }\n}","import TurndownService from \"turndown\";\n\nexport function removeInvisibleCharacters(str: string): string {\n    // See: https://www.utf8-chartable.de/unicode-utf8-table.pl\n    //      https://stackoverflow.com/a/13836410\n    // /[^\\u0000-\\u007E]/g\n    // /\\u00AD/g - soft hyphen\n    // /[^\\u0020-\\u007E\\u00A1-\\u00AC\\u00AE-\\u00FF]/g\n    return str\n        .replace(/[\\u0000-\\u0009\\u000B\\u000C\\u000E-\\u001F\\u007F-\\u009F]/g, \"\") // Control characters\n        .replace(/[\\u00AD\\u2007\\u200C\\u2028-\\u202F\\u2060-\\u206F\\uFEFF]/g, \"\") // Invisible characters, such as &shy; or \"Zero Width Non-Joiner\"\n        .replace(/\\u00A0/g, \"&nbsp;\")\n        .replace(/\\u2002/g, \"&ensp;\")\n        .replace(/\\u2003/g, \"&emsp;\")\n        .replace(/\\u2009/g, \"&thinsp;\");\n    //.replace(/[\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F5-\\u05FF\\u070E\\u074B\\u074C\\u07B2-\\u07BF\\u07FB\\u07FC\\u082E\\u082F\\u083F]/g, \"\"); // Weird characters\n}\n\n/**\n * Returns a TurndownService object configured for my own taste...\n * (of course, if you don't like it, you can configure it to fit your needs)\n */\nexport function getTurndownService(): TurndownService {\n    const turndownService = new TurndownService({\n        headingStyle: \"atx\",\n        hr: \"---\",\n        bulletListMarker: \"-\",\n        codeBlockStyle: \"fenced\",\n        fence: \"```\",\n        emDelimiter: \"*\",\n        strongDelimiter: \"**\",\n        linkStyle: \"inlined\",\n        linkReferenceStyle: \"full\",\n    });\n\n    // Add strikethrough:\n    turndownService.addRule(\"strikethrough\", {\n        filter: [\"del\", \"s\"], // , 'strike'\n        replacement: function (content) {\n            return \"~~\" + content + \"~~\";\n        },\n    });\n\n    // Add blockquote:\n    /*turndownService.addRule('blockquote', {\n        filter: ['blockquote'],\n        replacement: function (content) {\n            return '> ' + content;\n        }\n    });*/\n\n    // Filter table tags:\n    turndownService\n        .remove(\"table\")\n        .remove(\"tbody\")\n        .remove(\"thead\")\n        .remove(\"tr\")\n        .remove(\"td\")\n        .remove(\"th\");\n\n    return turndownService;\n}","import * as cheerio from 'cheerio';\nimport * as htmlparser2 from 'htmlparser2';\nimport TurndownService from 'turndown';\nimport { getTurndownService, removeInvisibleCharacters } from \"./common.js\";\nimport { Table, TableCaption, TableCaptionPosition, TableCell, TableCellMerge, TableRow, TextAlignment } from \"./table.js\";\nimport { ParsingError, TableParser } from \"./tableParser.js\";\nimport { TableRenderer } from \"./tableRenderer.js\";\n\nfunction escapeMarkdown(mdStr: string): string {\n    return mdStr.replace(/\\|/g, \"\\\\|\");\n}\n\nfunction mdToHtml(markdown: string, inline = true): string {\n    let html = markdown.trim(); // escape(markdown);\n\n    // Blockquote:\n    if (!inline) {\n        let lines = [];\n        let quoted = false;\n        for (let line of html.split(/\\r?\\n/)) {\n            if (line.startsWith(\"> \")) {\n                if (!quoted)\n                    lines.push(\"<blockquote>\");\n                quoted = true;\n\n                lines.push(`<p>${mdToHtml(line.substring(2))}</p>`);\n            } else {\n                if (quoted)\n                    lines.push(\"</blockquote>\");\n                quoted = false;\n\n                lines.push(line);\n            }\n            if (quoted)\n                lines.push(\"</blockquote>\");\n        }\n        html = lines.join(\"\\n\");\n\n        if (!html.startsWith(\"<blockquote>\"))\n            html = `<p>${html}</p>`;\n    }\n\n    // Image:\n    html = html.replace(/!\\[([^\\[\\]]+)\\]\\(([^\\(\\)]+)\\)/g, \"<img src=\\\"$2\\\" alt=\\\"$1\\\">\");\n\n    // Links:\n    html = html.replace(/\\[([^\\[\\]]+)\\]\\(([^\\(\\)]+)\\)/g, \"<a href=\\\"$2\\\">$1</a>\");\n\n    // Block code:\n    html = html.replace(/```[a-z]*?\\n(.*?)\\n```/g, \"<code>$1</code>\");\n\n    // Inline code:\n    html = html.replace(/`(.*?)`/g, \"<code>$1</code>\");\n\n    // Strikethrough:\n    html = html.replace(/~~(.*?)~~/g, \"<del>$1</del>\");\n\n    // Oblique:\n    html = html.replace(/___(.*?)___/g, \"<em><strong>$1</strong></em>\");\n    html = html.replace(/\\*\\*\\*(.*?)\\*\\*\\*/g, \"<em><strong>$1</strong></em>\");\n\n    // Bold:\n    html = html.replace(/__(.*?)__/g, \"<strong>$1</strong>\");\n    html = html.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\n\n    // Italic:\n    html = html.replace(/_(.*?)_/g, \"<em>$1</em>\");\n    html = html.replace(/\\*(.*?)\\*/g, \"<em>$1</em>\");\n\n    // Escaped characters:\n    html = html.replace(/\\\\([#\\.\\|\\*_\\s`\\[\\]\\-])/g, \"$1\");\n\n    // Newlines:\n    if (inline)\n        html = html.replace(/\\r?\\n/g, \"<br>\");\n    else\n        html = html.replace(/(\\r?\\n){2}/g, \"</p>\\n<p>\").replace(/(?<!\\<\\\\p\\>)\\r?\\n(?!\\<p\\>)/g, \" \");\n\n    // Remove unnecessary whitespace:\n    html = html.replace(/[ \\t]{2,}/g, \" \");\n\n    return html;\n}\n\nfunction htmlToMd(html: string, turndownService: TurndownService) {\n    return turndownService.turndown(html);\n}\n\nfunction textAlignToCSS(textAlign: TextAlignment) {\n    switch (textAlign) {\n        case TextAlignment.left:\n            return \"text-align: left\";\n        case TextAlignment.right:\n            return \"text-align: right\";\n        case TextAlignment.center:\n            return \"text-align: center\";\n        case TextAlignment.default:\n        default:\n            return \"text-align: start\";\n    }\n}\n\nfunction cssToTextAlign(element: cheerio.Cheerio): TextAlignment {\n    if (!element.css(\"text-align\")) // Might return 'undefined'\n        return TextAlignment.default;\n        \n    switch (element.css(\"text-align\").toLowerCase()) {\n        case \"left\":\n            return TextAlignment.left;\n        case \"center\":\n            return TextAlignment.center;\n        case \"right\":\n            return TextAlignment.right;\n        default:\n            return TextAlignment.default;\n    }\n}\n\n/** changes the behavior of HTMLTableParser */\nexport enum HTMLTableParserMode {\n    /** uses only text (`Cheerio.text()`) */\n    StripHTMLElements,\n    /** uses the HTML code (`Cheerio.html()`) without any converting */\n    PreserveHTMLElements,\n    /** uses the HTML code (`Cheerio.html()`) and converts to Markdown using Turndown if possible (default) */\n    ConvertHTMLElements, \n}\n\nexport class HTMLTableParser implements TableParser {\n    public constructor(\n        public mode: HTMLTableParserMode = HTMLTableParserMode.ConvertHTMLElements,\n        public turndownService: TurndownService = getTurndownService()) {}\n\n    public parse(table: string): Table {\n        /*\n            Parse the html string and find our <table> tag to start:\n        */\n        const dom = htmlparser2.parseDocument(table, {\n            xmlMode: false,\n            lowerCaseTags: true,\n            lowerCaseAttributeNames: true,\n            decodeEntities: true,\n        });\n        const $ = cheerio.load(dom as any);\n        const $tables = $(\"table\");\n        if ($tables.length === 0) {\n            throw new ParsingError(\"Couldn't find <table> tag in DOM.\");\n        }\n        const $table = $($tables[0]);\n\n        /*\n            Converting table to Markdown:\n        */\n        let parsedTable = new Table();\n        let hasSections = false;\n        let tableTextAlign = cssToTextAlign($table);\n\n        // Get everything before <table>:\n        let m = table.match(/((.|\\n)*)<\\s*[tT][aA][bB][lL][eE][^<>]*>/m);\n        if (m) {\n            parsedTable.beforeTable = htmlToMd(m[1], this.turndownService);\n        }\n\n        // Get everything after </table>:\n        m = table.match(/<\\/\\s*[tT][aA][bB][lL][eE]\\s*>((.|\\n)*)/m);\n        if (m) {\n            parsedTable.afterTable = htmlToMd(m[1], this.turndownService);\n        }\n\n        // Parse <thead> tag in <table>:\n        let $theads = $table.find(\"thead\");\n        if ($theads.length != 0) {\n            let sectionTextAlign = cssToTextAlign($theads);\n            this.parseSection(\n                $,\n                parsedTable,\n                $theads.find(\"tr\"),\n                (sectionTextAlign != TextAlignment.default ? sectionTextAlign : tableTextAlign),\n                true);\n            hasSections = true;\n        }\n\n        // Parse <tbody> tags in <table>:\n        const self = this;\n        let $tbodies = $table.find(\"tbody\");\n        if ($tbodies.length > 0) {\n            $tbodies.each((i: number, element: cheerio.Element) => {\n                const domTBody = $(element);\n                let sectionTextAlign = cssToTextAlign(domTBody);\n                self.parseSection(\n                    $,\n                    parsedTable,\n                    domTBody.find(\"tr\"),\n                    (sectionTextAlign != TextAlignment.default ? sectionTextAlign : tableTextAlign),\n                    false,\n                    $theads == null,\n                    i > 0);\n            });\n            hasSections = true;\n        }\n\n        // No <thead> or <tbody> tags?\n        if (!hasSections) {\n            // Parse table that doesn't have thead or tbody tags as one section with no header:\n            this.parseSection(\n                $,\n                parsedTable,\n                $table.find(\"tr\"),\n                tableTextAlign,\n                false,\n                true,\n                false);\n        }\n\n        // Parse <caption> tag in <table>:\n        let $captions = $table.find(\"caption\");\n        if ($captions.length != 0) {\n            const $caption = $($captions);\n            let caption = new TableCaption();\n            caption.text = htmlToMd($caption.html() ? $caption.html() : \"\", this.turndownService).replace(/(\\r?\\n)/g, \"\").trim(); // domCaption.innerText.replace(/(\\r?\\n|\\[|\\])/g, \"\").trim();\n            if ($caption.attr('id') && caption.getLabel() != $caption.attr('id'))\n                caption.label = $caption.attr('id').replace(/(\\r?\\n|\\[|\\])/g, \"\").trim();\n            switch ($caption.css(\"caption-side\") && $caption.css(\"caption-side\").toLowerCase()) {\n                case \"bottom\":\n                    caption.position = TableCaptionPosition.bottom;\n                    break;\n                case \"top\":\n                default:\n                    caption.position = TableCaptionPosition.top;\n            }\n            parsedTable.caption = caption;\n        }\n\n        return parsedTable.update();\n    }\n\n    private parseSection($: cheerio.Root, table: Table, $rows: cheerio.Cheerio, defaultTextAlign: TextAlignment, isHeader: boolean = false, allowHeaderDetection: boolean = false, firstRowStartsNewSection: boolean = false) {\n        // HTML skips \"ghost\" cells that are overshadowed by other cells that have a rowspan > 1.\n        // We'll memorize them:\n        let rowspanGhostCells: { row: number; col: number; }[] = [];\n\n        // Remember how many rows we already have:\n        let rowOffset = table.rowCount();\n\n        // Iterate over each row (<tr>) of the HTML table:\n        $rows.each((domRowIndex: number, element: cheerio.Element) => {\n            let rowIndex = domRowIndex + rowOffset;\n            let row = table.getRow(rowIndex);\n            if (!row)\n                row = table.addRow();\n            row.isHeader = isHeader;\n            if (domRowIndex == 0)\n                row.startsNewSection = firstRowStartsNewSection;\n\n            // Memorize an offset (colspan):\n            let colOffset = 0;\n\n            // Iterate over each cell (<td> or <th>) of the HTML table row:\n            const $row = $(element);\n            let $cells = $row.find(\"td, th\");\n            let allCellsAreTH = true;\n            $cells.each((domColIndex: number, element: cheerio.Element) => {\n                const $cell = $(element);\n                // Get the TableColumn of our Table object, taking the memorized rowspans and colOffset into account:\n                let colIndex = domColIndex + colOffset;\n                while (rowspanGhostCells.filter(ghost => ghost.row == rowIndex && ghost.col == colIndex).length > 0) {\n                    colIndex = domColIndex + ++colOffset;\n                }\n                let column = table.getColumn(colIndex);\n                if (!column)\n                    column = table.addColumn();\n\n                // Add cell to our Table object:\n                let cellContent = this.parseCell($cell);\n                let textAlign = cssToTextAlign($cell);\n                let wrappable = $cell.hasClass(\"extend\");\n                textAlign = textAlign != TextAlignment.default ? textAlign : defaultTextAlign;\n                let cellIsHeader = $cell.prop(\"tagName\").toLowerCase() == \"th\";\n                allCellsAreTH = allCellsAreTH && cellIsHeader;\n\n                let cell = new TableCell(table, row, column);\n                cell.setText(cellContent);\n                cell.textAlign = textAlign;\n                cell.isHeader = cellIsHeader;\n                if (column.textAlign == TextAlignment.default) {\n                    column.textAlign = textAlign;\n                }\n                column.wrappable = wrappable;\n                table.addCell(cell);\n\n                // Take \"colspan\" into account:\n                let colspan = $cell.prop(\"colspan\");\n                if (colspan > 1) {\n                    // Add empty cells to our Table object:\n                    for (let i = 1; i < colspan; i++) {\n                        let nextColumn = table.getColumn(colIndex + i);\n                        if (!nextColumn)\n                            nextColumn = table.addColumn();\n                        let mergedCell = table.getCell(row, nextColumn);\n                        mergedCell.merged = TableCellMerge.left;\n                    }\n\n                    // Add colspan to colOffset:\n                    colOffset += colspan - 1;\n                }\n\n                // Take \"rowspan\" into account:\n                let rowspan = $cell.prop(\"rowspan\");\n                if (rowspan > 1) {\n                    // Add empty cells to our Table object:\n                    for (let i = 1; i < rowspan; i++) {\n                        let nextRow = table.getRow(rowIndex + i);\n                        if (!nextRow)\n                            nextRow = table.addRow();\n                        nextRow.isHeader = isHeader;\n                        let mergedCell = table.getCell(nextRow, column);\n                        mergedCell.merged = TableCellMerge.above;\n\n                        // Memorize \"ghost\" cells:\n                        rowspanGhostCells.push({\n                            \"row\": rowIndex + i,\n                            \"col\": colIndex\n                        });\n                    }\n                }\n            });\n\n            // Detect headers:\n            if (allowHeaderDetection && !isHeader) {\n                row.isHeader = allCellsAreTH;\n            }\n        });\n    }\n\n    private parseCell($cell: cheerio.Cheerio): string {\n        switch (this.mode) {\n            case HTMLTableParserMode.PreserveHTMLElements:\n                return removeInvisibleCharacters(escapeMarkdown($cell.html()));\n            case HTMLTableParserMode.StripHTMLElements:\n                return removeInvisibleCharacters(escapeMarkdown($cell.text()));\n            case HTMLTableParserMode.ConvertHTMLElements:\n            default:\n                return removeInvisibleCharacters(escapeMarkdown(htmlToMd($cell.html(), this.turndownService)));\n        }\n    }\n}\n\nexport class HTMLTableRenderer implements TableRenderer {\n    public constructor(\n        public prettify = true,\n        public indent = \"  \",\n        public renderOutsideTable = true) { }\n\n    public render(table: Table): string {\n        let result: string[] = [];\n\n        if (this.renderOutsideTable && table.beforeTable.trim() !== \"\")\n            result.push(mdToHtml(table.beforeTable, false));\n\n        result.push(\"<table>\");\n\n        let headerRows = table.getHeaderRows();\n        let normalRows = table.getNormalRows();\n\n        if (headerRows.length > 0) {\n            result.push(this.indentString(\"<thead>\", 1));\n            for (const row of headerRows)\n                result.push(...this.renderRow(table, row));\n            result.push(this.indentString(\"</thead>\", 1));\n        }\n\n        if (normalRows.length > 0) {\n            result.push(this.indentString(\"<tbody>\", 1));\n            for (const row of normalRows) {\n                if (row.startsNewSection)\n                    result.push(this.indentString(\"</tbody>\", 1), this.indentString(\"<tbody>\", 1));\n                result.push(...this.renderRow(table, row));\n            }\n            result.push(this.indentString(\"</tbody>\", 1));\n        }\n\n        if (table.caption && table.caption.text.length > 0)\n            result.push(this.indentString(`<caption id=\"${table.caption.getLabel()}\" style=\"caption-side: ${table.caption.position}\">${mdToHtml(table.caption.text)}</caption>`, 1));\n\n        result.push(\"</table>\");\n\n        if (this.renderOutsideTable && table.afterTable.trim() !== \"\")\n            result.push(mdToHtml(table.afterTable, false));\n\n        return result.join(this.prettify ? \"\\n\" : \"\");\n    }\n\n    private renderRow(table: Table, row: TableRow): string[] {\n        let result: string[] = [];\n        result.push(this.indentString(\"<tr>\", 2));\n        for (let cell of table.getCellsInRow(row)) {\n            let renderedCell = this.indentString(this.renderCell(cell), 3);\n            if (renderedCell.trim() !== \"\")\n                result.push(renderedCell);\n        }\n        result.push(this.indentString(\"</tr>\", 2));\n        return result;\n    }\n\n    private renderCell(cell: TableCell): string {\n        let colspan = cell.getColspan();\n        let rowspan = cell.getRowspan();\n        if (cell.merged == TableCellMerge.none) {\n            let cellProps =\n                (colspan > 1 ? ` colspan=\"${colspan}\"` : \"\") + \n                (rowspan > 1 ? ` rowspan=\"${rowspan}\"` : \"\") +\n                (cell.getTextAlignment() != TextAlignment.default ? ` style=\"${textAlignToCSS(cell.getTextAlignment())}\"` : \"\") + // ` align=\"${cell.getTextAlignment()}\"`\n                (cell.column.wrappable ? ` class=\"extend\"` : \"\");\n            let cellTag = cell.isHeaderCell() ? \"th\" : \"td\";\n            return [\"<\", cellTag, cellProps, \">\", mdToHtml(cell.text), \"</\", cellTag, \">\"].join(\"\"); // (markdown-it) mdIt.renderInline(cell.text)\n        }\n        return \"\";\n    }\n\n    private indentString(str: string, indentLevel: number = 0): string {\n        if (this.prettify)\n            return this.indent.repeat(indentLevel) + str;\n        else\n            return str;\n    }\n}","import { Table, TableCaption, TableCaptionPosition, TableCell, TableCellMerge, TableRow, TextAlignment } from \"./table.js\";\nimport { ParsingError, TableParser } from \"./tableParser.js\";\nimport { TableRenderer } from \"./tableRenderer.js\";\nimport stringWidth from \"string-width\";\n\n/*\n    Specification: https://fletcher.github.io/MultiMarkdown-6/syntax/tables.html\n*/\n\nconst rowRegex = /^\\|(.+)\\|$/\nconst separatorRegex = /^\\|([\\s\\.]*:?[\\-=\\.]+:?\\+?[\\s\\.]*\\|)+$/;\nconst captionRegex = /^(\\[.+\\]){1,2}$/;\n\nenum ParsingState {\n    BeforeTable,\n    TopCaption,\n    Header,\n    Separator,\n    Row,\n    BottomCaption,\n    AfterTable\n}\n\nexport class MultiMarkdownTableParser implements TableParser {\n    public parse(table: string): Table {\n        let parsedTable = new Table();\n        let state = ParsingState.BeforeTable;\n        let startNewSection = false;\n        let hasSeparator = false;\n        let beforeTable = [];\n        let afterTable = [];\n        let isMultiline = false;\n        let wasMultiline = false;\n\n        // Parse line by line:\n        for (let line of table.split(\"\\n\")) {\n            /*\n                Determine parsing state and prepare:\n            */\n\n            // Reset values:\n            wasMultiline = isMultiline;\n            isMultiline = false;\n\n            // Check if we are in the table:\n            if (state == ParsingState.BeforeTable && (line.match(/[^|\\\\`]\\|/g) || line.trim().match(captionRegex))) {\n                if (line.trim().match(captionRegex))\n                    state = ParsingState.TopCaption;\n                else\n                    state = ParsingState.Header;\n            }\n\n            // Check if we are no longer in the table:\n            if (state != ParsingState.BeforeTable && state != ParsingState.AfterTable && !( // If not:\n                ((line.trim().endsWith(\"\\\\\") || wasMultiline || line.replace(/\\`[^\\`]*\\`/g, \"\").match(/[^|\\\\`]\\|/g)) /* && !line.startsWith(\"[\") && !line.endsWith(\"]\") */) || // row\n                                                                                                                     // ↑ What was I thinking?\n                (line.trim().match(captionRegex) && (state == ParsingState.TopCaption || parsedTable.caption == null)) || // valid caption\n                (line.trim() === \"\" && !startNewSection && state != ParsingState.Separator))) { // single empty line allowed (except after separator)\n                state = ParsingState.AfterTable;\n                if (startNewSection)\n                    afterTable.push(\"\");\n            }\n\n            // If not inside table:\n            if (state == ParsingState.BeforeTable) {\n                beforeTable.push(line);\n                continue; // Skip the rest\n            } else if (state == ParsingState.AfterTable) {\n                afterTable.push(line);\n                continue; // Skip the rest\n            }\n\n            // Is empty line?\n            if (line === \"\") {\n                if (startNewSection)\n                    throw new ParsingError(\"Invalid table: No more than one empty line allowed.\");\n\n                if (state == ParsingState.Row)\n                    startNewSection = true;\n\n                continue;\n            }\n\n            // Format table line:\n            line = line.trim();\n            if (!line.match(captionRegex)) {\n                if (!line.startsWith(\"|\")) {\n                    line = \"|\" + line;\n                }\n\n                if (line.endsWith(\"\\\\\")) {\n                    isMultiline = true;\n                    line = line.substring(0, line.length - 1).trim();\n                }\n\n                if (!line.endsWith(\"|\") ||\n                    (line.charAt(line.length - 3) != \"\\\\\" && line.endsWith(\"\\\\|\"))) { // Check if last pipe is escaped ('\\|')\n                    line = line + \"|\";\n                }\n\n                if (!line.match(rowRegex)) {\n                    throw new ParsingError(`Invalid row: ${line}`);\n                }\n            }\n\n            // Is separator?\n            if ((state == ParsingState.TopCaption || state == ParsingState.Header) && line.match(separatorRegex)) {\n                state = ParsingState.Separator;\n            }\n            // Is header?\n            else if (state == ParsingState.TopCaption && line.match(rowRegex)) {\n                state = ParsingState.Header;\n            }\n            // Is bottom caption?\n            else if ((state == ParsingState.Separator || state == ParsingState.Row) && line.match(captionRegex)) {\n                state = ParsingState.BottomCaption;\n            }\n            // If separator has been parsed last iteration:\n            else if (state == ParsingState.Separator) {\n                state = ParsingState.Row;\n            }\n\n            /*\n                Parse line depending on parsing state:\n            */\n            \n            if (state == ParsingState.Header || state == ParsingState.Row) {\n                let tableRow = new TableRow();\n                if (state == ParsingState.Header) {\n                    tableRow.isHeader = true;\n                } else {\n                    tableRow.startsNewSection = startNewSection;\n                    tableRow.isMultiline = isMultiline;\n                    startNewSection = false;\n                }\n                parsedTable.addRow(-1, tableRow);\n\n                // Parse each character:\n                let cellContent = \"\";\n                let colIndex = 0;\n                let slashEscaped = false;\n                let fenceEscaped = false;\n                for (let char of line.substring(1, line.length)) {\n                    if (!slashEscaped && !fenceEscaped && char == \"|\") {\n                        let tableColumn = parsedTable.getColumn(colIndex);\n                        if (!tableColumn)\n                            tableColumn = parsedTable.addColumn();\n                        let cell = new TableCell(parsedTable, tableRow, tableColumn);\n                        parsedTable.addCell(cell);\n\n                        if (cellContent.trim() == \"^^\") {\n                            cell.merged = TableCellMerge.above;\n                        } else if (cellContent === \"\") {\n                            cell.merged = TableCellMerge.left;\n                        } else {\n                            cell.setText(\n                                cellContent\n                                .trim()\n                                .replace(/(<\\s*[bB][rR]\\s*\\/?>)/g, \"\\n\")\n                            );\n                        }\n\n                        cellContent = \"\";\n                        colIndex++;\n                    } else if (!slashEscaped && char == \"\\\\\") {\n                        slashEscaped = true;\n                    } else {\n                        if (!slashEscaped && char == \"\\`\" && !isMultiline && !wasMultiline)\n                            fenceEscaped = !fenceEscaped;\n                        if (slashEscaped)\n                            cellContent += \"\\\\\";\n                        cellContent += char;\n                        slashEscaped = false;\n                    }\n                }\n\n                // Insert empty cells if missing:\n                for (; colIndex < parsedTable.columnCount(); colIndex++) {\n                    let cell = new TableCell(parsedTable, tableRow, parsedTable.getColumn(colIndex));\n                    parsedTable.addCell(cell);\n                }\n            }\n            else if (state == ParsingState.Separator) {\n                hasSeparator = true;\n                let colIndex = 0;\n                let alignment = TextAlignment.default;\n                let wrappable = false;\n                let separator = false;\n                for (let char of line.substring(1, line.length)) {\n                    if (char == \"|\") {\n                        let tableColumn = parsedTable.getColumn(colIndex);\n                        if (!tableColumn)\n                            tableColumn = parsedTable.addColumn();\n                        tableColumn.textAlign = alignment;\n                        tableColumn.wrappable = wrappable;\n\n                        alignment = TextAlignment.default;\n                        separator = false;\n                        wrappable = false;\n                        colIndex++;\n                    } else if (char == \":\") {\n                        if (!separator) {\n                            alignment = TextAlignment.left;\n                        } else {\n                            if (alignment == TextAlignment.left)\n                                alignment = TextAlignment.center;\n                            else\n                                alignment = TextAlignment.right;\n                        }\n                    } else if (char == \"-\" || char == \"=\") {\n                        separator = true;\n                        if (alignment == TextAlignment.right || wrappable)\n                            throw new ParsingError(\"Invalid separator\");\n                    } else if (char == \"+\") { // \"If the separator line ends with +, then cells in that column will be wrapped when exporting to LaTeX if they are long enough.\"\n                        wrappable = true;\n                    }\n                    // char == \".\" => idk ???\n                }\n            }\n            else if (state == ParsingState.TopCaption || state == ParsingState.BottomCaption) {\n                // \"If you have a caption before and after the table, only the first match will be used.\"\n                if (parsedTable.caption != null)\n                    continue;\n\n                let caption = new TableCaption();\n                caption.position = state == ParsingState.TopCaption ? TableCaptionPosition.top : TableCaptionPosition.bottom;\n\n                let split = line.split(/[\\[\\]]+/).filter(s => s.trim() !== \"\");\n                caption.text = split[0]\n                               .trim()\n                               .replace(/(<\\s*[bB][rR]\\s*\\/?>)/g, \"\\n\");\n                if (split.length > 1)\n                    caption.label = split[1]\n                                    .trim()\n                                    .replace(/\\s+/g, \"-\");\n\n                parsedTable.caption = caption;\n            }\n            else {\n                throw new ParsingError(`Not implemented ParsingState: ${state}`);\n            }\n        }\n\n        if (!hasSeparator)\n            throw new ParsingError(\"No separator row found.\");\n\n        parsedTable.beforeTable = beforeTable.join(\"\\n\");\n        parsedTable.afterTable = afterTable.join(\"\\n\");\n\n        return parsedTable.update();\n    }\n}\n\nexport class MinifiedMultiMarkdownTableRenderer implements TableRenderer {\n    public constructor(\n        public renderOutsideTable = true) { }\n\n    public render(table: Table): string {\n        const headerRows = table.getHeaderRows();\n        const normalRows = table.getNormalRows();\n\n        let result: string[] = [];\n\n        if (this.renderOutsideTable && table.beforeTable.trim() !== \"\")\n            result.push(table.beforeTable);\n            \n        // Caption (if position is top):\n        if (table.caption && table.caption.position == TableCaptionPosition.top) {\n            result.push(this.renderCaption(table.caption));\n        }\n\n        // Header:\n        if (headerRows.length > 0)\n            for (const row of headerRows)\n                result.push(this.renderRow(table, row));\n\n        // Separator:\n        result.push(this.renderSeparator(table));\n\n        // Rows:\n        for (const row of normalRows) {\n            if (row.startsNewSection)\n                result.push(\"\");\n            result.push(this.renderRow(table, row));\n        }\n            \n        // Caption (if position is bottom):\n        if (table.caption && table.caption.position == TableCaptionPosition.bottom) {\n            result.push(this.renderCaption(table.caption));\n        }\n\n        if (this.renderOutsideTable && table.afterTable.trim() !== \"\")\n            result.push(table.afterTable);\n\n        return result.join(\"\\n\");\n    }\n\n    private renderCaption(caption: TableCaption): string {\n        let result: string[] = [];\n        if (caption.text.length > 0) {\n            result.push(`[${caption.text}]`);\n            if (caption.label.length > 0) {\n                result.push(`[${caption.label}]`);\n            }\n        }\n        return result.join(\"\");\n    }\n\n    private renderSeparator(table: Table): string {\n        let result: string[] = [];\n\n        table.getColumns().forEach((col, i) => {\n            let chunk;\n            switch (col.textAlign) {\n                case TextAlignment.left:\n                    chunk = \":-\";\n                    break;\n                case TextAlignment.center:\n                    chunk = \":-:\";\n                    break;\n                case TextAlignment.right:\n                    chunk = \"-:\";\n                    break;\n                case TextAlignment.default:\n                default:\n                    chunk = \"-\";\n                    break;\n            }\n            result.push(chunk + (col.wrappable ? \"+\" : \"\"));\n        });\n\n        return result.join(\"|\");\n    }\n\n    private renderRow(table: Table, row: TableRow): string {\n        let result: string = \"\";\n        let cells = table.getCellsInRow(row);\n\n        cells.forEach((cell, i) => {\n            if (cell.merged == TableCellMerge.left) {\n                result += \"|\";\n            } else if (cell.merged == TableCellMerge.above) {\n                result += \"^^|\";\n            } else if (i == 0 && cell.text.trim() === \"\") {\n                result += \"| |\";\n            } else if (cell.text.trim() === \"\") {\n                result += \" |\";\n            } else {\n                let text = cell.text.trim().replace(/\\r?\\n/g, \"<br>\");\n                result += `${text}|`;\n            }\n\n            // Last cell:\n            if (i == cells.length - 1 && cell.text.trim() != \"\" && cell.merged != TableCellMerge.left)\n                result = result.substring(0, result.length - 1); // Omit last '|' if possible\n        });\n\n        if (row.isMultiline)\n            result += \" \\\\\";\n\n        return result;\n    }\n}\n\nexport class PrettyMultiMarkdownTableRenderer implements TableRenderer {\n    public constructor(\n        public renderOutsideTable = true) { }\n\n    public render(table: Table): string {\n        const headerRows = table.getHeaderRows();\n        const normalRows = table.getNormalRows();\n        const columnWidths = this.determineColumnWidths(table);\n\n        let result: string[] = [];\n\n        if (this.renderOutsideTable && table.beforeTable.trim() !== \"\")\n            result.push(table.beforeTable);\n            \n        // Caption (if position is top):\n        if (table.caption && table.caption.position == TableCaptionPosition.top) {\n            result.push(this.renderCaption(table.caption));\n        }\n\n        // Header:\n        if (headerRows.length > 0)\n            for (const row of headerRows)\n                result.push(this.renderRow(table, row, columnWidths));\n\n        // Separator:\n        result.push(this.renderSeparator(table, columnWidths));\n\n        // Rows:\n        for (const row of normalRows) {\n            if (row.startsNewSection)\n                result.push(\"\");\n            result.push(this.renderRow(table, row, columnWidths));\n        }\n            \n        // Caption (if position is bottom):\n        if (table.caption && table.caption.position == TableCaptionPosition.bottom) {\n            result.push(this.renderCaption(table.caption));\n        }\n        \n        if (this.renderOutsideTable && table.afterTable.trim() !== \"\")\n            result.push(table.afterTable);\n\n        return result.join(\"\\n\");\n    }\n\n    private renderCaption(caption: TableCaption): string {\n        let result: string[] = [];\n        if (caption.text.length > 0) {\n            result.push(`[${caption.text}]`);\n            if (caption.label.length > 0) {\n                result.push(`[${caption.getLabel()}]`);\n            }\n        }\n        return result.join(\"\");\n    }\n\n    private renderSeparator(table: Table, columnWidths: number[]): string {\n        let result: string[] = [];\n\n        table.getColumns().forEach((col, i) => {\n            let width = columnWidths[i];\n            switch (col.textAlign) {\n                case TextAlignment.left:\n                    if (col.wrappable)\n                        result.push(`:${\"-\".repeat(width)}+`);\n                    else\n                        result.push(`:${\"-\".repeat(width + 1)}`);\n                    break;\n                case TextAlignment.center:\n                    if (col.wrappable)\n                        result.push(`:${\"-\".repeat(width - 1)}:+`);\n                    else\n                        result.push(`:${\"-\".repeat(width)}:`);\n                    break;\n                case TextAlignment.right:\n                    if (col.wrappable)\n                        result.push(`${\"-\".repeat(width)}:+`);\n                    else\n                        result.push(`${\"-\".repeat(width + 1)}:`);\n                    break;\n                case TextAlignment.default:\n                default:\n                    if (col.wrappable)\n                        result.push(`${\"-\".repeat(width + 1)}+`);\n                    else\n                        result.push(\"-\".repeat(width + 2));\n                    break;\n            }\n        });\n\n        return `|${result.join(\"|\")}|`;\n    }\n\n    private renderRow(table: Table, row: TableRow, columnWidths: number[]): string {\n        let result: string[] = [];\n\n        table.getCellsInRow(row).forEach((cell, i) => {\n            let colspan = cell.getColspan();\n            let cellWidth = columnWidths[i];\n            if (colspan > 1) {\n                for (let col = i + 1; col < i + colspan; col++)\n                    cellWidth += columnWidths[col];\n                cellWidth += colspan * 2 - 2; // + Math.floor((colspan - 1) / 2);\n            }\n            result.push(this.renderCell(cell, colspan, cellWidth));\n        });\n\n        return `|${result.join(\"|\")}|` + (row.isMultiline ? \" \\\\\" : \"\");\n    }\n\n    private renderCell(cell: TableCell, colspan: number = 1, cellWidth: number = -1): string {\n        if (cell.merged == TableCellMerge.left)\n            return \"\";\n\n        let text = cell.merged == TableCellMerge.above ? \"^^\" : cell.text.replace(/\\r?\\n/g, \"<br>\");\n        const textLength = stringWidth(text);\n\n        switch (cell.column.textAlign) {\n            case TextAlignment.center:\n                return `${\" \".repeat(Math.max(0, Math.floor((cellWidth - textLength + colspan - 1) / 2)))} ${text} ${\" \".repeat(Math.max(0, Math.ceil((cellWidth - textLength - colspan + 1) / 2)))}`;\n            case TextAlignment.right:\n                return `${\" \".repeat(Math.max(0, cellWidth - textLength))} ${text} `;\n            case TextAlignment.left:\n            case TextAlignment.default:\n            default:\n                return ` ${text} ${\" \".repeat(Math.max(0, cellWidth - textLength))}`;\n        }\n    }\n\n    private determineColumnWidths(table: Table): number[] {\n        let columnWidths: number[] = Array.from({length: table.columnCount()}, () => 0);\n\n        for (let colIndex = table.columnCount() - 1; colIndex >= 0; colIndex--) {\n            const column = table.getColumn(colIndex);\n            let width = 0;\n            for (const cell of table.getCellsInColumn(column)) {\n                let colspan = cell.getColspan();\n                let textWidth = cell.merged == TableCellMerge.above ? 2 : stringWidth(cell.text.replace(/\\r?\\n/g, \"<br>\"));\n                if (colspan == 1) {\n                    width = Math.max(textWidth, width);\n                } else {\n                    let leftoverWidth = columnWidths.slice(colIndex + 1, colIndex + colspan).reduce((pv, cv) => pv + cv);\n                    // let combinedWidth = width + leftoverWidth;\n                    width = Math.max(textWidth - leftoverWidth, width);\n                }\n            }\n            columnWidths.splice(colIndex, 1, width);\n        }\n\n        return columnWidths;\n    }\n}","import {\n    Table,\n    TableCaption,\n    TableCaptionPosition,\n    TableCell,\n    TableCellMerge,\n    TableRow,\n    TextAlignment,\n} from \"./table.js\";\nimport { TableParser } from \"./tableParser.js\";\nimport { TableRenderer } from \"./tableRenderer.js\";\nimport stringWidth from \"string-width\";\n\n/*\n    Syntax: https://www.dokuwiki.org/wiki:syntax#tables\n*/\n\nfunction dokuWikiToMarkdown(markup: string): string {\n    // Image:\n    markup = markup.replace(/{{([^\\|]*?)\\|?([^\\|]*?)}}/g, \"![$2]($1)\");\n\n    // Links:\n    markup = markup.replace(/\\[\\[([^\\|]*?)\\|?([^\\|]*?)\\]\\]/g, \"[$2]($1)\");\n\n    // Block code:\n    markup = markup.replace(/<code\\s+?([a-zA-Z0-9]*?)>\\n(.*?)<\\/code>/gs, \"```$1\\n$2```\");\n\n    // Inline code / monospaced text:\n    markup = markup.replace(/''(.*?)''/g, \"`$1`\");\n\n    // Oblique:\n    markup = markup.replace(/\\/\\/\\*\\*(.*?)\\*\\*\\/\\//g, \"***$1***\");\n    markup = markup.replace(/\\*\\*\\/\\/(.*?)\\/\\/\\*\\*/g, \"***$1***\");\n\n    // Italic:\n    markup = markup.replace(/\\/\\/(.*?)\\/\\//g, \"*$1*\");\n\n    // Underlined:\n    markup = markup.replace(/__(.*?)__/g, \"<u>$1</u>\");\n\n    // Newlines:\n    markup = markup.replace(/\\\\\\\\ /g, \"\\n\");\n\n    return markup;\n}\n\nfunction markdownToDokuWiki(markup: string): string {\n    // Image:\n    markup = markup.replace(/!\\[([^\\[\\]]+)\\]\\(([^\\(\\)]+)\\)/g, \"{{$2|$1}}\");\n\n    // Links:\n    markup = markup.replace(/\\[([^\\[\\]]+)\\]\\(([^\\(\\)]+)\\)/g, \"[[$2|$1]]\");\n\n    // Block code:\n    markup = markup.replace(/```([a-zA-Z0-9]*?)\\n(.*?)\\n```/gs, \"<code $1>\\n$2\\n</code>\");\n\n    // Inline code / monospaced text:\n    markup = markup.replace(/`(.*?)`/g, \"''$1''\");\n\n    // Strikethrough:\n    markup = markup.replace(/~~(.*?)~~/g, \"<del>$1</del>\");\n\n    // Oblique:\n    markup = markup.replace(/___(.*?)___/g, \"//**$1**//\");\n    markup = markup.replace(/\\*\\*\\*(.*?)\\*\\*\\*/g, \"//**$1**//\");\n\n    // Bold:\n    markup = markup.replace(/__(.*?)__/g, \"**$1**\");\n\n    // Italic:\n    markup = markup.replace(/_(.*?)_/g, \"//$1//\");\n    markup = markup.replace(/\\*(.*?)\\*/g, \"//$1//\");\n\n    // Underlined:\n    markup = markup.replace(/<ins>(.*?)<\\/ins>/g, \"__$1__\");\n    markup = markup.replace(/<u>(.*?)<\\/u>/g, \"__$1__\");\n\n    // Superscript:\n    markup = markup.replace(/\\^(.*?)\\^/g, \"<sup>$1</sup>\");\n\n    // Subscript:\n    markup = markup.replace(/~(.*?)~/g, \"<sub>$1</sub>\");\n\n    // Escaped characters:\n    markup = markup.replace(/\\\\([#\\.\\|\\*_\\s`\\[\\]\\-])/g, \"$1\");\n\n    // Newlines:\n    markup = markup.replace(/<br\\s?\\/?>/g, \"\\\\\\\\ \");\n    markup = markup.replace(/\\r?\\n/g, \"\\\\\\\\ \");\n\n    return markup;\n}\n\nconst rowRegex = /^[\\|\\^](.+)[\\|\\^]$/;\n\nenum ParsingState {\n    BeforeTable,\n    Row,\n    AfterTable,\n}\n\nexport class DokuWikiTableParser implements TableParser {\n    public constructor(\n        /** If true, converts DokuWiki syntax to Markdown syntax */\n        public convertMarkup: boolean = true\n    ) {}\n\n    parse(table: string): Table {\n        let parsedTable = new Table();\n        let state = ParsingState.BeforeTable;\n        let beforeTable = [];\n        let afterTable = [];\n\n        // Parse line by line:\n        for (let line of table.trim().split(\"\\n\")) {\n            // Check if we are in the table:\n            if (state == ParsingState.BeforeTable && line.match(rowRegex)) {\n                state = ParsingState.Row;\n            }\n\n            // Check if we are no longer in the table:\n            if (state != ParsingState.BeforeTable && state != ParsingState.AfterTable && !line.match(rowRegex)) {\n                state = ParsingState.AfterTable;\n            }\n\n            // If not inside table:\n            if (state == ParsingState.BeforeTable) {\n                beforeTable.push(line);\n                continue; // Skip the rest\n            } else if (state == ParsingState.AfterTable) {\n                afterTable.push(line);\n                continue; // Skip the rest\n            }\n\n            // Parse row:\n            if (state == ParsingState.Row) {\n                let tableRow = new TableRow();\n                parsedTable.addRow(-1, tableRow);\n\n                // Parse each character:\n                let cellContent = \"\";\n                let colIndex = 0;\n                let spaces = 0;\n                let leftHasSpaces = false;\n                let rightHasSpaces = false;\n                let foundCellContent = false;\n                let cellIsHeader = line.trim()[0] == \"^\";\n                let rowIsHeader = line.trim()[0] == \"^\";\n                for (let char of line.trim().substring(1, line.length)) {\n                    if (char == \"|\" || char == \"^\") {\n                        let tableColumn = parsedTable.getColumn(colIndex);\n                        if (!tableColumn) tableColumn = parsedTable.addColumn();\n                        let cell = new TableCell(parsedTable, tableRow, tableColumn);\n                        parsedTable.addCell(cell);\n\n                        if (foundCellContent && spaces >= 2) {\n                            rightHasSpaces = true;\n                        }\n\n                        cell.isHeader = cellIsHeader;\n\n                        if (leftHasSpaces && rightHasSpaces) {\n                            if (tableColumn.textAlign == TextAlignment.default) {\n                                tableColumn.textAlign = TextAlignment.center;\n                            }\n                            cell.textAlign = TextAlignment.center;\n                        } else if (leftHasSpaces) {\n                            if (tableColumn.textAlign == TextAlignment.default) {\n                                tableColumn.textAlign = TextAlignment.right;\n                            }\n                            cell.textAlign = TextAlignment.right;\n                        } else if (rightHasSpaces) {\n                            if (tableColumn.textAlign == TextAlignment.default) {\n                                tableColumn.textAlign = TextAlignment.left;\n                            }\n                            cell.textAlign = TextAlignment.left;\n                        }\n\n                        if (cellContent.trim() == \":::\") {\n                            cell.merged = TableCellMerge.above;\n                        } else if (cellContent === \"\") {\n                            cell.merged = TableCellMerge.left;\n                        } else {\n                            cellContent = this.convertMarkup\n                                ? dokuWikiToMarkdown(cellContent.trim())\n                                : cellContent.trim();\n                            cell.setText(cellContent);\n                        }\n\n                        cellContent = \"\";\n                        colIndex++;\n\n                        if (char == \"|\") {\n                            cellIsHeader = false;\n                            rowIsHeader = false;\n                        } else if (char == \"^\") {\n                            cellIsHeader = true;\n                        }\n\n                        spaces = 0;\n                        leftHasSpaces = false;\n                        rightHasSpaces = false;\n                        foundCellContent = false;\n                    } else if (char == \" \") {\n                        spaces++;\n                        cellContent += char;\n                    } else {\n                        if (!foundCellContent && spaces >= 2) {\n                            leftHasSpaces = true;\n                        }\n                        cellContent += char;\n                        spaces = 0;\n                        foundCellContent = true;\n                    }\n                }\n\n                // Insert empty cells if missing:\n                for (; colIndex < parsedTable.columnCount(); colIndex++) {\n                    let cell = new TableCell(parsedTable, tableRow, parsedTable.getColumn(colIndex));\n                    parsedTable.addCell(cell);\n                }\n\n                tableRow.isHeader = rowIsHeader;\n            }\n        }\n\n        parsedTable.beforeTable = beforeTable.join(\"\\n\");\n        parsedTable.afterTable = afterTable.join(\"\\n\");\n\n        return parsedTable.update();\n    }\n}\n\nexport class DokuWikiTableRenderer implements TableRenderer {\n    public constructor(\n        /** If true, converts Markdown syntax to DokuWiki syntax */\n        public convertMarkup: boolean = true\n    ) {}\n\n    render(table: Table): string {\n        const rows = table.getRows();\n        const columnWidths = this.determineColumnWidths(table);\n\n        let result: string[] = [];\n\n        if (table.beforeTable.trim() !== \"\") {\n            result.push(table.beforeTable);\n        }\n\n        // DokuWiki has no table caption -- insert \"caption\" (if position is top):\n        if (table.caption && table.caption.position == TableCaptionPosition.top) {\n            result.push(this.renderCaption(table.caption));\n        }\n\n        // Rows:\n        for (const row of rows) {\n            result.push(this.renderRow(table, row, columnWidths));\n        }\n\n        // DokuWiki has no table caption -- insert \"caption\" (if position is bottom):\n        if (table.caption && table.caption.position == TableCaptionPosition.bottom) {\n            result.push(this.renderCaption(table.caption));\n        }\n\n        if (table.afterTable.trim() !== \"\") {\n            result.push(table.afterTable);\n        }\n\n        return result.join(\"\\n\");\n    }\n\n    private renderCaption(caption: TableCaption): string {\n        let result: string = \"\";\n        if (caption.position == TableCaptionPosition.bottom) {\n            result += \"\\n\";\n        }\n        result += \"> \" + caption.text;\n        if (caption.position == TableCaptionPosition.top) {\n            result += \"\\n\";\n        }\n        return result;\n    }\n\n    private renderRow(table: Table, row: TableRow, columnWidths: number[]): string {\n        let result: string[] = [];\n\n        let lastCellIsHeader = false;\n        table.getCellsInRow(row).forEach((cell, i) => {\n            let colspan = cell.getColspan();\n            let cellWidth = columnWidths[i];\n            if (colspan > 1) {\n                for (let col = i + 1; col < i + colspan; col++) {\n                    cellWidth += columnWidths[col];\n                }\n                cellWidth += colspan * 2 - 2;\n            }\n            lastCellIsHeader = cell.isHeaderCell();\n            result.push(this.renderCell(cell, colspan, cellWidth));\n        });\n\n        if (lastCellIsHeader) {\n            return `${result.join(\"\")}^`;\n        } else {\n            return `${result.join(\"\")}|`;\n        }\n    }\n\n    private renderCell(cell: TableCell, colspan: number = 1, cellWidth: number = -1): string {\n        let isHeader = cell.isHeaderCell();\n        let separator = isHeader ? \"^\" : \"|\";\n\n        if (cell.merged == TableCellMerge.left) {\n            return separator;\n        }\n\n        // `:::` => merge cell above\n        // `\\\\ ` => insert a newline\n        let text = cell.merged == TableCellMerge.above ? \":::\" : this.renderText(cell.text);\n        const textLength = stringWidth(text);\n\n        switch (cell.getTextAlignment()) {\n            case TextAlignment.center:\n                return `${separator}${\" \".repeat(\n                    Math.max(0, Math.floor((cellWidth - textLength + colspan - 1) / 2))\n                )} ${text} ${\" \".repeat(Math.max(0, Math.ceil((cellWidth - textLength - colspan + 1) / 2)))}`;\n            case TextAlignment.right:\n                return `${separator}${\" \".repeat(Math.max(0, cellWidth - textLength))} ${text} `;\n            case TextAlignment.left:\n            case TextAlignment.default:\n            default:\n                return `${separator} ${text} ${\" \".repeat(Math.max(0, cellWidth - textLength))}`;\n        }\n    }\n\n    private renderText(text: string) {\n        return this.convertMarkup ? markdownToDokuWiki(text) : text;\n    }\n\n    private determineColumnWidths(table: Table): number[] {\n        let columnWidths: number[] = Array.from({ length: table.columnCount() }, () => 0);\n\n        for (let colIndex = table.columnCount() - 1; colIndex >= 0; colIndex--) {\n            const column = table.getColumn(colIndex);\n            let colWidth = 0;\n            for (const cell of table.getCellsInColumn(column)) {\n                let colspan = cell.getColspan();\n                let cellWidth = cell.merged == TableCellMerge.above ? 3 : stringWidth(this.renderText(cell.text));\n\n                // Is alignment spacing needed?\n                switch (cell.getTextAlignment()) {\n                    case TextAlignment.center:\n                        // \"Add two spaces at least at both ends for centered text\"\n                        cellWidth += 2;\n                        break;\n                    case TextAlignment.right:\n                    case TextAlignment.left:\n                        // \"Add two spaces on the left to align right, two spaces on the right to align left\"\n                        cellWidth += 1;\n                        break;\n                    case TextAlignment.default:\n                    default:\n                        break;\n                }\n\n                if (colspan == 1) {\n                    colWidth = Math.max(cellWidth, colWidth);\n                } else {\n                    let leftoverWidth = columnWidths\n                        .slice(colIndex + 1, colIndex + colspan)\n                        .reduce((pv, cv) => pv + cv);\n                    colWidth = Math.max(cellWidth - leftoverWidth, colWidth);\n                }\n            }\n            columnWidths.splice(colIndex, 1, colWidth);\n        }\n\n        return columnWidths;\n    }\n}\n","import stripAnsi from 'strip-ansi';\nimport {eastAsianWidth} from 'get-east-asian-width';\nimport emojiRegex from 'emoji-regex';\n\nconst segmenter = new Intl.Segmenter();\n\nexport default function stringWidth(string, options = {}) {\n\tif (typeof string !== 'string' || string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tconst {\n\t\tambiguousIsNarrow = true,\n\t\tcountAnsiEscapeCodes = false,\n\t} = options;\n\n\tif (!countAnsiEscapeCodes) {\n\t\tstring = stripAnsi(string);\n\t}\n\n\tif (string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tlet width = 0;\n\tconst eastAsianWidthOptions = {ambiguousAsWide: !ambiguousIsNarrow};\n\n\tfor (const {segment: character} of segmenter.segment(string)) {\n\t\tconst codePoint = character.codePointAt(0);\n\n\t\t// Ignore control characters\n\t\tif (codePoint <= 0x1F || (codePoint >= 0x7F && codePoint <= 0x9F)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Ignore combining characters\n\t\tif (codePoint >= 0x3_00 && codePoint <= 0x3_6F) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (emojiRegex().test(character)) {\n\t\t\twidth += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\twidth += eastAsianWidth(codePoint, eastAsianWidthOptions);\n\t}\n\n\treturn width;\n}\n","import ansiRegex from 'ansi-regex';\n\nconst regex = ansiRegex();\n\nexport default function stripAnsi(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n\t}\n\n\t// Even though the regex is global, we don't need to reset the `.lastIndex`\n\t// because unlike `.exec()` and `.test()`, `.replace()` does it automatically\n\t// and doing it manually has a performance penalty.\n\treturn string.replace(regex, '');\n}\n","export default function ansiRegex({onlyFirst = false} = {}) {\n\tconst pattern = [\n\t    '[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n}\n","import {getCategory, isAmbiguous, isFullWidth, isWide} from './lookup.js';\n\nfunction validate(codePoint) {\n\tif (!Number.isSafeInteger(codePoint)) {\n\t\tthrow new TypeError(`Expected a code point, got \\`${typeof codePoint}\\`.`);\n\t}\n}\n\nexport function eastAsianWidthType(codePoint) {\n\tvalidate(codePoint);\n\n\treturn getCategory(codePoint);\n}\n\nexport function eastAsianWidth(codePoint, {ambiguousAsWide = false} = {}) {\n\tvalidate(codePoint);\n\n\tif (\n\t\tisFullWidth(codePoint)\n\t\t|| isWide(codePoint)\n\t\t|| (ambiguousAsWide && isAmbiguous(codePoint))\n\t) {\n\t\treturn 2;\n\t}\n\n\treturn 1;\n}\n\n// For Prettier. This doesn't count \"ambiguous\" characters or check for valid input.\n// https://github.com/sindresorhus/get-east-asian-width/pull/6\nexport const _isNarrowWidth = codePoint => !(isFullWidth(codePoint) || isWide(codePoint));\n","// Generated code.\n\nfunction isAmbiguous(x) {\n\treturn x === 0xA1\n\t\t|| x === 0xA4\n\t\t|| x === 0xA7\n\t\t|| x === 0xA8\n\t\t|| x === 0xAA\n\t\t|| x === 0xAD\n\t\t|| x === 0xAE\n\t\t|| x >= 0xB0 && x <= 0xB4\n\t\t|| x >= 0xB6 && x <= 0xBA\n\t\t|| x >= 0xBC && x <= 0xBF\n\t\t|| x === 0xC6\n\t\t|| x === 0xD0\n\t\t|| x === 0xD7\n\t\t|| x === 0xD8\n\t\t|| x >= 0xDE && x <= 0xE1\n\t\t|| x === 0xE6\n\t\t|| x >= 0xE8 && x <= 0xEA\n\t\t|| x === 0xEC\n\t\t|| x === 0xED\n\t\t|| x === 0xF0\n\t\t|| x === 0xF2\n\t\t|| x === 0xF3\n\t\t|| x >= 0xF7 && x <= 0xFA\n\t\t|| x === 0xFC\n\t\t|| x === 0xFE\n\t\t|| x === 0x101\n\t\t|| x === 0x111\n\t\t|| x === 0x113\n\t\t|| x === 0x11B\n\t\t|| x === 0x126\n\t\t|| x === 0x127\n\t\t|| x === 0x12B\n\t\t|| x >= 0x131 && x <= 0x133\n\t\t|| x === 0x138\n\t\t|| x >= 0x13F && x <= 0x142\n\t\t|| x === 0x144\n\t\t|| x >= 0x148 && x <= 0x14B\n\t\t|| x === 0x14D\n\t\t|| x === 0x152\n\t\t|| x === 0x153\n\t\t|| x === 0x166\n\t\t|| x === 0x167\n\t\t|| x === 0x16B\n\t\t|| x === 0x1CE\n\t\t|| x === 0x1D0\n\t\t|| x === 0x1D2\n\t\t|| x === 0x1D4\n\t\t|| x === 0x1D6\n\t\t|| x === 0x1D8\n\t\t|| x === 0x1DA\n\t\t|| x === 0x1DC\n\t\t|| x === 0x251\n\t\t|| x === 0x261\n\t\t|| x === 0x2C4\n\t\t|| x === 0x2C7\n\t\t|| x >= 0x2C9 && x <= 0x2CB\n\t\t|| x === 0x2CD\n\t\t|| x === 0x2D0\n\t\t|| x >= 0x2D8 && x <= 0x2DB\n\t\t|| x === 0x2DD\n\t\t|| x === 0x2DF\n\t\t|| x >= 0x300 && x <= 0x36F\n\t\t|| x >= 0x391 && x <= 0x3A1\n\t\t|| x >= 0x3A3 && x <= 0x3A9\n\t\t|| x >= 0x3B1 && x <= 0x3C1\n\t\t|| x >= 0x3C3 && x <= 0x3C9\n\t\t|| x === 0x401\n\t\t|| x >= 0x410 && x <= 0x44F\n\t\t|| x === 0x451\n\t\t|| x === 0x2010\n\t\t|| x >= 0x2013 && x <= 0x2016\n\t\t|| x === 0x2018\n\t\t|| x === 0x2019\n\t\t|| x === 0x201C\n\t\t|| x === 0x201D\n\t\t|| x >= 0x2020 && x <= 0x2022\n\t\t|| x >= 0x2024 && x <= 0x2027\n\t\t|| x === 0x2030\n\t\t|| x === 0x2032\n\t\t|| x === 0x2033\n\t\t|| x === 0x2035\n\t\t|| x === 0x203B\n\t\t|| x === 0x203E\n\t\t|| x === 0x2074\n\t\t|| x === 0x207F\n\t\t|| x >= 0x2081 && x <= 0x2084\n\t\t|| x === 0x20AC\n\t\t|| x === 0x2103\n\t\t|| x === 0x2105\n\t\t|| x === 0x2109\n\t\t|| x === 0x2113\n\t\t|| x === 0x2116\n\t\t|| x === 0x2121\n\t\t|| x === 0x2122\n\t\t|| x === 0x2126\n\t\t|| x === 0x212B\n\t\t|| x === 0x2153\n\t\t|| x === 0x2154\n\t\t|| x >= 0x215B && x <= 0x215E\n\t\t|| x >= 0x2160 && x <= 0x216B\n\t\t|| x >= 0x2170 && x <= 0x2179\n\t\t|| x === 0x2189\n\t\t|| x >= 0x2190 && x <= 0x2199\n\t\t|| x === 0x21B8\n\t\t|| x === 0x21B9\n\t\t|| x === 0x21D2\n\t\t|| x === 0x21D4\n\t\t|| x === 0x21E7\n\t\t|| x === 0x2200\n\t\t|| x === 0x2202\n\t\t|| x === 0x2203\n\t\t|| x === 0x2207\n\t\t|| x === 0x2208\n\t\t|| x === 0x220B\n\t\t|| x === 0x220F\n\t\t|| x === 0x2211\n\t\t|| x === 0x2215\n\t\t|| x === 0x221A\n\t\t|| x >= 0x221D && x <= 0x2220\n\t\t|| x === 0x2223\n\t\t|| x === 0x2225\n\t\t|| x >= 0x2227 && x <= 0x222C\n\t\t|| x === 0x222E\n\t\t|| x >= 0x2234 && x <= 0x2237\n\t\t|| x === 0x223C\n\t\t|| x === 0x223D\n\t\t|| x === 0x2248\n\t\t|| x === 0x224C\n\t\t|| x === 0x2252\n\t\t|| x === 0x2260\n\t\t|| x === 0x2261\n\t\t|| x >= 0x2264 && x <= 0x2267\n\t\t|| x === 0x226A\n\t\t|| x === 0x226B\n\t\t|| x === 0x226E\n\t\t|| x === 0x226F\n\t\t|| x === 0x2282\n\t\t|| x === 0x2283\n\t\t|| x === 0x2286\n\t\t|| x === 0x2287\n\t\t|| x === 0x2295\n\t\t|| x === 0x2299\n\t\t|| x === 0x22A5\n\t\t|| x === 0x22BF\n\t\t|| x === 0x2312\n\t\t|| x >= 0x2460 && x <= 0x24E9\n\t\t|| x >= 0x24EB && x <= 0x254B\n\t\t|| x >= 0x2550 && x <= 0x2573\n\t\t|| x >= 0x2580 && x <= 0x258F\n\t\t|| x >= 0x2592 && x <= 0x2595\n\t\t|| x === 0x25A0\n\t\t|| x === 0x25A1\n\t\t|| x >= 0x25A3 && x <= 0x25A9\n\t\t|| x === 0x25B2\n\t\t|| x === 0x25B3\n\t\t|| x === 0x25B6\n\t\t|| x === 0x25B7\n\t\t|| x === 0x25BC\n\t\t|| x === 0x25BD\n\t\t|| x === 0x25C0\n\t\t|| x === 0x25C1\n\t\t|| x >= 0x25C6 && x <= 0x25C8\n\t\t|| x === 0x25CB\n\t\t|| x >= 0x25CE && x <= 0x25D1\n\t\t|| x >= 0x25E2 && x <= 0x25E5\n\t\t|| x === 0x25EF\n\t\t|| x === 0x2605\n\t\t|| x === 0x2606\n\t\t|| x === 0x2609\n\t\t|| x === 0x260E\n\t\t|| x === 0x260F\n\t\t|| x === 0x261C\n\t\t|| x === 0x261E\n\t\t|| x === 0x2640\n\t\t|| x === 0x2642\n\t\t|| x === 0x2660\n\t\t|| x === 0x2661\n\t\t|| x >= 0x2663 && x <= 0x2665\n\t\t|| x >= 0x2667 && x <= 0x266A\n\t\t|| x === 0x266C\n\t\t|| x === 0x266D\n\t\t|| x === 0x266F\n\t\t|| x === 0x269E\n\t\t|| x === 0x269F\n\t\t|| x === 0x26BF\n\t\t|| x >= 0x26C6 && x <= 0x26CD\n\t\t|| x >= 0x26CF && x <= 0x26D3\n\t\t|| x >= 0x26D5 && x <= 0x26E1\n\t\t|| x === 0x26E3\n\t\t|| x === 0x26E8\n\t\t|| x === 0x26E9\n\t\t|| x >= 0x26EB && x <= 0x26F1\n\t\t|| x === 0x26F4\n\t\t|| x >= 0x26F6 && x <= 0x26F9\n\t\t|| x === 0x26FB\n\t\t|| x === 0x26FC\n\t\t|| x === 0x26FE\n\t\t|| x === 0x26FF\n\t\t|| x === 0x273D\n\t\t|| x >= 0x2776 && x <= 0x277F\n\t\t|| x >= 0x2B56 && x <= 0x2B59\n\t\t|| x >= 0x3248 && x <= 0x324F\n\t\t|| x >= 0xE000 && x <= 0xF8FF\n\t\t|| x >= 0xFE00 && x <= 0xFE0F\n\t\t|| x === 0xFFFD\n\t\t|| x >= 0x1F100 && x <= 0x1F10A\n\t\t|| x >= 0x1F110 && x <= 0x1F12D\n\t\t|| x >= 0x1F130 && x <= 0x1F169\n\t\t|| x >= 0x1F170 && x <= 0x1F18D\n\t\t|| x === 0x1F18F\n\t\t|| x === 0x1F190\n\t\t|| x >= 0x1F19B && x <= 0x1F1AC\n\t\t|| x >= 0xE0100 && x <= 0xE01EF\n\t\t|| x >= 0xF0000 && x <= 0xFFFFD\n\t\t|| x >= 0x100000 && x <= 0x10FFFD;\n}\n\nfunction isFullWidth(x) {\n\treturn x === 0x3000\n\t\t|| x >= 0xFF01 && x <= 0xFF60\n\t\t|| x >= 0xFFE0 && x <= 0xFFE6;\n}\n\nfunction isWide(x) {\n\treturn x >= 0x1100 && x <= 0x115F\n\t\t|| x === 0x231A\n\t\t|| x === 0x231B\n\t\t|| x === 0x2329\n\t\t|| x === 0x232A\n\t\t|| x >= 0x23E9 && x <= 0x23EC\n\t\t|| x === 0x23F0\n\t\t|| x === 0x23F3\n\t\t|| x === 0x25FD\n\t\t|| x === 0x25FE\n\t\t|| x === 0x2614\n\t\t|| x === 0x2615\n\t\t|| x >= 0x2648 && x <= 0x2653\n\t\t|| x === 0x267F\n\t\t|| x === 0x2693\n\t\t|| x === 0x26A1\n\t\t|| x === 0x26AA\n\t\t|| x === 0x26AB\n\t\t|| x === 0x26BD\n\t\t|| x === 0x26BE\n\t\t|| x === 0x26C4\n\t\t|| x === 0x26C5\n\t\t|| x === 0x26CE\n\t\t|| x === 0x26D4\n\t\t|| x === 0x26EA\n\t\t|| x === 0x26F2\n\t\t|| x === 0x26F3\n\t\t|| x === 0x26F5\n\t\t|| x === 0x26FA\n\t\t|| x === 0x26FD\n\t\t|| x === 0x2705\n\t\t|| x === 0x270A\n\t\t|| x === 0x270B\n\t\t|| x === 0x2728\n\t\t|| x === 0x274C\n\t\t|| x === 0x274E\n\t\t|| x >= 0x2753 && x <= 0x2755\n\t\t|| x === 0x2757\n\t\t|| x >= 0x2795 && x <= 0x2797\n\t\t|| x === 0x27B0\n\t\t|| x === 0x27BF\n\t\t|| x === 0x2B1B\n\t\t|| x === 0x2B1C\n\t\t|| x === 0x2B50\n\t\t|| x === 0x2B55\n\t\t|| x >= 0x2E80 && x <= 0x2E99\n\t\t|| x >= 0x2E9B && x <= 0x2EF3\n\t\t|| x >= 0x2F00 && x <= 0x2FD5\n\t\t|| x >= 0x2FF0 && x <= 0x2FFF\n\t\t|| x >= 0x3001 && x <= 0x303E\n\t\t|| x >= 0x3041 && x <= 0x3096\n\t\t|| x >= 0x3099 && x <= 0x30FF\n\t\t|| x >= 0x3105 && x <= 0x312F\n\t\t|| x >= 0x3131 && x <= 0x318E\n\t\t|| x >= 0x3190 && x <= 0x31E3\n\t\t|| x >= 0x31EF && x <= 0x321E\n\t\t|| x >= 0x3220 && x <= 0x3247\n\t\t|| x >= 0x3250 && x <= 0x4DBF\n\t\t|| x >= 0x4E00 && x <= 0xA48C\n\t\t|| x >= 0xA490 && x <= 0xA4C6\n\t\t|| x >= 0xA960 && x <= 0xA97C\n\t\t|| x >= 0xAC00 && x <= 0xD7A3\n\t\t|| x >= 0xF900 && x <= 0xFAFF\n\t\t|| x >= 0xFE10 && x <= 0xFE19\n\t\t|| x >= 0xFE30 && x <= 0xFE52\n\t\t|| x >= 0xFE54 && x <= 0xFE66\n\t\t|| x >= 0xFE68 && x <= 0xFE6B\n\t\t|| x >= 0x16FE0 && x <= 0x16FE4\n\t\t|| x === 0x16FF0\n\t\t|| x === 0x16FF1\n\t\t|| x >= 0x17000 && x <= 0x187F7\n\t\t|| x >= 0x18800 && x <= 0x18CD5\n\t\t|| x >= 0x18D00 && x <= 0x18D08\n\t\t|| x >= 0x1AFF0 && x <= 0x1AFF3\n\t\t|| x >= 0x1AFF5 && x <= 0x1AFFB\n\t\t|| x === 0x1AFFD\n\t\t|| x === 0x1AFFE\n\t\t|| x >= 0x1B000 && x <= 0x1B122\n\t\t|| x === 0x1B132\n\t\t|| x >= 0x1B150 && x <= 0x1B152\n\t\t|| x === 0x1B155\n\t\t|| x >= 0x1B164 && x <= 0x1B167\n\t\t|| x >= 0x1B170 && x <= 0x1B2FB\n\t\t|| x === 0x1F004\n\t\t|| x === 0x1F0CF\n\t\t|| x === 0x1F18E\n\t\t|| x >= 0x1F191 && x <= 0x1F19A\n\t\t|| x >= 0x1F200 && x <= 0x1F202\n\t\t|| x >= 0x1F210 && x <= 0x1F23B\n\t\t|| x >= 0x1F240 && x <= 0x1F248\n\t\t|| x === 0x1F250\n\t\t|| x === 0x1F251\n\t\t|| x >= 0x1F260 && x <= 0x1F265\n\t\t|| x >= 0x1F300 && x <= 0x1F320\n\t\t|| x >= 0x1F32D && x <= 0x1F335\n\t\t|| x >= 0x1F337 && x <= 0x1F37C\n\t\t|| x >= 0x1F37E && x <= 0x1F393\n\t\t|| x >= 0x1F3A0 && x <= 0x1F3CA\n\t\t|| x >= 0x1F3CF && x <= 0x1F3D3\n\t\t|| x >= 0x1F3E0 && x <= 0x1F3F0\n\t\t|| x === 0x1F3F4\n\t\t|| x >= 0x1F3F8 && x <= 0x1F43E\n\t\t|| x === 0x1F440\n\t\t|| x >= 0x1F442 && x <= 0x1F4FC\n\t\t|| x >= 0x1F4FF && x <= 0x1F53D\n\t\t|| x >= 0x1F54B && x <= 0x1F54E\n\t\t|| x >= 0x1F550 && x <= 0x1F567\n\t\t|| x === 0x1F57A\n\t\t|| x === 0x1F595\n\t\t|| x === 0x1F596\n\t\t|| x === 0x1F5A4\n\t\t|| x >= 0x1F5FB && x <= 0x1F64F\n\t\t|| x >= 0x1F680 && x <= 0x1F6C5\n\t\t|| x === 0x1F6CC\n\t\t|| x >= 0x1F6D0 && x <= 0x1F6D2\n\t\t|| x >= 0x1F6D5 && x <= 0x1F6D7\n\t\t|| x >= 0x1F6DC && x <= 0x1F6DF\n\t\t|| x === 0x1F6EB\n\t\t|| x === 0x1F6EC\n\t\t|| x >= 0x1F6F4 && x <= 0x1F6FC\n\t\t|| x >= 0x1F7E0 && x <= 0x1F7EB\n\t\t|| x === 0x1F7F0\n\t\t|| x >= 0x1F90C && x <= 0x1F93A\n\t\t|| x >= 0x1F93C && x <= 0x1F945\n\t\t|| x >= 0x1F947 && x <= 0x1F9FF\n\t\t|| x >= 0x1FA70 && x <= 0x1FA7C\n\t\t|| x >= 0x1FA80 && x <= 0x1FA88\n\t\t|| x >= 0x1FA90 && x <= 0x1FABD\n\t\t|| x >= 0x1FABF && x <= 0x1FAC5\n\t\t|| x >= 0x1FACE && x <= 0x1FADB\n\t\t|| x >= 0x1FAE0 && x <= 0x1FAE8\n\t\t|| x >= 0x1FAF0 && x <= 0x1FAF8\n\t\t|| x >= 0x20000 && x <= 0x2FFFD\n\t\t|| x >= 0x30000 && x <= 0x3FFFD;\n}\n\nfunction getCategory(x) {\n\tif (isAmbiguous(x)) return 'ambiguous';\n\n\tif (isFullWidth(x)) return 'fullwidth';\n\n\tif (\n\t\tx === 0x20A9\n\t\t|| x >= 0xFF61 && x <= 0xFFBE\n\t\t|| x >= 0xFFC2 && x <= 0xFFC7\n\t\t|| x >= 0xFFCA && x <= 0xFFCF\n\t\t|| x >= 0xFFD2 && x <= 0xFFD7\n\t\t|| x >= 0xFFDA && x <= 0xFFDC\n\t\t|| x >= 0xFFE8 && x <= 0xFFEE\n\t) {\n\t\treturn 'halfwidth';\n\t}\n\n\tif (\n\t\tx >= 0x20 && x <= 0x7E\n\t\t|| x === 0xA2\n\t\t|| x === 0xA3\n\t\t|| x === 0xA5\n\t\t|| x === 0xA6\n\t\t|| x === 0xAC\n\t\t|| x === 0xAF\n\t\t|| x >= 0x27E6 && x <= 0x27ED\n\t\t|| x === 0x2985\n\t\t|| x === 0x2986\n\t) {\n\t\treturn 'narrow';\n\t}\n\n\tif (isWide(x)) return 'wide';\n\n\treturn 'neutral';\n}\n\nexport {isAmbiguous, isFullWidth, isWide, getCategory};\n","export default () => {\n\t// https://mths.be/emoji\n\treturn /[#*0-9]\\uFE0F?\\u20E3|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26AA\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C8\\u26CF\\u26D1\\u26E9\\u26F0-\\u26F5\\u26F7\\u26F8\\u26FA\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B55\\u3030\\u303D\\u3297\\u3299]\\uFE0F?|[\\u261D\\u270C\\u270D](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\u270A\\u270B](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u2693\\u26A1\\u26AB\\u26C5\\u26CE\\u26D4\\u26EA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2795-\\u2797\\u27B0\\u27BF\\u2B50]|\\u26D3\\uFE0F?(?:\\u200D\\uD83D\\uDCA5)?|\\u26F9(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\u2764\\uFE0F?(?:\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79))?|\\uD83C(?:[\\uDC04\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]\\uFE0F?|[\\uDF85\\uDFC2\\uDFC7](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDFC4\\uDFCA](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDFCB\\uDFCC](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF43\\uDF45-\\uDF4A\\uDF4C-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF]|\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF]|\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uDF44(?:\\u200D\\uD83D\\uDFEB)?|\\uDF4B(?:\\u200D\\uD83D\\uDFE9)?|\\uDFC3(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?|\\uDFF3\\uFE0F?(?:\\u200D(?:\\u26A7\\uFE0F?|\\uD83C\\uDF08))?|\\uDFF4(?:\\u200D\\u2620\\uFE0F?|\\uDB40\\uDC67\\uDB40\\uDC62\\uDB40(?:\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F)?)|\\uD83D(?:[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3]\\uFE0F?|[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4\\uDEB5](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD74\\uDD90](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC25\\uDC27-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE41\\uDE43\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEDC-\\uDEDF\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB\\uDFF0]|\\uDC08(?:\\u200D\\u2B1B)?|\\uDC15(?:\\u200D\\uD83E\\uDDBA)?|\\uDC26(?:\\u200D(?:\\u2B1B|\\uD83D\\uDD25))?|\\uDC3B(?:\\u200D\\u2744\\uFE0F?)?|\\uDC41\\uFE0F?(?:\\u200D\\uD83D\\uDDE8\\uFE0F?)?|\\uDC68(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDC68\\uDC69]\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC69(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?[\\uDC68\\uDC69]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?|\\uDC69\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?))|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC6F(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDD75(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDE2E(?:\\u200D\\uD83D\\uDCA8)?|\\uDE35(?:\\u200D\\uD83D\\uDCAB)?|\\uDE36(?:\\u200D\\uD83C\\uDF2B\\uFE0F?)?|\\uDE42(?:\\u200D[\\u2194\\u2195]\\uFE0F?)?|\\uDEB6(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?)|\\uD83E(?:[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5\\uDEC3-\\uDEC5\\uDEF0\\uDEF2-\\uDEF8](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD\\uDDCF\\uDDD4\\uDDD6-\\uDDDD](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDDDE\\uDDDF](?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCC\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC2\\uDECE-\\uDEDB\\uDEE0-\\uDEE8]|\\uDD3C(?:\\u200D[\\u2640\\u2642]\\uFE0F?|\\uD83C[\\uDFFB-\\uDFFF])?|\\uDDCE(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?|\\uDDD1(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1|\\uDDD1\\u200D\\uD83E\\uDDD2(?:\\u200D\\uD83E\\uDDD2)?|\\uDDD2(?:\\u200D\\uD83E\\uDDD2)?))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFC-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFD-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFD\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFE]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?))?|\\uDEF1(?:\\uD83C(?:\\uDFFB(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFC-\\uDFFF])?|\\uDFFC(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])?|\\uDFFD(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])?|\\uDFFE(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])?|\\uDFFF(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFE])?))?)/g;\n};\n","/**\n * Types used in signatures of Cheerio methods.\n *\n * @category Cheerio\n */\nexport * from './types.js';\nimport { getLoad } from './load.js';\nimport { getParse } from './parse.js';\nimport { renderWithParse5, parseWithParse5 } from './parsers/parse5-adapter.js';\nimport renderWithHtmlparser2 from 'dom-serializer';\nimport { parseDocument as parseWithHtmlparser2 } from 'htmlparser2';\nconst parse = getParse((content, options, isDocument, context) => options.xmlMode || options._useHtmlParser2\n    ? parseWithHtmlparser2(content, options)\n    : parseWithParse5(content, options, isDocument, context));\n// Duplicate docs due to https://github.com/TypeStrong/typedoc/issues/1616\n/**\n * Create a querying function, bound to a document created from the provided markup.\n *\n * Note that similar to web browser contexts, this operation may introduce\n * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to\n * switch to fragment mode and disable this.\n *\n * @param content - Markup to be loaded.\n * @param options - Options for the created instance.\n * @param isDocument - Allows parser to be switched to fragment mode.\n * @returns The loaded document.\n * @see {@link https://cheerio.js.org#loading} for additional usage information.\n */\nexport const load = getLoad(parse, (dom, options) => options.xmlMode || options._useHtmlParser2\n    ? renderWithHtmlparser2(dom, options)\n    : renderWithParse5(dom));\n/**\n * The default cheerio instance.\n *\n * @deprecated Use the function returned by `load` instead.\n */\nexport default load([]);\nexport { html, xml, text } from './static.js';\nimport * as staticMethods from './static.js';\n/**\n * In order to promote consistency with the jQuery library, users are encouraged\n * to instead use the static method of the same name.\n *\n * @deprecated\n * @example\n *\n * ```js\n * const $ = cheerio.load('<div><p></p></div>');\n *\n * $.contains($('div').get(0), $('p').get(0));\n * //=> true\n *\n * $.contains($('p').get(0), $('div').get(0));\n * //=> false\n * ```\n *\n * @returns {boolean}\n */\nexport const { contains } = staticMethods;\n/**\n * In order to promote consistency with the jQuery library, users are encouraged\n * to instead use the static method of the same name.\n *\n * @deprecated\n * @example\n *\n * ```js\n * const $ = cheerio.load('');\n *\n * $.merge([1, 2], [3, 4]);\n * //=> [1, 2, 3, 4]\n * ```\n */\nexport const { merge } = staticMethods;\n/**\n * In order to promote consistency with the jQuery library, users are encouraged\n * to instead use the static method of the same name as it is defined on the\n * \"loaded\" Cheerio factory function.\n *\n * @deprecated See {@link static/parseHTML}.\n * @example\n *\n * ```js\n * const $ = cheerio.load('');\n * $.parseHTML('<b>markup</b>');\n * ```\n */\nexport const { parseHTML } = staticMethods;\n/**\n * Users seeking to access the top-level element of a parsed document should\n * instead use the `root` static method of a \"loaded\" Cheerio function.\n *\n * @deprecated\n * @example\n *\n * ```js\n * const $ = cheerio.load('');\n * $.root();\n * ```\n */\nexport const { root } = staticMethods;\n//# sourceMappingURL=index.js.map",null,null,"import { default as defaultOptions, flatten as flattenOptions, } from './options.js';\nimport * as staticMethods from './static.js';\nimport { Cheerio } from './cheerio.js';\nimport { isHtml, isCheerio } from './utils.js';\nexport function getLoad(parse, render) {\n    /**\n     * Create a querying function, bound to a document created from the provided markup.\n     *\n     * Note that similar to web browser contexts, this operation may introduce\n     * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to\n     * switch to fragment mode and disable this.\n     *\n     * @param content - Markup to be loaded.\n     * @param options - Options for the created instance.\n     * @param isDocument - Allows parser to be switched to fragment mode.\n     * @returns The loaded document.\n     * @see {@link https://cheerio.js.org#loading} for additional usage information.\n     */\n    return function load(content, options, isDocument = true) {\n        if (content == null) {\n            throw new Error('cheerio.load() expects a string');\n        }\n        const internalOpts = { ...defaultOptions, ...flattenOptions(options) };\n        const initialRoot = parse(content, internalOpts, isDocument, null);\n        /** Create an extended class here, so that extensions only live on one instance. */\n        class LoadedCheerio extends Cheerio {\n            _make(selector, context) {\n                const cheerio = initialize(selector, context);\n                cheerio.prevObject = this;\n                return cheerio;\n            }\n            _parse(content, options, isDocument, context) {\n                return parse(content, options, isDocument, context);\n            }\n            _render(dom) {\n                return render(dom, this.options);\n            }\n        }\n        function initialize(selector, context, root = initialRoot, opts) {\n            // $($)\n            if (selector && isCheerio(selector))\n                return selector;\n            const options = {\n                ...internalOpts,\n                ...flattenOptions(opts),\n            };\n            const r = typeof root === 'string'\n                ? [parse(root, options, false, null)]\n                : 'length' in root\n                    ? root\n                    : [root];\n            const rootInstance = isCheerio(r)\n                ? r\n                : new LoadedCheerio(r, null, options);\n            // Add a cyclic reference, so that calling methods on `_root` never fails.\n            rootInstance._root = rootInstance;\n            // $(), $(null), $(undefined), $(false)\n            if (!selector) {\n                return new LoadedCheerio(undefined, rootInstance, options);\n            }\n            const elements = typeof selector === 'string' && isHtml(selector)\n                ? // $(<html>)\n                    parse(selector, options, false, null).children\n                : isNode(selector)\n                    ? // $(dom)\n                        [selector]\n                    : Array.isArray(selector)\n                        ? // $([dom])\n                            selector\n                        : undefined;\n            const instance = new LoadedCheerio(elements, rootInstance, options);\n            if (elements) {\n                return instance;\n            }\n            if (typeof selector !== 'string') {\n                throw new Error('Unexpected type of selector');\n            }\n            // We know that our selector is a string now.\n            let search = selector;\n            const searchContext = !context\n                ? // If we don't have a context, maybe we have a root, from loading\n                    rootInstance\n                : typeof context === 'string'\n                    ? isHtml(context)\n                        ? // $('li', '<ul>...</ul>')\n                            new LoadedCheerio([parse(context, options, false, null)], rootInstance, options)\n                        : // $('li', 'ul')\n                            ((search = `${context} ${search}`), rootInstance)\n                    : isCheerio(context)\n                        ? // $('li', $)\n                            context\n                        : // $('li', node), $('li', [nodes])\n                            new LoadedCheerio(Array.isArray(context) ? context : [context], rootInstance, options);\n            // If we still don't have a context, return\n            if (!searchContext)\n                return instance;\n            /*\n             * #id, .class, tag\n             */\n            return searchContext.find(search);\n        }\n        // Add in static methods & properties\n        Object.assign(initialize, staticMethods, {\n            load,\n            // `_root` and `_options` are used in static methods.\n            _root: initialRoot,\n            _options: internalOpts,\n            // Add `fn` for plugins\n            fn: LoadedCheerio.prototype,\n            // Add the prototype here to maintain `instanceof` behavior.\n            prototype: LoadedCheerio.prototype,\n        });\n        return initialize;\n    };\n}\nfunction isNode(obj) {\n    return (!!obj.name ||\n        obj.type === 'root' ||\n        obj.type === 'text' ||\n        obj.type === 'comment');\n}\n//# sourceMappingURL=load.js.map",null,"const defaultOpts = {\n    xml: false,\n    decodeEntities: true,\n};\n/** Cheerio default options. */\nexport default defaultOpts;\nconst xmlModeDefault = {\n    _useHtmlParser2: true,\n    xmlMode: true,\n};\n/**\n * Flatten the options for Cheerio.\n *\n * This will set `_useHtmlParser2` to true if `xml` is set to true.\n *\n * @param options - The options to flatten.\n * @returns The flattened options.\n */\nexport function flatten(options) {\n    return (options === null || options === void 0 ? void 0 : options.xml)\n        ? typeof options.xml === 'boolean'\n            ? xmlModeDefault\n            : { ...xmlModeDefault, ...options.xml }\n        : options !== null && options !== void 0 ? options : undefined;\n}\n//# sourceMappingURL=options.js.map",null,"import { textContent } from 'domutils';\nimport { default as defaultOptions, flatten as flattenOptions, } from './options.js';\n/**\n * Helper function to render a DOM.\n *\n * @param that - Cheerio instance to render.\n * @param dom - The DOM to render. Defaults to `that`'s root.\n * @param options - Options for rendering.\n * @returns The rendered document.\n */\nfunction render(that, dom, options) {\n    if (!that)\n        return '';\n    return that(dom !== null && dom !== void 0 ? dom : that._root.children, null, undefined, options).toString();\n}\n/**\n * Checks if a passed object is an options object.\n *\n * @param dom - Object to check if it is an options object.\n * @returns Whether the object is an options object.\n */\nfunction isOptions(dom, options) {\n    return (!options &&\n        typeof dom === 'object' &&\n        dom != null &&\n        !('length' in dom) &&\n        !('type' in dom));\n}\nexport function html(dom, options) {\n    /*\n     * Be flexible about parameters, sometimes we call html(),\n     * with options as only parameter\n     * check dom argument for dom element specific properties\n     * assume there is no 'length' or 'type' properties in the options object\n     */\n    const toRender = isOptions(dom) ? ((options = dom), undefined) : dom;\n    /*\n     * Sometimes `$.html()` is used without preloading html,\n     * so fallback non-existing options to the default ones.\n     */\n    const opts = {\n        ...defaultOptions,\n        ...this === null || this === void 0 ? void 0 : this._options,\n        ...flattenOptions(options !== null && options !== void 0 ? options : {}),\n    };\n    return render(this, toRender, opts);\n}\n/**\n * Render the document as XML.\n *\n * @param dom - Element to render.\n * @returns THe rendered document.\n */\nexport function xml(dom) {\n    const options = { ...this._options, xmlMode: true };\n    return render(this, dom, options);\n}\n/**\n * Render the document as text.\n *\n * This returns the `textContent` of the passed elements. The result will\n * include the contents of `script` and `stype` elements. To avoid this, use\n * `.prop('innerText')` instead.\n *\n * @param elements - Elements to render.\n * @returns The rendered document.\n */\nexport function text(elements) {\n    const elems = elements ? elements : this ? this.root() : [];\n    let ret = '';\n    for (let i = 0; i < elems.length; i++) {\n        ret += textContent(elems[i]);\n    }\n    return ret;\n}\nexport function parseHTML(data, context, keepScripts = typeof context === 'boolean' ? context : false) {\n    if (!data || typeof data !== 'string') {\n        return null;\n    }\n    if (typeof context === 'boolean') {\n        keepScripts = context;\n    }\n    const parsed = this.load(data, defaultOptions, false);\n    if (!keepScripts) {\n        parsed('script').remove();\n    }\n    /*\n     * The `children` array is used by Cheerio internally to group elements that\n     * share the same parents. When nodes created through `parseHTML` are\n     * inserted into previously-existing DOM structures, they will be removed\n     * from the `children` array. The results of `parseHTML` should remain\n     * constant across these operations, so a shallow copy should be returned.\n     */\n    return parsed.root()[0].children.slice();\n}\n/**\n * Sometimes you need to work with the top-level root element. To query it, you\n * can use `$.root()`.\n *\n * @example\n *\n * ```js\n * $.root().append('<ul id=\"vegetables\"></ul>').html();\n * //=> <ul id=\"fruits\">...</ul><ul id=\"vegetables\"></ul>\n * ```\n *\n * @returns Cheerio instance wrapping the root node.\n * @alias Cheerio.root\n */\nexport function root() {\n    return this(this._root);\n}\n/**\n * Checks to see if the `contained` DOM element is a descendant of the\n * `container` DOM element.\n *\n * @param container - Potential parent node.\n * @param contained - Potential child node.\n * @returns Indicates if the nodes contain one another.\n * @alias Cheerio.contains\n * @see {@link https://api.jquery.com/jQuery.contains/}\n */\nexport function contains(container, contained) {\n    // According to the jQuery API, an element does not \"contain\" itself\n    if (contained === container) {\n        return false;\n    }\n    /*\n     * Step up the descendants, stopping when the root element is reached\n     * (signaled by `.parent` returning a reference to the same object)\n     */\n    let next = contained;\n    while (next && next !== next.parent) {\n        next = next.parent;\n        if (next === container) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * $.merge().\n *\n * @param arr1 - First array.\n * @param arr2 - Second array.\n * @returns `arr1`, with elements of `arr2` inserted.\n * @alias Cheerio.merge\n * @see {@link https://api.jquery.com/jQuery.merge/}\n */\nexport function merge(arr1, arr2) {\n    if (!isArrayLike(arr1) || !isArrayLike(arr2)) {\n        return;\n    }\n    let newLength = arr1.length;\n    const len = +arr2.length;\n    for (let i = 0; i < len; i++) {\n        arr1[newLength++] = arr2[i];\n    }\n    arr1.length = newLength;\n    return arr1;\n}\n/**\n * Checks if an object is array-like.\n *\n * @param item - Item to check.\n * @returns Indicates if the item is array-like.\n */\nfunction isArrayLike(item) {\n    if (Array.isArray(item)) {\n        return true;\n    }\n    if (typeof item !== 'object' ||\n        !Object.prototype.hasOwnProperty.call(item, 'length') ||\n        typeof item.length !== 'number' ||\n        item.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < item.length; i++) {\n        if (!(i in item)) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=static.js.map",null,null,"import { isTag, isCDATA, isText, hasChildren, isComment, } from \"domhandler\";\nimport renderHTML from \"dom-serializer\";\nimport { ElementType } from \"domelementtype\";\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @returns `node`'s outer HTML.\n */\nexport function getOuterHTML(node, options) {\n    return renderHTML(node, options);\n}\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @returns `node`'s inner HTML.\n */\nexport function getInnerHTML(node, options) {\n    return hasChildren(node)\n        ? node.children.map((node) => getOuterHTML(node, options)).join(\"\")\n        : \"\";\n}\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.\n *\n * @category Stringify\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nexport function getText(node) {\n    if (Array.isArray(node))\n        return node.map(getText).join(\"\");\n    if (isTag(node))\n        return node.name === \"br\" ? \"\\n\" : getText(node.children);\n    if (isCDATA(node))\n        return getText(node.children);\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's text content. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nexport function textContent(node) {\n    if (Array.isArray(node))\n        return node.map(textContent).join(\"\");\n    if (hasChildren(node) && !isComment(node)) {\n        return textContent(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nexport function innerText(node) {\n    if (Array.isArray(node))\n        return node.map(innerText).join(\"\");\n    if (hasChildren(node) && (node.type === ElementType.Tag || isCDATA(node))) {\n        return innerText(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n//# sourceMappingURL=stringify.js.map",null,"import { ElementType } from \"domelementtype\";\nimport { Element, Text, Comment, CDATA, Document, ProcessingInstruction, } from \"./node.js\";\nexport * from \"./node.js\";\n// Default options\nconst defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nexport class DomHandler {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    constructor(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    onparserinit(parser) {\n        this.parser = parser;\n    }\n    // Resets the handler back to starting state\n    onreset() {\n        this.dom = [];\n        this.root = new Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    }\n    // Signals the handler that parsing is done\n    onend() {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    }\n    onerror(error) {\n        this.handleCallback(error);\n    }\n    onclosetag() {\n        this.lastNode = null;\n        const elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    }\n    onopentag(name, attribs) {\n        const type = this.options.xmlMode ? ElementType.Tag : undefined;\n        const element = new Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    }\n    ontext(data) {\n        const { lastNode } = this;\n        if (lastNode && lastNode.type === ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            const node = new Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    }\n    oncomment(data) {\n        if (this.lastNode && this.lastNode.type === ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        const node = new Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    }\n    oncommentend() {\n        this.lastNode = null;\n    }\n    oncdatastart() {\n        const text = new Text(\"\");\n        const node = new CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    }\n    oncdataend() {\n        this.lastNode = null;\n    }\n    onprocessinginstruction(name, data) {\n        const node = new ProcessingInstruction(name, data);\n        this.addNode(node);\n    }\n    handleCallback(error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    }\n    addNode(node) {\n        const parent = this.tagStack[this.tagStack.length - 1];\n        const previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    }\n}\nexport default DomHandler;\n","/** Types of elements found in htmlparser2's DOM */\nexport var ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nexport function isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexport const Root = ElementType.Root;\n/** Type for Text */\nexport const Text = ElementType.Text;\n/** Type for <? ... ?> */\nexport const Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexport const Comment = ElementType.Comment;\n/** Type for <script> tags */\nexport const Script = ElementType.Script;\n/** Type for <style> tags */\nexport const Style = ElementType.Style;\n/** Type for Any tag */\nexport const Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexport const CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexport const Doctype = ElementType.Doctype;\n","import { ElementType, isTag as isTagRaw } from \"domelementtype\";\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nexport class Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nexport class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nexport class Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nexport class Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nexport class ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nexport class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nexport class CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nexport class Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nexport class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nexport function isTag(node) {\n    return isTagRaw(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nexport function isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nexport function isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nexport function isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nexport function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nexport function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n","/*\n * Module dependencies\n */\nimport * as ElementType from \"domelementtype\";\nimport { encodeXML, escapeAttribute, escapeText } from \"entities\";\n/**\n * Mixed-case SVG and MathML tags & attributes\n * recognized by the HTML parser.\n *\n * @see https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n */\nimport { elementNames, attributeNames } from \"./foreignNames.js\";\nconst unencodedElements = new Set([\n    \"style\",\n    \"script\",\n    \"xmp\",\n    \"iframe\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"noscript\",\n]);\nfunction replaceQuotes(value) {\n    return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n    var _a;\n    if (!attributes)\n        return;\n    const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false\n        ? replaceQuotes\n        : opts.xmlMode || opts.encodeEntities !== \"utf8\"\n            ? encodeXML\n            : escapeAttribute;\n    return Object.keys(attributes)\n        .map((key) => {\n        var _a, _b;\n        const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n        if (opts.xmlMode === \"foreign\") {\n            /* Fix up mixed-case attribute names */\n            key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n        }\n        if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n            return key;\n        }\n        return `${key}=\"${encode(value)}\"`;\n    })\n        .join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nconst singleTag = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nexport function render(node, options = {}) {\n    const nodes = \"length\" in node ? node : [node];\n    let output = \"\";\n    for (let i = 0; i < nodes.length; i++) {\n        output += renderNode(nodes[i], options);\n    }\n    return output;\n}\nexport default render;\nfunction renderNode(node, options) {\n    switch (node.type) {\n        case ElementType.Root:\n            return render(node.children, options);\n        // @ts-expect-error We don't use `Doctype` yet\n        case ElementType.Doctype:\n        case ElementType.Directive:\n            return renderDirective(node);\n        case ElementType.Comment:\n            return renderComment(node);\n        case ElementType.CDATA:\n            return renderCdata(node);\n        case ElementType.Script:\n        case ElementType.Style:\n        case ElementType.Tag:\n            return renderTag(node, options);\n        case ElementType.Text:\n            return renderText(node, options);\n    }\n}\nconst foreignModeIntegrationPoints = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignObject\",\n    \"desc\",\n    \"title\",\n]);\nconst foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case element names */\n        elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n        /* Exit foreign mode at integration points */\n        if (elem.parent &&\n            foreignModeIntegrationPoints.has(elem.parent.name)) {\n            opts = { ...opts, xmlMode: false };\n        }\n    }\n    if (!opts.xmlMode && foreignElements.has(elem.name)) {\n        opts = { ...opts, xmlMode: \"foreign\" };\n    }\n    let tag = `<${elem.name}`;\n    const attribs = formatAttributes(elem.attribs, opts);\n    if (attribs) {\n        tag += ` ${attribs}`;\n    }\n    if (elem.children.length === 0 &&\n        (opts.xmlMode\n            ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n                opts.selfClosingTags !== false\n            : // User explicitly asked for self-closing tags, even in HTML mode\n                opts.selfClosingTags && singleTag.has(elem.name))) {\n        if (!opts.xmlMode)\n            tag += \" \";\n        tag += \"/>\";\n    }\n    else {\n        tag += \">\";\n        if (elem.children.length > 0) {\n            tag += render(elem.children, opts);\n        }\n        if (opts.xmlMode || !singleTag.has(elem.name)) {\n            tag += `</${elem.name}>`;\n        }\n    }\n    return tag;\n}\nfunction renderDirective(elem) {\n    return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n    var _a;\n    let data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false &&\n        !(!opts.xmlMode &&\n            elem.parent &&\n            unencodedElements.has(elem.parent.name))) {\n        data =\n            opts.xmlMode || opts.encodeEntities !== \"utf8\"\n                ? encodeXML(data)\n                : escapeText(data);\n    }\n    return data;\n}\nfunction renderCdata(elem) {\n    return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n    return `<!--${elem.data}-->`;\n}\n","import { decodeXML, decodeHTML, DecodingMode } from \"./decode.js\";\nimport { encodeHTML, encodeNonAsciiHTML } from \"./encode.js\";\nimport { encodeXML, escapeUTF8, escapeAttribute, escapeText, } from \"./escape.js\";\n/** The level of entities to support. */\nexport var EntityLevel;\n(function (EntityLevel) {\n    /** Support only XML entities. */\n    EntityLevel[EntityLevel[\"XML\"] = 0] = \"XML\";\n    /** Support HTML entities, which are a superset of XML entities. */\n    EntityLevel[EntityLevel[\"HTML\"] = 1] = \"HTML\";\n})(EntityLevel || (EntityLevel = {}));\nexport var EncodingMode;\n(function (EncodingMode) {\n    /**\n     * The output is UTF-8 encoded. Only characters that need escaping within\n     * XML will be escaped.\n     */\n    EncodingMode[EncodingMode[\"UTF8\"] = 0] = \"UTF8\";\n    /**\n     * The output consists only of ASCII characters. Characters that need\n     * escaping within HTML, and characters that aren't ASCII characters will\n     * be escaped.\n     */\n    EncodingMode[EncodingMode[\"ASCII\"] = 1] = \"ASCII\";\n    /**\n     * Encode all characters that have an equivalent entity, as well as all\n     * characters that are not ASCII characters.\n     */\n    EncodingMode[EncodingMode[\"Extensive\"] = 2] = \"Extensive\";\n    /**\n     * Encode all characters that have to be escaped in HTML attributes,\n     * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n     */\n    EncodingMode[EncodingMode[\"Attribute\"] = 3] = \"Attribute\";\n    /**\n     * Encode all characters that have to be escaped in HTML text,\n     * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n     */\n    EncodingMode[EncodingMode[\"Text\"] = 4] = \"Text\";\n})(EncodingMode || (EncodingMode = {}));\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param options Decoding options.\n */\nexport function decode(data, options = EntityLevel.XML) {\n    const level = typeof options === \"number\" ? options : options.level;\n    if (level === EntityLevel.HTML) {\n        const mode = typeof options === \"object\" ? options.mode : undefined;\n        return decodeHTML(data, mode);\n    }\n    return decodeXML(data);\n}\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param options Decoding options.\n * @deprecated Use `decode` with the `mode` set to `Strict`.\n */\nexport function decodeStrict(data, options = EntityLevel.XML) {\n    var _a;\n    const opts = typeof options === \"number\" ? { level: options } : options;\n    (_a = opts.mode) !== null && _a !== void 0 ? _a : (opts.mode = DecodingMode.Strict);\n    return decode(data, opts);\n}\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param options Encoding options.\n */\nexport function encode(data, options = EntityLevel.XML) {\n    const opts = typeof options === \"number\" ? { level: options } : options;\n    // Mode `UTF8` just escapes XML entities\n    if (opts.mode === EncodingMode.UTF8)\n        return escapeUTF8(data);\n    if (opts.mode === EncodingMode.Attribute)\n        return escapeAttribute(data);\n    if (opts.mode === EncodingMode.Text)\n        return escapeText(data);\n    if (opts.level === EntityLevel.HTML) {\n        if (opts.mode === EncodingMode.ASCII) {\n            return encodeNonAsciiHTML(data);\n        }\n        return encodeHTML(data);\n    }\n    // ASCII and Extensive are equivalent\n    return encodeXML(data);\n}\nexport { encodeXML, escape, escapeUTF8, escapeAttribute, escapeText, } from \"./escape.js\";\nexport { encodeHTML, encodeNonAsciiHTML, \n// Legacy aliases (deprecated)\nencodeHTML as encodeHTML4, encodeHTML as encodeHTML5, } from \"./encode.js\";\nexport { EntityDecoder, DecodingMode, decodeXML, decodeHTML, decodeHTMLStrict, decodeHTMLAttribute, \n// Legacy aliases (deprecated)\ndecodeHTML as decodeHTML4, decodeHTML as decodeHTML5, decodeHTMLStrict as decodeHTML4Strict, decodeHTMLStrict as decodeHTML5Strict, decodeXML as decodeXMLStrict, } from \"./decode.js\";\n//# sourceMappingURL=index.js.map",null,"import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map",null,"// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map",null,"// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map",null,"// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map",null,"import htmlTrie from \"./generated/encode-html.js\";\nimport { xmlReplacer, getCodePoint } from \"./escape.js\";\nconst htmlReplacer = /[\\t\\n!-,./:-@[-`\\f{-}$\\x80-\\uFFFF]/g;\n/**\n * Encodes all characters in the input using HTML entities. This includes\n * characters that are valid ASCII characters in HTML documents, such as `#`.\n *\n * To get a more compact output, consider using the `encodeNonAsciiHTML`\n * function, which will only encode characters that are not valid in HTML\n * documents, as well as non-ASCII characters.\n *\n * If a character has no equivalent entity, a numeric hexadecimal reference\n * (eg. `&#xfc;`) will be used.\n */\nexport function encodeHTML(data) {\n    return encodeHTMLTrieRe(htmlReplacer, data);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in HTML\n * documents using HTML entities. This function will not encode characters that\n * are valid in HTML documents, such as `#`.\n *\n * If a character has no equivalent entity, a numeric hexadecimal reference\n * (eg. `&#xfc;`) will be used.\n */\nexport function encodeNonAsciiHTML(data) {\n    return encodeHTMLTrieRe(xmlReplacer, data);\n}\nfunction encodeHTMLTrieRe(regExp, str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = regExp.exec(str)) !== null) {\n        const i = match.index;\n        ret += str.substring(lastIdx, i);\n        const char = str.charCodeAt(i);\n        let next = htmlTrie.get(char);\n        if (typeof next === \"object\") {\n            // We are in a branch. Try to match the next char.\n            if (i + 1 < str.length) {\n                const nextChar = str.charCodeAt(i + 1);\n                const value = typeof next.n === \"number\"\n                    ? next.n === nextChar\n                        ? next.o\n                        : undefined\n                    : next.n.get(nextChar);\n                if (value !== undefined) {\n                    ret += value;\n                    lastIdx = regExp.lastIndex += 1;\n                    continue;\n                }\n            }\n            next = next.v;\n        }\n        // We might have a tree node without a value; skip and use a numeric entity.\n        if (next !== undefined) {\n            ret += next;\n            lastIdx = i + 1;\n        }\n        else {\n            const cp = getCodePoint(str, i);\n            ret += `&#x${cp.toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = regExp.lastIndex += Number(cp !== char);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n//# sourceMappingURL=encode.js.map",null,"// Generated using scripts/write-encode-map.ts\nfunction restoreDiff(arr) {\n    for (let i = 1; i < arr.length; i++) {\n        arr[i][0] += arr[i - 1][0] + 1;\n    }\n    return arr;\n}\n// prettier-ignore\nexport default new Map(/* #__PURE__ */ restoreDiff([[9, \"&Tab;\"], [0, \"&NewLine;\"], [22, \"&excl;\"], [0, \"&quot;\"], [0, \"&num;\"], [0, \"&dollar;\"], [0, \"&percnt;\"], [0, \"&amp;\"], [0, \"&apos;\"], [0, \"&lpar;\"], [0, \"&rpar;\"], [0, \"&ast;\"], [0, \"&plus;\"], [0, \"&comma;\"], [1, \"&period;\"], [0, \"&sol;\"], [10, \"&colon;\"], [0, \"&semi;\"], [0, { v: \"&lt;\", n: 8402, o: \"&nvlt;\" }], [0, { v: \"&equals;\", n: 8421, o: \"&bne;\" }], [0, { v: \"&gt;\", n: 8402, o: \"&nvgt;\" }], [0, \"&quest;\"], [0, \"&commat;\"], [26, \"&lbrack;\"], [0, \"&bsol;\"], [0, \"&rbrack;\"], [0, \"&Hat;\"], [0, \"&lowbar;\"], [0, \"&DiacriticalGrave;\"], [5, { n: 106, o: \"&fjlig;\" }], [20, \"&lbrace;\"], [0, \"&verbar;\"], [0, \"&rbrace;\"], [34, \"&nbsp;\"], [0, \"&iexcl;\"], [0, \"&cent;\"], [0, \"&pound;\"], [0, \"&curren;\"], [0, \"&yen;\"], [0, \"&brvbar;\"], [0, \"&sect;\"], [0, \"&die;\"], [0, \"&copy;\"], [0, \"&ordf;\"], [0, \"&laquo;\"], [0, \"&not;\"], [0, \"&shy;\"], [0, \"&circledR;\"], [0, \"&macr;\"], [0, \"&deg;\"], [0, \"&PlusMinus;\"], [0, \"&sup2;\"], [0, \"&sup3;\"], [0, \"&acute;\"], [0, \"&micro;\"], [0, \"&para;\"], [0, \"&centerdot;\"], [0, \"&cedil;\"], [0, \"&sup1;\"], [0, \"&ordm;\"], [0, \"&raquo;\"], [0, \"&frac14;\"], [0, \"&frac12;\"], [0, \"&frac34;\"], [0, \"&iquest;\"], [0, \"&Agrave;\"], [0, \"&Aacute;\"], [0, \"&Acirc;\"], [0, \"&Atilde;\"], [0, \"&Auml;\"], [0, \"&angst;\"], [0, \"&AElig;\"], [0, \"&Ccedil;\"], [0, \"&Egrave;\"], [0, \"&Eacute;\"], [0, \"&Ecirc;\"], [0, \"&Euml;\"], [0, \"&Igrave;\"], [0, \"&Iacute;\"], [0, \"&Icirc;\"], [0, \"&Iuml;\"], [0, \"&ETH;\"], [0, \"&Ntilde;\"], [0, \"&Ograve;\"], [0, \"&Oacute;\"], [0, \"&Ocirc;\"], [0, \"&Otilde;\"], [0, \"&Ouml;\"], [0, \"&times;\"], [0, \"&Oslash;\"], [0, \"&Ugrave;\"], [0, \"&Uacute;\"], [0, \"&Ucirc;\"], [0, \"&Uuml;\"], [0, \"&Yacute;\"], [0, \"&THORN;\"], [0, \"&szlig;\"], [0, \"&agrave;\"], [0, \"&aacute;\"], [0, \"&acirc;\"], [0, \"&atilde;\"], [0, \"&auml;\"], [0, \"&aring;\"], [0, \"&aelig;\"], [0, \"&ccedil;\"], [0, \"&egrave;\"], [0, \"&eacute;\"], [0, \"&ecirc;\"], [0, \"&euml;\"], [0, \"&igrave;\"], [0, \"&iacute;\"], [0, \"&icirc;\"], [0, \"&iuml;\"], [0, \"&eth;\"], [0, \"&ntilde;\"], [0, \"&ograve;\"], [0, \"&oacute;\"], [0, \"&ocirc;\"], [0, \"&otilde;\"], [0, \"&ouml;\"], [0, \"&div;\"], [0, \"&oslash;\"], [0, \"&ugrave;\"], [0, \"&uacute;\"], [0, \"&ucirc;\"], [0, \"&uuml;\"], [0, \"&yacute;\"], [0, \"&thorn;\"], [0, \"&yuml;\"], [0, \"&Amacr;\"], [0, \"&amacr;\"], [0, \"&Abreve;\"], [0, \"&abreve;\"], [0, \"&Aogon;\"], [0, \"&aogon;\"], [0, \"&Cacute;\"], [0, \"&cacute;\"], [0, \"&Ccirc;\"], [0, \"&ccirc;\"], [0, \"&Cdot;\"], [0, \"&cdot;\"], [0, \"&Ccaron;\"], [0, \"&ccaron;\"], [0, \"&Dcaron;\"], [0, \"&dcaron;\"], [0, \"&Dstrok;\"], [0, \"&dstrok;\"], [0, \"&Emacr;\"], [0, \"&emacr;\"], [2, \"&Edot;\"], [0, \"&edot;\"], [0, \"&Eogon;\"], [0, \"&eogon;\"], [0, \"&Ecaron;\"], [0, \"&ecaron;\"], [0, \"&Gcirc;\"], [0, \"&gcirc;\"], [0, \"&Gbreve;\"], [0, \"&gbreve;\"], [0, \"&Gdot;\"], [0, \"&gdot;\"], [0, \"&Gcedil;\"], [1, \"&Hcirc;\"], [0, \"&hcirc;\"], [0, \"&Hstrok;\"], [0, \"&hstrok;\"], [0, \"&Itilde;\"], [0, \"&itilde;\"], [0, \"&Imacr;\"], [0, \"&imacr;\"], [2, \"&Iogon;\"], [0, \"&iogon;\"], [0, \"&Idot;\"], [0, \"&imath;\"], [0, \"&IJlig;\"], [0, \"&ijlig;\"], [0, \"&Jcirc;\"], [0, \"&jcirc;\"], [0, \"&Kcedil;\"], [0, \"&kcedil;\"], [0, \"&kgreen;\"], [0, \"&Lacute;\"], [0, \"&lacute;\"], [0, \"&Lcedil;\"], [0, \"&lcedil;\"], [0, \"&Lcaron;\"], [0, \"&lcaron;\"], [0, \"&Lmidot;\"], [0, \"&lmidot;\"], [0, \"&Lstrok;\"], [0, \"&lstrok;\"], [0, \"&Nacute;\"], [0, \"&nacute;\"], [0, \"&Ncedil;\"], [0, \"&ncedil;\"], [0, \"&Ncaron;\"], [0, \"&ncaron;\"], [0, \"&napos;\"], [0, \"&ENG;\"], [0, \"&eng;\"], [0, \"&Omacr;\"], [0, \"&omacr;\"], [2, \"&Odblac;\"], [0, \"&odblac;\"], [0, \"&OElig;\"], [0, \"&oelig;\"], [0, \"&Racute;\"], [0, \"&racute;\"], [0, \"&Rcedil;\"], [0, \"&rcedil;\"], [0, \"&Rcaron;\"], [0, \"&rcaron;\"], [0, \"&Sacute;\"], [0, \"&sacute;\"], [0, \"&Scirc;\"], [0, \"&scirc;\"], [0, \"&Scedil;\"], [0, \"&scedil;\"], [0, \"&Scaron;\"], [0, \"&scaron;\"], [0, \"&Tcedil;\"], [0, \"&tcedil;\"], [0, \"&Tcaron;\"], [0, \"&tcaron;\"], [0, \"&Tstrok;\"], [0, \"&tstrok;\"], [0, \"&Utilde;\"], [0, \"&utilde;\"], [0, \"&Umacr;\"], [0, \"&umacr;\"], [0, \"&Ubreve;\"], [0, \"&ubreve;\"], [0, \"&Uring;\"], [0, \"&uring;\"], [0, \"&Udblac;\"], [0, \"&udblac;\"], [0, \"&Uogon;\"], [0, \"&uogon;\"], [0, \"&Wcirc;\"], [0, \"&wcirc;\"], [0, \"&Ycirc;\"], [0, \"&ycirc;\"], [0, \"&Yuml;\"], [0, \"&Zacute;\"], [0, \"&zacute;\"], [0, \"&Zdot;\"], [0, \"&zdot;\"], [0, \"&Zcaron;\"], [0, \"&zcaron;\"], [19, \"&fnof;\"], [34, \"&imped;\"], [63, \"&gacute;\"], [65, \"&jmath;\"], [142, \"&circ;\"], [0, \"&caron;\"], [16, \"&breve;\"], [0, \"&DiacriticalDot;\"], [0, \"&ring;\"], [0, \"&ogon;\"], [0, \"&DiacriticalTilde;\"], [0, \"&dblac;\"], [51, \"&DownBreve;\"], [127, \"&Alpha;\"], [0, \"&Beta;\"], [0, \"&Gamma;\"], [0, \"&Delta;\"], [0, \"&Epsilon;\"], [0, \"&Zeta;\"], [0, \"&Eta;\"], [0, \"&Theta;\"], [0, \"&Iota;\"], [0, \"&Kappa;\"], [0, \"&Lambda;\"], [0, \"&Mu;\"], [0, \"&Nu;\"], [0, \"&Xi;\"], [0, \"&Omicron;\"], [0, \"&Pi;\"], [0, \"&Rho;\"], [1, \"&Sigma;\"], [0, \"&Tau;\"], [0, \"&Upsilon;\"], [0, \"&Phi;\"], [0, \"&Chi;\"], [0, \"&Psi;\"], [0, \"&ohm;\"], [7, \"&alpha;\"], [0, \"&beta;\"], [0, \"&gamma;\"], [0, \"&delta;\"], [0, \"&epsi;\"], [0, \"&zeta;\"], [0, \"&eta;\"], [0, \"&theta;\"], [0, \"&iota;\"], [0, \"&kappa;\"], [0, \"&lambda;\"], [0, \"&mu;\"], [0, \"&nu;\"], [0, \"&xi;\"], [0, \"&omicron;\"], [0, \"&pi;\"], [0, \"&rho;\"], [0, \"&sigmaf;\"], [0, \"&sigma;\"], [0, \"&tau;\"], [0, \"&upsi;\"], [0, \"&phi;\"], [0, \"&chi;\"], [0, \"&psi;\"], [0, \"&omega;\"], [7, \"&thetasym;\"], [0, \"&Upsi;\"], [2, \"&phiv;\"], [0, \"&piv;\"], [5, \"&Gammad;\"], [0, \"&digamma;\"], [18, \"&kappav;\"], [0, \"&rhov;\"], [3, \"&epsiv;\"], [0, \"&backepsilon;\"], [10, \"&IOcy;\"], [0, \"&DJcy;\"], [0, \"&GJcy;\"], [0, \"&Jukcy;\"], [0, \"&DScy;\"], [0, \"&Iukcy;\"], [0, \"&YIcy;\"], [0, \"&Jsercy;\"], [0, \"&LJcy;\"], [0, \"&NJcy;\"], [0, \"&TSHcy;\"], [0, \"&KJcy;\"], [1, \"&Ubrcy;\"], [0, \"&DZcy;\"], [0, \"&Acy;\"], [0, \"&Bcy;\"], [0, \"&Vcy;\"], [0, \"&Gcy;\"], [0, \"&Dcy;\"], [0, \"&IEcy;\"], [0, \"&ZHcy;\"], [0, \"&Zcy;\"], [0, \"&Icy;\"], [0, \"&Jcy;\"], [0, \"&Kcy;\"], [0, \"&Lcy;\"], [0, \"&Mcy;\"], [0, \"&Ncy;\"], [0, \"&Ocy;\"], [0, \"&Pcy;\"], [0, \"&Rcy;\"], [0, \"&Scy;\"], [0, \"&Tcy;\"], [0, \"&Ucy;\"], [0, \"&Fcy;\"], [0, \"&KHcy;\"], [0, \"&TScy;\"], [0, \"&CHcy;\"], [0, \"&SHcy;\"], [0, \"&SHCHcy;\"], [0, \"&HARDcy;\"], [0, \"&Ycy;\"], [0, \"&SOFTcy;\"], [0, \"&Ecy;\"], [0, \"&YUcy;\"], [0, \"&YAcy;\"], [0, \"&acy;\"], [0, \"&bcy;\"], [0, \"&vcy;\"], [0, \"&gcy;\"], [0, \"&dcy;\"], [0, \"&iecy;\"], [0, \"&zhcy;\"], [0, \"&zcy;\"], [0, \"&icy;\"], [0, \"&jcy;\"], [0, \"&kcy;\"], [0, \"&lcy;\"], [0, \"&mcy;\"], [0, \"&ncy;\"], [0, \"&ocy;\"], [0, \"&pcy;\"], [0, \"&rcy;\"], [0, \"&scy;\"], [0, \"&tcy;\"], [0, \"&ucy;\"], [0, \"&fcy;\"], [0, \"&khcy;\"], [0, \"&tscy;\"], [0, \"&chcy;\"], [0, \"&shcy;\"], [0, \"&shchcy;\"], [0, \"&hardcy;\"], [0, \"&ycy;\"], [0, \"&softcy;\"], [0, \"&ecy;\"], [0, \"&yucy;\"], [0, \"&yacy;\"], [1, \"&iocy;\"], [0, \"&djcy;\"], [0, \"&gjcy;\"], [0, \"&jukcy;\"], [0, \"&dscy;\"], [0, \"&iukcy;\"], [0, \"&yicy;\"], [0, \"&jsercy;\"], [0, \"&ljcy;\"], [0, \"&njcy;\"], [0, \"&tshcy;\"], [0, \"&kjcy;\"], [1, \"&ubrcy;\"], [0, \"&dzcy;\"], [7074, \"&ensp;\"], [0, \"&emsp;\"], [0, \"&emsp13;\"], [0, \"&emsp14;\"], [1, \"&numsp;\"], [0, \"&puncsp;\"], [0, \"&ThinSpace;\"], [0, \"&hairsp;\"], [0, \"&NegativeMediumSpace;\"], [0, \"&zwnj;\"], [0, \"&zwj;\"], [0, \"&lrm;\"], [0, \"&rlm;\"], [0, \"&dash;\"], [2, \"&ndash;\"], [0, \"&mdash;\"], [0, \"&horbar;\"], [0, \"&Verbar;\"], [1, \"&lsquo;\"], [0, \"&CloseCurlyQuote;\"], [0, \"&lsquor;\"], [1, \"&ldquo;\"], [0, \"&CloseCurlyDoubleQuote;\"], [0, \"&bdquo;\"], [1, \"&dagger;\"], [0, \"&Dagger;\"], [0, \"&bull;\"], [2, \"&nldr;\"], [0, \"&hellip;\"], [9, \"&permil;\"], [0, \"&pertenk;\"], [0, \"&prime;\"], [0, \"&Prime;\"], [0, \"&tprime;\"], [0, \"&backprime;\"], [3, \"&lsaquo;\"], [0, \"&rsaquo;\"], [3, \"&oline;\"], [2, \"&caret;\"], [1, \"&hybull;\"], [0, \"&frasl;\"], [10, \"&bsemi;\"], [7, \"&qprime;\"], [7, { v: \"&MediumSpace;\", n: 8202, o: \"&ThickSpace;\" }], [0, \"&NoBreak;\"], [0, \"&af;\"], [0, \"&InvisibleTimes;\"], [0, \"&ic;\"], [72, \"&euro;\"], [46, \"&tdot;\"], [0, \"&DotDot;\"], [37, \"&complexes;\"], [2, \"&incare;\"], [4, \"&gscr;\"], [0, \"&hamilt;\"], [0, \"&Hfr;\"], [0, \"&Hopf;\"], [0, \"&planckh;\"], [0, \"&hbar;\"], [0, \"&imagline;\"], [0, \"&Ifr;\"], [0, \"&lagran;\"], [0, \"&ell;\"], [1, \"&naturals;\"], [0, \"&numero;\"], [0, \"&copysr;\"], [0, \"&weierp;\"], [0, \"&Popf;\"], [0, \"&Qopf;\"], [0, \"&realine;\"], [0, \"&real;\"], [0, \"&reals;\"], [0, \"&rx;\"], [3, \"&trade;\"], [1, \"&integers;\"], [2, \"&mho;\"], [0, \"&zeetrf;\"], [0, \"&iiota;\"], [2, \"&bernou;\"], [0, \"&Cayleys;\"], [1, \"&escr;\"], [0, \"&Escr;\"], [0, \"&Fouriertrf;\"], [1, \"&Mellintrf;\"], [0, \"&order;\"], [0, \"&alefsym;\"], [0, \"&beth;\"], [0, \"&gimel;\"], [0, \"&daleth;\"], [12, \"&CapitalDifferentialD;\"], [0, \"&dd;\"], [0, \"&ee;\"], [0, \"&ii;\"], [10, \"&frac13;\"], [0, \"&frac23;\"], [0, \"&frac15;\"], [0, \"&frac25;\"], [0, \"&frac35;\"], [0, \"&frac45;\"], [0, \"&frac16;\"], [0, \"&frac56;\"], [0, \"&frac18;\"], [0, \"&frac38;\"], [0, \"&frac58;\"], [0, \"&frac78;\"], [49, \"&larr;\"], [0, \"&ShortUpArrow;\"], [0, \"&rarr;\"], [0, \"&darr;\"], [0, \"&harr;\"], [0, \"&updownarrow;\"], [0, \"&nwarr;\"], [0, \"&nearr;\"], [0, \"&LowerRightArrow;\"], [0, \"&LowerLeftArrow;\"], [0, \"&nlarr;\"], [0, \"&nrarr;\"], [1, { v: \"&rarrw;\", n: 824, o: \"&nrarrw;\" }], [0, \"&Larr;\"], [0, \"&Uarr;\"], [0, \"&Rarr;\"], [0, \"&Darr;\"], [0, \"&larrtl;\"], [0, \"&rarrtl;\"], [0, \"&LeftTeeArrow;\"], [0, \"&mapstoup;\"], [0, \"&map;\"], [0, \"&DownTeeArrow;\"], [1, \"&hookleftarrow;\"], [0, \"&hookrightarrow;\"], [0, \"&larrlp;\"], [0, \"&looparrowright;\"], [0, \"&harrw;\"], [0, \"&nharr;\"], [1, \"&lsh;\"], [0, \"&rsh;\"], [0, \"&ldsh;\"], [0, \"&rdsh;\"], [1, \"&crarr;\"], [0, \"&cularr;\"], [0, \"&curarr;\"], [2, \"&circlearrowleft;\"], [0, \"&circlearrowright;\"], [0, \"&leftharpoonup;\"], [0, \"&DownLeftVector;\"], [0, \"&RightUpVector;\"], [0, \"&LeftUpVector;\"], [0, \"&rharu;\"], [0, \"&DownRightVector;\"], [0, \"&dharr;\"], [0, \"&dharl;\"], [0, \"&RightArrowLeftArrow;\"], [0, \"&udarr;\"], [0, \"&LeftArrowRightArrow;\"], [0, \"&leftleftarrows;\"], [0, \"&upuparrows;\"], [0, \"&rightrightarrows;\"], [0, \"&ddarr;\"], [0, \"&leftrightharpoons;\"], [0, \"&Equilibrium;\"], [0, \"&nlArr;\"], [0, \"&nhArr;\"], [0, \"&nrArr;\"], [0, \"&DoubleLeftArrow;\"], [0, \"&DoubleUpArrow;\"], [0, \"&DoubleRightArrow;\"], [0, \"&dArr;\"], [0, \"&DoubleLeftRightArrow;\"], [0, \"&DoubleUpDownArrow;\"], [0, \"&nwArr;\"], [0, \"&neArr;\"], [0, \"&seArr;\"], [0, \"&swArr;\"], [0, \"&lAarr;\"], [0, \"&rAarr;\"], [1, \"&zigrarr;\"], [6, \"&larrb;\"], [0, \"&rarrb;\"], [15, \"&DownArrowUpArrow;\"], [7, \"&loarr;\"], [0, \"&roarr;\"], [0, \"&hoarr;\"], [0, \"&forall;\"], [0, \"&comp;\"], [0, { v: \"&part;\", n: 824, o: \"&npart;\" }], [0, \"&exist;\"], [0, \"&nexist;\"], [0, \"&empty;\"], [1, \"&Del;\"], [0, \"&Element;\"], [0, \"&NotElement;\"], [1, \"&ni;\"], [0, \"&notni;\"], [2, \"&prod;\"], [0, \"&coprod;\"], [0, \"&sum;\"], [0, \"&minus;\"], [0, \"&MinusPlus;\"], [0, \"&dotplus;\"], [1, \"&Backslash;\"], [0, \"&lowast;\"], [0, \"&compfn;\"], [1, \"&radic;\"], [2, \"&prop;\"], [0, \"&infin;\"], [0, \"&angrt;\"], [0, { v: \"&ang;\", n: 8402, o: \"&nang;\" }], [0, \"&angmsd;\"], [0, \"&angsph;\"], [0, \"&mid;\"], [0, \"&nmid;\"], [0, \"&DoubleVerticalBar;\"], [0, \"&NotDoubleVerticalBar;\"], [0, \"&and;\"], [0, \"&or;\"], [0, { v: \"&cap;\", n: 65024, o: \"&caps;\" }], [0, { v: \"&cup;\", n: 65024, o: \"&cups;\" }], [0, \"&int;\"], [0, \"&Int;\"], [0, \"&iiint;\"], [0, \"&conint;\"], [0, \"&Conint;\"], [0, \"&Cconint;\"], [0, \"&cwint;\"], [0, \"&ClockwiseContourIntegral;\"], [0, \"&awconint;\"], [0, \"&there4;\"], [0, \"&becaus;\"], [0, \"&ratio;\"], [0, \"&Colon;\"], [0, \"&dotminus;\"], [1, \"&mDDot;\"], [0, \"&homtht;\"], [0, { v: \"&sim;\", n: 8402, o: \"&nvsim;\" }], [0, { v: \"&backsim;\", n: 817, o: \"&race;\" }], [0, { v: \"&ac;\", n: 819, o: \"&acE;\" }], [0, \"&acd;\"], [0, \"&VerticalTilde;\"], [0, \"&NotTilde;\"], [0, { v: \"&eqsim;\", n: 824, o: \"&nesim;\" }], [0, \"&sime;\"], [0, \"&NotTildeEqual;\"], [0, \"&cong;\"], [0, \"&simne;\"], [0, \"&ncong;\"], [0, \"&ap;\"], [0, \"&nap;\"], [0, \"&ape;\"], [0, { v: \"&apid;\", n: 824, o: \"&napid;\" }], [0, \"&backcong;\"], [0, { v: \"&asympeq;\", n: 8402, o: \"&nvap;\" }], [0, { v: \"&bump;\", n: 824, o: \"&nbump;\" }], [0, { v: \"&bumpe;\", n: 824, o: \"&nbumpe;\" }], [0, { v: \"&doteq;\", n: 824, o: \"&nedot;\" }], [0, \"&doteqdot;\"], [0, \"&efDot;\"], [0, \"&erDot;\"], [0, \"&Assign;\"], [0, \"&ecolon;\"], [0, \"&ecir;\"], [0, \"&circeq;\"], [1, \"&wedgeq;\"], [0, \"&veeeq;\"], [1, \"&triangleq;\"], [2, \"&equest;\"], [0, \"&ne;\"], [0, { v: \"&Congruent;\", n: 8421, o: \"&bnequiv;\" }], [0, \"&nequiv;\"], [1, { v: \"&le;\", n: 8402, o: \"&nvle;\" }], [0, { v: \"&ge;\", n: 8402, o: \"&nvge;\" }], [0, { v: \"&lE;\", n: 824, o: \"&nlE;\" }], [0, { v: \"&gE;\", n: 824, o: \"&ngE;\" }], [0, { v: \"&lnE;\", n: 65024, o: \"&lvertneqq;\" }], [0, { v: \"&gnE;\", n: 65024, o: \"&gvertneqq;\" }], [0, { v: \"&ll;\", n: new Map(/* #__PURE__ */ restoreDiff([[824, \"&nLtv;\"], [7577, \"&nLt;\"]])) }], [0, { v: \"&gg;\", n: new Map(/* #__PURE__ */ restoreDiff([[824, \"&nGtv;\"], [7577, \"&nGt;\"]])) }], [0, \"&between;\"], [0, \"&NotCupCap;\"], [0, \"&nless;\"], [0, \"&ngt;\"], [0, \"&nle;\"], [0, \"&nge;\"], [0, \"&lesssim;\"], [0, \"&GreaterTilde;\"], [0, \"&nlsim;\"], [0, \"&ngsim;\"], [0, \"&LessGreater;\"], [0, \"&gl;\"], [0, \"&NotLessGreater;\"], [0, \"&NotGreaterLess;\"], [0, \"&pr;\"], [0, \"&sc;\"], [0, \"&prcue;\"], [0, \"&sccue;\"], [0, \"&PrecedesTilde;\"], [0, { v: \"&scsim;\", n: 824, o: \"&NotSucceedsTilde;\" }], [0, \"&NotPrecedes;\"], [0, \"&NotSucceeds;\"], [0, { v: \"&sub;\", n: 8402, o: \"&NotSubset;\" }], [0, { v: \"&sup;\", n: 8402, o: \"&NotSuperset;\" }], [0, \"&nsub;\"], [0, \"&nsup;\"], [0, \"&sube;\"], [0, \"&supe;\"], [0, \"&NotSubsetEqual;\"], [0, \"&NotSupersetEqual;\"], [0, { v: \"&subne;\", n: 65024, o: \"&varsubsetneq;\" }], [0, { v: \"&supne;\", n: 65024, o: \"&varsupsetneq;\" }], [1, \"&cupdot;\"], [0, \"&UnionPlus;\"], [0, { v: \"&sqsub;\", n: 824, o: \"&NotSquareSubset;\" }], [0, { v: \"&sqsup;\", n: 824, o: \"&NotSquareSuperset;\" }], [0, \"&sqsube;\"], [0, \"&sqsupe;\"], [0, { v: \"&sqcap;\", n: 65024, o: \"&sqcaps;\" }], [0, { v: \"&sqcup;\", n: 65024, o: \"&sqcups;\" }], [0, \"&CirclePlus;\"], [0, \"&CircleMinus;\"], [0, \"&CircleTimes;\"], [0, \"&osol;\"], [0, \"&CircleDot;\"], [0, \"&circledcirc;\"], [0, \"&circledast;\"], [1, \"&circleddash;\"], [0, \"&boxplus;\"], [0, \"&boxminus;\"], [0, \"&boxtimes;\"], [0, \"&dotsquare;\"], [0, \"&RightTee;\"], [0, \"&dashv;\"], [0, \"&DownTee;\"], [0, \"&bot;\"], [1, \"&models;\"], [0, \"&DoubleRightTee;\"], [0, \"&Vdash;\"], [0, \"&Vvdash;\"], [0, \"&VDash;\"], [0, \"&nvdash;\"], [0, \"&nvDash;\"], [0, \"&nVdash;\"], [0, \"&nVDash;\"], [0, \"&prurel;\"], [1, \"&LeftTriangle;\"], [0, \"&RightTriangle;\"], [0, { v: \"&LeftTriangleEqual;\", n: 8402, o: \"&nvltrie;\" }], [0, { v: \"&RightTriangleEqual;\", n: 8402, o: \"&nvrtrie;\" }], [0, \"&origof;\"], [0, \"&imof;\"], [0, \"&multimap;\"], [0, \"&hercon;\"], [0, \"&intcal;\"], [0, \"&veebar;\"], [1, \"&barvee;\"], [0, \"&angrtvb;\"], [0, \"&lrtri;\"], [0, \"&bigwedge;\"], [0, \"&bigvee;\"], [0, \"&bigcap;\"], [0, \"&bigcup;\"], [0, \"&diam;\"], [0, \"&sdot;\"], [0, \"&sstarf;\"], [0, \"&divideontimes;\"], [0, \"&bowtie;\"], [0, \"&ltimes;\"], [0, \"&rtimes;\"], [0, \"&leftthreetimes;\"], [0, \"&rightthreetimes;\"], [0, \"&backsimeq;\"], [0, \"&curlyvee;\"], [0, \"&curlywedge;\"], [0, \"&Sub;\"], [0, \"&Sup;\"], [0, \"&Cap;\"], [0, \"&Cup;\"], [0, \"&fork;\"], [0, \"&epar;\"], [0, \"&lessdot;\"], [0, \"&gtdot;\"], [0, { v: \"&Ll;\", n: 824, o: \"&nLl;\" }], [0, { v: \"&Gg;\", n: 824, o: \"&nGg;\" }], [0, { v: \"&leg;\", n: 65024, o: \"&lesg;\" }], [0, { v: \"&gel;\", n: 65024, o: \"&gesl;\" }], [2, \"&cuepr;\"], [0, \"&cuesc;\"], [0, \"&NotPrecedesSlantEqual;\"], [0, \"&NotSucceedsSlantEqual;\"], [0, \"&NotSquareSubsetEqual;\"], [0, \"&NotSquareSupersetEqual;\"], [2, \"&lnsim;\"], [0, \"&gnsim;\"], [0, \"&precnsim;\"], [0, \"&scnsim;\"], [0, \"&nltri;\"], [0, \"&NotRightTriangle;\"], [0, \"&nltrie;\"], [0, \"&NotRightTriangleEqual;\"], [0, \"&vellip;\"], [0, \"&ctdot;\"], [0, \"&utdot;\"], [0, \"&dtdot;\"], [0, \"&disin;\"], [0, \"&isinsv;\"], [0, \"&isins;\"], [0, { v: \"&isindot;\", n: 824, o: \"&notindot;\" }], [0, \"&notinvc;\"], [0, \"&notinvb;\"], [1, { v: \"&isinE;\", n: 824, o: \"&notinE;\" }], [0, \"&nisd;\"], [0, \"&xnis;\"], [0, \"&nis;\"], [0, \"&notnivc;\"], [0, \"&notnivb;\"], [6, \"&barwed;\"], [0, \"&Barwed;\"], [1, \"&lceil;\"], [0, \"&rceil;\"], [0, \"&LeftFloor;\"], [0, \"&rfloor;\"], [0, \"&drcrop;\"], [0, \"&dlcrop;\"], [0, \"&urcrop;\"], [0, \"&ulcrop;\"], [0, \"&bnot;\"], [1, \"&profline;\"], [0, \"&profsurf;\"], [1, \"&telrec;\"], [0, \"&target;\"], [5, \"&ulcorn;\"], [0, \"&urcorn;\"], [0, \"&dlcorn;\"], [0, \"&drcorn;\"], [2, \"&frown;\"], [0, \"&smile;\"], [9, \"&cylcty;\"], [0, \"&profalar;\"], [7, \"&topbot;\"], [6, \"&ovbar;\"], [1, \"&solbar;\"], [60, \"&angzarr;\"], [51, \"&lmoustache;\"], [0, \"&rmoustache;\"], [2, \"&OverBracket;\"], [0, \"&bbrk;\"], [0, \"&bbrktbrk;\"], [37, \"&OverParenthesis;\"], [0, \"&UnderParenthesis;\"], [0, \"&OverBrace;\"], [0, \"&UnderBrace;\"], [2, \"&trpezium;\"], [4, \"&elinters;\"], [59, \"&blank;\"], [164, \"&circledS;\"], [55, \"&boxh;\"], [1, \"&boxv;\"], [9, \"&boxdr;\"], [3, \"&boxdl;\"], [3, \"&boxur;\"], [3, \"&boxul;\"], [3, \"&boxvr;\"], [7, \"&boxvl;\"], [7, \"&boxhd;\"], [7, \"&boxhu;\"], [7, \"&boxvh;\"], [19, \"&boxH;\"], [0, \"&boxV;\"], [0, \"&boxdR;\"], [0, \"&boxDr;\"], [0, \"&boxDR;\"], [0, \"&boxdL;\"], [0, \"&boxDl;\"], [0, \"&boxDL;\"], [0, \"&boxuR;\"], [0, \"&boxUr;\"], [0, \"&boxUR;\"], [0, \"&boxuL;\"], [0, \"&boxUl;\"], [0, \"&boxUL;\"], [0, \"&boxvR;\"], [0, \"&boxVr;\"], [0, \"&boxVR;\"], [0, \"&boxvL;\"], [0, \"&boxVl;\"], [0, \"&boxVL;\"], [0, \"&boxHd;\"], [0, \"&boxhD;\"], [0, \"&boxHD;\"], [0, \"&boxHu;\"], [0, \"&boxhU;\"], [0, \"&boxHU;\"], [0, \"&boxvH;\"], [0, \"&boxVh;\"], [0, \"&boxVH;\"], [19, \"&uhblk;\"], [3, \"&lhblk;\"], [3, \"&block;\"], [8, \"&blk14;\"], [0, \"&blk12;\"], [0, \"&blk34;\"], [13, \"&square;\"], [8, \"&blacksquare;\"], [0, \"&EmptyVerySmallSquare;\"], [1, \"&rect;\"], [0, \"&marker;\"], [2, \"&fltns;\"], [1, \"&bigtriangleup;\"], [0, \"&blacktriangle;\"], [0, \"&triangle;\"], [2, \"&blacktriangleright;\"], [0, \"&rtri;\"], [3, \"&bigtriangledown;\"], [0, \"&blacktriangledown;\"], [0, \"&dtri;\"], [2, \"&blacktriangleleft;\"], [0, \"&ltri;\"], [6, \"&loz;\"], [0, \"&cir;\"], [32, \"&tridot;\"], [2, \"&bigcirc;\"], [8, \"&ultri;\"], [0, \"&urtri;\"], [0, \"&lltri;\"], [0, \"&EmptySmallSquare;\"], [0, \"&FilledSmallSquare;\"], [8, \"&bigstar;\"], [0, \"&star;\"], [7, \"&phone;\"], [49, \"&female;\"], [1, \"&male;\"], [29, \"&spades;\"], [2, \"&clubs;\"], [1, \"&hearts;\"], [0, \"&diamondsuit;\"], [3, \"&sung;\"], [2, \"&flat;\"], [0, \"&natural;\"], [0, \"&sharp;\"], [163, \"&check;\"], [3, \"&cross;\"], [8, \"&malt;\"], [21, \"&sext;\"], [33, \"&VerticalSeparator;\"], [25, \"&lbbrk;\"], [0, \"&rbbrk;\"], [84, \"&bsolhsub;\"], [0, \"&suphsol;\"], [28, \"&LeftDoubleBracket;\"], [0, \"&RightDoubleBracket;\"], [0, \"&lang;\"], [0, \"&rang;\"], [0, \"&Lang;\"], [0, \"&Rang;\"], [0, \"&loang;\"], [0, \"&roang;\"], [7, \"&longleftarrow;\"], [0, \"&longrightarrow;\"], [0, \"&longleftrightarrow;\"], [0, \"&DoubleLongLeftArrow;\"], [0, \"&DoubleLongRightArrow;\"], [0, \"&DoubleLongLeftRightArrow;\"], [1, \"&longmapsto;\"], [2, \"&dzigrarr;\"], [258, \"&nvlArr;\"], [0, \"&nvrArr;\"], [0, \"&nvHarr;\"], [0, \"&Map;\"], [6, \"&lbarr;\"], [0, \"&bkarow;\"], [0, \"&lBarr;\"], [0, \"&dbkarow;\"], [0, \"&drbkarow;\"], [0, \"&DDotrahd;\"], [0, \"&UpArrowBar;\"], [0, \"&DownArrowBar;\"], [2, \"&Rarrtl;\"], [2, \"&latail;\"], [0, \"&ratail;\"], [0, \"&lAtail;\"], [0, \"&rAtail;\"], [0, \"&larrfs;\"], [0, \"&rarrfs;\"], [0, \"&larrbfs;\"], [0, \"&rarrbfs;\"], [2, \"&nwarhk;\"], [0, \"&nearhk;\"], [0, \"&hksearow;\"], [0, \"&hkswarow;\"], [0, \"&nwnear;\"], [0, \"&nesear;\"], [0, \"&seswar;\"], [0, \"&swnwar;\"], [8, { v: \"&rarrc;\", n: 824, o: \"&nrarrc;\" }], [1, \"&cudarrr;\"], [0, \"&ldca;\"], [0, \"&rdca;\"], [0, \"&cudarrl;\"], [0, \"&larrpl;\"], [2, \"&curarrm;\"], [0, \"&cularrp;\"], [7, \"&rarrpl;\"], [2, \"&harrcir;\"], [0, \"&Uarrocir;\"], [0, \"&lurdshar;\"], [0, \"&ldrushar;\"], [2, \"&LeftRightVector;\"], [0, \"&RightUpDownVector;\"], [0, \"&DownLeftRightVector;\"], [0, \"&LeftUpDownVector;\"], [0, \"&LeftVectorBar;\"], [0, \"&RightVectorBar;\"], [0, \"&RightUpVectorBar;\"], [0, \"&RightDownVectorBar;\"], [0, \"&DownLeftVectorBar;\"], [0, \"&DownRightVectorBar;\"], [0, \"&LeftUpVectorBar;\"], [0, \"&LeftDownVectorBar;\"], [0, \"&LeftTeeVector;\"], [0, \"&RightTeeVector;\"], [0, \"&RightUpTeeVector;\"], [0, \"&RightDownTeeVector;\"], [0, \"&DownLeftTeeVector;\"], [0, \"&DownRightTeeVector;\"], [0, \"&LeftUpTeeVector;\"], [0, \"&LeftDownTeeVector;\"], [0, \"&lHar;\"], [0, \"&uHar;\"], [0, \"&rHar;\"], [0, \"&dHar;\"], [0, \"&luruhar;\"], [0, \"&ldrdhar;\"], [0, \"&ruluhar;\"], [0, \"&rdldhar;\"], [0, \"&lharul;\"], [0, \"&llhard;\"], [0, \"&rharul;\"], [0, \"&lrhard;\"], [0, \"&udhar;\"], [0, \"&duhar;\"], [0, \"&RoundImplies;\"], [0, \"&erarr;\"], [0, \"&simrarr;\"], [0, \"&larrsim;\"], [0, \"&rarrsim;\"], [0, \"&rarrap;\"], [0, \"&ltlarr;\"], [1, \"&gtrarr;\"], [0, \"&subrarr;\"], [1, \"&suplarr;\"], [0, \"&lfisht;\"], [0, \"&rfisht;\"], [0, \"&ufisht;\"], [0, \"&dfisht;\"], [5, \"&lopar;\"], [0, \"&ropar;\"], [4, \"&lbrke;\"], [0, \"&rbrke;\"], [0, \"&lbrkslu;\"], [0, \"&rbrksld;\"], [0, \"&lbrksld;\"], [0, \"&rbrkslu;\"], [0, \"&langd;\"], [0, \"&rangd;\"], [0, \"&lparlt;\"], [0, \"&rpargt;\"], [0, \"&gtlPar;\"], [0, \"&ltrPar;\"], [3, \"&vzigzag;\"], [1, \"&vangrt;\"], [0, \"&angrtvbd;\"], [6, \"&ange;\"], [0, \"&range;\"], [0, \"&dwangle;\"], [0, \"&uwangle;\"], [0, \"&angmsdaa;\"], [0, \"&angmsdab;\"], [0, \"&angmsdac;\"], [0, \"&angmsdad;\"], [0, \"&angmsdae;\"], [0, \"&angmsdaf;\"], [0, \"&angmsdag;\"], [0, \"&angmsdah;\"], [0, \"&bemptyv;\"], [0, \"&demptyv;\"], [0, \"&cemptyv;\"], [0, \"&raemptyv;\"], [0, \"&laemptyv;\"], [0, \"&ohbar;\"], [0, \"&omid;\"], [0, \"&opar;\"], [1, \"&operp;\"], [1, \"&olcross;\"], [0, \"&odsold;\"], [1, \"&olcir;\"], [0, \"&ofcir;\"], [0, \"&olt;\"], [0, \"&ogt;\"], [0, \"&cirscir;\"], [0, \"&cirE;\"], [0, \"&solb;\"], [0, \"&bsolb;\"], [3, \"&boxbox;\"], [3, \"&trisb;\"], [0, \"&rtriltri;\"], [0, { v: \"&LeftTriangleBar;\", n: 824, o: \"&NotLeftTriangleBar;\" }], [0, { v: \"&RightTriangleBar;\", n: 824, o: \"&NotRightTriangleBar;\" }], [11, \"&iinfin;\"], [0, \"&infintie;\"], [0, \"&nvinfin;\"], [4, \"&eparsl;\"], [0, \"&smeparsl;\"], [0, \"&eqvparsl;\"], [5, \"&blacklozenge;\"], [8, \"&RuleDelayed;\"], [1, \"&dsol;\"], [9, \"&bigodot;\"], [0, \"&bigoplus;\"], [0, \"&bigotimes;\"], [1, \"&biguplus;\"], [1, \"&bigsqcup;\"], [5, \"&iiiint;\"], [0, \"&fpartint;\"], [2, \"&cirfnint;\"], [0, \"&awint;\"], [0, \"&rppolint;\"], [0, \"&scpolint;\"], [0, \"&npolint;\"], [0, \"&pointint;\"], [0, \"&quatint;\"], [0, \"&intlarhk;\"], [10, \"&pluscir;\"], [0, \"&plusacir;\"], [0, \"&simplus;\"], [0, \"&plusdu;\"], [0, \"&plussim;\"], [0, \"&plustwo;\"], [1, \"&mcomma;\"], [0, \"&minusdu;\"], [2, \"&loplus;\"], [0, \"&roplus;\"], [0, \"&Cross;\"], [0, \"&timesd;\"], [0, \"&timesbar;\"], [1, \"&smashp;\"], [0, \"&lotimes;\"], [0, \"&rotimes;\"], [0, \"&otimesas;\"], [0, \"&Otimes;\"], [0, \"&odiv;\"], [0, \"&triplus;\"], [0, \"&triminus;\"], [0, \"&tritime;\"], [0, \"&intprod;\"], [2, \"&amalg;\"], [0, \"&capdot;\"], [1, \"&ncup;\"], [0, \"&ncap;\"], [0, \"&capand;\"], [0, \"&cupor;\"], [0, \"&cupcap;\"], [0, \"&capcup;\"], [0, \"&cupbrcap;\"], [0, \"&capbrcup;\"], [0, \"&cupcup;\"], [0, \"&capcap;\"], [0, \"&ccups;\"], [0, \"&ccaps;\"], [2, \"&ccupssm;\"], [2, \"&And;\"], [0, \"&Or;\"], [0, \"&andand;\"], [0, \"&oror;\"], [0, \"&orslope;\"], [0, \"&andslope;\"], [1, \"&andv;\"], [0, \"&orv;\"], [0, \"&andd;\"], [0, \"&ord;\"], [1, \"&wedbar;\"], [6, \"&sdote;\"], [3, \"&simdot;\"], [2, { v: \"&congdot;\", n: 824, o: \"&ncongdot;\" }], [0, \"&easter;\"], [0, \"&apacir;\"], [0, { v: \"&apE;\", n: 824, o: \"&napE;\" }], [0, \"&eplus;\"], [0, \"&pluse;\"], [0, \"&Esim;\"], [0, \"&Colone;\"], [0, \"&Equal;\"], [1, \"&ddotseq;\"], [0, \"&equivDD;\"], [0, \"&ltcir;\"], [0, \"&gtcir;\"], [0, \"&ltquest;\"], [0, \"&gtquest;\"], [0, { v: \"&leqslant;\", n: 824, o: \"&nleqslant;\" }], [0, { v: \"&geqslant;\", n: 824, o: \"&ngeqslant;\" }], [0, \"&lesdot;\"], [0, \"&gesdot;\"], [0, \"&lesdoto;\"], [0, \"&gesdoto;\"], [0, \"&lesdotor;\"], [0, \"&gesdotol;\"], [0, \"&lap;\"], [0, \"&gap;\"], [0, \"&lne;\"], [0, \"&gne;\"], [0, \"&lnap;\"], [0, \"&gnap;\"], [0, \"&lEg;\"], [0, \"&gEl;\"], [0, \"&lsime;\"], [0, \"&gsime;\"], [0, \"&lsimg;\"], [0, \"&gsiml;\"], [0, \"&lgE;\"], [0, \"&glE;\"], [0, \"&lesges;\"], [0, \"&gesles;\"], [0, \"&els;\"], [0, \"&egs;\"], [0, \"&elsdot;\"], [0, \"&egsdot;\"], [0, \"&el;\"], [0, \"&eg;\"], [2, \"&siml;\"], [0, \"&simg;\"], [0, \"&simlE;\"], [0, \"&simgE;\"], [0, { v: \"&LessLess;\", n: 824, o: \"&NotNestedLessLess;\" }], [0, { v: \"&GreaterGreater;\", n: 824, o: \"&NotNestedGreaterGreater;\" }], [1, \"&glj;\"], [0, \"&gla;\"], [0, \"&ltcc;\"], [0, \"&gtcc;\"], [0, \"&lescc;\"], [0, \"&gescc;\"], [0, \"&smt;\"], [0, \"&lat;\"], [0, { v: \"&smte;\", n: 65024, o: \"&smtes;\" }], [0, { v: \"&late;\", n: 65024, o: \"&lates;\" }], [0, \"&bumpE;\"], [0, { v: \"&PrecedesEqual;\", n: 824, o: \"&NotPrecedesEqual;\" }], [0, { v: \"&sce;\", n: 824, o: \"&NotSucceedsEqual;\" }], [2, \"&prE;\"], [0, \"&scE;\"], [0, \"&precneqq;\"], [0, \"&scnE;\"], [0, \"&prap;\"], [0, \"&scap;\"], [0, \"&precnapprox;\"], [0, \"&scnap;\"], [0, \"&Pr;\"], [0, \"&Sc;\"], [0, \"&subdot;\"], [0, \"&supdot;\"], [0, \"&subplus;\"], [0, \"&supplus;\"], [0, \"&submult;\"], [0, \"&supmult;\"], [0, \"&subedot;\"], [0, \"&supedot;\"], [0, { v: \"&subE;\", n: 824, o: \"&nsubE;\" }], [0, { v: \"&supE;\", n: 824, o: \"&nsupE;\" }], [0, \"&subsim;\"], [0, \"&supsim;\"], [2, { v: \"&subnE;\", n: 65024, o: \"&varsubsetneqq;\" }], [0, { v: \"&supnE;\", n: 65024, o: \"&varsupsetneqq;\" }], [2, \"&csub;\"], [0, \"&csup;\"], [0, \"&csube;\"], [0, \"&csupe;\"], [0, \"&subsup;\"], [0, \"&supsub;\"], [0, \"&subsub;\"], [0, \"&supsup;\"], [0, \"&suphsub;\"], [0, \"&supdsub;\"], [0, \"&forkv;\"], [0, \"&topfork;\"], [0, \"&mlcp;\"], [8, \"&Dashv;\"], [1, \"&Vdashl;\"], [0, \"&Barv;\"], [0, \"&vBar;\"], [0, \"&vBarv;\"], [1, \"&Vbar;\"], [0, \"&Not;\"], [0, \"&bNot;\"], [0, \"&rnmid;\"], [0, \"&cirmid;\"], [0, \"&midcir;\"], [0, \"&topcir;\"], [0, \"&nhpar;\"], [0, \"&parsim;\"], [9, { v: \"&parsl;\", n: 8421, o: \"&nparsl;\" }], [44343, { n: new Map(/* #__PURE__ */ restoreDiff([[56476, \"&Ascr;\"], [1, \"&Cscr;\"], [0, \"&Dscr;\"], [2, \"&Gscr;\"], [2, \"&Jscr;\"], [0, \"&Kscr;\"], [2, \"&Nscr;\"], [0, \"&Oscr;\"], [0, \"&Pscr;\"], [0, \"&Qscr;\"], [1, \"&Sscr;\"], [0, \"&Tscr;\"], [0, \"&Uscr;\"], [0, \"&Vscr;\"], [0, \"&Wscr;\"], [0, \"&Xscr;\"], [0, \"&Yscr;\"], [0, \"&Zscr;\"], [0, \"&ascr;\"], [0, \"&bscr;\"], [0, \"&cscr;\"], [0, \"&dscr;\"], [1, \"&fscr;\"], [1, \"&hscr;\"], [0, \"&iscr;\"], [0, \"&jscr;\"], [0, \"&kscr;\"], [0, \"&lscr;\"], [0, \"&mscr;\"], [0, \"&nscr;\"], [1, \"&pscr;\"], [0, \"&qscr;\"], [0, \"&rscr;\"], [0, \"&sscr;\"], [0, \"&tscr;\"], [0, \"&uscr;\"], [0, \"&vscr;\"], [0, \"&wscr;\"], [0, \"&xscr;\"], [0, \"&yscr;\"], [0, \"&zscr;\"], [52, \"&Afr;\"], [0, \"&Bfr;\"], [1, \"&Dfr;\"], [0, \"&Efr;\"], [0, \"&Ffr;\"], [0, \"&Gfr;\"], [2, \"&Jfr;\"], [0, \"&Kfr;\"], [0, \"&Lfr;\"], [0, \"&Mfr;\"], [0, \"&Nfr;\"], [0, \"&Ofr;\"], [0, \"&Pfr;\"], [0, \"&Qfr;\"], [1, \"&Sfr;\"], [0, \"&Tfr;\"], [0, \"&Ufr;\"], [0, \"&Vfr;\"], [0, \"&Wfr;\"], [0, \"&Xfr;\"], [0, \"&Yfr;\"], [1, \"&afr;\"], [0, \"&bfr;\"], [0, \"&cfr;\"], [0, \"&dfr;\"], [0, \"&efr;\"], [0, \"&ffr;\"], [0, \"&gfr;\"], [0, \"&hfr;\"], [0, \"&ifr;\"], [0, \"&jfr;\"], [0, \"&kfr;\"], [0, \"&lfr;\"], [0, \"&mfr;\"], [0, \"&nfr;\"], [0, \"&ofr;\"], [0, \"&pfr;\"], [0, \"&qfr;\"], [0, \"&rfr;\"], [0, \"&sfr;\"], [0, \"&tfr;\"], [0, \"&ufr;\"], [0, \"&vfr;\"], [0, \"&wfr;\"], [0, \"&xfr;\"], [0, \"&yfr;\"], [0, \"&zfr;\"], [0, \"&Aopf;\"], [0, \"&Bopf;\"], [1, \"&Dopf;\"], [0, \"&Eopf;\"], [0, \"&Fopf;\"], [0, \"&Gopf;\"], [1, \"&Iopf;\"], [0, \"&Jopf;\"], [0, \"&Kopf;\"], [0, \"&Lopf;\"], [0, \"&Mopf;\"], [1, \"&Oopf;\"], [3, \"&Sopf;\"], [0, \"&Topf;\"], [0, \"&Uopf;\"], [0, \"&Vopf;\"], [0, \"&Wopf;\"], [0, \"&Xopf;\"], [0, \"&Yopf;\"], [1, \"&aopf;\"], [0, \"&bopf;\"], [0, \"&copf;\"], [0, \"&dopf;\"], [0, \"&eopf;\"], [0, \"&fopf;\"], [0, \"&gopf;\"], [0, \"&hopf;\"], [0, \"&iopf;\"], [0, \"&jopf;\"], [0, \"&kopf;\"], [0, \"&lopf;\"], [0, \"&mopf;\"], [0, \"&nopf;\"], [0, \"&oopf;\"], [0, \"&popf;\"], [0, \"&qopf;\"], [0, \"&ropf;\"], [0, \"&sopf;\"], [0, \"&topf;\"], [0, \"&uopf;\"], [0, \"&vopf;\"], [0, \"&wopf;\"], [0, \"&xopf;\"], [0, \"&yopf;\"], [0, \"&zopf;\"]])) }], [8906, \"&fflig;\"], [0, \"&filig;\"], [0, \"&fllig;\"], [0, \"&ffilig;\"], [0, \"&ffllig;\"]]));\n//# sourceMappingURL=encode-html.js.map",null,"export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map",null,"export const elementNames = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feDropShadow\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\",\n].map((val) => [val.toLowerCase(), val]));\nexport const attributeNames = new Map([\n    \"definitionURL\",\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\",\n].map((val) => [val.toLowerCase(), val]));\n","import { isTag, hasChildren, } from \"domhandler\";\n/**\n * Get a node's children.\n *\n * @category Traversal\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nexport function getChildren(elem) {\n    return hasChildren(elem) ? elem.children : [];\n}\n/**\n * Get a node's parent.\n *\n * @category Traversal\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node, or `null` if `elem` is a root node.\n */\nexport function getParent(elem) {\n    return elem.parent || null;\n}\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first. If we don't\n * have a parent (the element is a root node), we walk the element's `prev` &\n * `next` to get all remaining nodes.\n *\n * @category Traversal\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings, including `elem`.\n */\nexport function getSiblings(elem) {\n    const parent = getParent(elem);\n    if (parent != null)\n        return getChildren(parent);\n    const siblings = [elem];\n    let { prev, next } = elem;\n    while (prev != null) {\n        siblings.unshift(prev);\n        ({ prev } = prev);\n    }\n    while (next != null) {\n        siblings.push(next);\n        ({ next } = next);\n    }\n    return siblings;\n}\n/**\n * Gets an attribute from an element.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nexport function getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\n/**\n * Checks whether an element has an attribute.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nexport function hasAttrib(elem, name) {\n    return (elem.attribs != null &&\n        Object.prototype.hasOwnProperty.call(elem.attribs, name) &&\n        elem.attribs[name] != null);\n}\n/**\n * Get the tag name of an element.\n *\n * @category Traversal\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nexport function getName(elem) {\n    return elem.name;\n}\n/**\n * Returns the next element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag, or `null` if there is no next\n * sibling.\n */\nexport function nextElementSibling(elem) {\n    let { next } = elem;\n    while (next !== null && !isTag(next))\n        ({ next } = next);\n    return next;\n}\n/**\n * Returns the previous element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag, or `null` if there is no\n * previous sibling.\n */\nexport function prevElementSibling(elem) {\n    let { prev } = elem;\n    while (prev !== null && !isTag(prev))\n        ({ prev } = prev);\n    return prev;\n}\n//# sourceMappingURL=traversal.js.map",null,"/**\n * Remove an element from the dom\n *\n * @category Manipulation\n * @param elem The element to be removed\n */\nexport function removeElement(elem) {\n    if (elem.prev)\n        elem.prev.next = elem.next;\n    if (elem.next)\n        elem.next.prev = elem.prev;\n    if (elem.parent) {\n        const childs = elem.parent.children;\n        const childsIndex = childs.lastIndexOf(elem);\n        if (childsIndex >= 0) {\n            childs.splice(childsIndex, 1);\n        }\n    }\n    elem.next = null;\n    elem.prev = null;\n    elem.parent = null;\n}\n/**\n * Replace an element in the dom\n *\n * @category Manipulation\n * @param elem The element to be replaced\n * @param replacement The element to be added\n */\nexport function replaceElement(elem, replacement) {\n    const prev = (replacement.prev = elem.prev);\n    if (prev) {\n        prev.next = replacement;\n    }\n    const next = (replacement.next = elem.next);\n    if (next) {\n        next.prev = replacement;\n    }\n    const parent = (replacement.parent = elem.parent);\n    if (parent) {\n        const childs = parent.children;\n        childs[childs.lastIndexOf(elem)] = replacement;\n        elem.parent = null;\n    }\n}\n/**\n * Append a child to an element.\n *\n * @category Manipulation\n * @param parent The element to append to.\n * @param child The element to be added as a child.\n */\nexport function appendChild(parent, child) {\n    removeElement(child);\n    child.next = null;\n    child.parent = parent;\n    if (parent.children.push(child) > 1) {\n        const sibling = parent.children[parent.children.length - 2];\n        sibling.next = child;\n        child.prev = sibling;\n    }\n    else {\n        child.prev = null;\n    }\n}\n/**\n * Append an element after another.\n *\n * @category Manipulation\n * @param elem The element to append after.\n * @param next The element be added.\n */\nexport function append(elem, next) {\n    removeElement(next);\n    const { parent } = elem;\n    const currNext = elem.next;\n    next.next = currNext;\n    next.prev = elem;\n    elem.next = next;\n    next.parent = parent;\n    if (currNext) {\n        currNext.prev = next;\n        if (parent) {\n            const childs = parent.children;\n            childs.splice(childs.lastIndexOf(currNext), 0, next);\n        }\n    }\n    else if (parent) {\n        parent.children.push(next);\n    }\n}\n/**\n * Prepend a child to an element.\n *\n * @category Manipulation\n * @param parent The element to prepend before.\n * @param child The element to be added as a child.\n */\nexport function prependChild(parent, child) {\n    removeElement(child);\n    child.parent = parent;\n    child.prev = null;\n    if (parent.children.unshift(child) !== 1) {\n        const sibling = parent.children[1];\n        sibling.prev = child;\n        child.next = sibling;\n    }\n    else {\n        child.next = null;\n    }\n}\n/**\n * Prepend an element before another.\n *\n * @category Manipulation\n * @param elem The element to prepend before.\n * @param prev The element be added.\n */\nexport function prepend(elem, prev) {\n    removeElement(prev);\n    const { parent } = elem;\n    if (parent) {\n        const childs = parent.children;\n        childs.splice(childs.indexOf(elem), 0, prev);\n    }\n    if (elem.prev) {\n        elem.prev.next = prev;\n    }\n    prev.parent = parent;\n    prev.prev = elem.prev;\n    prev.next = elem;\n    elem.prev = prev;\n}\n//# sourceMappingURL=manipulation.js.map",null,"import { isTag, hasChildren } from \"domhandler\";\n/**\n * Search a node and its children for nodes passing a test function. If `node` is not an array, it will be wrapped in one.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param node Node to search. Will be included in the result set if it matches.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function filter(test, node, recurse = true, limit = Infinity) {\n    return find(test, Array.isArray(node) ? node : [node], recurse, limit);\n}\n/**\n * Search an array of nodes and their children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function find(test, nodes, recurse, limit) {\n    const result = [];\n    /** Stack of the arrays we are looking at. */\n    const nodeStack = [nodes];\n    /** Stack of the indices within the arrays. */\n    const indexStack = [0];\n    for (;;) {\n        // First, check if the current array has any more elements to look at.\n        if (indexStack[0] >= nodeStack[0].length) {\n            // If we have no more arrays to look at, we are done.\n            if (indexStack.length === 1) {\n                return result;\n            }\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (test(elem)) {\n            result.push(elem);\n            if (--limit <= 0)\n                return result;\n        }\n        if (recurse && hasChildren(elem) && elem.children.length > 0) {\n            /*\n             * Add the children to the stack. We are depth-first, so this is\n             * the next array we look at.\n             */\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n/**\n * Finds the first element inside of an array that matches a test function. This is an alias for `Array.prototype.find`.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns The first node in the array that passes `test`.\n * @deprecated Use `Array.prototype.find` directly.\n */\nexport function findOneChild(test, nodes) {\n    return nodes.find(test);\n}\n/**\n * Finds one element in a tree that passes a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Node or array of nodes to search.\n * @param recurse Also consider child nodes.\n * @returns The first node that passes `test`.\n */\nexport function findOne(test, nodes, recurse = true) {\n    let elem = null;\n    for (let i = 0; i < nodes.length && !elem; i++) {\n        const node = nodes[i];\n        if (!isTag(node)) {\n            continue;\n        }\n        else if (test(node)) {\n            elem = node;\n        }\n        else if (recurse && node.children.length > 0) {\n            elem = findOne(test, node.children, true);\n        }\n    }\n    return elem;\n}\n/**\n * Checks if a tree of nodes contains at least one node passing a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns Whether a tree of nodes contains at least one node passing the test.\n */\nexport function existsOne(test, nodes) {\n    return nodes.some((checked) => isTag(checked) &&\n        (test(checked) || existsOne(test, checked.children)));\n}\n/**\n * Search an array of nodes and their children for elements passing a test function.\n *\n * Same as `find`, but limited to elements and with less options, leading to reduced complexity.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns All nodes passing `test`.\n */\nexport function findAll(test, nodes) {\n    const result = [];\n    const nodeStack = [nodes];\n    const indexStack = [0];\n    for (;;) {\n        if (indexStack[0] >= nodeStack[0].length) {\n            if (nodeStack.length === 1) {\n                return result;\n            }\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (!isTag(elem))\n            continue;\n        if (test(elem))\n            result.push(elem);\n        if (elem.children.length > 0) {\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n//# sourceMappingURL=querying.js.map",null,"import { isTag, isText } from \"domhandler\";\nimport { filter, findOne } from \"./querying.js\";\n/**\n * A map of functions to check nodes against.\n */\nconst Checks = {\n    tag_name(name) {\n        if (typeof name === \"function\") {\n            return (elem) => isTag(elem) && name(elem.name);\n        }\n        else if (name === \"*\") {\n            return isTag;\n        }\n        return (elem) => isTag(elem) && elem.name === name;\n    },\n    tag_type(type) {\n        if (typeof type === \"function\") {\n            return (elem) => type(elem.type);\n        }\n        return (elem) => elem.type === type;\n    },\n    tag_contains(data) {\n        if (typeof data === \"function\") {\n            return (elem) => isText(elem) && data(elem.data);\n        }\n        return (elem) => isText(elem) && elem.data === data;\n    },\n};\n/**\n * Returns a function to check whether a node has an attribute with a particular\n * value.\n *\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a\n *   particular value.\n */\nfunction getAttribCheck(attrib, value) {\n    if (typeof value === \"function\") {\n        return (elem) => isTag(elem) && value(elem.attribs[attrib]);\n    }\n    return (elem) => isTag(elem) && elem.attribs[attrib] === value;\n}\n/**\n * Returns a function that returns `true` if either of the input functions\n * returns `true` for a node.\n *\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either of the input\n *   functions returns `true` for the node.\n */\nfunction combineFuncs(a, b) {\n    return (elem) => a(elem) || b(elem);\n}\n/**\n * Returns a function that executes all checks in `options` and returns `true`\n * if any of them match a node.\n *\n * @param options An object describing nodes to look for.\n * @returns A function that executes all checks in `options` and returns `true`\n *   if any of them match a node.\n */\nfunction compileTest(options) {\n    const funcs = Object.keys(options).map((key) => {\n        const value = options[key];\n        return Object.prototype.hasOwnProperty.call(Checks, key)\n            ? Checks[key](value)\n            : getAttribCheck(key, value);\n    });\n    return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\n/**\n * Checks whether a node matches the description in `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param node The element to test.\n * @returns Whether the element matches the description in `options`.\n */\nexport function testElement(options, node) {\n    const test = compileTest(options);\n    return test ? test(node) : true;\n}\n/**\n * Returns all nodes that match `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes that match `options`.\n */\nexport function getElements(options, nodes, recurse, limit = Infinity) {\n    const test = compileTest(options);\n    return test ? filter(test, nodes, recurse, limit) : [];\n}\n/**\n * Returns the node with the supplied ID.\n *\n * @category Legacy Query Functions\n * @param id The unique ID attribute value to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @returns The node with the supplied ID.\n */\nexport function getElementById(id, nodes, recurse = true) {\n    if (!Array.isArray(nodes))\n        nodes = [nodes];\n    return findOne(getAttribCheck(\"id\", id), nodes, recurse);\n}\n/**\n * Returns all nodes with the supplied `tagName`.\n *\n * @category Legacy Query Functions\n * @param tagName Tag name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `tagName`.\n */\nexport function getElementsByTagName(tagName, nodes, recurse = true, limit = Infinity) {\n    return filter(Checks[\"tag_name\"](tagName), nodes, recurse, limit);\n}\n/**\n * Returns all nodes with the supplied `type`.\n *\n * @category Legacy Query Functions\n * @param type Element type to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `type`.\n */\nexport function getElementsByTagType(type, nodes, recurse = true, limit = Infinity) {\n    return filter(Checks[\"tag_type\"](type), nodes, recurse, limit);\n}\n//# sourceMappingURL=legacy.js.map",null,"import { hasChildren } from \"domhandler\";\n/**\n * Given an array of nodes, remove any member that is contained by another\n * member.\n *\n * @category Helpers\n * @param nodes Nodes to filter.\n * @returns Remaining nodes that aren't contained by other nodes.\n */\nexport function removeSubsets(nodes) {\n    let idx = nodes.length;\n    /*\n     * Check if each node (or one of its ancestors) is already contained in the\n     * array.\n     */\n    while (--idx >= 0) {\n        const node = nodes[idx];\n        /*\n         * Remove the node if it is not unique.\n         * We are going through the array from the end, so we only\n         * have to check nodes that preceed the node under consideration in the array.\n         */\n        if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n            nodes.splice(idx, 1);\n            continue;\n        }\n        for (let ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n            if (nodes.includes(ancestor)) {\n                nodes.splice(idx, 1);\n                break;\n            }\n        }\n    }\n    return nodes;\n}\n/**\n * @category Helpers\n * @see {@link http://dom.spec.whatwg.org/#dom-node-comparedocumentposition}\n */\nexport var DocumentPosition;\n(function (DocumentPosition) {\n    DocumentPosition[DocumentPosition[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n    DocumentPosition[DocumentPosition[\"PRECEDING\"] = 2] = \"PRECEDING\";\n    DocumentPosition[DocumentPosition[\"FOLLOWING\"] = 4] = \"FOLLOWING\";\n    DocumentPosition[DocumentPosition[\"CONTAINS\"] = 8] = \"CONTAINS\";\n    DocumentPosition[DocumentPosition[\"CONTAINED_BY\"] = 16] = \"CONTAINED_BY\";\n})(DocumentPosition || (DocumentPosition = {}));\n/**\n * Compare the position of one node against another node in any other document,\n * returning a bitmask with the values from {@link DocumentPosition}.\n *\n * Document order:\n * > There is an ordering, document order, defined on all the nodes in the\n * > document corresponding to the order in which the first character of the\n * > XML representation of each node occurs in the XML representation of the\n * > document after expansion of general entities. Thus, the document element\n * > node will be the first node. Element nodes occur before their children.\n * > Thus, document order orders element nodes in order of the occurrence of\n * > their start-tag in the XML (after expansion of entities). The attribute\n * > nodes of an element occur after the element and before its children. The\n * > relative order of attribute nodes is implementation-dependent.\n *\n * Source:\n * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order\n *\n * @category Helpers\n * @param nodeA The first node to use in the comparison\n * @param nodeB The second node to use in the comparison\n * @returns A bitmask describing the input nodes' relative position.\n *\n * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for\n * a description of these values.\n */\nexport function compareDocumentPosition(nodeA, nodeB) {\n    const aParents = [];\n    const bParents = [];\n    if (nodeA === nodeB) {\n        return 0;\n    }\n    let current = hasChildren(nodeA) ? nodeA : nodeA.parent;\n    while (current) {\n        aParents.unshift(current);\n        current = current.parent;\n    }\n    current = hasChildren(nodeB) ? nodeB : nodeB.parent;\n    while (current) {\n        bParents.unshift(current);\n        current = current.parent;\n    }\n    const maxIdx = Math.min(aParents.length, bParents.length);\n    let idx = 0;\n    while (idx < maxIdx && aParents[idx] === bParents[idx]) {\n        idx++;\n    }\n    if (idx === 0) {\n        return DocumentPosition.DISCONNECTED;\n    }\n    const sharedParent = aParents[idx - 1];\n    const siblings = sharedParent.children;\n    const aSibling = aParents[idx];\n    const bSibling = bParents[idx];\n    if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n        if (sharedParent === nodeB) {\n            return DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY;\n        }\n        return DocumentPosition.FOLLOWING;\n    }\n    if (sharedParent === nodeA) {\n        return DocumentPosition.PRECEDING | DocumentPosition.CONTAINS;\n    }\n    return DocumentPosition.PRECEDING;\n}\n/**\n * Sort an array of nodes based on their relative position in the document,\n * removing any duplicate nodes. If the array contains nodes that do not belong\n * to the same document, sort order is unspecified.\n *\n * @category Helpers\n * @param nodes Array of DOM nodes.\n * @returns Collection of unique nodes, sorted in document order.\n */\nexport function uniqueSort(nodes) {\n    nodes = nodes.filter((node, i, arr) => !arr.includes(node, i + 1));\n    nodes.sort((a, b) => {\n        const relative = compareDocumentPosition(a, b);\n        if (relative & DocumentPosition.PRECEDING) {\n            return -1;\n        }\n        else if (relative & DocumentPosition.FOLLOWING) {\n            return 1;\n        }\n        return 0;\n    });\n    return nodes;\n}\n//# sourceMappingURL=helpers.js.map",null,"import { textContent } from \"./stringify.js\";\nimport { getElementsByTagName } from \"./legacy.js\";\n/**\n * Get the feed object from the root of a DOM tree.\n *\n * @category Feeds\n * @param doc - The DOM to to extract the feed from.\n * @returns The feed.\n */\nexport function getFeed(doc) {\n    const feedRoot = getOneElement(isValidFeed, doc);\n    return !feedRoot\n        ? null\n        : feedRoot.name === \"feed\"\n            ? getAtomFeed(feedRoot)\n            : getRssFeed(feedRoot);\n}\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getAtomFeed(feedRoot) {\n    var _a;\n    const childs = feedRoot.children;\n    const feed = {\n        type: \"atom\",\n        items: getElementsByTagName(\"entry\", childs).map((item) => {\n            var _a;\n            const { children } = item;\n            const entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"id\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            const href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n            if (href) {\n                entry.link = href;\n            }\n            const description = fetch(\"summary\", children) || fetch(\"content\", children);\n            if (description) {\n                entry.description = description;\n            }\n            const pubDate = fetch(\"updated\", children);\n            if (pubDate) {\n                entry.pubDate = new Date(pubDate);\n            }\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"id\", \"id\", childs);\n    addConditionally(feed, \"title\", \"title\", childs);\n    const href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n    if (href) {\n        feed.link = href;\n    }\n    addConditionally(feed, \"description\", \"subtitle\", childs);\n    const updated = fetch(\"updated\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"email\", childs, true);\n    return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getRssFeed(feedRoot) {\n    var _a, _b;\n    const childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n    const feed = {\n        type: feedRoot.name.substr(0, 3),\n        id: \"\",\n        items: getElementsByTagName(\"item\", feedRoot.children).map((item) => {\n            const { children } = item;\n            const entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"guid\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            addConditionally(entry, \"link\", \"link\", children);\n            addConditionally(entry, \"description\", \"description\", children);\n            const pubDate = fetch(\"pubDate\", children) || fetch(\"dc:date\", children);\n            if (pubDate)\n                entry.pubDate = new Date(pubDate);\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"title\", \"title\", childs);\n    addConditionally(feed, \"link\", \"link\", childs);\n    addConditionally(feed, \"description\", \"description\", childs);\n    const updated = fetch(\"lastBuildDate\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n    return feed;\n}\nconst MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nconst MEDIA_KEYS_INT = [\n    \"fileSize\",\n    \"bitrate\",\n    \"framerate\",\n    \"samplingrate\",\n    \"channels\",\n    \"duration\",\n    \"height\",\n    \"width\",\n];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */\nfunction getMediaElements(where) {\n    return getElementsByTagName(\"media:content\", where).map((elem) => {\n        const { attribs } = elem;\n        const media = {\n            medium: attribs[\"medium\"],\n            isDefault: !!attribs[\"isDefault\"],\n        };\n        for (const attrib of MEDIA_KEYS_STRING) {\n            if (attribs[attrib]) {\n                media[attrib] = attribs[attrib];\n            }\n        }\n        for (const attrib of MEDIA_KEYS_INT) {\n            if (attribs[attrib]) {\n                media[attrib] = parseInt(attribs[attrib], 10);\n            }\n        }\n        if (attribs[\"expression\"]) {\n            media.expression = attribs[\"expression\"];\n        }\n        return media;\n    });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */\nfunction getOneElement(tagName, node) {\n    return getElementsByTagName(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */\nfunction fetch(tagName, where, recurse = false) {\n    return textContent(getElementsByTagName(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */\nfunction addConditionally(obj, prop, tagName, where, recurse = false) {\n    const val = fetch(tagName, where, recurse);\n    if (val)\n        obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */\nfunction isValidFeed(value) {\n    return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\n//# sourceMappingURL=feeds.js.map",null,"import * as Attributes from './api/attributes.js';\nimport * as Traversing from './api/traversing.js';\nimport * as Manipulation from './api/manipulation.js';\nimport * as Css from './api/css.js';\nimport * as Forms from './api/forms.js';\nexport class Cheerio {\n    /**\n     * Instance of cheerio. Methods are specified in the modules. Usage of this\n     * constructor is not recommended. Please use `$.load` instead.\n     *\n     * @private\n     * @param elements - The new selection.\n     * @param root - Sets the root node.\n     * @param options - Options for the instance.\n     */\n    constructor(elements, root, options) {\n        this.length = 0;\n        this.options = options;\n        this._root = root;\n        if (elements) {\n            for (let idx = 0; idx < elements.length; idx++) {\n                this[idx] = elements[idx];\n            }\n            this.length = elements.length;\n        }\n    }\n}\n/** Set a signature of the object. */\nCheerio.prototype.cheerio = '[cheerio object]';\n/*\n * Make cheerio an array-like object\n */\nCheerio.prototype.splice = Array.prototype.splice;\n// Support for (const element of $(...)) iteration:\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n// Plug in the API\nObject.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms);\n//# sourceMappingURL=cheerio.js.map",null,"/**\n * Methods for getting and modifying attributes.\n *\n * @module cheerio/attributes\n */\nimport { text } from '../static.js';\nimport { isTag, domEach, camelCase, cssCase } from '../utils.js';\nimport { innerText, textContent } from 'domutils';\nconst hasOwn = Object.prototype.hasOwnProperty;\nconst rspace = /\\s+/;\nconst dataAttrPrefix = 'data-';\n/*\n * Lookup table for coercing string data-* attributes to their corresponding\n * JavaScript primitives\n */\nconst primitives = {\n    null: null,\n    true: true,\n    false: false,\n};\n// Attributes that are booleans\nconst rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;\n// Matches strings that look like JSON objects or arrays\nconst rbrace = /^{[^]*}$|^\\[[^]*]$/;\nfunction getAttr(elem, name, xmlMode) {\n    var _a;\n    if (!elem || !isTag(elem))\n        return undefined;\n    (_a = elem.attribs) !== null && _a !== void 0 ? _a : (elem.attribs = {});\n    // Return the entire attribs object if no attribute specified\n    if (!name) {\n        return elem.attribs;\n    }\n    if (hasOwn.call(elem.attribs, name)) {\n        // Get the (decoded) attribute\n        return !xmlMode && rboolean.test(name) ? name : elem.attribs[name];\n    }\n    // Mimic the DOM and return text content as value for `option's`\n    if (elem.name === 'option' && name === 'value') {\n        return text(elem.children);\n    }\n    // Mimic DOM with default value for radios/checkboxes\n    if (elem.name === 'input' &&\n        (elem.attribs['type'] === 'radio' || elem.attribs['type'] === 'checkbox') &&\n        name === 'value') {\n        return 'on';\n    }\n    return undefined;\n}\n/**\n * Sets the value of an attribute. The attribute will be deleted if the value is `null`.\n *\n * @private\n * @param el - The element to set the attribute on.\n * @param name - The attribute's name.\n * @param value - The attribute's value.\n */\nfunction setAttr(el, name, value) {\n    if (value === null) {\n        removeAttribute(el, name);\n    }\n    else {\n        el.attribs[name] = `${value}`;\n    }\n}\nexport function attr(name, value) {\n    // Set the value (with attr map support)\n    if (typeof name === 'object' || value !== undefined) {\n        if (typeof value === 'function') {\n            if (typeof name !== 'string') {\n                {\n                    throw new Error('Bad combination of arguments.');\n                }\n            }\n            return domEach(this, (el, i) => {\n                if (isTag(el))\n                    setAttr(el, name, value.call(el, i, el.attribs[name]));\n            });\n        }\n        return domEach(this, (el) => {\n            if (!isTag(el))\n                return;\n            if (typeof name === 'object') {\n                Object.keys(name).forEach((objName) => {\n                    const objValue = name[objName];\n                    setAttr(el, objName, objValue);\n                });\n            }\n            else {\n                setAttr(el, name, value);\n            }\n        });\n    }\n    return arguments.length > 1\n        ? this\n        : getAttr(this[0], name, this.options.xmlMode);\n}\n/**\n * Gets a node's prop.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the prop of.\n * @param name - Name of the prop.\n * @returns The prop's value.\n */\nfunction getProp(el, name, xmlMode) {\n    return name in el\n        ? // @ts-expect-error TS doesn't like us accessing the value directly here.\n            el[name]\n        : !xmlMode && rboolean.test(name)\n            ? getAttr(el, name, false) !== undefined\n            : getAttr(el, name, xmlMode);\n}\n/**\n * Sets the value of a prop.\n *\n * @private\n * @param el - The element to set the prop on.\n * @param name - The prop's name.\n * @param value - The prop's value.\n */\nfunction setProp(el, name, value, xmlMode) {\n    if (name in el) {\n        // @ts-expect-error Overriding value\n        el[name] = value;\n    }\n    else {\n        setAttr(el, name, !xmlMode && rboolean.test(name) ? (value ? '' : null) : `${value}`);\n    }\n}\nexport function prop(name, value) {\n    var _a;\n    if (typeof name === 'string' && value === undefined) {\n        const el = this[0];\n        if (!el || !isTag(el))\n            return undefined;\n        switch (name) {\n            case 'style': {\n                const property = this.css();\n                const keys = Object.keys(property);\n                keys.forEach((p, i) => {\n                    property[i] = p;\n                });\n                property.length = keys.length;\n                return property;\n            }\n            case 'tagName':\n            case 'nodeName': {\n                return el.name.toUpperCase();\n            }\n            case 'href':\n            case 'src': {\n                const prop = (_a = el.attribs) === null || _a === void 0 ? void 0 : _a[name];\n                /* eslint-disable node/no-unsupported-features/node-builtins */\n                if (typeof URL !== 'undefined' &&\n                    ((name === 'href' && (el.tagName === 'a' || el.name === 'link')) ||\n                        (name === 'src' &&\n                            (el.tagName === 'img' ||\n                                el.tagName === 'iframe' ||\n                                el.tagName === 'audio' ||\n                                el.tagName === 'video' ||\n                                el.tagName === 'source'))) &&\n                    prop !== undefined &&\n                    this.options.baseURI) {\n                    return new URL(prop, this.options.baseURI).href;\n                }\n                /* eslint-enable node/no-unsupported-features/node-builtins */\n                return prop;\n            }\n            case 'innerText': {\n                return innerText(el);\n            }\n            case 'textContent': {\n                return textContent(el);\n            }\n            case 'outerHTML':\n                return this.clone().wrap('<container />').parent().html();\n            case 'innerHTML':\n                return this.html();\n            default:\n                return getProp(el, name, this.options.xmlMode);\n        }\n    }\n    if (typeof name === 'object' || value !== undefined) {\n        if (typeof value === 'function') {\n            if (typeof name === 'object') {\n                throw new Error('Bad combination of arguments.');\n            }\n            return domEach(this, (el, i) => {\n                if (isTag(el)) {\n                    setProp(el, name, value.call(el, i, getProp(el, name, this.options.xmlMode)), this.options.xmlMode);\n                }\n            });\n        }\n        return domEach(this, (el) => {\n            if (!isTag(el))\n                return;\n            if (typeof name === 'object') {\n                Object.keys(name).forEach((key) => {\n                    const val = name[key];\n                    setProp(el, key, val, this.options.xmlMode);\n                });\n            }\n            else {\n                setProp(el, name, value, this.options.xmlMode);\n            }\n        });\n    }\n    return undefined;\n}\n/**\n * Sets the value of a data attribute.\n *\n * @private\n * @param el - The element to set the data attribute on.\n * @param name - The data attribute's name.\n * @param value - The data attribute's value.\n */\nfunction setData(el, name, value) {\n    var _a;\n    const elem = el;\n    (_a = elem.data) !== null && _a !== void 0 ? _a : (elem.data = {});\n    if (typeof name === 'object')\n        Object.assign(elem.data, name);\n    else if (typeof name === 'string' && value !== undefined) {\n        elem.data[name] = value;\n    }\n}\n/**\n * Read the specified attribute from the equivalent HTML5 `data-*` attribute,\n * and (if present) cache the value in the node's internal data store. If no\n * attribute name is specified, read _all_ HTML5 `data-*` attributes in this manner.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the data attribute of.\n * @param name - Name of the data attribute.\n * @returns The data attribute's value, or a map with all of the data attributes.\n */\nfunction readData(el, name) {\n    let domNames;\n    let jsNames;\n    let value;\n    if (name == null) {\n        domNames = Object.keys(el.attribs).filter((attrName) => attrName.startsWith(dataAttrPrefix));\n        jsNames = domNames.map((domName) => camelCase(domName.slice(dataAttrPrefix.length)));\n    }\n    else {\n        domNames = [dataAttrPrefix + cssCase(name)];\n        jsNames = [name];\n    }\n    for (let idx = 0; idx < domNames.length; ++idx) {\n        const domName = domNames[idx];\n        const jsName = jsNames[idx];\n        if (hasOwn.call(el.attribs, domName) &&\n            !hasOwn.call(el.data, jsName)) {\n            value = el.attribs[domName];\n            if (hasOwn.call(primitives, value)) {\n                value = primitives[value];\n            }\n            else if (value === String(Number(value))) {\n                value = Number(value);\n            }\n            else if (rbrace.test(value)) {\n                try {\n                    value = JSON.parse(value);\n                }\n                catch (e) {\n                    /* Ignore */\n                }\n            }\n            el.data[jsName] = value;\n        }\n    }\n    return name == null ? el.data : value;\n}\nexport function data(name, value) {\n    var _a;\n    const elem = this[0];\n    if (!elem || !isTag(elem))\n        return;\n    const dataEl = elem;\n    (_a = dataEl.data) !== null && _a !== void 0 ? _a : (dataEl.data = {});\n    // Return the entire data object if no data specified\n    if (!name) {\n        return readData(dataEl);\n    }\n    // Set the value (with attr map support)\n    if (typeof name === 'object' || value !== undefined) {\n        domEach(this, (el) => {\n            if (isTag(el)) {\n                if (typeof name === 'object')\n                    setData(el, name);\n                else\n                    setData(el, name, value);\n            }\n        });\n        return this;\n    }\n    if (hasOwn.call(dataEl.data, name)) {\n        return dataEl.data[name];\n    }\n    return readData(dataEl, name);\n}\nexport function val(value) {\n    const querying = arguments.length === 0;\n    const element = this[0];\n    if (!element || !isTag(element))\n        return querying ? undefined : this;\n    switch (element.name) {\n        case 'textarea':\n            return this.text(value);\n        case 'select': {\n            const option = this.find('option:selected');\n            if (!querying) {\n                if (this.attr('multiple') == null && typeof value === 'object') {\n                    return this;\n                }\n                this.find('option').removeAttr('selected');\n                const values = typeof value !== 'object' ? [value] : value;\n                for (let i = 0; i < values.length; i++) {\n                    this.find(`option[value=\"${values[i]}\"]`).attr('selected', '');\n                }\n                return this;\n            }\n            return this.attr('multiple')\n                ? option.toArray().map((el) => text(el.children))\n                : option.attr('value');\n        }\n        case 'input':\n        case 'option':\n            return querying\n                ? this.attr('value')\n                : this.attr('value', value);\n    }\n    return undefined;\n}\n/**\n * Remove an attribute.\n *\n * @private\n * @param elem - Node to remove attribute from.\n * @param name - Name of the attribute to remove.\n */\nfunction removeAttribute(elem, name) {\n    if (!elem.attribs || !hasOwn.call(elem.attribs, name))\n        return;\n    delete elem.attribs[name];\n}\n/**\n * Splits a space-separated list of names to individual names.\n *\n * @category Attributes\n * @param names - Names to split.\n * @returns - Split names.\n */\nfunction splitNames(names) {\n    return names ? names.trim().split(rspace) : [];\n}\n/**\n * Method for removing attributes by `name`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeAttr('class').html();\n * //=> <li>Pear</li>\n *\n * $('.apple').attr('id', 'favorite');\n * $('.apple').removeAttr('id class').html();\n * //=> <li>Apple</li>\n * ```\n *\n * @param name - Name of the attribute.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeAttr/}\n */\nexport function removeAttr(name) {\n    const attrNames = splitNames(name);\n    for (let i = 0; i < attrNames.length; i++) {\n        domEach(this, (elem) => {\n            if (isTag(elem))\n                removeAttribute(elem, attrNames[i]);\n        });\n    }\n    return this;\n}\n/**\n * Check to see if _any_ of the matched elements have the given `className`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').hasClass('pear');\n * //=> true\n *\n * $('apple').hasClass('fruit');\n * //=> false\n *\n * $('li').hasClass('pear');\n * //=> true\n * ```\n *\n * @param className - Name of the class.\n * @returns Indicates if an element has the given `className`.\n * @see {@link https://api.jquery.com/hasClass/}\n */\nexport function hasClass(className) {\n    return this.toArray().some((elem) => {\n        const clazz = isTag(elem) && elem.attribs['class'];\n        let idx = -1;\n        if (clazz && className.length) {\n            while ((idx = clazz.indexOf(className, idx + 1)) > -1) {\n                const end = idx + className.length;\n                if ((idx === 0 || rspace.test(clazz[idx - 1])) &&\n                    (end === clazz.length || rspace.test(clazz[end]))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    });\n}\n/**\n * Adds class(es) to all of the matched elements. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').addClass('fruit').html();\n * //=> <li class=\"pear fruit\">Pear</li>\n *\n * $('.apple').addClass('fruit red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of new class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/addClass/}\n */\nexport function addClass(value) {\n    // Support functions\n    if (typeof value === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                const className = el.attribs['class'] || '';\n                addClass.call([el], value.call(el, i, className));\n            }\n        });\n    }\n    // Return if no value or not a string or function\n    if (!value || typeof value !== 'string')\n        return this;\n    const classNames = value.split(rspace);\n    const numElements = this.length;\n    for (let i = 0; i < numElements; i++) {\n        const el = this[i];\n        // If selected element isn't a tag, move on\n        if (!isTag(el))\n            continue;\n        // If we don't already have classes — always set xmlMode to false here, as it doesn't matter for classes\n        const className = getAttr(el, 'class', false);\n        if (!className) {\n            setAttr(el, 'class', classNames.join(' ').trim());\n        }\n        else {\n            let setClass = ` ${className} `;\n            // Check if class already exists\n            for (let j = 0; j < classNames.length; j++) {\n                const appendClass = `${classNames[j]} `;\n                if (!setClass.includes(` ${appendClass}`))\n                    setClass += appendClass;\n            }\n            setAttr(el, 'class', setClass.trim());\n        }\n    }\n    return this;\n}\n/**\n * Removes one or more space-separated classes from the selected elements. If no\n * `className` is defined, all classes will be removed. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeClass('pear').html();\n * //=> <li class=\"\">Pear</li>\n *\n * $('.apple').addClass('red').removeClass().html();\n * //=> <li class=\"\">Apple</li>\n * ```\n *\n * @param name - Name of the class. If not specified, removes all elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeClass/}\n */\nexport function removeClass(name) {\n    // Handle if value is a function\n    if (typeof name === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                removeClass.call([el], name.call(el, i, el.attribs['class'] || ''));\n            }\n        });\n    }\n    const classes = splitNames(name);\n    const numClasses = classes.length;\n    const removeAll = arguments.length === 0;\n    return domEach(this, (el) => {\n        if (!isTag(el))\n            return;\n        if (removeAll) {\n            // Short circuit the remove all case as this is the nice one\n            el.attribs['class'] = '';\n        }\n        else {\n            const elClasses = splitNames(el.attribs['class']);\n            let changed = false;\n            for (let j = 0; j < numClasses; j++) {\n                const index = elClasses.indexOf(classes[j]);\n                if (index >= 0) {\n                    elClasses.splice(index, 1);\n                    changed = true;\n                    /*\n                     * We have to do another pass to ensure that there are not duplicate\n                     * classes listed\n                     */\n                    j--;\n                }\n            }\n            if (changed) {\n                el.attribs['class'] = elClasses.join(' ');\n            }\n        }\n    });\n}\n/**\n * Add or remove class(es) from the matched elements, depending on either the\n * class's presence or the value of the switch argument. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.apple.green').toggleClass('fruit green red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n *\n * $('.apple.green').toggleClass('fruit green red', true).html();\n * //=> <li class=\"apple green fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of the class. Can also be a function.\n * @param stateVal - If specified the state of the class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/toggleClass/}\n */\nexport function toggleClass(value, stateVal) {\n    // Support functions\n    if (typeof value === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                toggleClass.call([el], value.call(el, i, el.attribs['class'] || '', stateVal), stateVal);\n            }\n        });\n    }\n    // Return if no value or not a string or function\n    if (!value || typeof value !== 'string')\n        return this;\n    const classNames = value.split(rspace);\n    const numClasses = classNames.length;\n    const state = typeof stateVal === 'boolean' ? (stateVal ? 1 : -1) : 0;\n    const numElements = this.length;\n    for (let i = 0; i < numElements; i++) {\n        const el = this[i];\n        // If selected element isn't a tag, move on\n        if (!isTag(el))\n            continue;\n        const elementClasses = splitNames(el.attribs['class']);\n        // Check if class already exists\n        for (let j = 0; j < numClasses; j++) {\n            // Check if the class name is currently defined\n            const index = elementClasses.indexOf(classNames[j]);\n            // Add if stateValue === true or we are toggling and there is no value\n            if (state >= 0 && index < 0) {\n                elementClasses.push(classNames[j]);\n            }\n            else if (state <= 0 && index >= 0) {\n                // Otherwise remove but only if the item exists\n                elementClasses.splice(index, 1);\n            }\n        }\n        el.attribs['class'] = elementClasses.join(' ');\n    }\n    return this;\n}\n//# sourceMappingURL=attributes.js.map",null,"import { cloneNode, Document } from 'domhandler';\n/**\n * Check if the DOM element is a tag.\n *\n * `isTag(type)` includes `<script>` and `<style>` tags.\n *\n * @private\n * @category Utils\n * @param type - The DOM node to check.\n * @returns Whether the node is a tag.\n */\nexport { isTag } from 'domhandler';\n/**\n * Checks if an object is a Cheerio instance.\n *\n * @category Utils\n * @param maybeCheerio - The object to check.\n * @returns Whether the object is a Cheerio instance.\n */\nexport function isCheerio(maybeCheerio) {\n    return maybeCheerio.cheerio != null;\n}\n/**\n * Convert a string to camel case notation.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in camel case notation.\n */\nexport function camelCase(str) {\n    return str.replace(/[_.-](\\w|$)/g, (_, x) => x.toUpperCase());\n}\n/**\n * Convert a string from camel case to \"CSS case\", where word boundaries are\n * described by hyphens (\"-\") and all characters are lower-case.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in \"CSS case\".\n */\nexport function cssCase(str) {\n    return str.replace(/[A-Z]/g, '-$&').toLowerCase();\n}\n/**\n * Iterate over each DOM element without creating intermediary Cheerio instances.\n *\n * This is indented for use internally to avoid otherwise unnecessary memory\n * pressure introduced by _make.\n *\n * @category Utils\n * @param array - The array to iterate over.\n * @param fn - Function to call.\n * @returns The original instance.\n */\nexport function domEach(array, fn) {\n    const len = array.length;\n    for (let i = 0; i < len; i++)\n        fn(array[i], i);\n    return array;\n}\n/**\n * Create a deep copy of the given DOM structure. Sets the parents of the copies\n * of the passed nodes to `null`.\n *\n * @private\n * @category Utils\n * @param dom - The domhandler-compliant DOM structure.\n * @returns - The cloned DOM.\n */\nexport function cloneDom(dom) {\n    const clone = 'length' in dom\n        ? Array.prototype.map.call(dom, (el) => cloneNode(el, true))\n        : [cloneNode(dom, true)];\n    // Add a root node around the cloned nodes\n    const root = new Document(clone);\n    clone.forEach((node) => {\n        node.parent = root;\n    });\n    return clone;\n}\nvar CharacterCodes;\n(function (CharacterCodes) {\n    CharacterCodes[CharacterCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharacterCodes[CharacterCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharacterCodes[CharacterCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharacterCodes[CharacterCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharacterCodes[CharacterCodes[\"Exclamation\"] = 33] = \"Exclamation\";\n})(CharacterCodes || (CharacterCodes = {}));\n/**\n * Check if string is HTML.\n *\n * Tests for a `<` within a string, immediate followed by a letter and\n * eventually followed by a `>`.\n *\n * @private\n * @category Utils\n * @param str - The string to check.\n * @returns Indicates if `str` is HTML.\n */\nexport function isHtml(str) {\n    const tagStart = str.indexOf('<');\n    if (tagStart < 0 || tagStart > str.length - 3)\n        return false;\n    const tagChar = str.charCodeAt(tagStart + 1);\n    return (((tagChar >= CharacterCodes.LowerA && tagChar <= CharacterCodes.LowerZ) ||\n        (tagChar >= CharacterCodes.UpperA && tagChar <= CharacterCodes.UpperZ) ||\n        tagChar === CharacterCodes.Exclamation) &&\n        str.includes('>', tagStart + 2));\n}\n//# sourceMappingURL=utils.js.map",null,"/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\nimport { hasChildren, isDocument, } from 'domhandler';\nimport * as select from 'cheerio-select';\nimport { domEach, isTag, isCheerio } from '../utils.js';\nimport { contains } from '../static.js';\nimport { getChildren, getSiblings, nextElementSibling, prevElementSibling, uniqueSort, } from 'domutils';\nconst reSiblingSelector = /^\\s*[~+]/;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\nexport function find(selectorOrHaystack) {\n    var _a;\n    if (!selectorOrHaystack) {\n        return this._make([]);\n    }\n    const context = this.toArray();\n    if (typeof selectorOrHaystack !== 'string') {\n        const haystack = isCheerio(selectorOrHaystack)\n            ? selectorOrHaystack.toArray()\n            : [selectorOrHaystack];\n        return this._make(haystack.filter((elem) => context.some((node) => contains(node, elem))));\n    }\n    const elems = reSiblingSelector.test(selectorOrHaystack)\n        ? context\n        : this.children().toArray();\n    const options = {\n        context,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n        // Pass options that are recognized by `cheerio-select`\n        xmlMode: this.options.xmlMode,\n        lowerCaseTags: this.options.lowerCaseTags,\n        lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n        pseudos: this.options.pseudos,\n        quirksMode: this.options.quirksMode,\n    };\n    return this._make(select.select(selectorOrHaystack, elems, options));\n}\n/**\n * Creates a matcher, using a particular mapping function. Matchers provide a\n * function that finds elements using a generating function, supporting filtering.\n *\n * @private\n * @param matchMap - Mapping function.\n * @returns - Function for wrapping generating functions.\n */\nfunction _getMatcher(matchMap) {\n    return function (fn, ...postFns) {\n        return function (selector) {\n            var _a;\n            let matched = matchMap(fn, this);\n            if (selector) {\n                matched = filterArray(matched, selector, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]);\n            }\n            return this._make(\n            // Post processing is only necessary if there is more than one element.\n            this.length > 1 && matched.length > 1\n                ? postFns.reduce((elems, fn) => fn(elems), matched)\n                : matched);\n        };\n    };\n}\n/** Matcher that adds multiple elements for each entry in the input. */\nconst _matcher = _getMatcher((fn, elems) => {\n    const ret = [];\n    for (let i = 0; i < elems.length; i++) {\n        const value = fn(elems[i]);\n        ret.push(value);\n    }\n    return new Array().concat(...ret);\n});\n/** Matcher that adds at most one element for each entry in the input. */\nconst _singleMatcher = _getMatcher((fn, elems) => {\n    const ret = [];\n    for (let i = 0; i < elems.length; i++) {\n        const value = fn(elems[i]);\n        if (value !== null) {\n            ret.push(value);\n        }\n    }\n    return ret;\n});\n/**\n * Matcher that supports traversing until a condition is met.\n *\n * @returns A function usable for `*Until` methods.\n */\nfunction _matchUntil(nextElem, ...postFns) {\n    // We use a variable here that is used from within the matcher.\n    let matches = null;\n    const innerMatcher = _getMatcher((nextElem, elems) => {\n        const matched = [];\n        domEach(elems, (elem) => {\n            for (let next; (next = nextElem(elem)); elem = next) {\n                // FIXME: `matched` might contain duplicates here and the index is too large.\n                if (matches === null || matches === void 0 ? void 0 : matches(next, matched.length))\n                    break;\n                matched.push(next);\n            }\n        });\n        return matched;\n    })(nextElem, ...postFns);\n    return function (selector, filterSelector) {\n        // Override `matches` variable with the new target.\n        matches =\n            typeof selector === 'string'\n                ? (elem) => select.is(elem, selector, this.options)\n                : selector\n                    ? getFilterFn(selector)\n                    : null;\n        const ret = innerMatcher.call(this, filterSelector);\n        // Set `matches` to `null`, so we don't waste memory.\n        matches = null;\n        return ret;\n    };\n}\nfunction _removeDuplicates(elems) {\n    return Array.from(new Set(elems));\n}\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\nexport const parent = _singleMatcher(({ parent }) => (parent && !isDocument(parent) ? parent : null), _removeDuplicates);\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\nexport const parents = _matcher((elem) => {\n    const matched = [];\n    while (elem.parent && !isDocument(elem.parent)) {\n        matched.push(elem.parent);\n        elem = elem.parent;\n    }\n    return matched;\n}, uniqueSort, (elems) => elems.reverse());\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\nexport const parentsUntil = _matchUntil(({ parent }) => (parent && !isDocument(parent) ? parent : null), uniqueSort, (elems) => elems.reverse());\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\nexport function closest(selector) {\n    var _a;\n    const set = [];\n    if (!selector) {\n        return this._make(set);\n    }\n    const selectOpts = {\n        xmlMode: this.options.xmlMode,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n    };\n    const selectFn = typeof selector === 'string'\n        ? (elem) => select.is(elem, selector, selectOpts)\n        : getFilterFn(selector);\n    domEach(this, (elem) => {\n        while (elem && isTag(elem)) {\n            if (selectFn(elem, 0)) {\n                // Do not add duplicate elements to the set\n                if (!set.includes(elem)) {\n                    set.push(elem);\n                }\n                break;\n            }\n            elem = elem.parent;\n        }\n    });\n    return this._make(set);\n}\n/**\n * Gets the next sibling of the first selected element, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\nexport const next = _singleMatcher((elem) => nextElementSibling(elem));\n/**\n * Gets all the following siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\nexport const nextAll = _matcher((elem) => {\n    const matched = [];\n    while (elem.next) {\n        elem = elem.next;\n        if (isTag(elem))\n            matched.push(elem);\n    }\n    return matched;\n}, _removeDuplicates);\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\nexport const nextUntil = _matchUntil((el) => nextElementSibling(el), _removeDuplicates);\n/**\n * Gets the previous sibling of the first selected element optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\nexport const prev = _singleMatcher((elem) => prevElementSibling(elem));\n/**\n * Gets all the preceding siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\nexport const prevAll = _matcher((elem) => {\n    const matched = [];\n    while (elem.prev) {\n        elem = elem.prev;\n        if (isTag(elem))\n            matched.push(elem);\n    }\n    return matched;\n}, _removeDuplicates);\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\nexport const prevUntil = _matchUntil((el) => prevElementSibling(el), _removeDuplicates);\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\nexport const siblings = _matcher((elem) => getSiblings(elem).filter((el) => isTag(el) && el !== elem), uniqueSort);\n/**\n * Gets the element children of each element in the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\nexport const children = _matcher((elem) => getChildren(elem).filter(isTag), _removeDuplicates);\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\nexport function contents() {\n    const elems = this.toArray().reduce((newElems, elem) => hasChildren(elem) ? newElems.concat(elem.children) : newElems, []);\n    return this._make(elems);\n}\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\nexport function each(fn) {\n    let i = 0;\n    const len = this.length;\n    while (i < len && fn.call(this[i], i, this[i]) !== false)\n        ++i;\n    return this;\n}\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\nexport function map(fn) {\n    let elems = [];\n    for (let i = 0; i < this.length; i++) {\n        const el = this[i];\n        const val = fn.call(el, i, el);\n        if (val != null) {\n            elems = elems.concat(val);\n        }\n    }\n    return this._make(elems);\n}\n/**\n * Creates a function to test if a filter is matched.\n *\n * @param match - A filter.\n * @returns A function that determines if a filter has been matched.\n */\nfunction getFilterFn(match) {\n    if (typeof match === 'function') {\n        return (el, i) => match.call(el, i, el);\n    }\n    if (isCheerio(match)) {\n        return (el) => Array.prototype.includes.call(match, el);\n    }\n    return function (el) {\n        return match === el;\n    };\n}\nexport function filter(match) {\n    var _a;\n    return this._make(filterArray(this.toArray(), match, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]));\n}\nexport function filterArray(nodes, match, xmlMode, root) {\n    return typeof match === 'string'\n        ? select.filter(match, nodes, { xmlMode, root })\n        : nodes.filter(getFilterFn(match));\n}\n/**\n * Checks the current list of elements and returns `true` if _any_ of the\n * elements match the selector. If using an element or Cheerio selection,\n * returns `true` if _any_ of the elements match. If using a predicate function,\n * the function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @category Attributes\n * @param selector - Selector for the selection.\n * @returns Whether or not the selector matches an element of the instance.\n * @see {@link https://api.jquery.com/is/}\n */\nexport function is(selector) {\n    const nodes = this.toArray();\n    return typeof selector === 'string'\n        ? select.some(nodes.filter(isTag), selector, this.options)\n        : selector\n            ? nodes.some(getFilterFn(selector))\n            : false;\n}\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @param container - Optional node to filter instead.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\nexport function not(match) {\n    let nodes = this.toArray();\n    if (typeof match === 'string') {\n        const matches = new Set(select.filter(match, nodes, this.options));\n        nodes = nodes.filter((el) => !matches.has(el));\n    }\n    else {\n        const filterFn = getFilterFn(match);\n        nodes = nodes.filter((el, i) => !filterFn(el, i));\n    }\n    return this._make(nodes);\n}\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\nexport function has(selectorOrHaystack) {\n    return this.filter(typeof selectorOrHaystack === 'string'\n        ? // Using the `:has` selector here short-circuits searches.\n            `:has(${selectorOrHaystack})`\n        : (_, el) => this._make(el).find(selectorOrHaystack).length > 0);\n}\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\nexport function first() {\n    return this.length > 1 ? this._make(this[0]) : this;\n}\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\nexport function last() {\n    return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\nexport function eq(i) {\n    var _a;\n    i = +i;\n    // Use the first identity optimization if possible\n    if (i === 0 && this.length <= 1)\n        return this;\n    if (i < 0)\n        i = this.length + i;\n    return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);\n}\nexport function get(i) {\n    if (i == null) {\n        return this.toArray();\n    }\n    return this[i < 0 ? this.length + i : i];\n}\n/**\n * Retrieve all the DOM elements contained in the jQuery set as an array.\n *\n * @example\n *\n * ```js\n * $('li').toArray();\n * //=> [ {...}, {...}, {...} ]\n * ```\n *\n * @returns The contained items.\n */\nexport function toArray() {\n    return Array.prototype.slice.call(this);\n}\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\nexport function index(selectorOrNeedle) {\n    let $haystack;\n    let needle;\n    if (selectorOrNeedle == null) {\n        $haystack = this.parent().children();\n        needle = this[0];\n    }\n    else if (typeof selectorOrNeedle === 'string') {\n        $haystack = this._make(selectorOrNeedle);\n        needle = this[0];\n    }\n    else {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        $haystack = this;\n        needle = isCheerio(selectorOrNeedle)\n            ? selectorOrNeedle[0]\n            : selectorOrNeedle;\n    }\n    return Array.prototype.indexOf.call($haystack, needle);\n}\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - A position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - A position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\nexport function slice(start, end) {\n    return this._make(Array.prototype.slice.call(this, start, end));\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\nexport function end() {\n    var _a;\n    return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);\n}\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\nexport function add(other, context) {\n    const selection = this._make(other, context);\n    const contents = uniqueSort([...this.get(), ...selection.get()]);\n    return this._make(contents);\n}\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\nexport function addBack(selector) {\n    return this.prevObject\n        ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject)\n        : this;\n}\n//# sourceMappingURL=traversing.js.map",null,"import { parse, SelectorType, isTraversal } from \"css-what\";\nimport { _compileToken as compileToken, prepareContext, } from \"css-select\";\nimport * as DomUtils from \"domutils\";\nimport * as boolbase from \"boolbase\";\nimport { getDocumentRoot, groupSelectors } from \"./helpers.js\";\nimport { isFilter, getLimit, } from \"./positionals.js\";\n// Re-export pseudo extension points\nexport { filters, pseudos, aliases } from \"css-select\";\nconst UNIVERSAL_SELECTOR = {\n    type: SelectorType.Universal,\n    namespace: null,\n};\nconst SCOPE_PSEUDO = {\n    type: SelectorType.Pseudo,\n    name: \"scope\",\n    data: null,\n};\nexport function is(element, selector, options = {}) {\n    return some([element], selector, options);\n}\nexport function some(elements, selector, options = {}) {\n    if (typeof selector === \"function\")\n        return elements.some(selector);\n    const [plain, filtered] = groupSelectors(parse(selector));\n    return ((plain.length > 0 && elements.some(compileToken(plain, options))) ||\n        filtered.some((sel) => filterBySelector(sel, elements, options).length > 0));\n}\nfunction filterByPosition(filter, elems, data, options) {\n    const num = typeof data === \"string\" ? parseInt(data, 10) : NaN;\n    switch (filter) {\n        case \"first\":\n        case \"lt\":\n            // Already done in `getLimit`\n            return elems;\n        case \"last\":\n            return elems.length > 0 ? [elems[elems.length - 1]] : elems;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) && Math.abs(num) < elems.length\n                ? [num < 0 ? elems[elems.length + num] : elems[num]]\n                : [];\n        case \"gt\":\n            return isFinite(num) ? elems.slice(num + 1) : [];\n        case \"even\":\n            return elems.filter((_, i) => i % 2 === 0);\n        case \"odd\":\n            return elems.filter((_, i) => i % 2 === 1);\n        case \"not\": {\n            const filtered = new Set(filterParsed(data, elems, options));\n            return elems.filter((e) => !filtered.has(e));\n        }\n    }\n}\nexport function filter(selector, elements, options = {}) {\n    return filterParsed(parse(selector), elements, options);\n}\n/**\n * Filter a set of elements by a selector.\n *\n * Will return elements in the original order.\n *\n * @param selector Selector to filter by.\n * @param elements Elements to filter.\n * @param options Options for selector.\n */\nfunction filterParsed(selector, elements, options) {\n    if (elements.length === 0)\n        return [];\n    const [plainSelectors, filteredSelectors] = groupSelectors(selector);\n    let found;\n    if (plainSelectors.length) {\n        const filtered = filterElements(elements, plainSelectors, options);\n        // If there are no filters, just return\n        if (filteredSelectors.length === 0) {\n            return filtered;\n        }\n        // Otherwise, we have to do some filtering\n        if (filtered.length) {\n            found = new Set(filtered);\n        }\n    }\n    for (let i = 0; i < filteredSelectors.length && (found === null || found === void 0 ? void 0 : found.size) !== elements.length; i++) {\n        const filteredSelector = filteredSelectors[i];\n        const missing = found\n            ? elements.filter((e) => DomUtils.isTag(e) && !found.has(e))\n            : elements;\n        if (missing.length === 0)\n            break;\n        const filtered = filterBySelector(filteredSelector, elements, options);\n        if (filtered.length) {\n            if (!found) {\n                /*\n                 * If we haven't found anything before the last selector,\n                 * just return what we found now.\n                 */\n                if (i === filteredSelectors.length - 1) {\n                    return filtered;\n                }\n                found = new Set(filtered);\n            }\n            else {\n                filtered.forEach((el) => found.add(el));\n            }\n        }\n    }\n    return typeof found !== \"undefined\"\n        ? (found.size === elements.length\n            ? elements\n            : // Filter elements to preserve order\n                elements.filter((el) => found.has(el)))\n        : [];\n}\nfunction filterBySelector(selector, elements, options) {\n    var _a;\n    if (selector.some(isTraversal)) {\n        /*\n         * Get root node, run selector with the scope\n         * set to all of our nodes.\n         */\n        const root = (_a = options.root) !== null && _a !== void 0 ? _a : getDocumentRoot(elements[0]);\n        const opts = { ...options, context: elements, relativeSelector: false };\n        selector.push(SCOPE_PSEUDO);\n        return findFilterElements(root, selector, opts, true, elements.length);\n    }\n    // Performance optimization: If we don't have to traverse, just filter set.\n    return findFilterElements(elements, selector, options, false, elements.length);\n}\nexport function select(selector, root, options = {}, limit = Infinity) {\n    if (typeof selector === \"function\") {\n        return find(root, selector);\n    }\n    const [plain, filtered] = groupSelectors(parse(selector));\n    const results = filtered.map((sel) => findFilterElements(root, sel, options, true, limit));\n    // Plain selectors can be queried in a single go\n    if (plain.length) {\n        results.push(findElements(root, plain, options, limit));\n    }\n    if (results.length === 0) {\n        return [];\n    }\n    // If there was only a single selector, just return the result\n    if (results.length === 1) {\n        return results[0];\n    }\n    // Sort results, filtering for duplicates\n    return DomUtils.uniqueSort(results.reduce((a, b) => [...a, ...b]));\n}\n/**\n *\n * @param root Element(s) to search from.\n * @param selector Selector to look for.\n * @param options Options for querying.\n * @param queryForSelector Query multiple levels deep for the initial selector, even if it doesn't contain a traversal.\n */\nfunction findFilterElements(root, selector, options, queryForSelector, totalLimit) {\n    const filterIndex = selector.findIndex(isFilter);\n    const sub = selector.slice(0, filterIndex);\n    const filter = selector[filterIndex];\n    // If we are at the end of the selector, we can limit the number of elements to retrieve.\n    const partLimit = selector.length - 1 === filterIndex ? totalLimit : Infinity;\n    /*\n     * Set the number of elements to retrieve.\n     * Eg. for :first, we only have to get a single element.\n     */\n    const limit = getLimit(filter.name, filter.data, partLimit);\n    if (limit === 0)\n        return [];\n    /*\n     * Skip `findElements` call if our selector starts with a positional\n     * pseudo.\n     */\n    const elemsNoLimit = sub.length === 0 && !Array.isArray(root)\n        ? DomUtils.getChildren(root).filter(DomUtils.isTag)\n        : sub.length === 0\n            ? (Array.isArray(root) ? root : [root]).filter(DomUtils.isTag)\n            : queryForSelector || sub.some(isTraversal)\n                ? findElements(root, [sub], options, limit)\n                : filterElements(root, [sub], options);\n    const elems = elemsNoLimit.slice(0, limit);\n    let result = filterByPosition(filter.name, elems, filter.data, options);\n    if (result.length === 0 || selector.length === filterIndex + 1) {\n        return result;\n    }\n    const remainingSelector = selector.slice(filterIndex + 1);\n    const remainingHasTraversal = remainingSelector.some(isTraversal);\n    if (remainingHasTraversal) {\n        if (isTraversal(remainingSelector[0])) {\n            const { type } = remainingSelector[0];\n            if (type === SelectorType.Sibling ||\n                type === SelectorType.Adjacent) {\n                // If we have a sibling traversal, we need to also look at the siblings.\n                result = prepareContext(result, DomUtils, true);\n            }\n            // Avoid a traversal-first selector error.\n            remainingSelector.unshift(UNIVERSAL_SELECTOR);\n        }\n        options = {\n            ...options,\n            // Avoid absolutizing the selector\n            relativeSelector: false,\n            /*\n             * Add a custom root func, to make sure traversals don't match elements\n             * that aren't a part of the considered tree.\n             */\n            rootFunc: (el) => result.includes(el),\n        };\n    }\n    else if (options.rootFunc && options.rootFunc !== boolbase.trueFunc) {\n        options = { ...options, rootFunc: boolbase.trueFunc };\n    }\n    /*\n     * If we have another filter, recursively call `findFilterElements`,\n     * with the `recursive` flag disabled. We only have to look for more\n     * elements when we see a traversal.\n     *\n     * Otherwise,\n     */\n    return remainingSelector.some(isFilter)\n        ? findFilterElements(result, remainingSelector, options, false, totalLimit)\n        : remainingHasTraversal\n            ? // Query existing elements to resolve traversal.\n                findElements(result, [remainingSelector], options, totalLimit)\n            : // If we don't have any more traversals, simply filter elements.\n                filterElements(result, [remainingSelector], options);\n}\nfunction findElements(root, sel, options, limit) {\n    const query = compileToken(sel, options, root);\n    return find(root, query, limit);\n}\nfunction find(root, query, limit = Infinity) {\n    const elems = prepareContext(root, DomUtils, query.shouldTestNextSiblings);\n    return DomUtils.find((node) => DomUtils.isTag(node) && query(node), elems, true, limit);\n}\nfunction filterElements(elements, sel, options) {\n    const els = (Array.isArray(elements) ? elements : [elements]).filter(DomUtils.isTag);\n    if (els.length === 0)\n        return els;\n    const query = compileToken(sel, options);\n    return query === boolbase.trueFunc ? els : els.filter(query);\n}\n//# sourceMappingURL=index.js.map",null,"import { SelectorType, AttributeAction, } from \"./types\";\nconst reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nconst reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nconst actionTypes = new Map([\n    [126 /* Tilde */, AttributeAction.Element],\n    [94 /* Circumflex */, AttributeAction.Start],\n    [36 /* Dollar */, AttributeAction.End],\n    [42 /* Asterisk */, AttributeAction.Any],\n    [33 /* ExclamationMark */, AttributeAction.Not],\n    [124 /* Pipe */, AttributeAction.Hyphen],\n]);\n// Pseudos, whose data property is parsed as well.\nconst unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\",\n]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nexport function isTraversal(selector) {\n    switch (selector.type) {\n        case SelectorType.Adjacent:\n        case SelectorType.Child:\n        case SelectorType.Descendant:\n        case SelectorType.Parent:\n        case SelectorType.Sibling:\n        case SelectorType.ColumnCombinator:\n            return true;\n        default:\n            return false;\n    }\n}\nconst stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    const high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);\n}\nfunction unescapeCSS(str) {\n    return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\nfunction isWhitespace(c) {\n    return (c === 32 /* Space */ ||\n        c === 9 /* Tab */ ||\n        c === 10 /* NewLine */ ||\n        c === 12 /* FormFeed */ ||\n        c === 13 /* CarriageReturn */);\n}\n/**\n * Parses `selector`, optionally with the passed `options`.\n *\n * @param selector Selector to parse.\n * @param options Options for parsing.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nexport function parse(selector) {\n    const subselects = [];\n    const endIndex = parseSelector(subselects, `${selector}`, 0);\n    if (endIndex < selector.length) {\n        throw new Error(`Unmatched selector: ${selector.slice(endIndex)}`);\n    }\n    return subselects;\n}\nfunction parseSelector(subselects, selector, selectorIndex) {\n    let tokens = [];\n    function getName(offset) {\n        const match = selector.slice(selectorIndex + offset).match(reName);\n        if (!match) {\n            throw new Error(`Expected name, found ${selector.slice(selectorIndex)}`);\n        }\n        const [name] = match;\n        selectorIndex += offset + name.length;\n        return unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while (selectorIndex < selector.length &&\n            isWhitespace(selector.charCodeAt(selectorIndex))) {\n            selectorIndex++;\n        }\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        const start = selectorIndex;\n        let counter = 1;\n        for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n            if (selector.charCodeAt(selectorIndex) ===\n                40 /* LeftParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter++;\n            }\n            else if (selector.charCodeAt(selectorIndex) ===\n                41 /* RightParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter--;\n            }\n        }\n        if (counter) {\n            throw new Error(\"Parenthesis not matched\");\n        }\n        return unescapeCSS(selector.slice(start, selectorIndex - 1));\n    }\n    function isEscaped(pos) {\n        let slashCount = 0;\n        while (selector.charCodeAt(--pos) === 92 /* BackSlash */)\n            slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && isTraversal(tokens[tokens.length - 1])) {\n            throw new Error(\"Did not expect successive traversals.\");\n        }\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({ type });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: SelectorType.Attribute,\n            name,\n            action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\",\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */\n    function finalizeSubselector() {\n        if (tokens.length &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens.pop();\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Empty sub-selector\");\n        }\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) {\n        return selectorIndex;\n    }\n    loop: while (selectorIndex < selector.length) {\n        const firstChar = selector.charCodeAt(selectorIndex);\n        switch (firstChar) {\n            // Whitespace\n            case 32 /* Space */:\n            case 9 /* Tab */:\n            case 10 /* NewLine */:\n            case 12 /* FormFeed */:\n            case 13 /* CarriageReturn */: {\n                if (tokens.length === 0 ||\n                    tokens[0].type !== SelectorType.Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({ type: SelectorType.Descendant });\n                }\n                stripWhitespace(1);\n                break;\n            }\n            // Traversals\n            case 62 /* GreaterThan */: {\n                addTraversal(SelectorType.Child);\n                stripWhitespace(1);\n                break;\n            }\n            case 60 /* LessThan */: {\n                addTraversal(SelectorType.Parent);\n                stripWhitespace(1);\n                break;\n            }\n            case 126 /* Tilde */: {\n                addTraversal(SelectorType.Sibling);\n                stripWhitespace(1);\n                break;\n            }\n            case 43 /* Plus */: {\n                addTraversal(SelectorType.Adjacent);\n                stripWhitespace(1);\n                break;\n            }\n            // Special attribute selectors: .class, #id\n            case 46 /* Period */: {\n                addSpecialAttribute(\"class\", AttributeAction.Element);\n                break;\n            }\n            case 35 /* Hash */: {\n                addSpecialAttribute(\"id\", AttributeAction.Equals);\n                break;\n            }\n            case 91 /* LeftSquareBracket */: {\n                stripWhitespace(1);\n                // Determine attribute name and namespace\n                let name;\n                let namespace = null;\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */) {\n                    // Equivalent to no namespace\n                    name = getName(1);\n                }\n                else if (selector.startsWith(\"*|\", selectorIndex)) {\n                    namespace = \"*\";\n                    name = getName(2);\n                }\n                else {\n                    name = getName(0);\n                    if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                        selector.charCodeAt(selectorIndex + 1) !==\n                            61 /* Equal */) {\n                        namespace = name;\n                        name = getName(1);\n                    }\n                }\n                stripWhitespace(0);\n                // Determine comparison operation\n                let action = AttributeAction.Exists;\n                const possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n                if (possibleAction) {\n                    action = possibleAction;\n                    if (selector.charCodeAt(selectorIndex + 1) !==\n                        61 /* Equal */) {\n                        throw new Error(\"Expected `=`\");\n                    }\n                    stripWhitespace(2);\n                }\n                else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */) {\n                    action = AttributeAction.Equals;\n                    stripWhitespace(1);\n                }\n                // Determine value\n                let value = \"\";\n                let ignoreCase = null;\n                if (action !== \"exists\") {\n                    if (isQuote(selector.charCodeAt(selectorIndex))) {\n                        const quote = selector.charCodeAt(selectorIndex);\n                        let sectionEnd = selectorIndex + 1;\n                        while (sectionEnd < selector.length &&\n                            (selector.charCodeAt(sectionEnd) !== quote ||\n                                isEscaped(sectionEnd))) {\n                            sectionEnd += 1;\n                        }\n                        if (selector.charCodeAt(sectionEnd) !== quote) {\n                            throw new Error(\"Attribute value didn't end\");\n                        }\n                        value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n                        selectorIndex = sectionEnd + 1;\n                    }\n                    else {\n                        const valueStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            ((!isWhitespace(selector.charCodeAt(selectorIndex)) &&\n                                selector.charCodeAt(selectorIndex) !==\n                                    93 /* RightSquareBracket */) ||\n                                isEscaped(selectorIndex))) {\n                            selectorIndex += 1;\n                        }\n                        value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n                    }\n                    stripWhitespace(0);\n                    // See if we have a force ignore flag\n                    const forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n                    // If the forceIgnore flag is set (either `i` or `s`), use that value\n                    if (forceIgnore === 115 /* LowerS */) {\n                        ignoreCase = false;\n                        stripWhitespace(1);\n                    }\n                    else if (forceIgnore === 105 /* LowerI */) {\n                        ignoreCase = true;\n                        stripWhitespace(1);\n                    }\n                }\n                if (selector.charCodeAt(selectorIndex) !==\n                    93 /* RightSquareBracket */) {\n                    throw new Error(\"Attribute selector didn't terminate\");\n                }\n                selectorIndex += 1;\n                const attributeSelector = {\n                    type: SelectorType.Attribute,\n                    name,\n                    action,\n                    value,\n                    namespace,\n                    ignoreCase,\n                };\n                tokens.push(attributeSelector);\n                break;\n            }\n            case 58 /* Colon */: {\n                if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */) {\n                    tokens.push({\n                        type: SelectorType.PseudoElement,\n                        name: getName(2).toLowerCase(),\n                        data: selector.charCodeAt(selectorIndex) ===\n                            40 /* LeftParenthesis */\n                            ? readValueWithParenthesis()\n                            : null,\n                    });\n                    continue;\n                }\n                const name = getName(1).toLowerCase();\n                let data = null;\n                if (selector.charCodeAt(selectorIndex) ===\n                    40 /* LeftParenthesis */) {\n                    if (unpackPseudos.has(name)) {\n                        if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                            throw new Error(`Pseudo-selector ${name} cannot be quoted`);\n                        }\n                        data = [];\n                        selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n                        if (selector.charCodeAt(selectorIndex) !==\n                            41 /* RightParenthesis */) {\n                            throw new Error(`Missing closing parenthesis in :${name} (${selector})`);\n                        }\n                        selectorIndex += 1;\n                    }\n                    else {\n                        data = readValueWithParenthesis();\n                        if (stripQuotesFromPseudos.has(name)) {\n                            const quot = data.charCodeAt(0);\n                            if (quot === data.charCodeAt(data.length - 1) &&\n                                isQuote(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                        }\n                        data = unescapeCSS(data);\n                    }\n                }\n                tokens.push({ type: SelectorType.Pseudo, name, data });\n                break;\n            }\n            case 44 /* Comma */: {\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            }\n            default: {\n                if (selector.startsWith(\"/*\", selectorIndex)) {\n                    const endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                    if (endIndex < 0) {\n                        throw new Error(\"Comment was not terminated\");\n                    }\n                    selectorIndex = endIndex + 2;\n                    // Remove leading whitespace\n                    if (tokens.length === 0) {\n                        stripWhitespace(0);\n                    }\n                    break;\n                }\n                let namespace = null;\n                let name;\n                if (firstChar === 42 /* Asterisk */) {\n                    selectorIndex += 1;\n                    name = \"*\";\n                }\n                else if (firstChar === 124 /* Pipe */) {\n                    name = \"\";\n                    if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */) {\n                        addTraversal(SelectorType.ColumnCombinator);\n                        stripWhitespace(2);\n                        break;\n                    }\n                }\n                else if (reName.test(selector.slice(selectorIndex))) {\n                    name = getName(0);\n                }\n                else {\n                    break loop;\n                }\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                    selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */) {\n                    namespace = name;\n                    if (selector.charCodeAt(selectorIndex + 1) ===\n                        42 /* Asterisk */) {\n                        name = \"*\";\n                        selectorIndex += 2;\n                    }\n                    else {\n                        name = getName(1);\n                    }\n                }\n                tokens.push(name === \"*\"\n                    ? { type: SelectorType.Universal, namespace }\n                    : { type: SelectorType.Tag, name, namespace });\n            }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\n/**\n * Modes for ignore case.\n *\n * This could be updated to an enum, and the object is\n * the current stand-in that will allow code to be updated\n * without big changes.\n */\nexport const IgnoreCaseMode = {\n    Unknown: null,\n    QuirksMode: \"quirks\",\n    IgnoreCase: true,\n    CaseSensitive: false,\n};\nexport var AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));\n","import * as DomUtils from \"domutils\";\nimport boolbase from \"boolbase\";\nimport { compile as compileRaw, compileUnsafe, compileToken, } from \"./compile.js\";\nimport { getNextSiblings } from \"./pseudo-selectors/subselects.js\";\nconst defaultEquals = (a, b) => a === b;\nconst defaultOptions = {\n    adapter: DomUtils,\n    equals: defaultEquals,\n};\nfunction convertOptionFormats(options) {\n    var _a, _b, _c, _d;\n    /*\n     * We force one format of options to the other one.\n     */\n    // @ts-expect-error Default options may have incompatible `Node` / `ElementNode`.\n    const opts = options !== null && options !== void 0 ? options : defaultOptions;\n    // @ts-expect-error Same as above.\n    (_a = opts.adapter) !== null && _a !== void 0 ? _a : (opts.adapter = DomUtils);\n    // @ts-expect-error `equals` does not exist on `Options`\n    (_b = opts.equals) !== null && _b !== void 0 ? _b : (opts.equals = (_d = (_c = opts.adapter) === null || _c === void 0 ? void 0 : _c.equals) !== null && _d !== void 0 ? _d : defaultEquals);\n    return opts;\n}\nfunction wrapCompile(func) {\n    return function addAdapter(selector, options, context) {\n        const opts = convertOptionFormats(options);\n        return func(selector, opts, context);\n    };\n}\n/**\n * Compiles the query, returns a function.\n */\nexport const compile = wrapCompile(compileRaw);\nexport const _compileUnsafe = wrapCompile(compileUnsafe);\nexport const _compileToken = wrapCompile(compileToken);\nfunction getSelectorFunc(searchFunc) {\n    return function select(query, elements, options) {\n        const opts = convertOptionFormats(options);\n        if (typeof query !== \"function\") {\n            query = compileUnsafe(query, opts, elements);\n        }\n        const filteredElements = prepareContext(elements, opts.adapter, query.shouldTestNextSiblings);\n        return searchFunc(query, filteredElements, opts);\n    };\n}\nexport function prepareContext(elems, adapter, shouldTestNextSiblings = false) {\n    /*\n     * Add siblings if the query requires them.\n     * See https://github.com/fb55/css-select/pull/43#issuecomment-225414692\n     */\n    if (shouldTestNextSiblings) {\n        elems = appendNextSiblings(elems, adapter);\n    }\n    return Array.isArray(elems)\n        ? adapter.removeSubsets(elems)\n        : adapter.getChildren(elems);\n}\nfunction appendNextSiblings(elem, adapter) {\n    // Order matters because jQuery seems to check the children before the siblings\n    const elems = Array.isArray(elem) ? elem.slice(0) : [elem];\n    const elemsLength = elems.length;\n    for (let i = 0; i < elemsLength; i++) {\n        const nextSiblings = getNextSiblings(elems[i], adapter);\n        elems.push(...nextSiblings);\n    }\n    return elems;\n}\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns All matching elements.\n *\n */\nexport const selectAll = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0\n    ? []\n    : options.adapter.findAll(query, elems));\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns the first match, or null if there was no match.\n */\nexport const selectOne = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0\n    ? null\n    : options.adapter.findOne(query, elems));\n/**\n * Tests whether or not an element is matched by query.\n *\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elem The element to test if it matches the query.\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns\n */\nexport function is(elem, query, options) {\n    const opts = convertOptionFormats(options);\n    return (typeof query === \"function\" ? query : compileRaw(query, opts))(elem);\n}\n/**\n * Alias for selectAll(query, elems, options).\n * @see [compile] for supported selector queries.\n */\nexport default selectAll;\n// Export filters, pseudos and aliases to allow users to supply their own.\n/** @deprecated Use the `pseudos` option instead. */\nexport { filters, pseudos, aliases } from \"./pseudo-selectors/index.js\";\n//# sourceMappingURL=index.js.map",null,"module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","import { parse, SelectorType } from \"css-what\";\nimport boolbase from \"boolbase\";\nimport sortRules, { isTraversal } from \"./sort.js\";\nimport { compileGeneralSelector } from \"./general.js\";\nimport { ensureIsTag, PLACEHOLDER_ELEMENT, } from \"./pseudo-selectors/subselects.js\";\n/**\n * Compiles a selector to an executable function.\n *\n * @param selector Selector to compile.\n * @param options Compilation options.\n * @param context Optional context for the selector.\n */\nexport function compile(selector, options, context) {\n    const next = compileUnsafe(selector, options, context);\n    return ensureIsTag(next, options.adapter);\n}\nexport function compileUnsafe(selector, options, context) {\n    const token = typeof selector === \"string\" ? parse(selector) : selector;\n    return compileToken(token, options, context);\n}\nfunction includesScopePseudo(t) {\n    return (t.type === SelectorType.Pseudo &&\n        (t.name === \"scope\" ||\n            (Array.isArray(t.data) &&\n                t.data.some((data) => data.some(includesScopePseudo)))));\n}\nconst DESCENDANT_TOKEN = { type: SelectorType.Descendant };\nconst FLEXIBLE_DESCENDANT_TOKEN = {\n    type: \"_flexibleDescendant\",\n};\nconst SCOPE_TOKEN = {\n    type: SelectorType.Pseudo,\n    name: \"scope\",\n    data: null,\n};\n/*\n * CSS 4 Spec (Draft): 3.4.1. Absolutizing a Relative Selector\n * http://www.w3.org/TR/selectors4/#absolutizing\n */\nfunction absolutize(token, { adapter }, context) {\n    // TODO Use better check if the context is a document\n    const hasContext = !!(context === null || context === void 0 ? void 0 : context.every((e) => {\n        const parent = adapter.isTag(e) && adapter.getParent(e);\n        return e === PLACEHOLDER_ELEMENT || (parent && adapter.isTag(parent));\n    }));\n    for (const t of token) {\n        if (t.length > 0 &&\n            isTraversal(t[0]) &&\n            t[0].type !== SelectorType.Descendant) {\n            // Don't continue in else branch\n        }\n        else if (hasContext && !t.some(includesScopePseudo)) {\n            t.unshift(DESCENDANT_TOKEN);\n        }\n        else {\n            continue;\n        }\n        t.unshift(SCOPE_TOKEN);\n    }\n}\nexport function compileToken(token, options, context) {\n    var _a;\n    token.forEach(sortRules);\n    context = (_a = options.context) !== null && _a !== void 0 ? _a : context;\n    const isArrayContext = Array.isArray(context);\n    const finalContext = context && (Array.isArray(context) ? context : [context]);\n    // Check if the selector is relative\n    if (options.relativeSelector !== false) {\n        absolutize(token, options, finalContext);\n    }\n    else if (token.some((t) => t.length > 0 && isTraversal(t[0]))) {\n        throw new Error(\"Relative selectors are not allowed when the `relativeSelector` option is disabled\");\n    }\n    let shouldTestNextSiblings = false;\n    const query = token\n        .map((rules) => {\n        if (rules.length >= 2) {\n            const [first, second] = rules;\n            if (first.type !== SelectorType.Pseudo ||\n                first.name !== \"scope\") {\n                // Ignore\n            }\n            else if (isArrayContext &&\n                second.type === SelectorType.Descendant) {\n                rules[1] = FLEXIBLE_DESCENDANT_TOKEN;\n            }\n            else if (second.type === SelectorType.Adjacent ||\n                second.type === SelectorType.Sibling) {\n                shouldTestNextSiblings = true;\n            }\n        }\n        return compileRules(rules, options, finalContext);\n    })\n        .reduce(reduceRules, boolbase.falseFunc);\n    query.shouldTestNextSiblings = shouldTestNextSiblings;\n    return query;\n}\nfunction compileRules(rules, options, context) {\n    var _a;\n    return rules.reduce((previous, rule) => previous === boolbase.falseFunc\n        ? boolbase.falseFunc\n        : compileGeneralSelector(previous, rule, options, context, compileToken), (_a = options.rootFunc) !== null && _a !== void 0 ? _a : boolbase.trueFunc);\n}\nfunction reduceRules(a, b) {\n    if (b === boolbase.falseFunc || a === boolbase.trueFunc) {\n        return a;\n    }\n    if (a === boolbase.falseFunc || b === boolbase.trueFunc) {\n        return b;\n    }\n    return function combine(elem) {\n        return a(elem) || b(elem);\n    };\n}\n//# sourceMappingURL=compile.js.map",null,"import { AttributeAction, SelectorType } from \"css-what\";\nconst procedure = new Map([\n    [SelectorType.Universal, 50],\n    [SelectorType.Tag, 30],\n    [SelectorType.Attribute, 1],\n    [SelectorType.Pseudo, 0],\n]);\nexport function isTraversal(token) {\n    return !procedure.has(token.type);\n}\nconst attributes = new Map([\n    [AttributeAction.Exists, 10],\n    [AttributeAction.Equals, 8],\n    [AttributeAction.Not, 7],\n    [AttributeAction.Start, 6],\n    [AttributeAction.End, 6],\n    [AttributeAction.Any, 5],\n]);\n/**\n * Sort the parts of the passed selector,\n * as there is potential for optimization\n * (some types of selectors are faster than others)\n *\n * @param arr Selector to sort\n */\nexport default function sortByProcedure(arr) {\n    const procs = arr.map(getProcedure);\n    for (let i = 1; i < arr.length; i++) {\n        const procNew = procs[i];\n        if (procNew < 0)\n            continue;\n        for (let j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n            const token = arr[j + 1];\n            arr[j + 1] = arr[j];\n            arr[j] = token;\n            procs[j + 1] = procs[j];\n            procs[j] = procNew;\n        }\n    }\n}\nfunction getProcedure(token) {\n    var _a, _b;\n    let proc = (_a = procedure.get(token.type)) !== null && _a !== void 0 ? _a : -1;\n    if (token.type === SelectorType.Attribute) {\n        proc = (_b = attributes.get(token.action)) !== null && _b !== void 0 ? _b : 4;\n        if (token.action === AttributeAction.Equals && token.name === \"id\") {\n            // Prefer ID selectors (eg. #ID)\n            proc = 9;\n        }\n        if (token.ignoreCase) {\n            /*\n             * IgnoreCase adds some overhead, prefer \"normal\" token\n             * this is a binary operation, to ensure it's still an int\n             */\n            proc >>= 1;\n        }\n    }\n    else if (token.type === SelectorType.Pseudo) {\n        if (!token.data) {\n            proc = 3;\n        }\n        else if (token.name === \"has\" || token.name === \"contains\") {\n            proc = 0; // Expensive in any case\n        }\n        else if (Array.isArray(token.data)) {\n            // Eg. :matches, :not\n            proc = Math.min(...token.data.map((d) => Math.min(...d.map(getProcedure))));\n            // If we have traversals, try to avoid executing this selector\n            if (proc < 0) {\n                proc = 0;\n            }\n        }\n        else {\n            proc = 2;\n        }\n    }\n    return proc;\n}\n//# sourceMappingURL=sort.js.map",null,"import { attributeRules } from \"./attributes.js\";\nimport { compilePseudoSelector } from \"./pseudo-selectors/index.js\";\nimport { SelectorType } from \"css-what\";\nfunction getElementParent(node, adapter) {\n    const parent = adapter.getParent(node);\n    if (parent && adapter.isTag(parent)) {\n        return parent;\n    }\n    return null;\n}\n/*\n * All available rules\n */\nexport function compileGeneralSelector(next, selector, options, context, compileToken) {\n    const { adapter, equals } = options;\n    switch (selector.type) {\n        case SelectorType.PseudoElement: {\n            throw new Error(\"Pseudo-elements are not supported by css-select\");\n        }\n        case SelectorType.ColumnCombinator: {\n            throw new Error(\"Column combinators are not yet supported by css-select\");\n        }\n        case SelectorType.Attribute: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced attributes are not yet supported by css-select\");\n            }\n            if (!options.xmlMode || options.lowerCaseAttributeNames) {\n                selector.name = selector.name.toLowerCase();\n            }\n            return attributeRules[selector.action](next, selector, options);\n        }\n        case SelectorType.Pseudo: {\n            return compilePseudoSelector(next, selector, options, context, compileToken);\n        }\n        // Tags\n        case SelectorType.Tag: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced tag names are not yet supported by css-select\");\n            }\n            let { name } = selector;\n            if (!options.xmlMode || options.lowerCaseTags) {\n                name = name.toLowerCase();\n            }\n            return function tag(elem) {\n                return adapter.getName(elem) === name && next(elem);\n            };\n        }\n        // Traversal\n        case SelectorType.Descendant: {\n            if (options.cacheResults === false ||\n                typeof WeakSet === \"undefined\") {\n                return function descendant(elem) {\n                    let current = elem;\n                    while ((current = getElementParent(current, adapter))) {\n                        if (next(current)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n            }\n            // @ts-expect-error `ElementNode` is not extending object\n            const isFalseCache = new WeakSet();\n            return function cachedDescendant(elem) {\n                let current = elem;\n                while ((current = getElementParent(current, adapter))) {\n                    if (!isFalseCache.has(current)) {\n                        if (adapter.isTag(current) && next(current)) {\n                            return true;\n                        }\n                        isFalseCache.add(current);\n                    }\n                }\n                return false;\n            };\n        }\n        case \"_flexibleDescendant\": {\n            // Include element itself, only used while querying an array\n            return function flexibleDescendant(elem) {\n                let current = elem;\n                do {\n                    if (next(current))\n                        return true;\n                } while ((current = getElementParent(current, adapter)));\n                return false;\n            };\n        }\n        case SelectorType.Parent: {\n            return function parent(elem) {\n                return adapter\n                    .getChildren(elem)\n                    .some((elem) => adapter.isTag(elem) && next(elem));\n            };\n        }\n        case SelectorType.Child: {\n            return function child(elem) {\n                const parent = adapter.getParent(elem);\n                return parent != null && adapter.isTag(parent) && next(parent);\n            };\n        }\n        case SelectorType.Sibling: {\n            return function sibling(elem) {\n                const siblings = adapter.getSiblings(elem);\n                for (let i = 0; i < siblings.length; i++) {\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling))\n                        break;\n                    if (adapter.isTag(currentSibling) && next(currentSibling)) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n        }\n        case SelectorType.Adjacent: {\n            if (adapter.prevElementSibling) {\n                return function adjacent(elem) {\n                    const previous = adapter.prevElementSibling(elem);\n                    return previous != null && next(previous);\n                };\n            }\n            return function adjacent(elem) {\n                const siblings = adapter.getSiblings(elem);\n                let lastElement;\n                for (let i = 0; i < siblings.length; i++) {\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling))\n                        break;\n                    if (adapter.isTag(currentSibling)) {\n                        lastElement = currentSibling;\n                    }\n                }\n                return !!lastElement && next(lastElement);\n            };\n        }\n        case SelectorType.Universal: {\n            if (selector.namespace != null && selector.namespace !== \"*\") {\n                throw new Error(\"Namespaced universal selectors are not yet supported by css-select\");\n            }\n            return next;\n        }\n    }\n}\n//# sourceMappingURL=general.js.map",null,"import boolbase from \"boolbase\";\n/**\n * All reserved characters in a regex, used for escaping.\n *\n * Taken from XRegExp, (c) 2007-2020 Steven Levithan under the MIT license\n * https://github.com/slevithan/xregexp/blob/95eeebeb8fac8754d54eafe2b4743661ac1cf028/src/xregexp.js#L794\n */\nconst reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nfunction escapeRegex(value) {\n    return value.replace(reChars, \"\\\\$&\");\n}\n/**\n * Attributes that are case-insensitive in HTML.\n *\n * @private\n * @see https://html.spec.whatwg.org/multipage/semantics-other.html#case-sensitivity-of-selectors\n */\nconst caseInsensitiveAttributes = new Set([\n    \"accept\",\n    \"accept-charset\",\n    \"align\",\n    \"alink\",\n    \"axis\",\n    \"bgcolor\",\n    \"charset\",\n    \"checked\",\n    \"clear\",\n    \"codetype\",\n    \"color\",\n    \"compact\",\n    \"declare\",\n    \"defer\",\n    \"dir\",\n    \"direction\",\n    \"disabled\",\n    \"enctype\",\n    \"face\",\n    \"frame\",\n    \"hreflang\",\n    \"http-equiv\",\n    \"lang\",\n    \"language\",\n    \"link\",\n    \"media\",\n    \"method\",\n    \"multiple\",\n    \"nohref\",\n    \"noresize\",\n    \"noshade\",\n    \"nowrap\",\n    \"readonly\",\n    \"rel\",\n    \"rev\",\n    \"rules\",\n    \"scope\",\n    \"scrolling\",\n    \"selected\",\n    \"shape\",\n    \"target\",\n    \"text\",\n    \"type\",\n    \"valign\",\n    \"valuetype\",\n    \"vlink\",\n]);\nfunction shouldIgnoreCase(selector, options) {\n    return typeof selector.ignoreCase === \"boolean\"\n        ? selector.ignoreCase\n        : selector.ignoreCase === \"quirks\"\n            ? !!options.quirksMode\n            : !options.xmlMode && caseInsensitiveAttributes.has(selector.name);\n}\n/**\n * Attribute selectors\n */\nexport const attributeRules = {\n    equals(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length === value.length &&\n                    attr.toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return (elem) => adapter.getAttributeValue(elem, name) === value && next(elem);\n    },\n    hyphen(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return function hyphenIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    (attr.length === len || attr.charAt(len) === \"-\") &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return function hyphen(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                (attr.length === len || attr.charAt(len) === \"-\") &&\n                attr.substr(0, len) === value &&\n                next(elem));\n        };\n    },\n    element(next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (/\\s/.test(value)) {\n            return boolbase.falseFunc;\n        }\n        const regex = new RegExp(`(?:^|\\\\s)${escapeRegex(value)}(?:$|\\\\s)`, shouldIgnoreCase(data, options) ? \"i\" : \"\");\n        return function element(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                attr.length >= value.length &&\n                regex.test(attr) &&\n                next(elem));\n        };\n    },\n    exists(next, { name }, { adapter }) {\n        return (elem) => adapter.hasAttrib(elem, name) && next(elem);\n    },\n    start(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (len === 0) {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= len &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.startsWith(value)) &&\n                next(elem);\n        };\n    },\n    end(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = -value.length;\n        if (len === 0) {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                var _a;\n                return ((_a = adapter\n                    .getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.substr(len).toLowerCase()) === value && next(elem);\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.endsWith(value)) &&\n                next(elem);\n        };\n    },\n    any(next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (value === \"\") {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            const regex = new RegExp(escapeRegex(value), \"i\");\n            return function anyIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= value.length &&\n                    regex.test(attr) &&\n                    next(elem));\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.includes(value)) &&\n                next(elem);\n        };\n    },\n    not(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (value === \"\") {\n            return (elem) => !!adapter.getAttributeValue(elem, name) && next(elem);\n        }\n        else if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return ((attr == null ||\n                    attr.length !== value.length ||\n                    attr.toLowerCase() !== value) &&\n                    next(elem));\n            };\n        }\n        return (elem) => adapter.getAttributeValue(elem, name) !== value && next(elem);\n    },\n};\n//# sourceMappingURL=attributes.js.map",null,"import { parse } from \"css-what\";\nimport { filters } from \"./filters.js\";\nimport { pseudos, verifyPseudoArgs } from \"./pseudos.js\";\nimport { aliases } from \"./aliases.js\";\nimport { subselects } from \"./subselects.js\";\nexport { filters, pseudos, aliases };\nexport function compilePseudoSelector(next, selector, options, context, compileToken) {\n    var _a;\n    const { name, data } = selector;\n    if (Array.isArray(data)) {\n        if (!(name in subselects)) {\n            throw new Error(`Unknown pseudo-class :${name}(${data})`);\n        }\n        return subselects[name](next, data, options, context, compileToken);\n    }\n    const userPseudo = (_a = options.pseudos) === null || _a === void 0 ? void 0 : _a[name];\n    const stringPseudo = typeof userPseudo === \"string\" ? userPseudo : aliases[name];\n    if (typeof stringPseudo === \"string\") {\n        if (data != null) {\n            throw new Error(`Pseudo ${name} doesn't have any arguments`);\n        }\n        // The alias has to be parsed here, to make sure options are respected.\n        const alias = parse(stringPseudo);\n        return subselects[\"is\"](next, alias, options, context, compileToken);\n    }\n    if (typeof userPseudo === \"function\") {\n        verifyPseudoArgs(userPseudo, name, data, 1);\n        return (elem) => userPseudo(elem, data) && next(elem);\n    }\n    if (name in filters) {\n        return filters[name](next, data, options, context);\n    }\n    if (name in pseudos) {\n        const pseudo = pseudos[name];\n        verifyPseudoArgs(pseudo, name, data, 2);\n        return (elem) => pseudo(elem, options, data) && next(elem);\n    }\n    throw new Error(`Unknown pseudo-class :${name}`);\n}\n//# sourceMappingURL=index.js.map",null,"import getNCheck from \"nth-check\";\nimport boolbase from \"boolbase\";\nfunction getChildFunc(next, adapter) {\n    return (elem) => {\n        const parent = adapter.getParent(elem);\n        return parent != null && adapter.isTag(parent) && next(elem);\n    };\n}\nexport const filters = {\n    contains(next, text, { adapter }) {\n        return function contains(elem) {\n            return next(elem) && adapter.getText(elem).includes(text);\n        };\n    },\n    icontains(next, text, { adapter }) {\n        const itext = text.toLowerCase();\n        return function icontains(elem) {\n            return (next(elem) &&\n                adapter.getText(elem).toLowerCase().includes(itext));\n        };\n    },\n    // Location specific methods\n    \"nth-child\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = 0; i < siblings.length; i++) {\n                if (equals(elem, siblings[i]))\n                    break;\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-child\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthLastChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = siblings.length - 1; i >= 0; i--) {\n                if (equals(elem, siblings[i]))\n                    break;\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-of-type\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = 0; i < siblings.length; i++) {\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling))\n                    break;\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-of-type\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthLastOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = siblings.length - 1; i >= 0; i--) {\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling))\n                    break;\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    // TODO determine the actual root element\n    root(next, _rule, { adapter }) {\n        return (elem) => {\n            const parent = adapter.getParent(elem);\n            return (parent == null || !adapter.isTag(parent)) && next(elem);\n        };\n    },\n    scope(next, rule, options, context) {\n        const { equals } = options;\n        if (!context || context.length === 0) {\n            // Equivalent to :root\n            return filters[\"root\"](next, rule, options);\n        }\n        if (context.length === 1) {\n            // NOTE: can't be unpacked, as :has uses this for side-effects\n            return (elem) => equals(context[0], elem) && next(elem);\n        }\n        return (elem) => context.includes(elem) && next(elem);\n    },\n    hover: dynamicStatePseudo(\"isHovered\"),\n    visited: dynamicStatePseudo(\"isVisited\"),\n    active: dynamicStatePseudo(\"isActive\"),\n};\n/**\n * Dynamic state pseudos. These depend on optional Adapter methods.\n *\n * @param name The name of the adapter method to call.\n * @returns Pseudo for the `filters` object.\n */\nfunction dynamicStatePseudo(name) {\n    return function dynamicPseudo(next, _rule, { adapter }) {\n        const func = adapter[name];\n        if (typeof func !== \"function\") {\n            return boolbase.falseFunc;\n        }\n        return function active(elem) {\n            return func(elem) && next(elem);\n        };\n    };\n}\n//# sourceMappingURL=filters.js.map",null,"import { parse } from \"./parse.js\";\nimport { compile, generate } from \"./compile.js\";\nexport { parse, compile, generate };\n/**\n * Parses and compiles a formula to a highly optimized function.\n * Combination of {@link parse} and {@link compile}.\n *\n * If the formula doesn't match any elements,\n * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n * Otherwise, a function accepting an _index_ is returned, which returns\n * whether or not the passed _index_ matches the formula.\n *\n * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n *\n * @param formula The formula to compile.\n * @example\n * const check = nthCheck(\"2n+3\");\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nexport default function nthCheck(formula) {\n    return compile(parse(formula));\n}\n/**\n * Parses and compiles a formula to a generator that produces a sequence of indices.\n * Combination of {@link parse} and {@link generate}.\n *\n * @param formula The formula to compile.\n * @returns A function that produces a sequence of indices.\n * @example <caption>Always increasing</caption>\n *\n * ```js\n * const gen = nthCheck.sequence('2n+3')\n *\n * gen() // `1`\n * gen() // `3`\n * gen() // `5`\n * gen() // `8`\n * gen() // `11`\n * ```\n *\n * @example <caption>With end value</caption>\n *\n * ```js\n *\n * const gen = nthCheck.sequence('-2n+5');\n *\n * gen() // 0\n * gen() // 2\n * gen() // 4\n * gen() // null\n * ```\n */\nexport function sequence(formula) {\n    return generate(parse(formula));\n}\n//# sourceMappingURL=index.js.map",null,"// Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\n// Whitespace as per https://www.w3.org/TR/selectors-3/#lex is \" \\t\\r\\n\\f\"\nconst whitespace = new Set([9, 10, 12, 13, 32]);\nconst ZERO = \"0\".charCodeAt(0);\nconst NINE = \"9\".charCodeAt(0);\n/**\n * Parses an expression.\n *\n * @throws An `Error` if parsing fails.\n * @returns An array containing the integer step size and the integer offset of the nth rule.\n * @example nthCheck.parse(\"2n+3\"); // returns [2, 3]\n */\nexport function parse(formula) {\n    formula = formula.trim().toLowerCase();\n    if (formula === \"even\") {\n        return [2, 0];\n    }\n    else if (formula === \"odd\") {\n        return [2, 1];\n    }\n    // Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?\n    let idx = 0;\n    let a = 0;\n    let sign = readSign();\n    let number = readNumber();\n    if (idx < formula.length && formula.charAt(idx) === \"n\") {\n        idx++;\n        a = sign * (number !== null && number !== void 0 ? number : 1);\n        skipWhitespace();\n        if (idx < formula.length) {\n            sign = readSign();\n            skipWhitespace();\n            number = readNumber();\n        }\n        else {\n            sign = number = 0;\n        }\n    }\n    // Throw if there is anything else\n    if (number === null || idx < formula.length) {\n        throw new Error(`n-th rule couldn't be parsed ('${formula}')`);\n    }\n    return [a, sign * number];\n    function readSign() {\n        if (formula.charAt(idx) === \"-\") {\n            idx++;\n            return -1;\n        }\n        if (formula.charAt(idx) === \"+\") {\n            idx++;\n        }\n        return 1;\n    }\n    function readNumber() {\n        const start = idx;\n        let value = 0;\n        while (idx < formula.length &&\n            formula.charCodeAt(idx) >= ZERO &&\n            formula.charCodeAt(idx) <= NINE) {\n            value = value * 10 + (formula.charCodeAt(idx) - ZERO);\n            idx++;\n        }\n        // Return `null` if we didn't read anything.\n        return idx === start ? null : value;\n    }\n    function skipWhitespace() {\n        while (idx < formula.length &&\n            whitespace.has(formula.charCodeAt(idx))) {\n            idx++;\n        }\n    }\n}\n//# sourceMappingURL=parse.js.map",null,"import boolbase from \"boolbase\";\n/**\n * Returns a function that checks if an elements index matches the given rule\n * highly optimized to return the fastest solution.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A highly optimized function that returns whether an index matches the nth-check.\n * @example\n *\n * ```js\n * const check = nthCheck.compile([2, 3]);\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n * ```\n */\nexport function compile(parsed) {\n    const a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    const b = parsed[1] - 1;\n    /*\n     * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.\n     * Besides, the specification states that no elements are\n     * matched when `a` and `b` are 0.\n     *\n     * `b < 0` here as we subtracted 1 from `b` above.\n     */\n    if (b < 0 && a <= 0)\n        return boolbase.falseFunc;\n    // When `a` is in the range -1..1, it matches any element (so only `b` is checked).\n    if (a === -1)\n        return (index) => index <= b;\n    if (a === 0)\n        return (index) => index === b;\n    // When `b <= 0` and `a === 1`, they match any element.\n    if (a === 1)\n        return b < 0 ? boolbase.trueFunc : (index) => index >= b;\n    /*\n     * Otherwise, modulo can be used to check if there is a match.\n     *\n     * Modulo doesn't care about the sign, so let's use `a`s absolute value.\n     */\n    const absA = Math.abs(a);\n    // Get `b mod a`, + a if this is negative.\n    const bMod = ((b % absA) + absA) % absA;\n    return a > 1\n        ? (index) => index >= b && index % absA === bMod\n        : (index) => index <= b && index % absA === bMod;\n}\n/**\n * Returns a function that produces a monotonously increasing sequence of indices.\n *\n * If the sequence has an end, the returned function will return `null` after\n * the last index in the sequence.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A function that produces a sequence of indices.\n * @example <caption>Always increasing (2n+3)</caption>\n *\n * ```js\n * const gen = nthCheck.generate([2, 3])\n *\n * gen() // `1`\n * gen() // `3`\n * gen() // `5`\n * gen() // `8`\n * gen() // `11`\n * ```\n *\n * @example <caption>With end value (-2n+10)</caption>\n *\n * ```js\n *\n * const gen = nthCheck.generate([-2, 5]);\n *\n * gen() // 0\n * gen() // 2\n * gen() // 4\n * gen() // null\n * ```\n */\nexport function generate(parsed) {\n    const a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    let b = parsed[1] - 1;\n    let n = 0;\n    // Make sure to always return an increasing sequence\n    if (a < 0) {\n        const aPos = -a;\n        // Get `b mod a`\n        const minValue = ((b % aPos) + aPos) % aPos;\n        return () => {\n            const val = minValue + aPos * n++;\n            return val > b ? null : val;\n        };\n    }\n    if (a === 0)\n        return b < 0\n            ? // There are no result — always return `null`\n                () => null\n            : // Return `b` exactly once\n                () => (n++ === 0 ? b : null);\n    if (b < 0) {\n        b += a * Math.ceil(-b / a);\n    }\n    return () => a * n++ + b;\n}\n//# sourceMappingURL=compile.js.map",null,"// While filters are precompiled, pseudos get called when they are needed\nexport const pseudos = {\n    empty(elem, { adapter }) {\n        return !adapter.getChildren(elem).some((elem) => \n        // FIXME: `getText` call is potentially expensive.\n        adapter.isTag(elem) || adapter.getText(elem) !== \"\");\n    },\n    \"first-child\"(elem, { adapter, equals }) {\n        if (adapter.prevElementSibling) {\n            return adapter.prevElementSibling(elem) == null;\n        }\n        const firstChild = adapter\n            .getSiblings(elem)\n            .find((elem) => adapter.isTag(elem));\n        return firstChild != null && equals(elem, firstChild);\n    },\n    \"last-child\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        for (let i = siblings.length - 1; i >= 0; i--) {\n            if (equals(elem, siblings[i]))\n                return true;\n            if (adapter.isTag(siblings[i]))\n                break;\n        }\n        return false;\n    },\n    \"first-of-type\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for (let i = 0; i < siblings.length; i++) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling))\n                return true;\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"last-of-type\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for (let i = siblings.length - 1; i >= 0; i--) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling))\n                return true;\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"only-of-type\"(elem, { adapter, equals }) {\n        const elemName = adapter.getName(elem);\n        return adapter\n            .getSiblings(elem)\n            .every((sibling) => equals(elem, sibling) ||\n            !adapter.isTag(sibling) ||\n            adapter.getName(sibling) !== elemName);\n    },\n    \"only-child\"(elem, { adapter, equals }) {\n        return adapter\n            .getSiblings(elem)\n            .every((sibling) => equals(elem, sibling) || !adapter.isTag(sibling));\n    },\n};\nexport function verifyPseudoArgs(func, name, subselect, argIndex) {\n    if (subselect === null) {\n        if (func.length > argIndex) {\n            throw new Error(`Pseudo-class :${name} requires an argument`);\n        }\n    }\n    else if (func.length === argIndex) {\n        throw new Error(`Pseudo-class :${name} doesn't have any arguments`);\n    }\n}\n//# sourceMappingURL=pseudos.js.map",null,"/**\n * Aliases are pseudos that are expressed as selectors.\n */\nexport const aliases = {\n    // Links\n    \"any-link\": \":is(a, area, link)[href]\",\n    link: \":any-link:not(:visited)\",\n    // Forms\n    // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n    disabled: `:is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )`,\n    enabled: \":not(:disabled)\",\n    checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",\n    required: \":is(input, select, textarea)[required]\",\n    optional: \":is(input, select, textarea):not([required])\",\n    // JQuery extensions\n    // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n    selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n    checkbox: \"[type=checkbox]\",\n    file: \"[type=file]\",\n    password: \"[type=password]\",\n    radio: \"[type=radio]\",\n    reset: \"[type=reset]\",\n    image: \"[type=image]\",\n    submit: \"[type=submit]\",\n    parent: \":not(:empty)\",\n    header: \":is(h1, h2, h3, h4, h5, h6)\",\n    button: \":is(button, input[type=button])\",\n    input: \":is(input, textarea, select, button)\",\n    text: \"input:is(:not([type!='']), [type=text])\",\n};\n//# sourceMappingURL=aliases.js.map",null,"import boolbase from \"boolbase\";\nimport { isTraversal } from \"../sort.js\";\n/** Used as a placeholder for :has. Will be replaced with the actual element. */\nexport const PLACEHOLDER_ELEMENT = {};\nexport function ensureIsTag(next, adapter) {\n    if (next === boolbase.falseFunc)\n        return boolbase.falseFunc;\n    return (elem) => adapter.isTag(elem) && next(elem);\n}\nexport function getNextSiblings(elem, adapter) {\n    const siblings = adapter.getSiblings(elem);\n    if (siblings.length <= 1)\n        return [];\n    const elemIndex = siblings.indexOf(elem);\n    if (elemIndex < 0 || elemIndex === siblings.length - 1)\n        return [];\n    return siblings.slice(elemIndex + 1).filter(adapter.isTag);\n}\nfunction copyOptions(options) {\n    // Not copied: context, rootFunc\n    return {\n        xmlMode: !!options.xmlMode,\n        lowerCaseAttributeNames: !!options.lowerCaseAttributeNames,\n        lowerCaseTags: !!options.lowerCaseTags,\n        quirksMode: !!options.quirksMode,\n        cacheResults: !!options.cacheResults,\n        pseudos: options.pseudos,\n        adapter: options.adapter,\n        equals: options.equals,\n    };\n}\nconst is = (next, token, options, context, compileToken) => {\n    const func = compileToken(token, copyOptions(options), context);\n    return func === boolbase.trueFunc\n        ? next\n        : func === boolbase.falseFunc\n            ? boolbase.falseFunc\n            : (elem) => func(elem) && next(elem);\n};\n/*\n * :not, :has, :is, :matches and :where have to compile selectors\n * doing this in src/pseudos.ts would lead to circular dependencies,\n * so we add them here\n */\nexport const subselects = {\n    is,\n    /**\n     * `:matches` and `:where` are aliases for `:is`.\n     */\n    matches: is,\n    where: is,\n    not(next, token, options, context, compileToken) {\n        const func = compileToken(token, copyOptions(options), context);\n        return func === boolbase.falseFunc\n            ? next\n            : func === boolbase.trueFunc\n                ? boolbase.falseFunc\n                : (elem) => !func(elem) && next(elem);\n    },\n    has(next, subselect, options, _context, compileToken) {\n        const { adapter } = options;\n        const opts = copyOptions(options);\n        opts.relativeSelector = true;\n        const context = subselect.some((s) => s.some(isTraversal))\n            ? // Used as a placeholder. Will be replaced with the actual element.\n                [PLACEHOLDER_ELEMENT]\n            : undefined;\n        const compiled = compileToken(subselect, opts, context);\n        if (compiled === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        const hasElement = ensureIsTag(compiled, adapter);\n        // If `compiled` is `trueFunc`, we can skip this.\n        if (context && compiled !== boolbase.trueFunc) {\n            /*\n             * `shouldTestNextSiblings` will only be true if the query starts with\n             * a traversal (sibling or adjacent). That means we will always have a context.\n             */\n            const { shouldTestNextSiblings = false } = compiled;\n            return (elem) => {\n                if (!next(elem))\n                    return false;\n                context[0] = elem;\n                const childs = adapter.getChildren(elem);\n                const nextElements = shouldTestNextSiblings\n                    ? [...childs, ...getNextSiblings(elem, adapter)]\n                    : childs;\n                return adapter.existsOne(hasElement, nextElements);\n            };\n        }\n        return (elem) => next(elem) &&\n            adapter.existsOne(hasElement, adapter.getChildren(elem));\n    },\n};\n//# sourceMappingURL=subselects.js.map",null,"import { isFilter } from \"./positionals.js\";\nexport function getDocumentRoot(node) {\n    while (node.parent)\n        node = node.parent;\n    return node;\n}\nexport function groupSelectors(selectors) {\n    const filteredSelectors = [];\n    const plainSelectors = [];\n    for (const selector of selectors) {\n        if (selector.some(isFilter)) {\n            filteredSelectors.push(selector);\n        }\n        else {\n            plainSelectors.push(selector);\n        }\n    }\n    return [plainSelectors, filteredSelectors];\n}\n//# sourceMappingURL=helpers.js.map",null,"export const filterNames = new Set([\n    \"first\",\n    \"last\",\n    \"eq\",\n    \"gt\",\n    \"nth\",\n    \"lt\",\n    \"even\",\n    \"odd\",\n]);\nexport function isFilter(s) {\n    if (s.type !== \"pseudo\")\n        return false;\n    if (filterNames.has(s.name))\n        return true;\n    if (s.name === \"not\" && Array.isArray(s.data)) {\n        // Only consider `:not` with embedded filters\n        return s.data.some((s) => s.some(isFilter));\n    }\n    return false;\n}\nexport function getLimit(filter, data, partLimit) {\n    const num = data != null ? parseInt(data, 10) : NaN;\n    switch (filter) {\n        case \"first\":\n            return 1;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) ? (num >= 0 ? num + 1 : Infinity) : 0;\n        case \"lt\":\n            return isFinite(num)\n                ? num >= 0\n                    ? Math.min(num, partLimit)\n                    : Infinity\n                : 0;\n        case \"gt\":\n            return isFinite(num) ? Infinity : 0;\n        case \"odd\":\n            return 2 * partLimit;\n        case \"even\":\n            return 2 * partLimit - 1;\n        case \"last\":\n        case \"not\":\n            return Infinity;\n    }\n}\n//# sourceMappingURL=positionals.js.map",null,"/**\n * Methods for modifying the DOM structure.\n *\n * @module cheerio/manipulation\n */\nimport { Text, hasChildren } from 'domhandler';\nimport { update as updateDOM } from '../parse.js';\nimport { text as staticText } from '../static.js';\nimport { domEach, cloneDom, isTag, isHtml, isCheerio } from '../utils.js';\nimport { removeElement } from 'domutils';\n/**\n * Create an array of nodes, recursing into arrays and parsing strings if necessary.\n *\n * @private\n * @category Manipulation\n * @param elem - Elements to make an array of.\n * @param clone - Optionally clone nodes.\n * @returns The array of nodes.\n */\nexport function _makeDomArray(elem, clone) {\n    if (elem == null) {\n        return [];\n    }\n    if (isCheerio(elem)) {\n        return clone ? cloneDom(elem.get()) : elem.get();\n    }\n    if (Array.isArray(elem)) {\n        return elem.reduce((newElems, el) => newElems.concat(this._makeDomArray(el, clone)), []);\n    }\n    if (typeof elem === 'string') {\n        return this._parse(elem, this.options, false, null).children;\n    }\n    return clone ? cloneDom([elem]) : [elem];\n}\nfunction _insert(concatenator) {\n    return function (...elems) {\n        const lastIdx = this.length - 1;\n        return domEach(this, (el, i) => {\n            if (!hasChildren(el))\n                return;\n            const domSrc = typeof elems[0] === 'function'\n                ? elems[0].call(el, i, this._render(el.children))\n                : elems;\n            const dom = this._makeDomArray(domSrc, i < lastIdx);\n            concatenator(dom, el.children, el);\n        });\n    };\n}\n/**\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @private\n * @category Manipulation\n * @param array - Target array to splice.\n * @param spliceIdx - Index at which to begin changing the array.\n * @param spliceCount - Number of elements to remove from the array.\n * @param newElems - Elements to insert into the array.\n * @param parent - The parent of the node.\n * @returns The spliced array.\n */\nfunction uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {\n    var _a, _b;\n    const spliceArgs = [\n        spliceIdx,\n        spliceCount,\n        ...newElems,\n    ];\n    const prev = spliceIdx === 0 ? null : array[spliceIdx - 1];\n    const next = spliceIdx + spliceCount >= array.length\n        ? null\n        : array[spliceIdx + spliceCount];\n    /*\n     * Before splicing in new elements, ensure they do not already appear in the\n     * current array.\n     */\n    for (let idx = 0; idx < newElems.length; ++idx) {\n        const node = newElems[idx];\n        const oldParent = node.parent;\n        if (oldParent) {\n            const oldSiblings = oldParent.children;\n            const prevIdx = oldSiblings.indexOf(node);\n            if (prevIdx > -1) {\n                oldParent.children.splice(prevIdx, 1);\n                if (parent === oldParent && spliceIdx > prevIdx) {\n                    spliceArgs[0]--;\n                }\n            }\n        }\n        node.parent = parent;\n        if (node.prev) {\n            node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;\n        }\n        if (node.next) {\n            node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;\n        }\n        node.prev = idx === 0 ? prev : newElems[idx - 1];\n        node.next = idx === newElems.length - 1 ? next : newElems[idx + 1];\n    }\n    if (prev) {\n        prev.next = newElems[0];\n    }\n    if (next) {\n        next.prev = newElems[newElems.length - 1];\n    }\n    return array.splice(...spliceArgs);\n}\n/**\n * Insert every element in the set of matched elements to the end of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').appendTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to append elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/appendTo/}\n */\nexport function appendTo(target) {\n    const appendTarget = isCheerio(target) ? target : this._make(target);\n    appendTarget.append(this);\n    return this;\n}\n/**\n * Insert every element in the set of matched elements to the beginning of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').prependTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to prepend elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/prependTo/}\n */\nexport function prependTo(target) {\n    const prependTarget = isCheerio(target) ? target : this._make(target);\n    prependTarget.prepend(this);\n    return this;\n}\n/**\n * Inserts content as the _last_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').append('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/append/}\n */\nexport const append = _insert((dom, children, parent) => {\n    uniqueSplice(children, children.length, 0, dom, parent);\n});\n/**\n * Inserts content as the _first_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').prepend('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/prepend/}\n */\nexport const prepend = _insert((dom, children, parent) => {\n    uniqueSplice(children, 0, 0, dom, parent);\n});\nfunction _wrap(insert) {\n    return function (wrapper) {\n        const lastIdx = this.length - 1;\n        const lastParent = this.parents().last();\n        for (let i = 0; i < this.length; i++) {\n            const el = this[i];\n            const wrap = typeof wrapper === 'function'\n                ? wrapper.call(el, i, el)\n                : typeof wrapper === 'string' && !isHtml(wrapper)\n                    ? lastParent.find(wrapper).clone()\n                    : wrapper;\n            const [wrapperDom] = this._makeDomArray(wrap, i < lastIdx);\n            if (!wrapperDom || !hasChildren(wrapperDom))\n                continue;\n            let elInsertLocation = wrapperDom;\n            /*\n             * Find the deepest child. Only consider the first tag child of each node\n             * (ignore text); stop if no children are found.\n             */\n            let j = 0;\n            while (j < elInsertLocation.children.length) {\n                const child = elInsertLocation.children[j];\n                if (isTag(child)) {\n                    elInsertLocation = child;\n                    j = 0;\n                }\n                else {\n                    j++;\n                }\n            }\n            insert(el, elInsertLocation, [wrapperDom]);\n        }\n        return this;\n    };\n}\n/**\n * The .wrap() function can take any string or object that could be passed to\n * the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. A\n * copy of this structure will be wrapped around each of the elements in the set\n * of matched elements. This method returns the original set of elements for\n * chaining purposes.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrap(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"red-fruit\">\n * //      <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrap(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"healthy\">\n * //       <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //       <li class=\"orange\">Orange</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //        <li class=\"plum\">Plum</li>\n * //     </div>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around each element in the selection.\n * @see {@link https://api.jquery.com/wrap/}\n */\nexport const wrap = _wrap((el, elInsertLocation, wrapperDom) => {\n    const { parent } = el;\n    if (!parent)\n        return;\n    const siblings = parent.children;\n    const index = siblings.indexOf(el);\n    updateDOM([el], elInsertLocation);\n    /*\n     * The previous operation removed the current element from the `siblings`\n     * array, so the `dom` array can be inserted without removing any\n     * additional elements.\n     */\n    uniqueSplice(siblings, index, 0, wrapperDom, parent);\n});\n/**\n * The .wrapInner() function can take any string or object that could be passed\n * to the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around the content of each of the elements in the\n * set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrapInner(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"red-fruit\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"pear\">Pear</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrapInner(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"healthy\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">\n * //       <div class=\"healthy\">Orange</div>\n * //     </li>\n * //     <li class=\"pear\">\n * //       <div class=\"healthy\">Pear</div>\n * //     </li>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around the content of each element\n *   in the selection.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/wrapInner/}\n */\nexport const wrapInner = _wrap((el, elInsertLocation, wrapperDom) => {\n    if (!hasChildren(el))\n        return;\n    updateDOM(el.children, elInsertLocation);\n    updateDOM(wrapperDom, el);\n});\n/**\n * The .unwrap() function, removes the parents of the set of matched elements\n * from the DOM, leaving the matched elements in their place.\n *\n * @category Manipulation\n * @example <caption>without selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <div><p>Hello</p></div>\\n  <div><p>World</p></div>\\n</div>'\n * );\n * $('#test p').unwrap();\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @example <caption>with selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <p>Hello</p>\\n  <b><p>World</p></b>\\n</div>'\n * );\n * $('#test p').unwrap('b');\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @param selector - A selector to check the parent element against. If an\n *   element's parent does not match the selector, the element won't be unwrapped.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/unwrap/}\n */\nexport function unwrap(selector) {\n    this.parent(selector)\n        .not('body')\n        .each((_, el) => {\n        this._make(el).replaceWith(el.children);\n    });\n    return this;\n}\n/**\n * The .wrapAll() function can take any string or object that could be passed to\n * the $() function to specify a DOM structure. This structure may be nested\n * several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around all of the elements in the set of matched\n * elements, as a single group.\n *\n * @category Manipulation\n * @example <caption>With markup passed to `wrapAll`</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div class=\"container\"><div class=\"inner\">First</div><div class=\"inner\">Second</div></div>'\n * );\n * $('.inner').wrapAll(\"<div class='new'></div>\");\n *\n * //=> <div class=\"container\">\n * //     <div class='new'>\n * //       <div class=\"inner\">First</div>\n * //       <div class=\"inner\">Second</div>\n * //     </div>\n * //   </div>\n * ```\n *\n * @example <caption>With an existing cheerio instance</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>'\n * );\n * const wrap = $('<div><p><em><b></b></em></p></div>');\n * $('span').wrapAll(wrap);\n *\n * //=> <div>\n * //     <p>\n * //       <em>\n * //         <b>\n * //           <span>Span 1</span>\n * //           <span>Span 2</span>\n * //         </b>\n * //       </em>\n * //     </p>\n * //   </div>\n * //   <strong>Strong</strong>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around all matched elements in the\n *   selection.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/wrapAll/}\n */\nexport function wrapAll(wrapper) {\n    const el = this[0];\n    if (el) {\n        const wrap = this._make(typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper).insertBefore(el);\n        // If html is given as wrapper, wrap may contain text elements\n        let elInsertLocation;\n        for (let i = 0; i < wrap.length; i++) {\n            if (wrap[i].type === 'tag')\n                elInsertLocation = wrap[i];\n        }\n        let j = 0;\n        /*\n         * Find the deepest child. Only consider the first tag child of each node\n         * (ignore text); stop if no children are found.\n         */\n        while (elInsertLocation && j < elInsertLocation.children.length) {\n            const child = elInsertLocation.children[j];\n            if (child.type === 'tag') {\n                elInsertLocation = child;\n                j = 0;\n            }\n            else {\n                j++;\n            }\n        }\n        if (elInsertLocation)\n            this._make(elInsertLocation).append(this);\n    }\n    return this;\n}\n/* eslint-disable jsdoc/check-param-names*/\n/**\n * Insert content next to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').after('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert after each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/after/}\n */\nexport function after(...elems) {\n    const lastIdx = this.length - 1;\n    return domEach(this, (el, i) => {\n        const { parent } = el;\n        if (!hasChildren(el) || !parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        const domSrc = typeof elems[0] === 'function'\n            ? elems[0].call(el, i, this._render(el.children))\n            : elems;\n        const dom = this._makeDomArray(domSrc, i < lastIdx);\n        // Add element after `this` element\n        uniqueSplice(siblings, index + 1, 0, dom, parent);\n    });\n}\n/* eslint-enable jsdoc/check-param-names*/\n/**\n * Insert every element in the set of matched elements after the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertAfter('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements after.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertAfter/}\n */\nexport function insertAfter(target) {\n    if (typeof target === 'string') {\n        target = this._make(target);\n    }\n    this.remove();\n    const clones = [];\n    this._makeDomArray(target).forEach((el) => {\n        const clonedSelf = this.clone().toArray();\n        const { parent } = el;\n        if (!parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        // Add cloned `this` element(s) after target element\n        uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n        clones.push(...clonedSelf);\n    });\n    return this._make(clones);\n}\n/* eslint-disable jsdoc/check-param-names*/\n/**\n * Insert content previous to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').before('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert before each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/before/}\n */\nexport function before(...elems) {\n    const lastIdx = this.length - 1;\n    return domEach(this, (el, i) => {\n        const { parent } = el;\n        if (!hasChildren(el) || !parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        const domSrc = typeof elems[0] === 'function'\n            ? elems[0].call(el, i, this._render(el.children))\n            : elems;\n        const dom = this._makeDomArray(domSrc, i < lastIdx);\n        // Add element before `el` element\n        uniqueSplice(siblings, index, 0, dom, parent);\n    });\n}\n/* eslint-enable jsdoc/check-param-names*/\n/**\n * Insert every element in the set of matched elements before the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertBefore('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements before.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertBefore/}\n */\nexport function insertBefore(target) {\n    const targetArr = this._make(target);\n    this.remove();\n    const clones = [];\n    domEach(targetArr, (el) => {\n        const clonedSelf = this.clone().toArray();\n        const { parent } = el;\n        if (!parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        // Add cloned `this` element(s) after target element\n        uniqueSplice(siblings, index, 0, clonedSelf, parent);\n        clones.push(...clonedSelf);\n    });\n    return this._make(clones);\n}\n/**\n * Removes the set of matched elements from the DOM and all their children.\n * `selector` filters the set of matched elements to be removed.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.pear').remove();\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //    </ul>\n * ```\n *\n * @param selector - Optional selector for elements to remove.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/remove/}\n */\nexport function remove(selector) {\n    // Filter if we have selector\n    const elems = selector ? this.filter(selector) : this;\n    domEach(elems, (el) => {\n        removeElement(el);\n        el.prev = el.next = el.parent = null;\n    });\n    return this;\n}\n/**\n * Replaces matched elements with `content`.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const plum = $('<li class=\"plum\">Plum</li>');\n * $('.pear').replaceWith(plum);\n * $.html();\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">Apple</li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n * ```\n *\n * @param content - Replacement for matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/replaceWith/}\n */\nexport function replaceWith(content) {\n    return domEach(this, (el, i) => {\n        const { parent } = el;\n        if (!parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const cont = typeof content === 'function' ? content.call(el, i, el) : content;\n        const dom = this._makeDomArray(cont);\n        /*\n         * In the case that `dom` contains nodes that already exist in other\n         * structures, ensure those nodes are properly removed.\n         */\n        updateDOM(dom, null);\n        const index = siblings.indexOf(el);\n        // Completely remove old element\n        uniqueSplice(siblings, index, 1, dom, parent);\n        if (!dom.includes(el)) {\n            el.parent = el.prev = el.next = null;\n        }\n    });\n}\n/**\n * Empties an element, removing all its children.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').empty();\n * $.html();\n * //=>  <ul id=\"fruits\"></ul>\n * ```\n *\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/empty/}\n */\nexport function empty() {\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        el.children.forEach((child) => {\n            child.next = child.prev = child.parent = null;\n        });\n        el.children.length = 0;\n    });\n}\nexport function html(str) {\n    if (str === undefined) {\n        const el = this[0];\n        if (!el || !hasChildren(el))\n            return null;\n        return this._render(el.children);\n    }\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        el.children.forEach((child) => {\n            child.next = child.prev = child.parent = null;\n        });\n        const content = isCheerio(str)\n            ? str.toArray()\n            : this._parse(`${str}`, this.options, false, el).children;\n        updateDOM(content, el);\n    });\n}\n/**\n * Turns the collection to a string. Alias for `.html()`.\n *\n * @category Manipulation\n * @returns The rendered document.\n */\nexport function toString() {\n    return this._render(this);\n}\nexport function text(str) {\n    // If `str` is undefined, act as a \"getter\"\n    if (str === undefined) {\n        return staticText(this);\n    }\n    if (typeof str === 'function') {\n        // Function support\n        return domEach(this, (el, i) => this._make(el).text(str.call(el, i, staticText([el]))));\n    }\n    // Append text node to each selected elements\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        el.children.forEach((child) => {\n            child.next = child.prev = child.parent = null;\n        });\n        const textNode = new Text(`${str}`);\n        updateDOM(textNode, el);\n    });\n}\n/**\n * Clone the cheerio object.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const moreFruit = $('#fruits').clone();\n * ```\n *\n * @returns The cloned object.\n * @see {@link https://api.jquery.com/clone/}\n */\nexport function clone() {\n    return this._make(cloneDom(this.get()));\n}\n//# sourceMappingURL=manipulation.js.map",null,"import { removeElement } from 'domutils';\nimport { Document, isDocument as checkIsDocument, } from 'domhandler';\n/**\n * Get the parse function with options.\n *\n * @param parser - The parser function.\n * @returns The parse function with options.\n */\nexport function getParse(parser) {\n    /**\n     * Parse a HTML string or a node.\n     *\n     * @param content - The HTML string or node.\n     * @param options - The parser options.\n     * @param isDocument - If `content` is a document.\n     * @param context - The context node in the DOM tree.\n     * @returns The parsed document node.\n     */\n    return function parse(content, options, isDocument, context) {\n        if (typeof Buffer !== 'undefined' && Buffer.isBuffer(content)) {\n            content = content.toString();\n        }\n        if (typeof content === 'string') {\n            return parser(content, options, isDocument, context);\n        }\n        const doc = content;\n        if (!Array.isArray(doc) && checkIsDocument(doc)) {\n            // If `doc` is already a root, just return it\n            return doc;\n        }\n        // Add conent to new root element\n        const root = new Document([]);\n        // Update the DOM using the root\n        update(doc, root);\n        return root;\n    };\n}\n/**\n * Update the dom structure, for one changed layer.\n *\n * @param newChilds - The new children.\n * @param parent - The new parent.\n * @returns The parent node.\n */\nexport function update(newChilds, parent) {\n    // Normalize\n    const arr = Array.isArray(newChilds) ? newChilds : [newChilds];\n    // Update parent\n    if (parent) {\n        parent.children = arr;\n    }\n    else {\n        parent = null;\n    }\n    // Update neighbors\n    for (let i = 0; i < arr.length; i++) {\n        const node = arr[i];\n        // Cleanly remove existing nodes from their previous structures.\n        if (node.parent && node.parent.children !== arr) {\n            removeElement(node);\n        }\n        if (parent) {\n            node.prev = arr[i - 1] || null;\n            node.next = arr[i + 1] || null;\n        }\n        else {\n            node.prev = node.next = null;\n        }\n        node.parent = parent;\n    }\n    return parent;\n}\n//# sourceMappingURL=parse.js.map",null,"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","import { domEach, isTag } from '../utils.js';\n/**\n * Set multiple CSS properties for every matched element.\n *\n * @category CSS\n * @param prop - The names of the properties.\n * @param val - The new values.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/css/}\n */\nexport function css(prop, val) {\n    if ((prop != null && val != null) ||\n        // When `prop` is a \"plain\" object\n        (typeof prop === 'object' && !Array.isArray(prop))) {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                // `prop` can't be an array here anymore.\n                setCss(el, prop, val, i);\n            }\n        });\n    }\n    if (this.length === 0) {\n        return undefined;\n    }\n    return getCss(this[0], prop);\n}\n/**\n * Set styles of all elements.\n *\n * @private\n * @param el - Element to set style of.\n * @param prop - Name of property.\n * @param value - Value to set property to.\n * @param idx - Optional index within the selection.\n */\nfunction setCss(el, prop, value, idx) {\n    if (typeof prop === 'string') {\n        const styles = getCss(el);\n        const val = typeof value === 'function' ? value.call(el, idx, styles[prop]) : value;\n        if (val === '') {\n            delete styles[prop];\n        }\n        else if (val != null) {\n            styles[prop] = val;\n        }\n        el.attribs['style'] = stringify(styles);\n    }\n    else if (typeof prop === 'object') {\n        Object.keys(prop).forEach((k, i) => {\n            setCss(el, k, prop[k], i);\n        });\n    }\n}\nfunction getCss(el, prop) {\n    if (!el || !isTag(el))\n        return;\n    const styles = parse(el.attribs['style']);\n    if (typeof prop === 'string') {\n        return styles[prop];\n    }\n    if (Array.isArray(prop)) {\n        const newStyles = {};\n        prop.forEach((item) => {\n            if (styles[item] != null) {\n                newStyles[item] = styles[item];\n            }\n        });\n        return newStyles;\n    }\n    return styles;\n}\n/**\n * Stringify `obj` to styles.\n *\n * @private\n * @category CSS\n * @param obj - Object to stringify.\n * @returns The serialized styles.\n */\nfunction stringify(obj) {\n    return Object.keys(obj).reduce((str, prop) => `${str}${str ? ' ' : ''}${prop}: ${obj[prop]};`, '');\n}\n/**\n * Parse `styles`.\n *\n * @private\n * @category CSS\n * @param styles - Styles to be parsed.\n * @returns The parsed styles.\n */\nfunction parse(styles) {\n    styles = (styles || '').trim();\n    if (!styles)\n        return {};\n    const obj = {};\n    let key;\n    for (const str of styles.split(';')) {\n        const n = str.indexOf(':');\n        // If there is no :, or if it is the first/last character, add to the previous item's value\n        if (n < 1 || n === str.length - 1) {\n            const trimmed = str.trimEnd();\n            if (trimmed.length > 0 && key !== undefined) {\n                obj[key] += `;${trimmed}`;\n            }\n        }\n        else {\n            key = str.slice(0, n).trim();\n            obj[key] = str.slice(n + 1).trim();\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=css.js.map",null,"import { isTag } from '../utils.js';\n/*\n * https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n * https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\n */\nconst submittableSelector = 'input,select,textarea,keygen';\nconst r20 = /%20/g;\nconst rCRLF = /\\r?\\n/g;\n/**\n * Encode a set of form elements as a string for submission.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serialize();\n * //=> 'foo=bar'\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serialize/}\n */\nexport function serialize() {\n    // Convert form elements into name/value objects\n    const arr = this.serializeArray();\n    // Serialize each element into a key/value string\n    const retArr = arr.map((data) => `${encodeURIComponent(data.name)}=${encodeURIComponent(data.value)}`);\n    // Return the resulting serialization\n    return retArr.join('&').replace(r20, '+');\n}\n/**\n * Encode a set of form elements as an array of names and values.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serializeArray();\n * //=> [ { name: 'foo', value: 'bar' } ]\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serializeArray/}\n */\nexport function serializeArray() {\n    // Resolve all form elements from either forms or collections of form elements\n    return this.map((_, elem) => {\n        const $elem = this._make(elem);\n        if (isTag(elem) && elem.name === 'form') {\n            return $elem.find(submittableSelector).toArray();\n        }\n        return $elem.filter(submittableSelector).toArray();\n    })\n        .filter(\n    // Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)\n    '[name!=\"\"]:enabled' +\n        // And cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n        ':not(:submit, :button, :image, :reset, :file)' +\n        // And are either checked/don't have a checkable state\n        ':matches([checked], :not(:checkbox, :radio))'\n    // Convert each of the elements to its value(s)\n    )\n        .map((_, elem) => {\n        var _a;\n        const $elem = this._make(elem);\n        const name = $elem.attr('name'); // We have filtered for elements with a name before.\n        // If there is no value set (e.g. `undefined`, `null`), then default value to empty\n        const value = (_a = $elem.val()) !== null && _a !== void 0 ? _a : '';\n        // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n        if (Array.isArray(value)) {\n            return value.map((val) => \n            /*\n             * We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n             * These can occur inside of `<textarea>'s`\n             */\n            ({ name, value: val.replace(rCRLF, '\\r\\n') }));\n        }\n        // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n        return { name, value: value.replace(rCRLF, '\\r\\n') };\n    })\n        .toArray();\n}\n//# sourceMappingURL=forms.js.map",null,"import { isDocument } from 'domhandler';\nimport { parse as parseDocument, parseFragment, serializeOuter } from 'parse5';\nimport { adapter as htmlparser2Adapter } from 'parse5-htmlparser2-tree-adapter';\n/**\n * Parse the content with `parse5` in the context of the given `ParentNode`.\n *\n * @param content - The content to parse.\n * @param options - A set of options to use to parse.\n * @param isDocument - Whether to parse the content as a full HTML document.\n * @param context - The context in which to parse the content.\n * @returns The parsed content.\n */\nexport function parseWithParse5(content, options, isDocument, context) {\n    const opts = {\n        scriptingEnabled: typeof options.scriptingEnabled === 'boolean'\n            ? options.scriptingEnabled\n            : true,\n        treeAdapter: htmlparser2Adapter,\n        sourceCodeLocationInfo: options.sourceCodeLocationInfo,\n    };\n    return isDocument\n        ? parseDocument(content, opts)\n        : parseFragment(context, content, opts);\n}\nconst renderOpts = { treeAdapter: htmlparser2Adapter };\n/**\n * Renders the given DOM tree with `parse5` and returns the result as a string.\n *\n * @param dom - The DOM tree to render.\n * @returns The rendered document.\n */\nexport function renderWithParse5(dom) {\n    /*\n     * `dom-serializer` passes over the special \"root\" node and renders the\n     * node's children in its place. To mimic this behavior with `parse5`, an\n     * equivalent operation must be applied to the input array.\n     */\n    const nodes = 'length' in dom ? dom : [dom];\n    for (let index = 0; index < nodes.length; index += 1) {\n        const node = nodes[index];\n        if (isDocument(node)) {\n            Array.prototype.splice.call(nodes, index, 1, ...node.children);\n        }\n    }\n    let result = '';\n    for (let index = 0; index < nodes.length; index += 1) {\n        const node = nodes[index];\n        result += serializeOuter(node, renderOpts);\n    }\n    return result;\n}\n//# sourceMappingURL=parse5-adapter.js.map",null,"import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\n/** @internal */\nexport * as html from './common/html.js';\n/** @internal */\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n//# sourceMappingURL=index.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeXML = exports.decodeHTMLStrict = exports.decodeHTMLAttribute = exports.decodeHTML = exports.determineBranch = exports.EntityDecoder = exports.DecodingMode = exports.BinTrieFlags = exports.fromCodePoint = exports.replaceCodePoint = exports.decodeCodePoint = exports.xmlDecodeTree = exports.htmlDecodeTree = void 0;\nvar decode_data_html_js_1 = __importDefault(require(\"./generated/decode-data-html.js\"));\nexports.htmlDecodeTree = decode_data_html_js_1.default;\nvar decode_data_xml_js_1 = __importDefault(require(\"./generated/decode-data-xml.js\"));\nexports.xmlDecodeTree = decode_data_xml_js_1.default;\nvar decode_codepoint_js_1 = __importStar(require(\"./decode_codepoint.js\"));\nexports.decodeCodePoint = decode_codepoint_js_1.default;\nvar decode_codepoint_js_2 = require(\"./decode_codepoint.js\");\nObject.defineProperty(exports, \"replaceCodePoint\", { enumerable: true, get: function () { return decode_codepoint_js_2.replaceCodePoint; } });\nObject.defineProperty(exports, \"fromCodePoint\", { enumerable: true, get: function () { return decode_codepoint_js_2.fromCodePoint; } });\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nvar TO_LOWER_BIT = 32;\nvar BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags = exports.BinTrieFlags || (exports.BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nvar DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode = exports.DecodingMode || (exports.DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nvar EntityDecoder = /** @class */ (function () {\n    function EntityDecoder(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    EntityDecoder.prototype.startEntity = function (decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    };\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    EntityDecoder.prototype.write = function (str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    };\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    EntityDecoder.prototype.stateNumericStart = function (str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    };\n    EntityDecoder.prototype.addToNumericResult = function (str, start, end, base) {\n        if (start !== end) {\n            var digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    };\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    EntityDecoder.prototype.stateNumericHex = function (str, offset) {\n        var startIdx = offset;\n        while (offset < str.length) {\n            var char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    };\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    EntityDecoder.prototype.stateNumericDecimal = function (str, offset) {\n        var startIdx = offset;\n        while (offset < str.length) {\n            var char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    };\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    EntityDecoder.prototype.emitNumericEntity = function (lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint((0, decode_codepoint_js_1.replaceCodePoint)(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    };\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    EntityDecoder.prototype.stateNamedEntity = function (str, offset) {\n        var decodeTree = this.decodeTree;\n        var current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        var valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            var char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    };\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    EntityDecoder.prototype.emitNotTerminatedNamedEntity = function () {\n        var _a;\n        var _b = this, result = _b.result, decodeTree = _b.decodeTree;\n        var valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    };\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    EntityDecoder.prototype.emitNamedEntityData = function (result, valueLength, consumed) {\n        var decodeTree = this.decodeTree;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    };\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    EntityDecoder.prototype.end = function () {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    };\n    return EntityDecoder;\n}());\nexports.EntityDecoder = EntityDecoder;\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    var ret = \"\";\n    var decoder = new EntityDecoder(decodeTree, function (str) { return (ret += (0, decode_codepoint_js_1.fromCodePoint)(str)); });\n    return function decodeWithTrie(str, decodeMode) {\n        var lastIndex = 0;\n        var offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            var len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        var result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nfunction determineBranch(decodeTree, current, nodeIdx, char) {\n    var branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    var jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        var value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    var lo = nodeIdx;\n    var hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        var mid = (lo + hi) >>> 1;\n        var midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nexports.determineBranch = determineBranch;\nvar htmlDecoder = getDecoder(decode_data_html_js_1.default);\nvar xmlDecoder = getDecoder(decode_data_xml_js_1.default);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nfunction decodeHTML(str, mode) {\n    if (mode === void 0) { mode = DecodingMode.Legacy; }\n    return htmlDecoder(str, mode);\n}\nexports.decodeHTML = decodeHTML;\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nfunction decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\nexports.decodeHTMLAttribute = decodeHTMLAttribute;\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nfunction decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\nexports.decodeHTMLStrict = decodeHTMLStrict;\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nfunction decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\nexports.decodeXML = decodeXML;\n//# sourceMappingURL=decode.js.map",null,"/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeText = exports.escapeAttribute = exports.escapeUTF8 = exports.escape = exports.encodeXML = exports.getCodePoint = exports.xmlReplacer = void 0;\nexports.xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nvar xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexports.getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? function (str, index) { return str.codePointAt(index); }\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        function (c, index) {\n            return (c.charCodeAt(index) & 0xfc00) === 0xd800\n                ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                    c.charCodeAt(index + 1) -\n                    0xdc00 +\n                    0x10000\n                : c.charCodeAt(index);\n        };\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nfunction encodeXML(str) {\n    var ret = \"\";\n    var lastIdx = 0;\n    var match;\n    while ((match = exports.xmlReplacer.exec(str)) !== null) {\n        var i = match.index;\n        var char = str.charCodeAt(i);\n        var next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += \"\".concat(str.substring(lastIdx, i), \"&#x\").concat((0, exports.getCodePoint)(str, i).toString(16), \";\");\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = exports.xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\nexports.encodeXML = encodeXML;\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexports.escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        var match;\n        var lastIdx = 0;\n        var result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexports.escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexports.escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexports.escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map",null,"import { html } from 'parse5';\nimport { Element, Document, ProcessingInstruction, Comment, Text, isDirective, isText, isComment, isTag, } from 'domhandler';\nfunction createTextNode(value) {\n    return new Text(value);\n}\nfunction enquoteDoctypeId(id) {\n    const quote = id.includes('\"') ? \"'\" : '\"';\n    return quote + id + quote;\n}\n/** @internal */\nexport function serializeDoctypeContent(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n    if (name) {\n        str += name;\n    }\n    if (publicId) {\n        str += ` PUBLIC ${enquoteDoctypeId(publicId)}`;\n    }\n    else if (systemId) {\n        str += ' SYSTEM';\n    }\n    if (systemId) {\n        str += ` ${enquoteDoctypeId(systemId)}`;\n    }\n    return str;\n}\nexport const adapter = {\n    // Re-exports from domhandler\n    isCommentNode: isComment,\n    isElementNode: isTag,\n    isTextNode: isText,\n    //Node construction\n    createDocument() {\n        const node = new Document([]);\n        node['x-mode'] = html.DOCUMENT_MODE.NO_QUIRKS;\n        return node;\n    },\n    createDocumentFragment() {\n        return new Document([]);\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        const attribs = Object.create(null);\n        const attribsNamespace = Object.create(null);\n        const attribsPrefix = Object.create(null);\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            attribs[attrName] = attrs[i].value;\n            attribsNamespace[attrName] = attrs[i].namespace;\n            attribsPrefix[attrName] = attrs[i].prefix;\n        }\n        const node = new Element(tagName, attribs, []);\n        node.namespace = namespaceURI;\n        node['x-attribsNamespace'] = attribsNamespace;\n        node['x-attribsPrefix'] = attribsPrefix;\n        return node;\n    },\n    createCommentNode(data) {\n        return new Comment(data);\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        const prev = parentNode.children[parentNode.children.length - 1];\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        parentNode.children.push(newNode);\n        newNode.parent = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.children.indexOf(referenceNode);\n        const { prev } = referenceNode;\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        referenceNode.prev = newNode;\n        newNode.next = referenceNode;\n        parentNode.children.splice(insertionIdx, 0, newNode);\n        newNode.parent = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        adapter.appendChild(templateElement, contentElement);\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.children[0];\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const data = serializeDoctypeContent(name, publicId, systemId);\n        let doctypeNode = document.children.find((node) => isDirective(node) && node.name === '!doctype');\n        if (doctypeNode) {\n            doctypeNode.data = data !== null && data !== void 0 ? data : null;\n        }\n        else {\n            doctypeNode = new ProcessingInstruction('!doctype', data);\n            adapter.appendChild(document, doctypeNode);\n        }\n        doctypeNode['x-name'] = name !== null && name !== void 0 ? name : undefined;\n        doctypeNode['x-publicId'] = publicId !== null && publicId !== void 0 ? publicId : undefined;\n        doctypeNode['x-systemId'] = systemId !== null && systemId !== void 0 ? systemId : undefined;\n    },\n    setDocumentMode(document, mode) {\n        document['x-mode'] = mode;\n    },\n    getDocumentMode(document) {\n        return document['x-mode'];\n    },\n    detachNode(node) {\n        if (node.parent) {\n            const idx = node.parent.children.indexOf(node);\n            const { prev, next } = node;\n            node.prev = null;\n            node.next = null;\n            if (prev) {\n                prev.next = next;\n            }\n            if (next) {\n                next.prev = prev;\n            }\n            node.parent.children.splice(idx, 1);\n            node.parent = null;\n        }\n    },\n    insertText(parentNode, text) {\n        const lastChild = parentNode.children[parentNode.children.length - 1];\n        if (lastChild && isText(lastChild)) {\n            lastChild.data += text;\n        }\n        else {\n            adapter.appendChild(parentNode, createTextNode(text));\n        }\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n        if (prevNode && isText(prevNode)) {\n            prevNode.data += text;\n        }\n        else {\n            adapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            if (typeof recipient.attribs[attrName] === 'undefined') {\n                recipient.attribs[attrName] = attrs[i].value;\n                recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n                recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.children[0];\n    },\n    getChildNodes(node) {\n        return node.children;\n    },\n    getParentNode(node) {\n        return node.parent;\n    },\n    getAttrList(element) {\n        return element.attributes;\n    },\n    //Node data\n    getTagName(element) {\n        return element.name;\n    },\n    getNamespaceURI(element) {\n        return element.namespace;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.data;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n    },\n    //Node types\n    isDocumentTypeNode(node) {\n        return isDirective(node) && node.name === '!doctype';\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        if (location) {\n            node.startIndex = location.startOffset;\n            node.endIndex = location.endOffset;\n        }\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        if (endLocation.endOffset != null)\n            node.endIndex = endLocation.endOffset;\n        node.sourceCodeLocation = {\n            ...node.sourceCodeLocation,\n            ...endLocation,\n        };\n    },\n};\n//# sourceMappingURL=index.js.map","import { Parser } from \"./Parser.js\";\nexport { Parser } from \"./Parser.js\";\nimport { DomHandler, } from \"domhandler\";\nexport { DomHandler, \n// Old name for DomHandler\nDomHandler as DefaultHandler, } from \"domhandler\";\n// Helper methods\n/**\n * Parses the data, returns the resulting document.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM builder.\n */\nexport function parseDocument(data, options) {\n    const handler = new DomHandler(undefined, options);\n    new Parser(handler, options).end(data);\n    return handler.root;\n}\n/**\n * Parses data, returns an array of the root nodes.\n *\n * Note that the root nodes still have a `Document` node as their parent.\n * Use `parseDocument` to get the `Document` node instead.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM builder.\n * @deprecated Use `parseDocument` instead.\n */\nexport function parseDOM(data, options) {\n    return parseDocument(data, options).children;\n}\n/**\n * Creates a parser instance, with an attached DOM handler.\n *\n * @param callback A callback that will be called once parsing has been completed.\n * @param options Optional options for the parser and DOM builder.\n * @param elementCallback An optional callback that will be called every time a tag has been completed inside of the DOM.\n */\nexport function createDomStream(callback, options, elementCallback) {\n    const handler = new DomHandler(callback, options, elementCallback);\n    return new Parser(handler, options);\n}\nexport { default as Tokenizer, } from \"./Tokenizer.js\";\n/*\n * All of the following exports exist for backwards-compatibility.\n * They should probably be removed eventually.\n */\nexport * as ElementType from \"domelementtype\";\nimport { getFeed } from \"domutils\";\nexport { getFeed } from \"domutils\";\nconst parseFeedDefaultOptions = { xmlMode: true };\n/**\n * Parse a feed.\n *\n * @param feed The feed that should be parsed, as a string.\n * @param options Optionally, options for parsing. When using this, you should set `xmlMode` to `true`.\n */\nexport function parseFeed(feed, options = parseFeedDefaultOptions) {\n    return getFeed(parseDOM(feed, options));\n}\nexport * as DomUtils from \"domutils\";\n//# sourceMappingURL=index.js.map",null,"import Tokenizer, { QuoteType } from \"./Tokenizer.js\";\nimport { fromCodePoint } from \"entities/lib/decode.js\";\nconst formTags = new Set([\n    \"input\",\n    \"option\",\n    \"optgroup\",\n    \"select\",\n    \"button\",\n    \"datalist\",\n    \"textarea\",\n]);\nconst pTag = new Set([\"p\"]);\nconst tableSectionTags = new Set([\"thead\", \"tbody\"]);\nconst ddtTags = new Set([\"dd\", \"dt\"]);\nconst rtpTags = new Set([\"rt\", \"rp\"]);\nconst openImpliesClose = new Map([\n    [\"tr\", new Set([\"tr\", \"th\", \"td\"])],\n    [\"th\", new Set([\"th\"])],\n    [\"td\", new Set([\"thead\", \"th\", \"td\"])],\n    [\"body\", new Set([\"head\", \"link\", \"script\"])],\n    [\"li\", new Set([\"li\"])],\n    [\"p\", pTag],\n    [\"h1\", pTag],\n    [\"h2\", pTag],\n    [\"h3\", pTag],\n    [\"h4\", pTag],\n    [\"h5\", pTag],\n    [\"h6\", pTag],\n    [\"select\", formTags],\n    [\"input\", formTags],\n    [\"output\", formTags],\n    [\"button\", formTags],\n    [\"datalist\", formTags],\n    [\"textarea\", formTags],\n    [\"option\", new Set([\"option\"])],\n    [\"optgroup\", new Set([\"optgroup\", \"option\"])],\n    [\"dd\", ddtTags],\n    [\"dt\", ddtTags],\n    [\"address\", pTag],\n    [\"article\", pTag],\n    [\"aside\", pTag],\n    [\"blockquote\", pTag],\n    [\"details\", pTag],\n    [\"div\", pTag],\n    [\"dl\", pTag],\n    [\"fieldset\", pTag],\n    [\"figcaption\", pTag],\n    [\"figure\", pTag],\n    [\"footer\", pTag],\n    [\"form\", pTag],\n    [\"header\", pTag],\n    [\"hr\", pTag],\n    [\"main\", pTag],\n    [\"nav\", pTag],\n    [\"ol\", pTag],\n    [\"pre\", pTag],\n    [\"section\", pTag],\n    [\"table\", pTag],\n    [\"ul\", pTag],\n    [\"rt\", rtpTags],\n    [\"rp\", rtpTags],\n    [\"tbody\", tableSectionTags],\n    [\"tfoot\", tableSectionTags],\n]);\nconst voidElements = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\nconst foreignContextElements = new Set([\"math\", \"svg\"]);\nconst htmlIntegrationElements = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignobject\",\n    \"desc\",\n    \"title\",\n]);\nconst reNameEnd = /\\s|\\//;\nexport class Parser {\n    constructor(cbs, options = {}) {\n        var _a, _b, _c, _d, _e;\n        this.options = options;\n        /** The start index of the last event. */\n        this.startIndex = 0;\n        /** The end index of the last event. */\n        this.endIndex = 0;\n        /**\n         * Store the start index of the current open tag,\n         * so we can update the start index for attributes.\n         */\n        this.openTagStart = 0;\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribvalue = \"\";\n        this.attribs = null;\n        this.stack = [];\n        this.foreignContext = [];\n        this.buffers = [];\n        this.bufferOffset = 0;\n        /** The index of the last written buffer. Used when resuming after a `pause()`. */\n        this.writeIndex = 0;\n        /** Indicates whether the parser has finished running / `.end` has been called. */\n        this.ended = false;\n        this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n        this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : !options.xmlMode;\n        this.lowerCaseAttributeNames =\n            (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : !options.xmlMode;\n        this.tokenizer = new ((_c = options.Tokenizer) !== null && _c !== void 0 ? _c : Tokenizer)(this.options, this);\n        (_e = (_d = this.cbs).onparserinit) === null || _e === void 0 ? void 0 : _e.call(_d, this);\n    }\n    // Tokenizer event handlers\n    /** @internal */\n    ontext(start, endIndex) {\n        var _a, _b;\n        const data = this.getSlice(start, endIndex);\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n        this.startIndex = endIndex;\n    }\n    /** @internal */\n    ontextentity(cp) {\n        var _a, _b;\n        /*\n         * Entities can be emitted on the character, or directly after.\n         * We use the section start here to get accurate indices.\n         */\n        const index = this.tokenizer.getSectionStart();\n        this.endIndex = index - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, fromCodePoint(cp));\n        this.startIndex = index;\n    }\n    isVoidElement(name) {\n        return !this.options.xmlMode && voidElements.has(name);\n    }\n    /** @internal */\n    onopentagname(start, endIndex) {\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        this.emitOpenTag(name);\n    }\n    emitOpenTag(name) {\n        var _a, _b, _c, _d;\n        this.openTagStart = this.startIndex;\n        this.tagname = name;\n        const impliesClose = !this.options.xmlMode && openImpliesClose.get(name);\n        if (impliesClose) {\n            while (this.stack.length > 0 &&\n                impliesClose.has(this.stack[this.stack.length - 1])) {\n                const element = this.stack.pop();\n                (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, true);\n            }\n        }\n        if (!this.isVoidElement(name)) {\n            this.stack.push(name);\n            if (foreignContextElements.has(name)) {\n                this.foreignContext.push(true);\n            }\n            else if (htmlIntegrationElements.has(name)) {\n                this.foreignContext.push(false);\n            }\n        }\n        (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n        if (this.cbs.onopentag)\n            this.attribs = {};\n    }\n    endOpenTag(isImplied) {\n        var _a, _b;\n        this.startIndex = this.openTagStart;\n        if (this.attribs) {\n            (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n            this.attribs = null;\n        }\n        if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n            this.cbs.onclosetag(this.tagname, true);\n        }\n        this.tagname = \"\";\n    }\n    /** @internal */\n    onopentagend(endIndex) {\n        this.endIndex = endIndex;\n        this.endOpenTag(false);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onclosetag(start, endIndex) {\n        var _a, _b, _c, _d, _e, _f;\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        if (foreignContextElements.has(name) ||\n            htmlIntegrationElements.has(name)) {\n            this.foreignContext.pop();\n        }\n        if (!this.isVoidElement(name)) {\n            const pos = this.stack.lastIndexOf(name);\n            if (pos !== -1) {\n                if (this.cbs.onclosetag) {\n                    let count = this.stack.length - pos;\n                    while (count--) {\n                        // We know the stack has sufficient elements.\n                        this.cbs.onclosetag(this.stack.pop(), count !== 0);\n                    }\n                }\n                else\n                    this.stack.length = pos;\n            }\n            else if (!this.options.xmlMode && name === \"p\") {\n                // Implicit open before close\n                this.emitOpenTag(\"p\");\n                this.closeCurrentTag(true);\n            }\n        }\n        else if (!this.options.xmlMode && name === \"br\") {\n            // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n            (_b = (_a = this.cbs).onopentagname) === null || _b === void 0 ? void 0 : _b.call(_a, \"br\");\n            (_d = (_c = this.cbs).onopentag) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\", {}, true);\n            (_f = (_e = this.cbs).onclosetag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", false);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onselfclosingtag(endIndex) {\n        this.endIndex = endIndex;\n        if (this.options.xmlMode ||\n            this.options.recognizeSelfClosing ||\n            this.foreignContext[this.foreignContext.length - 1]) {\n            this.closeCurrentTag(false);\n            // Set `startIndex` for next node\n            this.startIndex = endIndex + 1;\n        }\n        else {\n            // Ignore the fact that the tag is self-closing.\n            this.onopentagend(endIndex);\n        }\n    }\n    closeCurrentTag(isOpenImplied) {\n        var _a, _b;\n        const name = this.tagname;\n        this.endOpenTag(isOpenImplied);\n        // Self-closing tags will be on the top of the stack\n        if (this.stack[this.stack.length - 1] === name) {\n            // If the opening tag isn't implied, the closing tag has to be implied.\n            (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n            this.stack.pop();\n        }\n    }\n    /** @internal */\n    onattribname(start, endIndex) {\n        this.startIndex = start;\n        const name = this.getSlice(start, endIndex);\n        this.attribname = this.lowerCaseAttributeNames\n            ? name.toLowerCase()\n            : name;\n    }\n    /** @internal */\n    onattribdata(start, endIndex) {\n        this.attribvalue += this.getSlice(start, endIndex);\n    }\n    /** @internal */\n    onattribentity(cp) {\n        this.attribvalue += fromCodePoint(cp);\n    }\n    /** @internal */\n    onattribend(quote, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double\n            ? '\"'\n            : quote === QuoteType.Single\n                ? \"'\"\n                : quote === QuoteType.NoValue\n                    ? undefined\n                    : null);\n        if (this.attribs &&\n            !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n            this.attribs[this.attribname] = this.attribvalue;\n        }\n        this.attribvalue = \"\";\n    }\n    getInstructionName(value) {\n        const index = value.search(reNameEnd);\n        let name = index < 0 ? value : value.substr(0, index);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        return name;\n    }\n    /** @internal */\n    ondeclaration(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onprocessinginstruction(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncomment(start, endIndex, offset) {\n        var _a, _b, _c, _d;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));\n        (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncdata(start, endIndex, offset) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex - offset);\n        if (this.options.xmlMode || this.options.recognizeCDATA) {\n            (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n            (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n        }\n        else {\n            (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, `[CDATA[${value}]]`);\n            (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onend() {\n        var _a, _b;\n        if (this.cbs.onclosetag) {\n            // Set the end index for all remaining tags\n            this.endIndex = this.startIndex;\n            for (let index = this.stack.length; index > 0; this.cbs.onclosetag(this.stack[--index], true))\n                ;\n        }\n        (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Resets the parser to a blank state, ready to parse a new HTML document\n     */\n    reset() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.tokenizer.reset();\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribs = null;\n        this.stack.length = 0;\n        this.startIndex = 0;\n        this.endIndex = 0;\n        (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n        this.buffers.length = 0;\n        this.bufferOffset = 0;\n        this.writeIndex = 0;\n        this.ended = false;\n    }\n    /**\n     * Resets the parser, then parses a complete document and\n     * pushes it to the handler.\n     *\n     * @param data Document to parse.\n     */\n    parseComplete(data) {\n        this.reset();\n        this.end(data);\n    }\n    getSlice(start, end) {\n        while (start - this.bufferOffset >= this.buffers[0].length) {\n            this.shiftBuffer();\n        }\n        let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n        while (end - this.bufferOffset > this.buffers[0].length) {\n            this.shiftBuffer();\n            slice += this.buffers[0].slice(0, end - this.bufferOffset);\n        }\n        return slice;\n    }\n    shiftBuffer() {\n        this.bufferOffset += this.buffers[0].length;\n        this.writeIndex--;\n        this.buffers.shift();\n    }\n    /**\n     * Parses a chunk of data and calls the corresponding callbacks.\n     *\n     * @param chunk Chunk to parse.\n     */\n    write(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".write() after done!\"));\n            return;\n        }\n        this.buffers.push(chunk);\n        if (this.tokenizer.running) {\n            this.tokenizer.write(chunk);\n            this.writeIndex++;\n        }\n    }\n    /**\n     * Parses the end of the buffer and clears the stack, calls onend.\n     *\n     * @param chunk Optional final chunk to parse.\n     */\n    end(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".end() after done!\"));\n            return;\n        }\n        if (chunk)\n            this.write(chunk);\n        this.ended = true;\n        this.tokenizer.end();\n    }\n    /**\n     * Pauses parsing. The parser won't emit events until `resume` is called.\n     */\n    pause() {\n        this.tokenizer.pause();\n    }\n    /**\n     * Resumes parsing after `pause` was called.\n     */\n    resume() {\n        this.tokenizer.resume();\n        while (this.tokenizer.running &&\n            this.writeIndex < this.buffers.length) {\n            this.tokenizer.write(this.buffers[this.writeIndex++]);\n        }\n        if (this.ended)\n            this.tokenizer.end();\n    }\n    /**\n     * Alias of `write`, for backwards compatibility.\n     *\n     * @param chunk Chunk to parse.\n     * @deprecated\n     */\n    parseChunk(chunk) {\n        this.write(chunk);\n    }\n    /**\n     * Alias of `end`, for backwards compatibility.\n     *\n     * @param chunk Optional final chunk to parse.\n     * @deprecated\n     */\n    done(chunk) {\n        this.end(chunk);\n    }\n}\n//# sourceMappingURL=Parser.js.map",null,"import { htmlDecodeTree, xmlDecodeTree, BinTrieFlags, determineBranch, replaceCodePoint, } from \"entities/lib/decode.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n    CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n    CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n    CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n    CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n    CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n    CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n    CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n    CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n    CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n    CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n    CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n    CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n    CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n    CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n    CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n    CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n    CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n    CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n    State[State[\"Text\"] = 1] = \"Text\";\n    State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n    State[State[\"InTagName\"] = 3] = \"InTagName\";\n    State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n    State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n    State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n    State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n    // Attributes\n    State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n    State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n    State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n    State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n    State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n    State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n    State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n    // Declarations\n    State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n    State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n    // Processing instructions\n    State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n    // Comments & CDATA\n    State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n    State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n    State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n    State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n    // Special tags\n    State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n    State[State[\"SpecialStartSequence\"] = 23] = \"SpecialStartSequence\";\n    State[State[\"InSpecialTag\"] = 24] = \"InSpecialTag\";\n    State[State[\"BeforeEntity\"] = 25] = \"BeforeEntity\";\n    State[State[\"BeforeNumericEntity\"] = 26] = \"BeforeNumericEntity\";\n    State[State[\"InNamedEntity\"] = 27] = \"InNamedEntity\";\n    State[State[\"InNumericEntity\"] = 28] = \"InNumericEntity\";\n    State[State[\"InHexEntity\"] = 29] = \"InHexEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n    return (c === CharCodes.Space ||\n        c === CharCodes.NewLine ||\n        c === CharCodes.Tab ||\n        c === CharCodes.FormFeed ||\n        c === CharCodes.CarriageReturn);\n}\nfunction isEndOfTagSection(c) {\n    return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isNumber(c) {\n    return c >= CharCodes.Zero && c <= CharCodes.Nine;\n}\nfunction isASCIIAlpha(c) {\n    return ((c >= CharCodes.LowerA && c <= CharCodes.LowerZ) ||\n        (c >= CharCodes.UpperA && c <= CharCodes.UpperZ));\n}\nfunction isHexDigit(c) {\n    return ((c >= CharCodes.UpperA && c <= CharCodes.UpperF) ||\n        (c >= CharCodes.LowerA && c <= CharCodes.LowerF));\n}\nexport var QuoteType;\n(function (QuoteType) {\n    QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n    QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n    QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n    QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nconst Sequences = {\n    Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]),\n    CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]),\n    CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]),\n    ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]),\n    StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]),\n    TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]), // `</title`\n};\nexport default class Tokenizer {\n    constructor({ xmlMode = false, decodeEntities = true, }, cbs) {\n        this.cbs = cbs;\n        /** The current state the tokenizer is in. */\n        this.state = State.Text;\n        /** The read buffer. */\n        this.buffer = \"\";\n        /** The beginning of the section that is currently being read. */\n        this.sectionStart = 0;\n        /** The index within the buffer that we are currently looking at. */\n        this.index = 0;\n        /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n        this.baseState = State.Text;\n        /** For special parsing behavior inside of script and style tags. */\n        this.isSpecial = false;\n        /** Indicates whether the tokenizer has been paused. */\n        this.running = true;\n        /** The offset of the current buffer. */\n        this.offset = 0;\n        this.currentSequence = undefined;\n        this.sequenceIndex = 0;\n        this.trieIndex = 0;\n        this.trieCurrent = 0;\n        /** For named entities, the index of the value. For numeric entities, the code point. */\n        this.entityResult = 0;\n        this.entityExcess = 0;\n        this.xmlMode = xmlMode;\n        this.decodeEntities = decodeEntities;\n        this.entityTrie = xmlMode ? xmlDecodeTree : htmlDecodeTree;\n    }\n    reset() {\n        this.state = State.Text;\n        this.buffer = \"\";\n        this.sectionStart = 0;\n        this.index = 0;\n        this.baseState = State.Text;\n        this.currentSequence = undefined;\n        this.running = true;\n        this.offset = 0;\n    }\n    write(chunk) {\n        this.offset += this.buffer.length;\n        this.buffer = chunk;\n        this.parse();\n    }\n    end() {\n        if (this.running)\n            this.finish();\n    }\n    pause() {\n        this.running = false;\n    }\n    resume() {\n        this.running = true;\n        if (this.index < this.buffer.length + this.offset) {\n            this.parse();\n        }\n    }\n    /**\n     * The current index within all of the written data.\n     */\n    getIndex() {\n        return this.index;\n    }\n    /**\n     * The start of the current section.\n     */\n    getSectionStart() {\n        return this.sectionStart;\n    }\n    stateText(c) {\n        if (c === CharCodes.Lt ||\n            (!this.decodeEntities && this.fastForwardTo(CharCodes.Lt))) {\n            if (this.index > this.sectionStart) {\n                this.cbs.ontext(this.sectionStart, this.index);\n            }\n            this.state = State.BeforeTagName;\n            this.sectionStart = this.index;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.state = State.BeforeEntity;\n        }\n    }\n    stateSpecialStartSequence(c) {\n        const isEnd = this.sequenceIndex === this.currentSequence.length;\n        const isMatch = isEnd\n            ? // If we are at the end of the sequence, make sure the tag name has ended\n                isEndOfTagSection(c)\n            : // Otherwise, do a case-insensitive comparison\n                (c | 0x20) === this.currentSequence[this.sequenceIndex];\n        if (!isMatch) {\n            this.isSpecial = false;\n        }\n        else if (!isEnd) {\n            this.sequenceIndex++;\n            return;\n        }\n        this.sequenceIndex = 0;\n        this.state = State.InTagName;\n        this.stateInTagName(c);\n    }\n    /** Look for an end tag. For <title> tags, also decode entities. */\n    stateInSpecialTag(c) {\n        if (this.sequenceIndex === this.currentSequence.length) {\n            if (c === CharCodes.Gt || isWhitespace(c)) {\n                const endOfText = this.index - this.currentSequence.length;\n                if (this.sectionStart < endOfText) {\n                    // Spoof the index so that reported locations match up.\n                    const actualIndex = this.index;\n                    this.index = endOfText;\n                    this.cbs.ontext(this.sectionStart, endOfText);\n                    this.index = actualIndex;\n                }\n                this.isSpecial = false;\n                this.sectionStart = endOfText + 2; // Skip over the `</`\n                this.stateInClosingTagName(c);\n                return; // We are done; skip the rest of the function.\n            }\n            this.sequenceIndex = 0;\n        }\n        if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n            this.sequenceIndex += 1;\n        }\n        else if (this.sequenceIndex === 0) {\n            if (this.currentSequence === Sequences.TitleEnd) {\n                // We have to parse entities in <title> tags.\n                if (this.decodeEntities && c === CharCodes.Amp) {\n                    this.state = State.BeforeEntity;\n                }\n            }\n            else if (this.fastForwardTo(CharCodes.Lt)) {\n                // Outside of <title> tags, we can fast-forward.\n                this.sequenceIndex = 1;\n            }\n        }\n        else {\n            // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n            this.sequenceIndex = Number(c === CharCodes.Lt);\n        }\n    }\n    stateCDATASequence(c) {\n        if (c === Sequences.Cdata[this.sequenceIndex]) {\n            if (++this.sequenceIndex === Sequences.Cdata.length) {\n                this.state = State.InCommentLike;\n                this.currentSequence = Sequences.CdataEnd;\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n            }\n        }\n        else {\n            this.sequenceIndex = 0;\n            this.state = State.InDeclaration;\n            this.stateInDeclaration(c); // Reconsume the character\n        }\n    }\n    /**\n     * When we wait for one specific character, we can speed things up\n     * by skipping through the buffer until we find it.\n     *\n     * @returns Whether the character was found.\n     */\n    fastForwardTo(c) {\n        while (++this.index < this.buffer.length + this.offset) {\n            if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n                return true;\n            }\n        }\n        /*\n         * We increment the index at the end of the `parse` loop,\n         * so set it to `buffer.length - 1` here.\n         *\n         * TODO: Refactor `parse` to increment index before calling states.\n         */\n        this.index = this.buffer.length + this.offset - 1;\n        return false;\n    }\n    /**\n     * Comments and CDATA end with `-->` and `]]>`.\n     *\n     * Their common qualities are:\n     * - Their end sequences have a distinct character they start with.\n     * - That character is then repeated, so we have to check multiple repeats.\n     * - All characters but the start character of the sequence can be skipped.\n     */\n    stateInCommentLike(c) {\n        if (c === this.currentSequence[this.sequenceIndex]) {\n            if (++this.sequenceIndex === this.currentSequence.length) {\n                if (this.currentSequence === Sequences.CdataEnd) {\n                    this.cbs.oncdata(this.sectionStart, this.index, 2);\n                }\n                else {\n                    this.cbs.oncomment(this.sectionStart, this.index, 2);\n                }\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n                this.state = State.Text;\n            }\n        }\n        else if (this.sequenceIndex === 0) {\n            // Fast-forward to the first character of the sequence\n            if (this.fastForwardTo(this.currentSequence[0])) {\n                this.sequenceIndex = 1;\n            }\n        }\n        else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n            // Allow long sequences, eg. --->, ]]]>\n            this.sequenceIndex = 0;\n        }\n    }\n    /**\n     * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n     *\n     * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n     * We allow anything that wouldn't end the tag.\n     */\n    isTagStartChar(c) {\n        return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n    }\n    startSpecial(sequence, offset) {\n        this.isSpecial = true;\n        this.currentSequence = sequence;\n        this.sequenceIndex = offset;\n        this.state = State.SpecialStartSequence;\n    }\n    stateBeforeTagName(c) {\n        if (c === CharCodes.ExclamationMark) {\n            this.state = State.BeforeDeclaration;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Questionmark) {\n            this.state = State.InProcessingInstruction;\n            this.sectionStart = this.index + 1;\n        }\n        else if (this.isTagStartChar(c)) {\n            const lower = c | 0x20;\n            this.sectionStart = this.index;\n            if (!this.xmlMode && lower === Sequences.TitleEnd[2]) {\n                this.startSpecial(Sequences.TitleEnd, 3);\n            }\n            else {\n                this.state =\n                    !this.xmlMode && lower === Sequences.ScriptEnd[2]\n                        ? State.BeforeSpecialS\n                        : State.InTagName;\n            }\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.BeforeClosingTagName;\n        }\n        else {\n            this.state = State.Text;\n            this.stateText(c);\n        }\n    }\n    stateInTagName(c) {\n        if (isEndOfTagSection(c)) {\n            this.cbs.onopentagname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateBeforeClosingTagName(c) {\n        if (isWhitespace(c)) {\n            // Ignore\n        }\n        else if (c === CharCodes.Gt) {\n            this.state = State.Text;\n        }\n        else {\n            this.state = this.isTagStartChar(c)\n                ? State.InClosingTagName\n                : State.InSpecialComment;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInClosingTagName(c) {\n        if (c === CharCodes.Gt || isWhitespace(c)) {\n            this.cbs.onclosetag(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterClosingTagName;\n            this.stateAfterClosingTagName(c);\n        }\n    }\n    stateAfterClosingTagName(c) {\n        // Skip everything until \">\"\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.state = State.Text;\n            this.baseState = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeAttributeName(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onopentagend(this.index);\n            if (this.isSpecial) {\n                this.state = State.InSpecialTag;\n                this.sequenceIndex = 0;\n            }\n            else {\n                this.state = State.Text;\n            }\n            this.baseState = this.state;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.InSelfClosingTag;\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInSelfClosingTag(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onselfclosingtag(this.index);\n            this.state = State.Text;\n            this.baseState = State.Text;\n            this.sectionStart = this.index + 1;\n            this.isSpecial = false; // Reset special state, in case of self-closing special tags\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateInAttributeName(c) {\n        if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n            this.cbs.onattribname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterAttributeName;\n            this.stateAfterAttributeName(c);\n        }\n    }\n    stateAfterAttributeName(c) {\n        if (c === CharCodes.Eq) {\n            this.state = State.BeforeAttributeValue;\n        }\n        else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n            this.cbs.onattribend(QuoteType.NoValue, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (!isWhitespace(c)) {\n            this.cbs.onattribend(QuoteType.NoValue, this.index);\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateBeforeAttributeValue(c) {\n        if (c === CharCodes.DoubleQuote) {\n            this.state = State.InAttributeValueDq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.SingleQuote) {\n            this.state = State.InAttributeValueSq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (!isWhitespace(c)) {\n            this.sectionStart = this.index;\n            this.state = State.InAttributeValueNq;\n            this.stateInAttributeValueNoQuotes(c); // Reconsume token\n        }\n    }\n    handleInAttributeValue(c, quote) {\n        if (c === quote ||\n            (!this.decodeEntities && this.fastForwardTo(quote))) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(quote === CharCodes.DoubleQuote\n                ? QuoteType.Double\n                : QuoteType.Single, this.index);\n            this.state = State.BeforeAttributeName;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.baseState = this.state;\n            this.state = State.BeforeEntity;\n        }\n    }\n    stateInAttributeValueDoubleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n    }\n    stateInAttributeValueSingleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.SingleQuote);\n    }\n    stateInAttributeValueNoQuotes(c) {\n        if (isWhitespace(c) || c === CharCodes.Gt) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(QuoteType.Unquoted, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.baseState = this.state;\n            this.state = State.BeforeEntity;\n        }\n    }\n    stateBeforeDeclaration(c) {\n        if (c === CharCodes.OpeningSquareBracket) {\n            this.state = State.CDATASequence;\n            this.sequenceIndex = 0;\n        }\n        else {\n            this.state =\n                c === CharCodes.Dash\n                    ? State.BeforeComment\n                    : State.InDeclaration;\n        }\n    }\n    stateInDeclaration(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.ondeclaration(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateInProcessingInstruction(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeComment(c) {\n        if (c === CharCodes.Dash) {\n            this.state = State.InCommentLike;\n            this.currentSequence = Sequences.CommentEnd;\n            // Allow short comments (eg. <!-->)\n            this.sequenceIndex = 2;\n            this.sectionStart = this.index + 1;\n        }\n        else {\n            this.state = State.InDeclaration;\n        }\n    }\n    stateInSpecialComment(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.oncomment(this.sectionStart, this.index, 0);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeSpecialS(c) {\n        const lower = c | 0x20;\n        if (lower === Sequences.ScriptEnd[3]) {\n            this.startSpecial(Sequences.ScriptEnd, 4);\n        }\n        else if (lower === Sequences.StyleEnd[3]) {\n            this.startSpecial(Sequences.StyleEnd, 4);\n        }\n        else {\n            this.state = State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    }\n    stateBeforeEntity(c) {\n        // Start excess with 1 to include the '&'\n        this.entityExcess = 1;\n        this.entityResult = 0;\n        if (c === CharCodes.Number) {\n            this.state = State.BeforeNumericEntity;\n        }\n        else if (c === CharCodes.Amp) {\n            // We have two `&` characters in a row. Stay in the current state.\n        }\n        else {\n            this.trieIndex = 0;\n            this.trieCurrent = this.entityTrie[0];\n            this.state = State.InNamedEntity;\n            this.stateInNamedEntity(c);\n        }\n    }\n    stateInNamedEntity(c) {\n        this.entityExcess += 1;\n        this.trieIndex = determineBranch(this.entityTrie, this.trieCurrent, this.trieIndex + 1, c);\n        if (this.trieIndex < 0) {\n            this.emitNamedEntity();\n            this.index--;\n            return;\n        }\n        this.trieCurrent = this.entityTrie[this.trieIndex];\n        const masked = this.trieCurrent & BinTrieFlags.VALUE_LENGTH;\n        // If the branch is a value, store it and continue\n        if (masked) {\n            // The mask is the number of bytes of the value, including the current byte.\n            const valueLength = (masked >> 14) - 1;\n            // If we have a legacy entity while parsing strictly, just skip the number of bytes\n            if (!this.allowLegacyEntity() && c !== CharCodes.Semi) {\n                this.trieIndex += valueLength;\n            }\n            else {\n                // Add 1 as we have already incremented the excess\n                const entityStart = this.index - this.entityExcess + 1;\n                if (entityStart > this.sectionStart) {\n                    this.emitPartial(this.sectionStart, entityStart);\n                }\n                // If this is a surrogate pair, consume the next two bytes\n                this.entityResult = this.trieIndex;\n                this.trieIndex += valueLength;\n                this.entityExcess = 0;\n                this.sectionStart = this.index + 1;\n                if (valueLength === 0) {\n                    this.emitNamedEntity();\n                }\n            }\n        }\n    }\n    emitNamedEntity() {\n        this.state = this.baseState;\n        if (this.entityResult === 0) {\n            return;\n        }\n        const valueLength = (this.entityTrie[this.entityResult] & BinTrieFlags.VALUE_LENGTH) >>\n            14;\n        switch (valueLength) {\n            case 1: {\n                this.emitCodePoint(this.entityTrie[this.entityResult] &\n                    ~BinTrieFlags.VALUE_LENGTH);\n                break;\n            }\n            case 2: {\n                this.emitCodePoint(this.entityTrie[this.entityResult + 1]);\n                break;\n            }\n            case 3: {\n                this.emitCodePoint(this.entityTrie[this.entityResult + 1]);\n                this.emitCodePoint(this.entityTrie[this.entityResult + 2]);\n            }\n        }\n    }\n    stateBeforeNumericEntity(c) {\n        if ((c | 0x20) === CharCodes.LowerX) {\n            this.entityExcess++;\n            this.state = State.InHexEntity;\n        }\n        else {\n            this.state = State.InNumericEntity;\n            this.stateInNumericEntity(c);\n        }\n    }\n    emitNumericEntity(strict) {\n        const entityStart = this.index - this.entityExcess - 1;\n        const numberStart = entityStart + 2 + Number(this.state === State.InHexEntity);\n        if (numberStart !== this.index) {\n            // Emit leading data if any\n            if (entityStart > this.sectionStart) {\n                this.emitPartial(this.sectionStart, entityStart);\n            }\n            this.sectionStart = this.index + Number(strict);\n            this.emitCodePoint(replaceCodePoint(this.entityResult));\n        }\n        this.state = this.baseState;\n    }\n    stateInNumericEntity(c) {\n        if (c === CharCodes.Semi) {\n            this.emitNumericEntity(true);\n        }\n        else if (isNumber(c)) {\n            this.entityResult = this.entityResult * 10 + (c - CharCodes.Zero);\n            this.entityExcess++;\n        }\n        else {\n            if (this.allowLegacyEntity()) {\n                this.emitNumericEntity(false);\n            }\n            else {\n                this.state = this.baseState;\n            }\n            this.index--;\n        }\n    }\n    stateInHexEntity(c) {\n        if (c === CharCodes.Semi) {\n            this.emitNumericEntity(true);\n        }\n        else if (isNumber(c)) {\n            this.entityResult = this.entityResult * 16 + (c - CharCodes.Zero);\n            this.entityExcess++;\n        }\n        else if (isHexDigit(c)) {\n            this.entityResult =\n                this.entityResult * 16 + ((c | 0x20) - CharCodes.LowerA + 10);\n            this.entityExcess++;\n        }\n        else {\n            if (this.allowLegacyEntity()) {\n                this.emitNumericEntity(false);\n            }\n            else {\n                this.state = this.baseState;\n            }\n            this.index--;\n        }\n    }\n    allowLegacyEntity() {\n        return (!this.xmlMode &&\n            (this.baseState === State.Text ||\n                this.baseState === State.InSpecialTag));\n    }\n    /**\n     * Remove data that has already been consumed from the buffer.\n     */\n    cleanup() {\n        // If we are inside of text or attributes, emit what we already have.\n        if (this.running && this.sectionStart !== this.index) {\n            if (this.state === State.Text ||\n                (this.state === State.InSpecialTag && this.sequenceIndex === 0)) {\n                this.cbs.ontext(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n            else if (this.state === State.InAttributeValueDq ||\n                this.state === State.InAttributeValueSq ||\n                this.state === State.InAttributeValueNq) {\n                this.cbs.onattribdata(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n        }\n    }\n    shouldContinue() {\n        return this.index < this.buffer.length + this.offset && this.running;\n    }\n    /**\n     * Iterates through the buffer, calling the function corresponding to the current state.\n     *\n     * States that are more likely to be hit are higher up, as a performance improvement.\n     */\n    parse() {\n        while (this.shouldContinue()) {\n            const c = this.buffer.charCodeAt(this.index - this.offset);\n            switch (this.state) {\n                case State.Text: {\n                    this.stateText(c);\n                    break;\n                }\n                case State.SpecialStartSequence: {\n                    this.stateSpecialStartSequence(c);\n                    break;\n                }\n                case State.InSpecialTag: {\n                    this.stateInSpecialTag(c);\n                    break;\n                }\n                case State.CDATASequence: {\n                    this.stateCDATASequence(c);\n                    break;\n                }\n                case State.InAttributeValueDq: {\n                    this.stateInAttributeValueDoubleQuotes(c);\n                    break;\n                }\n                case State.InAttributeName: {\n                    this.stateInAttributeName(c);\n                    break;\n                }\n                case State.InCommentLike: {\n                    this.stateInCommentLike(c);\n                    break;\n                }\n                case State.InSpecialComment: {\n                    this.stateInSpecialComment(c);\n                    break;\n                }\n                case State.BeforeAttributeName: {\n                    this.stateBeforeAttributeName(c);\n                    break;\n                }\n                case State.InTagName: {\n                    this.stateInTagName(c);\n                    break;\n                }\n                case State.InClosingTagName: {\n                    this.stateInClosingTagName(c);\n                    break;\n                }\n                case State.BeforeTagName: {\n                    this.stateBeforeTagName(c);\n                    break;\n                }\n                case State.AfterAttributeName: {\n                    this.stateAfterAttributeName(c);\n                    break;\n                }\n                case State.InAttributeValueSq: {\n                    this.stateInAttributeValueSingleQuotes(c);\n                    break;\n                }\n                case State.BeforeAttributeValue: {\n                    this.stateBeforeAttributeValue(c);\n                    break;\n                }\n                case State.BeforeClosingTagName: {\n                    this.stateBeforeClosingTagName(c);\n                    break;\n                }\n                case State.AfterClosingTagName: {\n                    this.stateAfterClosingTagName(c);\n                    break;\n                }\n                case State.BeforeSpecialS: {\n                    this.stateBeforeSpecialS(c);\n                    break;\n                }\n                case State.InAttributeValueNq: {\n                    this.stateInAttributeValueNoQuotes(c);\n                    break;\n                }\n                case State.InSelfClosingTag: {\n                    this.stateInSelfClosingTag(c);\n                    break;\n                }\n                case State.InDeclaration: {\n                    this.stateInDeclaration(c);\n                    break;\n                }\n                case State.BeforeDeclaration: {\n                    this.stateBeforeDeclaration(c);\n                    break;\n                }\n                case State.BeforeComment: {\n                    this.stateBeforeComment(c);\n                    break;\n                }\n                case State.InProcessingInstruction: {\n                    this.stateInProcessingInstruction(c);\n                    break;\n                }\n                case State.InNamedEntity: {\n                    this.stateInNamedEntity(c);\n                    break;\n                }\n                case State.BeforeEntity: {\n                    this.stateBeforeEntity(c);\n                    break;\n                }\n                case State.InHexEntity: {\n                    this.stateInHexEntity(c);\n                    break;\n                }\n                case State.InNumericEntity: {\n                    this.stateInNumericEntity(c);\n                    break;\n                }\n                default: {\n                    // `this._state === State.BeforeNumericEntity`\n                    this.stateBeforeNumericEntity(c);\n                }\n            }\n            this.index++;\n        }\n        this.cleanup();\n    }\n    finish() {\n        if (this.state === State.InNamedEntity) {\n            this.emitNamedEntity();\n        }\n        // If there is remaining data, emit it in a reasonable way\n        if (this.sectionStart < this.index) {\n            this.handleTrailingData();\n        }\n        this.cbs.onend();\n    }\n    /** Handle any trailing data. */\n    handleTrailingData() {\n        const endIndex = this.buffer.length + this.offset;\n        if (this.state === State.InCommentLike) {\n            if (this.currentSequence === Sequences.CdataEnd) {\n                this.cbs.oncdata(this.sectionStart, endIndex, 0);\n            }\n            else {\n                this.cbs.oncomment(this.sectionStart, endIndex, 0);\n            }\n        }\n        else if (this.state === State.InNumericEntity &&\n            this.allowLegacyEntity()) {\n            this.emitNumericEntity(false);\n            // All trailing data will have been consumed\n        }\n        else if (this.state === State.InHexEntity &&\n            this.allowLegacyEntity()) {\n            this.emitNumericEntity(false);\n            // All trailing data will have been consumed\n        }\n        else if (this.state === State.InTagName ||\n            this.state === State.BeforeAttributeName ||\n            this.state === State.BeforeAttributeValue ||\n            this.state === State.AfterAttributeName ||\n            this.state === State.InAttributeName ||\n            this.state === State.InAttributeValueSq ||\n            this.state === State.InAttributeValueDq ||\n            this.state === State.InAttributeValueNq ||\n            this.state === State.InClosingTagName) {\n            /*\n             * If we are currently in an opening or closing tag, us not calling the\n             * respective callback signals that the tag should be ignored.\n             */\n        }\n        else {\n            this.cbs.ontext(this.sectionStart, endIndex);\n        }\n    }\n    emitPartial(start, endIndex) {\n        if (this.baseState !== State.Text &&\n            this.baseState !== State.InSpecialTag) {\n            this.cbs.onattribdata(start, endIndex);\n        }\n        else {\n            this.cbs.ontext(start, endIndex);\n        }\n    }\n    emitCodePoint(cp) {\n        if (this.baseState !== State.Text &&\n            this.baseState !== State.InSpecialTag) {\n            this.cbs.onattribentity(cp);\n        }\n        else {\n            this.cbs.ontextentity(cp);\n        }\n    }\n}\n//# sourceMappingURL=Tokenizer.js.map",null,"import { Parser } from \"./Parser.js\";\nexport { Parser } from \"./Parser.js\";\nimport { DomHandler, } from \"domhandler\";\nexport { DomHandler, \n// Old name for DomHandler\nDomHandler as DefaultHandler, } from \"domhandler\";\n// Helper methods\n/**\n * Parses the data, returns the resulting document.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM handler.\n */\nexport function parseDocument(data, options) {\n    const handler = new DomHandler(undefined, options);\n    new Parser(handler, options).end(data);\n    return handler.root;\n}\n/**\n * Parses data, returns an array of the root nodes.\n *\n * Note that the root nodes still have a `Document` node as their parent.\n * Use `parseDocument` to get the `Document` node instead.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM handler.\n * @deprecated Use `parseDocument` instead.\n */\nexport function parseDOM(data, options) {\n    return parseDocument(data, options).children;\n}\n/**\n * Creates a parser instance, with an attached DOM handler.\n *\n * @param callback A callback that will be called once parsing has been completed, with the resulting document.\n * @param options Optional options for the parser and DOM handler.\n * @param elementCallback An optional callback that will be called every time a tag has been completed inside of the DOM.\n */\nexport function createDocumentStream(callback, options, elementCallback) {\n    const handler = new DomHandler((error) => callback(error, handler.root), options, elementCallback);\n    return new Parser(handler, options);\n}\n/**\n * Creates a parser instance, with an attached DOM handler.\n *\n * @param callback A callback that will be called once parsing has been completed, with an array of root nodes.\n * @param options Optional options for the parser and DOM handler.\n * @param elementCallback An optional callback that will be called every time a tag has been completed inside of the DOM.\n * @deprecated Use `createDocumentStream` instead.\n */\nexport function createDomStream(callback, options, elementCallback) {\n    const handler = new DomHandler(callback, options, elementCallback);\n    return new Parser(handler, options);\n}\nexport { default as Tokenizer, } from \"./Tokenizer.js\";\n/*\n * All of the following exports exist for backwards-compatibility.\n * They should probably be removed eventually.\n */\nexport * as ElementType from \"domelementtype\";\nimport { getFeed } from \"domutils\";\nexport { getFeed } from \"domutils\";\nconst parseFeedDefaultOptions = { xmlMode: true };\n/**\n * Parse a feed.\n *\n * @param feed The feed that should be parsed, as a string.\n * @param options Optionally, options for parsing. When using this, you should set `xmlMode` to `true`.\n */\nexport function parseFeed(feed, options = parseFeedDefaultOptions) {\n    return getFeed(parseDOM(feed, options));\n}\nexport * as DomUtils from \"domutils\";\n//# sourceMappingURL=index.js.map",null,"import Tokenizer, { QuoteType } from \"./Tokenizer.js\";\nimport { fromCodePoint } from \"entities/lib/decode.js\";\nconst formTags = new Set([\n    \"input\",\n    \"option\",\n    \"optgroup\",\n    \"select\",\n    \"button\",\n    \"datalist\",\n    \"textarea\",\n]);\nconst pTag = new Set([\"p\"]);\nconst tableSectionTags = new Set([\"thead\", \"tbody\"]);\nconst ddtTags = new Set([\"dd\", \"dt\"]);\nconst rtpTags = new Set([\"rt\", \"rp\"]);\nconst openImpliesClose = new Map([\n    [\"tr\", new Set([\"tr\", \"th\", \"td\"])],\n    [\"th\", new Set([\"th\"])],\n    [\"td\", new Set([\"thead\", \"th\", \"td\"])],\n    [\"body\", new Set([\"head\", \"link\", \"script\"])],\n    [\"li\", new Set([\"li\"])],\n    [\"p\", pTag],\n    [\"h1\", pTag],\n    [\"h2\", pTag],\n    [\"h3\", pTag],\n    [\"h4\", pTag],\n    [\"h5\", pTag],\n    [\"h6\", pTag],\n    [\"select\", formTags],\n    [\"input\", formTags],\n    [\"output\", formTags],\n    [\"button\", formTags],\n    [\"datalist\", formTags],\n    [\"textarea\", formTags],\n    [\"option\", new Set([\"option\"])],\n    [\"optgroup\", new Set([\"optgroup\", \"option\"])],\n    [\"dd\", ddtTags],\n    [\"dt\", ddtTags],\n    [\"address\", pTag],\n    [\"article\", pTag],\n    [\"aside\", pTag],\n    [\"blockquote\", pTag],\n    [\"details\", pTag],\n    [\"div\", pTag],\n    [\"dl\", pTag],\n    [\"fieldset\", pTag],\n    [\"figcaption\", pTag],\n    [\"figure\", pTag],\n    [\"footer\", pTag],\n    [\"form\", pTag],\n    [\"header\", pTag],\n    [\"hr\", pTag],\n    [\"main\", pTag],\n    [\"nav\", pTag],\n    [\"ol\", pTag],\n    [\"pre\", pTag],\n    [\"section\", pTag],\n    [\"table\", pTag],\n    [\"ul\", pTag],\n    [\"rt\", rtpTags],\n    [\"rp\", rtpTags],\n    [\"tbody\", tableSectionTags],\n    [\"tfoot\", tableSectionTags],\n]);\nconst voidElements = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\nconst foreignContextElements = new Set([\"math\", \"svg\"]);\nconst htmlIntegrationElements = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignobject\",\n    \"desc\",\n    \"title\",\n]);\nconst reNameEnd = /\\s|\\//;\nexport class Parser {\n    constructor(cbs, options = {}) {\n        var _a, _b, _c, _d, _e;\n        this.options = options;\n        /** The start index of the last event. */\n        this.startIndex = 0;\n        /** The end index of the last event. */\n        this.endIndex = 0;\n        /**\n         * Store the start index of the current open tag,\n         * so we can update the start index for attributes.\n         */\n        this.openTagStart = 0;\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribvalue = \"\";\n        this.attribs = null;\n        this.stack = [];\n        this.buffers = [];\n        this.bufferOffset = 0;\n        /** The index of the last written buffer. Used when resuming after a `pause()`. */\n        this.writeIndex = 0;\n        /** Indicates whether the parser has finished running / `.end` has been called. */\n        this.ended = false;\n        this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n        this.htmlMode = !this.options.xmlMode;\n        this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : this.htmlMode;\n        this.lowerCaseAttributeNames =\n            (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : this.htmlMode;\n        this.tokenizer = new ((_c = options.Tokenizer) !== null && _c !== void 0 ? _c : Tokenizer)(this.options, this);\n        this.foreignContext = [!this.htmlMode];\n        (_e = (_d = this.cbs).onparserinit) === null || _e === void 0 ? void 0 : _e.call(_d, this);\n    }\n    // Tokenizer event handlers\n    /** @internal */\n    ontext(start, endIndex) {\n        var _a, _b;\n        const data = this.getSlice(start, endIndex);\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n        this.startIndex = endIndex;\n    }\n    /** @internal */\n    ontextentity(cp, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, fromCodePoint(cp));\n        this.startIndex = endIndex;\n    }\n    /**\n     * Checks if the current tag is a void element. Override this if you want\n     * to specify your own additional void elements.\n     */\n    isVoidElement(name) {\n        return this.htmlMode && voidElements.has(name);\n    }\n    /** @internal */\n    onopentagname(start, endIndex) {\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        this.emitOpenTag(name);\n    }\n    emitOpenTag(name) {\n        var _a, _b, _c, _d;\n        this.openTagStart = this.startIndex;\n        this.tagname = name;\n        const impliesClose = this.htmlMode && openImpliesClose.get(name);\n        if (impliesClose) {\n            while (this.stack.length > 0 && impliesClose.has(this.stack[0])) {\n                const element = this.stack.shift();\n                (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, true);\n            }\n        }\n        if (!this.isVoidElement(name)) {\n            this.stack.unshift(name);\n            if (this.htmlMode) {\n                if (foreignContextElements.has(name)) {\n                    this.foreignContext.unshift(true);\n                }\n                else if (htmlIntegrationElements.has(name)) {\n                    this.foreignContext.unshift(false);\n                }\n            }\n        }\n        (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n        if (this.cbs.onopentag)\n            this.attribs = {};\n    }\n    endOpenTag(isImplied) {\n        var _a, _b;\n        this.startIndex = this.openTagStart;\n        if (this.attribs) {\n            (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n            this.attribs = null;\n        }\n        if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n            this.cbs.onclosetag(this.tagname, true);\n        }\n        this.tagname = \"\";\n    }\n    /** @internal */\n    onopentagend(endIndex) {\n        this.endIndex = endIndex;\n        this.endOpenTag(false);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onclosetag(start, endIndex) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        if (this.htmlMode &&\n            (foreignContextElements.has(name) ||\n                htmlIntegrationElements.has(name))) {\n            this.foreignContext.shift();\n        }\n        if (!this.isVoidElement(name)) {\n            const pos = this.stack.indexOf(name);\n            if (pos !== -1) {\n                for (let index = 0; index <= pos; index++) {\n                    const element = this.stack.shift();\n                    // We know the stack has sufficient elements.\n                    (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, index !== pos);\n                }\n            }\n            else if (this.htmlMode && name === \"p\") {\n                // Implicit open before close\n                this.emitOpenTag(\"p\");\n                this.closeCurrentTag(true);\n            }\n        }\n        else if (this.htmlMode && name === \"br\") {\n            // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n            (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\");\n            (_f = (_e = this.cbs).onopentag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", {}, true);\n            (_h = (_g = this.cbs).onclosetag) === null || _h === void 0 ? void 0 : _h.call(_g, \"br\", false);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onselfclosingtag(endIndex) {\n        this.endIndex = endIndex;\n        if (this.options.recognizeSelfClosing || this.foreignContext[0]) {\n            this.closeCurrentTag(false);\n            // Set `startIndex` for next node\n            this.startIndex = endIndex + 1;\n        }\n        else {\n            // Ignore the fact that the tag is self-closing.\n            this.onopentagend(endIndex);\n        }\n    }\n    closeCurrentTag(isOpenImplied) {\n        var _a, _b;\n        const name = this.tagname;\n        this.endOpenTag(isOpenImplied);\n        // Self-closing tags will be on the top of the stack\n        if (this.stack[0] === name) {\n            // If the opening tag isn't implied, the closing tag has to be implied.\n            (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n            this.stack.shift();\n        }\n    }\n    /** @internal */\n    onattribname(start, endIndex) {\n        this.startIndex = start;\n        const name = this.getSlice(start, endIndex);\n        this.attribname = this.lowerCaseAttributeNames\n            ? name.toLowerCase()\n            : name;\n    }\n    /** @internal */\n    onattribdata(start, endIndex) {\n        this.attribvalue += this.getSlice(start, endIndex);\n    }\n    /** @internal */\n    onattribentity(cp) {\n        this.attribvalue += fromCodePoint(cp);\n    }\n    /** @internal */\n    onattribend(quote, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double\n            ? '\"'\n            : quote === QuoteType.Single\n                ? \"'\"\n                : quote === QuoteType.NoValue\n                    ? undefined\n                    : null);\n        if (this.attribs &&\n            !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n            this.attribs[this.attribname] = this.attribvalue;\n        }\n        this.attribvalue = \"\";\n    }\n    getInstructionName(value) {\n        const index = value.search(reNameEnd);\n        let name = index < 0 ? value : value.substr(0, index);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        return name;\n    }\n    /** @internal */\n    ondeclaration(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onprocessinginstruction(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncomment(start, endIndex, offset) {\n        var _a, _b, _c, _d;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));\n        (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncdata(start, endIndex, offset) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex - offset);\n        if (!this.htmlMode || this.options.recognizeCDATA) {\n            (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n            (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n        }\n        else {\n            (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, `[CDATA[${value}]]`);\n            (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onend() {\n        var _a, _b;\n        if (this.cbs.onclosetag) {\n            // Set the end index for all remaining tags\n            this.endIndex = this.startIndex;\n            for (let index = 0; index < this.stack.length; index++) {\n                this.cbs.onclosetag(this.stack[index], true);\n            }\n        }\n        (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Resets the parser to a blank state, ready to parse a new HTML document\n     */\n    reset() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.tokenizer.reset();\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribs = null;\n        this.stack.length = 0;\n        this.startIndex = 0;\n        this.endIndex = 0;\n        (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n        this.buffers.length = 0;\n        this.foreignContext.length = 0;\n        this.foreignContext.unshift(!this.htmlMode);\n        this.bufferOffset = 0;\n        this.writeIndex = 0;\n        this.ended = false;\n    }\n    /**\n     * Resets the parser, then parses a complete document and\n     * pushes it to the handler.\n     *\n     * @param data Document to parse.\n     */\n    parseComplete(data) {\n        this.reset();\n        this.end(data);\n    }\n    getSlice(start, end) {\n        while (start - this.bufferOffset >= this.buffers[0].length) {\n            this.shiftBuffer();\n        }\n        let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n        while (end - this.bufferOffset > this.buffers[0].length) {\n            this.shiftBuffer();\n            slice += this.buffers[0].slice(0, end - this.bufferOffset);\n        }\n        return slice;\n    }\n    shiftBuffer() {\n        this.bufferOffset += this.buffers[0].length;\n        this.writeIndex--;\n        this.buffers.shift();\n    }\n    /**\n     * Parses a chunk of data and calls the corresponding callbacks.\n     *\n     * @param chunk Chunk to parse.\n     */\n    write(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".write() after done!\"));\n            return;\n        }\n        this.buffers.push(chunk);\n        if (this.tokenizer.running) {\n            this.tokenizer.write(chunk);\n            this.writeIndex++;\n        }\n    }\n    /**\n     * Parses the end of the buffer and clears the stack, calls onend.\n     *\n     * @param chunk Optional final chunk to parse.\n     */\n    end(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".end() after done!\"));\n            return;\n        }\n        if (chunk)\n            this.write(chunk);\n        this.ended = true;\n        this.tokenizer.end();\n    }\n    /**\n     * Pauses parsing. The parser won't emit events until `resume` is called.\n     */\n    pause() {\n        this.tokenizer.pause();\n    }\n    /**\n     * Resumes parsing after `pause` was called.\n     */\n    resume() {\n        this.tokenizer.resume();\n        while (this.tokenizer.running &&\n            this.writeIndex < this.buffers.length) {\n            this.tokenizer.write(this.buffers[this.writeIndex++]);\n        }\n        if (this.ended)\n            this.tokenizer.end();\n    }\n    /**\n     * Alias of `write`, for backwards compatibility.\n     *\n     * @param chunk Chunk to parse.\n     * @deprecated\n     */\n    parseChunk(chunk) {\n        this.write(chunk);\n    }\n    /**\n     * Alias of `end`, for backwards compatibility.\n     *\n     * @param chunk Optional final chunk to parse.\n     * @deprecated\n     */\n    done(chunk) {\n        this.end(chunk);\n    }\n}\n//# sourceMappingURL=Parser.js.map",null,"import { EntityDecoder, DecodingMode, htmlDecodeTree, xmlDecodeTree, } from \"entities/lib/decode.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n    CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n    CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n    CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n    CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n    CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n    CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n    CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n    CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n    CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n    CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n    CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n    CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n    CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n    CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n    CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n    CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n    CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n    CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n    State[State[\"Text\"] = 1] = \"Text\";\n    State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n    State[State[\"InTagName\"] = 3] = \"InTagName\";\n    State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n    State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n    State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n    State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n    // Attributes\n    State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n    State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n    State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n    State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n    State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n    State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n    State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n    // Declarations\n    State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n    State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n    // Processing instructions\n    State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n    // Comments & CDATA\n    State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n    State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n    State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n    State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n    // Special tags\n    State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n    State[State[\"SpecialStartSequence\"] = 23] = \"SpecialStartSequence\";\n    State[State[\"InSpecialTag\"] = 24] = \"InSpecialTag\";\n    State[State[\"InEntity\"] = 25] = \"InEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n    return (c === CharCodes.Space ||\n        c === CharCodes.NewLine ||\n        c === CharCodes.Tab ||\n        c === CharCodes.FormFeed ||\n        c === CharCodes.CarriageReturn);\n}\nfunction isEndOfTagSection(c) {\n    return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isASCIIAlpha(c) {\n    return ((c >= CharCodes.LowerA && c <= CharCodes.LowerZ) ||\n        (c >= CharCodes.UpperA && c <= CharCodes.UpperZ));\n}\nexport var QuoteType;\n(function (QuoteType) {\n    QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n    QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n    QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n    QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nconst Sequences = {\n    Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]),\n    CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]),\n    CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]),\n    ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]),\n    StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]),\n    TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]), // `</title`\n};\nexport default class Tokenizer {\n    constructor({ xmlMode = false, decodeEntities = true, }, cbs) {\n        this.cbs = cbs;\n        /** The current state the tokenizer is in. */\n        this.state = State.Text;\n        /** The read buffer. */\n        this.buffer = \"\";\n        /** The beginning of the section that is currently being read. */\n        this.sectionStart = 0;\n        /** The index within the buffer that we are currently looking at. */\n        this.index = 0;\n        /** The start of the last entity. */\n        this.entityStart = 0;\n        /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n        this.baseState = State.Text;\n        /** For special parsing behavior inside of script and style tags. */\n        this.isSpecial = false;\n        /** Indicates whether the tokenizer has been paused. */\n        this.running = true;\n        /** The offset of the current buffer. */\n        this.offset = 0;\n        this.currentSequence = undefined;\n        this.sequenceIndex = 0;\n        this.xmlMode = xmlMode;\n        this.decodeEntities = decodeEntities;\n        this.entityDecoder = new EntityDecoder(xmlMode ? xmlDecodeTree : htmlDecodeTree, (cp, consumed) => this.emitCodePoint(cp, consumed));\n    }\n    reset() {\n        this.state = State.Text;\n        this.buffer = \"\";\n        this.sectionStart = 0;\n        this.index = 0;\n        this.baseState = State.Text;\n        this.currentSequence = undefined;\n        this.running = true;\n        this.offset = 0;\n    }\n    write(chunk) {\n        this.offset += this.buffer.length;\n        this.buffer = chunk;\n        this.parse();\n    }\n    end() {\n        if (this.running)\n            this.finish();\n    }\n    pause() {\n        this.running = false;\n    }\n    resume() {\n        this.running = true;\n        if (this.index < this.buffer.length + this.offset) {\n            this.parse();\n        }\n    }\n    stateText(c) {\n        if (c === CharCodes.Lt ||\n            (!this.decodeEntities && this.fastForwardTo(CharCodes.Lt))) {\n            if (this.index > this.sectionStart) {\n                this.cbs.ontext(this.sectionStart, this.index);\n            }\n            this.state = State.BeforeTagName;\n            this.sectionStart = this.index;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateSpecialStartSequence(c) {\n        const isEnd = this.sequenceIndex === this.currentSequence.length;\n        const isMatch = isEnd\n            ? // If we are at the end of the sequence, make sure the tag name has ended\n                isEndOfTagSection(c)\n            : // Otherwise, do a case-insensitive comparison\n                (c | 0x20) === this.currentSequence[this.sequenceIndex];\n        if (!isMatch) {\n            this.isSpecial = false;\n        }\n        else if (!isEnd) {\n            this.sequenceIndex++;\n            return;\n        }\n        this.sequenceIndex = 0;\n        this.state = State.InTagName;\n        this.stateInTagName(c);\n    }\n    /** Look for an end tag. For <title> tags, also decode entities. */\n    stateInSpecialTag(c) {\n        if (this.sequenceIndex === this.currentSequence.length) {\n            if (c === CharCodes.Gt || isWhitespace(c)) {\n                const endOfText = this.index - this.currentSequence.length;\n                if (this.sectionStart < endOfText) {\n                    // Spoof the index so that reported locations match up.\n                    const actualIndex = this.index;\n                    this.index = endOfText;\n                    this.cbs.ontext(this.sectionStart, endOfText);\n                    this.index = actualIndex;\n                }\n                this.isSpecial = false;\n                this.sectionStart = endOfText + 2; // Skip over the `</`\n                this.stateInClosingTagName(c);\n                return; // We are done; skip the rest of the function.\n            }\n            this.sequenceIndex = 0;\n        }\n        if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n            this.sequenceIndex += 1;\n        }\n        else if (this.sequenceIndex === 0) {\n            if (this.currentSequence === Sequences.TitleEnd) {\n                // We have to parse entities in <title> tags.\n                if (this.decodeEntities && c === CharCodes.Amp) {\n                    this.startEntity();\n                }\n            }\n            else if (this.fastForwardTo(CharCodes.Lt)) {\n                // Outside of <title> tags, we can fast-forward.\n                this.sequenceIndex = 1;\n            }\n        }\n        else {\n            // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n            this.sequenceIndex = Number(c === CharCodes.Lt);\n        }\n    }\n    stateCDATASequence(c) {\n        if (c === Sequences.Cdata[this.sequenceIndex]) {\n            if (++this.sequenceIndex === Sequences.Cdata.length) {\n                this.state = State.InCommentLike;\n                this.currentSequence = Sequences.CdataEnd;\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n            }\n        }\n        else {\n            this.sequenceIndex = 0;\n            this.state = State.InDeclaration;\n            this.stateInDeclaration(c); // Reconsume the character\n        }\n    }\n    /**\n     * When we wait for one specific character, we can speed things up\n     * by skipping through the buffer until we find it.\n     *\n     * @returns Whether the character was found.\n     */\n    fastForwardTo(c) {\n        while (++this.index < this.buffer.length + this.offset) {\n            if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n                return true;\n            }\n        }\n        /*\n         * We increment the index at the end of the `parse` loop,\n         * so set it to `buffer.length - 1` here.\n         *\n         * TODO: Refactor `parse` to increment index before calling states.\n         */\n        this.index = this.buffer.length + this.offset - 1;\n        return false;\n    }\n    /**\n     * Comments and CDATA end with `-->` and `]]>`.\n     *\n     * Their common qualities are:\n     * - Their end sequences have a distinct character they start with.\n     * - That character is then repeated, so we have to check multiple repeats.\n     * - All characters but the start character of the sequence can be skipped.\n     */\n    stateInCommentLike(c) {\n        if (c === this.currentSequence[this.sequenceIndex]) {\n            if (++this.sequenceIndex === this.currentSequence.length) {\n                if (this.currentSequence === Sequences.CdataEnd) {\n                    this.cbs.oncdata(this.sectionStart, this.index, 2);\n                }\n                else {\n                    this.cbs.oncomment(this.sectionStart, this.index, 2);\n                }\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n                this.state = State.Text;\n            }\n        }\n        else if (this.sequenceIndex === 0) {\n            // Fast-forward to the first character of the sequence\n            if (this.fastForwardTo(this.currentSequence[0])) {\n                this.sequenceIndex = 1;\n            }\n        }\n        else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n            // Allow long sequences, eg. --->, ]]]>\n            this.sequenceIndex = 0;\n        }\n    }\n    /**\n     * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n     *\n     * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n     * We allow anything that wouldn't end the tag.\n     */\n    isTagStartChar(c) {\n        return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n    }\n    startSpecial(sequence, offset) {\n        this.isSpecial = true;\n        this.currentSequence = sequence;\n        this.sequenceIndex = offset;\n        this.state = State.SpecialStartSequence;\n    }\n    stateBeforeTagName(c) {\n        if (c === CharCodes.ExclamationMark) {\n            this.state = State.BeforeDeclaration;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Questionmark) {\n            this.state = State.InProcessingInstruction;\n            this.sectionStart = this.index + 1;\n        }\n        else if (this.isTagStartChar(c)) {\n            const lower = c | 0x20;\n            this.sectionStart = this.index;\n            if (!this.xmlMode && lower === Sequences.TitleEnd[2]) {\n                this.startSpecial(Sequences.TitleEnd, 3);\n            }\n            else {\n                this.state =\n                    !this.xmlMode && lower === Sequences.ScriptEnd[2]\n                        ? State.BeforeSpecialS\n                        : State.InTagName;\n            }\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.BeforeClosingTagName;\n        }\n        else {\n            this.state = State.Text;\n            this.stateText(c);\n        }\n    }\n    stateInTagName(c) {\n        if (isEndOfTagSection(c)) {\n            this.cbs.onopentagname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateBeforeClosingTagName(c) {\n        if (isWhitespace(c)) {\n            // Ignore\n        }\n        else if (c === CharCodes.Gt) {\n            this.state = State.Text;\n        }\n        else {\n            this.state = this.isTagStartChar(c)\n                ? State.InClosingTagName\n                : State.InSpecialComment;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInClosingTagName(c) {\n        if (c === CharCodes.Gt || isWhitespace(c)) {\n            this.cbs.onclosetag(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterClosingTagName;\n            this.stateAfterClosingTagName(c);\n        }\n    }\n    stateAfterClosingTagName(c) {\n        // Skip everything until \">\"\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeAttributeName(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onopentagend(this.index);\n            if (this.isSpecial) {\n                this.state = State.InSpecialTag;\n                this.sequenceIndex = 0;\n            }\n            else {\n                this.state = State.Text;\n            }\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.InSelfClosingTag;\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInSelfClosingTag(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onselfclosingtag(this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n            this.isSpecial = false; // Reset special state, in case of self-closing special tags\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateInAttributeName(c) {\n        if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n            this.cbs.onattribname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterAttributeName;\n            this.stateAfterAttributeName(c);\n        }\n    }\n    stateAfterAttributeName(c) {\n        if (c === CharCodes.Eq) {\n            this.state = State.BeforeAttributeValue;\n        }\n        else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n            this.cbs.onattribend(QuoteType.NoValue, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (!isWhitespace(c)) {\n            this.cbs.onattribend(QuoteType.NoValue, this.index);\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateBeforeAttributeValue(c) {\n        if (c === CharCodes.DoubleQuote) {\n            this.state = State.InAttributeValueDq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.SingleQuote) {\n            this.state = State.InAttributeValueSq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (!isWhitespace(c)) {\n            this.sectionStart = this.index;\n            this.state = State.InAttributeValueNq;\n            this.stateInAttributeValueNoQuotes(c); // Reconsume token\n        }\n    }\n    handleInAttributeValue(c, quote) {\n        if (c === quote ||\n            (!this.decodeEntities && this.fastForwardTo(quote))) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(quote === CharCodes.DoubleQuote\n                ? QuoteType.Double\n                : QuoteType.Single, this.index);\n            this.state = State.BeforeAttributeName;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateInAttributeValueDoubleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n    }\n    stateInAttributeValueSingleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.SingleQuote);\n    }\n    stateInAttributeValueNoQuotes(c) {\n        if (isWhitespace(c) || c === CharCodes.Gt) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(QuoteType.Unquoted, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateBeforeDeclaration(c) {\n        if (c === CharCodes.OpeningSquareBracket) {\n            this.state = State.CDATASequence;\n            this.sequenceIndex = 0;\n        }\n        else {\n            this.state =\n                c === CharCodes.Dash\n                    ? State.BeforeComment\n                    : State.InDeclaration;\n        }\n    }\n    stateInDeclaration(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.ondeclaration(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateInProcessingInstruction(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeComment(c) {\n        if (c === CharCodes.Dash) {\n            this.state = State.InCommentLike;\n            this.currentSequence = Sequences.CommentEnd;\n            // Allow short comments (eg. <!-->)\n            this.sequenceIndex = 2;\n            this.sectionStart = this.index + 1;\n        }\n        else {\n            this.state = State.InDeclaration;\n        }\n    }\n    stateInSpecialComment(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.oncomment(this.sectionStart, this.index, 0);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeSpecialS(c) {\n        const lower = c | 0x20;\n        if (lower === Sequences.ScriptEnd[3]) {\n            this.startSpecial(Sequences.ScriptEnd, 4);\n        }\n        else if (lower === Sequences.StyleEnd[3]) {\n            this.startSpecial(Sequences.StyleEnd, 4);\n        }\n        else {\n            this.state = State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    }\n    startEntity() {\n        this.baseState = this.state;\n        this.state = State.InEntity;\n        this.entityStart = this.index;\n        this.entityDecoder.startEntity(this.xmlMode\n            ? DecodingMode.Strict\n            : this.baseState === State.Text ||\n                this.baseState === State.InSpecialTag\n                ? DecodingMode.Legacy\n                : DecodingMode.Attribute);\n    }\n    stateInEntity() {\n        const length = this.entityDecoder.write(this.buffer, this.index - this.offset);\n        // If `length` is positive, we are done with the entity.\n        if (length >= 0) {\n            this.state = this.baseState;\n            if (length === 0) {\n                this.index = this.entityStart;\n            }\n        }\n        else {\n            // Mark buffer as consumed.\n            this.index = this.offset + this.buffer.length - 1;\n        }\n    }\n    /**\n     * Remove data that has already been consumed from the buffer.\n     */\n    cleanup() {\n        // If we are inside of text or attributes, emit what we already have.\n        if (this.running && this.sectionStart !== this.index) {\n            if (this.state === State.Text ||\n                (this.state === State.InSpecialTag && this.sequenceIndex === 0)) {\n                this.cbs.ontext(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n            else if (this.state === State.InAttributeValueDq ||\n                this.state === State.InAttributeValueSq ||\n                this.state === State.InAttributeValueNq) {\n                this.cbs.onattribdata(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n        }\n    }\n    shouldContinue() {\n        return this.index < this.buffer.length + this.offset && this.running;\n    }\n    /**\n     * Iterates through the buffer, calling the function corresponding to the current state.\n     *\n     * States that are more likely to be hit are higher up, as a performance improvement.\n     */\n    parse() {\n        while (this.shouldContinue()) {\n            const c = this.buffer.charCodeAt(this.index - this.offset);\n            switch (this.state) {\n                case State.Text: {\n                    this.stateText(c);\n                    break;\n                }\n                case State.SpecialStartSequence: {\n                    this.stateSpecialStartSequence(c);\n                    break;\n                }\n                case State.InSpecialTag: {\n                    this.stateInSpecialTag(c);\n                    break;\n                }\n                case State.CDATASequence: {\n                    this.stateCDATASequence(c);\n                    break;\n                }\n                case State.InAttributeValueDq: {\n                    this.stateInAttributeValueDoubleQuotes(c);\n                    break;\n                }\n                case State.InAttributeName: {\n                    this.stateInAttributeName(c);\n                    break;\n                }\n                case State.InCommentLike: {\n                    this.stateInCommentLike(c);\n                    break;\n                }\n                case State.InSpecialComment: {\n                    this.stateInSpecialComment(c);\n                    break;\n                }\n                case State.BeforeAttributeName: {\n                    this.stateBeforeAttributeName(c);\n                    break;\n                }\n                case State.InTagName: {\n                    this.stateInTagName(c);\n                    break;\n                }\n                case State.InClosingTagName: {\n                    this.stateInClosingTagName(c);\n                    break;\n                }\n                case State.BeforeTagName: {\n                    this.stateBeforeTagName(c);\n                    break;\n                }\n                case State.AfterAttributeName: {\n                    this.stateAfterAttributeName(c);\n                    break;\n                }\n                case State.InAttributeValueSq: {\n                    this.stateInAttributeValueSingleQuotes(c);\n                    break;\n                }\n                case State.BeforeAttributeValue: {\n                    this.stateBeforeAttributeValue(c);\n                    break;\n                }\n                case State.BeforeClosingTagName: {\n                    this.stateBeforeClosingTagName(c);\n                    break;\n                }\n                case State.AfterClosingTagName: {\n                    this.stateAfterClosingTagName(c);\n                    break;\n                }\n                case State.BeforeSpecialS: {\n                    this.stateBeforeSpecialS(c);\n                    break;\n                }\n                case State.InAttributeValueNq: {\n                    this.stateInAttributeValueNoQuotes(c);\n                    break;\n                }\n                case State.InSelfClosingTag: {\n                    this.stateInSelfClosingTag(c);\n                    break;\n                }\n                case State.InDeclaration: {\n                    this.stateInDeclaration(c);\n                    break;\n                }\n                case State.BeforeDeclaration: {\n                    this.stateBeforeDeclaration(c);\n                    break;\n                }\n                case State.BeforeComment: {\n                    this.stateBeforeComment(c);\n                    break;\n                }\n                case State.InProcessingInstruction: {\n                    this.stateInProcessingInstruction(c);\n                    break;\n                }\n                case State.InEntity: {\n                    this.stateInEntity();\n                    break;\n                }\n            }\n            this.index++;\n        }\n        this.cleanup();\n    }\n    finish() {\n        if (this.state === State.InEntity) {\n            this.entityDecoder.end();\n            this.state = this.baseState;\n        }\n        this.handleTrailingData();\n        this.cbs.onend();\n    }\n    /** Handle any trailing data. */\n    handleTrailingData() {\n        const endIndex = this.buffer.length + this.offset;\n        // If there is no remaining data, we are done.\n        if (this.sectionStart >= endIndex) {\n            return;\n        }\n        if (this.state === State.InCommentLike) {\n            if (this.currentSequence === Sequences.CdataEnd) {\n                this.cbs.oncdata(this.sectionStart, endIndex, 0);\n            }\n            else {\n                this.cbs.oncomment(this.sectionStart, endIndex, 0);\n            }\n        }\n        else if (this.state === State.InTagName ||\n            this.state === State.BeforeAttributeName ||\n            this.state === State.BeforeAttributeValue ||\n            this.state === State.AfterAttributeName ||\n            this.state === State.InAttributeName ||\n            this.state === State.InAttributeValueSq ||\n            this.state === State.InAttributeValueDq ||\n            this.state === State.InAttributeValueNq ||\n            this.state === State.InClosingTagName) {\n            /*\n             * If we are currently in an opening or closing tag, us not calling the\n             * respective callback signals that the tag should be ignored.\n             */\n        }\n        else {\n            this.cbs.ontext(this.sectionStart, endIndex);\n        }\n    }\n    emitCodePoint(cp, consumed) {\n        if (this.baseState !== State.Text &&\n            this.baseState !== State.InSpecialTag) {\n            if (this.sectionStart < this.entityStart) {\n                this.cbs.onattribdata(this.sectionStart, this.entityStart);\n            }\n            this.sectionStart = this.entityStart + consumed;\n            this.index = this.sectionStart - 1;\n            this.cbs.onattribentity(cp);\n        }\n        else {\n            if (this.sectionStart < this.entityStart) {\n                this.cbs.ontext(this.sectionStart, this.entityStart);\n            }\n            this.sectionStart = this.entityStart + consumed;\n            this.index = this.sectionStart - 1;\n            this.cbs.ontextentity(cp, this.sectionStart);\n        }\n    }\n}\n//# sourceMappingURL=Tokenizer.js.map",null,"function extend (destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n  return destination\n}\n\nfunction repeat (character, count) {\n  return Array(count + 1).join(character)\n}\n\nfunction trimLeadingNewlines (string) {\n  return string.replace(/^\\n*/, '')\n}\n\nfunction trimTrailingNewlines (string) {\n  // avoid match-at-end regexp bottleneck, see #370\n  var indexEnd = string.length;\n  while (indexEnd > 0 && string[indexEnd - 1] === '\\n') indexEnd--;\n  return string.substring(0, indexEnd)\n}\n\nvar blockElements = [\n  'ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS',\n  'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE',\n  'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER',\n  'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES',\n  'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD',\n  'TFOOT', 'TH', 'THEAD', 'TR', 'UL'\n];\n\nfunction isBlock (node) {\n  return is(node, blockElements)\n}\n\nvar voidElements = [\n  'AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT',\n  'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'\n];\n\nfunction isVoid (node) {\n  return is(node, voidElements)\n}\n\nfunction hasVoid (node) {\n  return has(node, voidElements)\n}\n\nvar meaningfulWhenBlankElements = [\n  'A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT',\n  'AUDIO', 'VIDEO'\n];\n\nfunction isMeaningfulWhenBlank (node) {\n  return is(node, meaningfulWhenBlankElements)\n}\n\nfunction hasMeaningfulWhenBlank (node) {\n  return has(node, meaningfulWhenBlankElements)\n}\n\nfunction is (node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0\n}\n\nfunction has (node, tagNames) {\n  return (\n    node.getElementsByTagName &&\n    tagNames.some(function (tagName) {\n      return node.getElementsByTagName(tagName).length\n    })\n  )\n}\n\nvar rules = {};\n\nrules.paragraph = {\n  filter: 'p',\n\n  replacement: function (content) {\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.lineBreak = {\n  filter: 'br',\n\n  replacement: function (content, node, options) {\n    return options.br + '\\n'\n  }\n};\n\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n  replacement: function (content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\n      return (\n        '\\n\\n' + content + '\\n' + underline + '\\n\\n'\n      )\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.blockquote = {\n  filter: 'blockquote',\n\n  replacement: function (content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.list = {\n  filter: ['ul', 'ol'],\n\n  replacement: function (content, node) {\n    var parent = node.parentNode;\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content\n    } else {\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.listItem = {\n  filter: 'li',\n\n  replacement: function (content, node, options) {\n    content = content\n      .replace(/^\\n+/, '') // remove leading newlines\n      .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n      .replace(/\\n/gm, '\\n    '); // indent\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n    return (\n      prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\n    )\n  }\n};\n\nrules.indentedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'indented' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    return (\n      '\\n\\n    ' +\n      node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\n      '\\n\\n'\n    )\n  }\n};\n\nrules.fencedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'fenced' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n\n    var match;\n    while ((match = fenceInCodeRegex.exec(code))) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n\n    var fence = repeat(fenceChar, fenceSize);\n\n    return (\n      '\\n\\n' + fence + language + '\\n' +\n      code.replace(/\\n$/, '') +\n      '\\n' + fence + '\\n\\n'\n    )\n  }\n};\n\nrules.horizontalRule = {\n  filter: 'hr',\n\n  replacement: function (content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n'\n  }\n};\n\nrules.inlineLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'inlined' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    return '[' + content + '](' + href + title + ')'\n  }\n};\n\nrules.referenceLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'referenced' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n\n    this.references.push(reference);\n    return replacement\n  },\n\n  references: [],\n\n  append: function (options) {\n    var references = '';\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n    return references\n  }\n};\n\nrules.emphasis = {\n  filter: ['em', 'i'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.emDelimiter + content + options.emDelimiter\n  }\n};\n\nrules.strong = {\n  filter: ['strong', 'b'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.strongDelimiter + content + options.strongDelimiter\n  }\n};\n\nrules.code = {\n  filter: function (node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n    return node.nodeName === 'CODE' && !isCodeBlock\n  },\n\n  replacement: function (content) {\n    if (!content) return ''\n    content = content.replace(/\\r?\\n|\\r/g, ' ');\n\n    var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? ' ' : '';\n    var delimiter = '`';\n    var matches = content.match(/`+/gm) || [];\n    while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n\n    return delimiter + extraSpace + content + extraSpace + delimiter\n  }\n};\n\nrules.image = {\n  filter: 'img',\n\n  replacement: function (content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n  }\n};\n\nfunction cleanAttribute (attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : ''\n}\n\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\nfunction Rules (options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n\n  this.keepReplacement = options.keepReplacement;\n\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n\n  this.array = [];\n  for (var key in options.rules) this.array.push(options.rules[key]);\n}\n\nRules.prototype = {\n  add: function (key, rule) {\n    this.array.unshift(rule);\n  },\n\n  keep: function (filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n\n  remove: function (filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function () {\n        return ''\n      }\n    });\n  },\n\n  forNode: function (node) {\n    if (node.isBlank) return this.blankRule\n    var rule;\n\n    if ((rule = findRule(this.array, node, this.options))) return rule\n    if ((rule = findRule(this._keep, node, this.options))) return rule\n    if ((rule = findRule(this._remove, node, this.options))) return rule\n\n    return this.defaultRule\n  },\n\n  forEach: function (fn) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n};\n\nfunction findRule (rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule\n  }\n  return void 0\n}\n\nfunction filterValue (rule, node, options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function')\n  }\n}\n\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace (options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE'\n  };\n\n  if (!element.firstChild || isPre(element)) return\n\n  var prevText = null;\n  var keepLeadingWs = false;\n\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n      if ((!prevText || / $/.test(prevText.data)) &&\n          !keepLeadingWs && text[0] === ' ') {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue\n      }\n\n      node.data = text;\n\n      prevText = node;\n    } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        keepLeadingWs = false;\n      } else if (isVoid(node) || isPre(node)) {\n        // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n        prevText = null;\n        keepLeadingWs = true;\n      } else if (prevText) {\n        // Drop protection if set previously.\n        keepLeadingWs = false;\n      }\n    } else {\n      node = remove(node);\n      continue\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove (node) {\n  var next = node.nextSibling || node.parentNode;\n\n  node.parentNode.removeChild(node);\n\n  return next\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next (prev, current, isPre) {\n  if ((prev && prev.parentNode === current) || isPre(current)) {\n    return current.nextSibling || current.parentNode\n  }\n\n  return current.firstChild || current.nextSibling || current.parentNode\n}\n\n/*\n * Set up window for Node.js\n */\n\nvar root = (typeof window !== 'undefined' ? window : {});\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively () {\n  var Parser = root.DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse\n}\n\nfunction createHTMLParser () {\n  var Parser = function () {};\n\n  {\n    if (shouldUseActiveX()) {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = new window.ActiveXObject('htmlfile');\n        doc.designMode = 'on'; // disable on-page scripts\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    } else {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = document.implementation.createHTMLDocument('');\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    }\n  }\n  return Parser\n}\n\nfunction shouldUseActiveX () {\n  var useActiveX = false;\n  try {\n    document.implementation.createHTMLDocument('').open();\n  } catch (e) {\n    if (window.ActiveXObject) useActiveX = true;\n  }\n  return useActiveX\n}\n\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\nfunction RootNode (input, options) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n      // DOM parsers arrange elements in the <head> and <body>.\n      // Wrapping in a custom element ensures elements are reliably arranged in\n      // a single element.\n      '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\n      'text/html'\n    );\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid,\n    isPre: options.preformattedCode ? isPreOrCode : null\n  });\n\n  return root\n}\n\nvar _htmlParser;\nfunction htmlParser () {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser\n}\n\nfunction isPreOrCode (node) {\n  return node.nodeName === 'PRE' || node.nodeName === 'CODE'\n}\n\nfunction Node (node, options) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName === 'CODE' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node, options);\n  return node\n}\n\nfunction isBlank (node) {\n  return (\n    !isVoid(node) &&\n    !isMeaningfulWhenBlank(node) &&\n    /^\\s*$/i.test(node.textContent) &&\n    !hasVoid(node) &&\n    !hasMeaningfulWhenBlank(node)\n  )\n}\n\nfunction flankingWhitespace (node, options) {\n  if (node.isBlock || (options.preformattedCode && node.isCode)) {\n    return { leading: '', trailing: '' }\n  }\n\n  var edges = edgeWhitespace(node.textContent);\n\n  // abandon leading ASCII WS if left-flanked by ASCII WS\n  if (edges.leadingAscii && isFlankedByWhitespace('left', node, options)) {\n    edges.leading = edges.leadingNonAscii;\n  }\n\n  // abandon trailing ASCII WS if right-flanked by ASCII WS\n  if (edges.trailingAscii && isFlankedByWhitespace('right', node, options)) {\n    edges.trailing = edges.trailingNonAscii;\n  }\n\n  return { leading: edges.leading, trailing: edges.trailing }\n}\n\nfunction edgeWhitespace (string) {\n  var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))(?:(?=\\S)[\\s\\S]*\\S)?((\\s*?)([ \\t\\r\\n]*))$/);\n  return {\n    leading: m[1], // whole string for whitespace-only strings\n    leadingAscii: m[2],\n    leadingNonAscii: m[3],\n    trailing: m[4], // empty for whitespace-only strings\n    trailingNonAscii: m[5],\n    trailingAscii: m[6]\n  }\n}\n\nfunction isFlankedByWhitespace (side, node, options) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (options.preformattedCode && sibling.nodeName === 'CODE') {\n      isFlanked = false;\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n  return isFlanked\n}\n\nvar reduce = Array.prototype.reduce;\nvar escapes = [\n  [/\\\\/g, '\\\\\\\\'],\n  [/\\*/g, '\\\\*'],\n  [/^-/g, '\\\\-'],\n  [/^\\+ /g, '\\\\+ '],\n  [/^(=+)/g, '\\\\$1'],\n  [/^(#{1,6}) /g, '\\\\$1 '],\n  [/`/g, '\\\\`'],\n  [/^~~~/g, '\\\\~~~'],\n  [/\\[/g, '\\\\['],\n  [/\\]/g, '\\\\]'],\n  [/^>/g, '\\\\>'],\n  [/_/g, '\\\\_'],\n  [/^(\\d+)\\. /g, '$1\\\\. ']\n];\n\nfunction TurndownService (options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options)\n\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    preformattedCode: false,\n    blankReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' : ''\n    },\n    keepReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\n    },\n    defaultReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\n\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown: function (input) {\n    if (!canConvert(input)) {\n      throw new TypeError(\n        input + ' is not a string, or an element/document/fragment node.'\n      )\n    }\n\n    if (input === '') return ''\n\n    var output = process.call(this, new RootNode(input, this.options));\n    return postProcess.call(this, output)\n  },\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  use: function (plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions')\n    }\n    return this\n  },\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  addRule: function (key, rule) {\n    this.rules.add(key, rule);\n    return this\n  },\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  keep: function (filter) {\n    this.rules.keep(filter);\n    return this\n  },\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  remove: function (filter) {\n    this.rules.remove(filter);\n    return this\n  },\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape: function (string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1])\n    }, string)\n  }\n};\n\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process (parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node, self.options);\n\n    var replacement = '';\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n\n    return join(output, replacement)\n  }, '')\n}\n\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\nfunction postProcess (output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\n}\n\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction replacementForNode (node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return (\n    whitespace.leading +\n    rule.replacement(content, node, this.options) +\n    whitespace.trailing\n  )\n}\n\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */\n\nfunction join (output, replacement) {\n  var s1 = trimTrailingNewlines(output);\n  var s2 = trimLeadingNewlines(replacement);\n  var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n  var separator = '\\n\\n'.substring(0, nls);\n\n  return s1 + separator + s2\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert (input) {\n  return (\n    input != null && (\n      typeof input === 'string' ||\n      (input.nodeType && (\n        input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\n      ))\n    )\n  )\n}\n\nexport default TurndownService;\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$exportWildcard","dest","source","keys","forEach","key","hasOwnProperty","$parcel$interopDefault","a","__esModule","default","parser","$d016a34ede83f3d0$export$b992dc138d950e31","$10632aaf914d6bd1$var$_a","$21b54aeefac41b63$var$CharCodes","$21b54aeefac41b63$export$6a4325c613e0faec","$21b54aeefac41b63$var$EntityDecoderState","$21b54aeefac41b63$export$8c8f129ce60f53c","$19c65afdc12482fd$export$b8c86583d9718b50","$19c65afdc12482fd$export$1851b20d614eb756","$5d2d1e3b58306e70$export$406a59d989e8005a","$ed43754fae89976b$var$CharacterCodes","$6de3987936ef985e$export$4e8b093ec8dcab0d","$6de3987936ef985e$export$dbc3de62b8fcdc89","$eeb0961446aae8e3$export$6100ba28696e12de","$7221566bd4d49f44$export$aafa59e2e03f2942","$7221566bd4d49f44$export$68d8715fc104d294","$13b6aff9b77366c5$export$e3f6c2feb5c0ecc0","$0d242c12c37a5644$export$9e0efcb140234d2","$05436e75d13cd0ed$export$f435f793048e7a0f","$108ddd412d07cc89$var$CharCodes","$108ddd412d07cc89$var$BinTrieFlags","$108ddd412d07cc89$var$EntityDecoderState","$108ddd412d07cc89$var$DecodingMode","$5deb0c47e1a27c89$export$fb4028874a74450","$5deb0c47e1a27c89$export$380b7bc9e6cb1918","$5deb0c47e1a27c89$export$a74d46c85337d29a","$5deb0c47e1a27c89$export$7e674a85a2656dce","$5deb0c47e1a27c89$export$cb0999a53e0acaed","$2c4fc6157fdd925a$var$State","$3a77e1f54f03a4f4$export$e41c32906b33062a","$546dc23fbaaf59e4$var$InsertionMode","$361de31a633664d8$var$CharCodes","$361de31a633664d8$var$State","$361de31a633664d8$export$cbf5509cea2ad22","$30033f2c615b9910$var$CharCodes","$30033f2c615b9910$var$State","$30033f2c615b9910$export$cbf5509cea2ad22","$3fb77fbe57d68b10$var$_htmlParser","$663deac50d96ff47$export$84b2d1b68830363f","$663deac50d96ff47$export$fcef1edb02975fb9","$663deac50d96ff47$export$ea0aeb8d0cfa7f2","$663deac50d96ff47$export$75aa5ef37edb24b7","$663deac50d96ff47$var$ParsingState$2","$663deac50d96ff47$export$674e5aeb45120251","$663deac50d96ff47$var$ParsingState$1","$663deac50d96ff47$var$ParsingState","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","value","Uint16Array","split","map","c","charCodeAt","replaceCodePoint","fromCodePoint","$1f70e136a18978e0$var$_a","$1f70e136a18978e0$var$decodeMap","Map","$1f70e136a18978e0$var$replaceCodePoint","codePoint","_a","String","output","fromCharCode","$b019e32c4fb40ff8$var$regex","onlyFirst","RegExp","undefined","$4f1a061ba92dfd42$export$2e2bcd8739ae039","$e7b00ddbb5cafea0$var$segmenter","Intl","Segmenter","$e7b00ddbb5cafea0$export$2e2bcd8739ae039","string","options","length","ambiguousIsNarrow","countAnsiEscapeCodes","TypeError","replace","width","eastAsianWidthOptions","ambiguousAsWide","segment","character","codePointAt","test","x","$6a489aa68eaa6277$var$validate","Number","isSafeInteger","$00a54fca6088e8eb$export$2e2bcd8739ae039","xml","decodeEntities","$00a54fca6088e8eb$var$xmlModeDefault","_useHtmlParser2","xmlMode","$00a54fca6088e8eb$export$bffa455ba8c619a6","$c1bcc44f974e65ab$exports","$c1bcc44f974e65ab$export$c0bb0b647f701bb5","$c1bcc44f974e65ab$export$f2913fe8983302e","$c1bcc44f974e65ab$export$6f093cfa640b7166","$c1bcc44f974e65ab$export$8a49393be2d55148","$c1bcc44f974e65ab$export$e8e78c978b129247","$c1bcc44f974e65ab$export$2344b14b097df817","$c1bcc44f974e65ab$export$4950aa0f605343fb","$072f2bad516501ed$exports","$298fc1d08428934f$export$3bf645f08efe3292","$298fc1d08428934f$export$c2d65aed98d39b56","$298fc1d08428934f$export$1879817ac5c922b7","$298fc1d08428934f$export$3ab01370f5e64ac8","$298fc1d08428934f$export$62858bae88b53fd0","$298fc1d08428934f$export$bd5ff50f0e53d41c","$5e7710faf81de260$exports","$5e7710faf81de260$export$39484b727cc2f324","$5e7710faf81de260$export$7ed15b4d2218408","$5e7710faf81de260$export$c72d34660a162238","node","Array","isArray","join","name","children","data","$5e7710faf81de260$export$e0e0794250e9118f","$5e7710faf81de260$export$5864bc2a45f1eb81","ElementType","$d016a34ede83f3d0$export$be92b6f5f03c0fe9","Root","$d016a34ede83f3d0$export$5f1af8db9871e1d6","Text","$d016a34ede83f3d0$export$befdefbdce210f91","Directive","$d016a34ede83f3d0$export$4d299b491347818a","Comment","$d016a34ede83f3d0$export$2f8b47a141e57afc","Script","$d016a34ede83f3d0$export$d9e45bc13d335801","Style","$d016a34ede83f3d0$export$3288d34c523a1192","Tag","$d016a34ede83f3d0$export$1f8b8f7e5c763232","CDATA","$d016a34ede83f3d0$export$31b44af36ff2c60f","Doctype","$298fc1d08428934f$export$85c928794f8d04d4","constructor","parent","prev","next","startIndex","endIndex","parentNode","previousSibling","nextSibling","cloneNode","recursive","$298fc1d08428934f$export$ae8e35ea29ddac22","$298fc1d08428934f$export$c3569d91cd44d357","nodeValue","$298fc1d08428934f$export$5f1af8db9871e1d6","arguments","type","nodeType","$298fc1d08428934f$export$4d299b491347818a","$298fc1d08428934f$export$9269dce19ee35e96","$298fc1d08428934f$export$62be934f90997196","firstChild","lastChild","childNodes","$298fc1d08428934f$export$1f8b8f7e5c763232","$298fc1d08428934f$export$b34a105447964f9f","$298fc1d08428934f$export$db77ccec0bb4ccac","attribs","tagName","attributes","_b","namespace","prefix","elem","$298fc1d08428934f$export$4b5d79f26e0e3ad5","prototype","result","$298fc1d08428934f$var$cloneChildren","clone","child","instruction","sourceCodeLocation","childs","i","$5d00ae21c5789654$var$defaultOpts","withStartIndices","withEndIndices","$5d00ae21c5789654$export$ff8ccbac9225de62","callback","elementCB","dom","root","done","tagStack","lastNode","onparserinit","onreset","onend","handleCallback","onerror","error","onclosetag","pop","onopentag","element","addNode","push","ontext","oncomment","oncommentend","oncdatastart","text","oncdataend","onprocessinginstruction","$955886d6453f1f75$export$2e2bcd8739ae039","$79538e6bbdd097a4$export$2e2bcd8739ae039","$10632aaf914d6bd1$var$decodeMap","$10632aaf914d6bd1$export$73bfc63873071f74","$21b54aeefac41b63$var$isNumber","ZERO","NINE","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","$21b54aeefac41b63$export$15263a93ff7ec8ba","decodeTree","emitCodePoint","errors","state","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","write","str","offset","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","start","end","base","digitCount","Math","pow","parseInt","substr","startIdx","char","UPPER_A","UPPER_F","LOWER_A","LOWER_F","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","$21b54aeefac41b63$export$44c08d99945e6276","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","max","Attribute","$21b54aeefac41b63$var$isEntityInAttributeInvalidEnd","EQUALS","UPPER_Z","LOWER_Z","emitNotTerminatedNamedEntity","emitNamedEntityData","$21b54aeefac41b63$var$getDecoder","ret","decoder","lastIndex","indexOf","slice","len","$e72123220ae6606b$export$5699810ce3244ab8","$e72123220ae6606b$var$xmlCodeMap","$e72123220ae6606b$export$e02688b8085d016b","index","$e72123220ae6606b$export$18855ec5be97da16","match","lastIdx","exec","substring","toString","$e72123220ae6606b$var$getEscaper","regex","$e72123220ae6606b$export$30330f3d5eb70e11","$e72123220ae6606b$export$96e6fc3a139b2555","EntityLevel","EncodingMode","$c6415ff239ea0ed7$export$82b917442d249e05","val","toLowerCase","$c6415ff239ea0ed7$export$b4cfbfd90280b005","$e9cd942395a2f848$var$unencodedElements","Set","$e9cd942395a2f848$var$replaceQuotes","$e9cd942395a2f848$var$singleTag","$e9cd942395a2f848$export$b3890eb0ae9dca99","nodes","$e9cd942395a2f848$var$renderNode","$e9cd942395a2f848$var$renderTag","opts","$e9cd942395a2f848$var$foreignModeIntegrationPoints","has","$e9cd942395a2f848$var$foreignElements","tag","$e9cd942395a2f848$var$formatAttributes","encode","encodeEntities","emptyAttrs","selfClosingTags","$e9cd942395a2f848$var$renderText","$96c591732bbe9fd9$exports","$96c591732bbe9fd9$export$f8cf48ee793b41be","$96c591732bbe9fd9$export$58081aedf094d85b","$96c591732bbe9fd9$export$f312c3733b79ac0d","siblings","unshift","$96c591732bbe9fd9$export$1e335898aa11b111","$96c591732bbe9fd9$export$aa37f90c17957f38","$96c591732bbe9fd9$export$7d9f7e9c1c02b41e","$96c591732bbe9fd9$export$9be3779649ef9cc7","$96c591732bbe9fd9$export$c8bafb6e59c0b8e","$22117dbf00ca9159$exports","$22117dbf00ca9159$export$f883456a56996078","childsIndex","lastIndexOf","splice","$22117dbf00ca9159$export$2dfe578f95754f6a","replacement","$22117dbf00ca9159$export$1b8e57c9ea42f1d2","sibling","$22117dbf00ca9159$export$10d8903dec122b9d","currNext","$22117dbf00ca9159$export$47b51e6d100007bc","$22117dbf00ca9159$export$68159836694e22c1","$89e4260ec6b7089c$exports","$89e4260ec6b7089c$export$3dea766d36a8935f","recurse","limit","Infinity","$89e4260ec6b7089c$export$71aa6c912b956294","nodeStack","indexStack","shift","$89e4260ec6b7089c$export$ac03a862904ce329","find","$89e4260ec6b7089c$export$a541876d5d7daf90","$89e4260ec6b7089c$export$18200ea6c8035394","$89e4260ec6b7089c$export$9d99dce58ac4a31b","some","checked","$a2da03981bf43417$exports","$a2da03981bf43417$export$7b31db6b5a0b2f32","$a2da03981bf43417$export$73eac51a39d6b0eb","$a2da03981bf43417$export$83595b84fc78b9b4","$a2da03981bf43417$export$af941c3c7c3b40f5","$a2da03981bf43417$export$f5d981e30be5545b","$a2da03981bf43417$var$Checks","tag_name","tag_type","tag_contains","$a2da03981bf43417$var$getAttribCheck","attrib","$a2da03981bf43417$var$combineFuncs","b","$a2da03981bf43417$var$compileTest","funcs","reduce","$5d2d1e3b58306e70$exports","$5d2d1e3b58306e70$export$171dc294232ebeef","idx","ancestor","includes","$5d2d1e3b58306e70$export$17303b8fea718ecc","nodeA","nodeB","aParents","bParents","maxIdx","min","DISCONNECTED","sharedParent","aSibling","bSibling","FOLLOWING","CONTAINED_BY","PRECEDING","CONTAINS","$5d2d1e3b58306e70$export$1c267319665a7e7e","filter","arr","sort","relative","DocumentPosition","$1f11e7a1ecde59b5$exports","$1f11e7a1ecde59b5$export$ad32138c9e09ad4","doc","feedRoot","$1f11e7a1ecde59b5$var$getOneElement","$1f11e7a1ecde59b5$var$isValidFeed","$1f11e7a1ecde59b5$var$getAtomFeed","feed","items","item","entry","media","$1f11e7a1ecde59b5$var$getMediaElements","$1f11e7a1ecde59b5$var$addConditionally","href","link","description","$1f11e7a1ecde59b5$var$fetch","pubDate","Date","updated","$1f11e7a1ecde59b5$var$getRssFeed","$1f11e7a1ecde59b5$var$MEDIA_KEYS_STRING","$1f11e7a1ecde59b5$var$MEDIA_KEYS_INT","where","medium","isDefault","expression","trim","obj","prop","$c1bcc44f974e65ab$var$render","that","_root","toRender","$c1bcc44f974e65ab$var$isOptions","_options","elements","elems","context","keepScripts","parsed","load","remove","container","contained","arr1","arr2","$c1bcc44f974e65ab$var$isArrayLike","newLength","$719788c75578d782$exports","$ed43754fae89976b$export$799a4b197f11d37","maybeCheerio","cheerio","$ed43754fae89976b$export$74822c5de6e95c1","array","fn","$ed43754fae89976b$export$773334283a3d1a04","el","$ed43754fae89976b$export$144ef0648535ac5a","tagStart","tagChar","LowerA","LowerZ","UpperA","UpperZ","Exclamation","$719788c75578d782$export$7aabe8b3a840d2fd","$719788c75578d782$export$977f3f6a9323c0f6","$719788c75578d782$export$4051a07651545597","$719788c75578d782$export$b02c28252f48c6ac","$719788c75578d782$export$842f2b51efdcb631","$719788c75578d782$export$4ea3d958472af68f","$719788c75578d782$export$d2cf6cd1dc7067d3","$719788c75578d782$export$c2255604a80b4506","$719788c75578d782$export$4a80062ca50b57c7","CharacterCodes","$719788c75578d782$var$hasOwn","$719788c75578d782$var$rspace","$719788c75578d782$var$dataAttrPrefix","$719788c75578d782$var$primitives","null","true","false","$719788c75578d782$var$rboolean","$719788c75578d782$var$rbrace","$719788c75578d782$var$getAttr","$719788c75578d782$var$setAttr","$719788c75578d782$var$removeAttribute","objName","objValue","$719788c75578d782$var$getProp","$719788c75578d782$var$setProp","property","css","p","toUpperCase","URL","baseURI","wrap","html","$719788c75578d782$var$setData","assign","$719788c75578d782$var$readData","domNames","jsNames","attrName","startsWith","domName","_","jsName","JSON","parse","dataEl","querying","option","attr","removeAttr","values","toArray","$719788c75578d782$var$splitNames","names","attrNames","className","clazz","classNames","numElements","setClass","j","appendClass","classes","numClasses","removeAll","elClasses","changed","stateVal","elementClasses","$bb3edb5ec381eef7$exports","$bb3edb5ec381eef7$export$71aa6c912b956294","$bb3edb5ec381eef7$export$8f2c8e61d147b502","$bb3edb5ec381eef7$export$91124bb58bc04465","$bb3edb5ec381eef7$export$7901f6cd558b9a93","$bb3edb5ec381eef7$export$dcd0aa73ca0eb350","$bb3edb5ec381eef7$export$ff7f7c97cdce86e","$bb3edb5ec381eef7$export$48cfd1e771a65c4f","$bb3edb5ec381eef7$export$3cd99760d81ede63","$bb3edb5ec381eef7$export$c2850259fcee1ef","$bb3edb5ec381eef7$export$232faf9add678146","$bb3edb5ec381eef7$export$5a01ccd45552d0b4","$bb3edb5ec381eef7$export$637b2d5472ecd3ca","$bb3edb5ec381eef7$export$9866dd70b0dcd4c3","$bb3edb5ec381eef7$export$bacb5cc5a11aef16","$bb3edb5ec381eef7$export$fd59df041b888442","$bb3edb5ec381eef7$export$79b2f7037acddd43","$bb3edb5ec381eef7$export$871de8747c9eaa88","$bb3edb5ec381eef7$export$3dea766d36a8935f","$bb3edb5ec381eef7$export$226b3eccf92c9ed9","$bb3edb5ec381eef7$export$6003a5f097c73977","$bb3edb5ec381eef7$export$a4f4bb6b1453fff5","$bb3edb5ec381eef7$export$43128fadae87b74a","$bb3edb5ec381eef7$export$4c7897fafd92b108","$bb3edb5ec381eef7$export$9663ddc1cf085b32","$bb3edb5ec381eef7$export$3988ae62b71be9a3","$bb3edb5ec381eef7$export$45b10814cc054894","$bb3edb5ec381eef7$export$b610b8812bbcded9","$bb3edb5ec381eef7$export$58adb3bec8346d0f","$bb3edb5ec381eef7$export$bd5df0f255a350f8","$bb3edb5ec381eef7$export$e16d8520af44a096","$bb3edb5ec381eef7$export$61478bf9690647fe","SelectorType","AttributeAction","$093d7ffb078d3faf$var$reName","$093d7ffb078d3faf$var$reEscape","$093d7ffb078d3faf$var$actionTypes","Element","Start","End","Any","Not","Hyphen","$093d7ffb078d3faf$var$unpackPseudos","$093d7ffb078d3faf$export$41d1fe2780697dca","selector","Adjacent","Child","Descendant","Parent","Sibling","ColumnCombinator","$093d7ffb078d3faf$var$stripQuotesFromPseudos","$093d7ffb078d3faf$var$funescape","escaped","escapedWhitespace","high","$093d7ffb078d3faf$var$unescapeCSS","$093d7ffb078d3faf$var$isQuote","$093d7ffb078d3faf$var$isWhitespace","$093d7ffb078d3faf$export$98e6a39c04603d36","subselects","$093d7ffb078d3faf$var$parseSelector","selectorIndex","tokens","getName","stripWhitespace","readValueWithParenthesis","counter","isEscaped","pos","slashCount","ensureNotTraversal","addTraversal","addSpecialAttribute","action","ignoreCase","finalizeSubselector","loop","firstChar","Equals","Exists","possibleAction","quote","sectionEnd","valueStart","forceIgnore","attributeSelector","PseudoElement","quot","Pseudo","Universal","$ad25a3bd7aa066fd$exports","trueFunc","falseFunc","$7cd471faad23c8d0$var$procedure","$7cd471faad23c8d0$export$41d1fe2780697dca","token","$7cd471faad23c8d0$var$attributes","$7cd471faad23c8d0$export$2e2bcd8739ae039","procs","$7cd471faad23c8d0$var$getProcedure","procNew","proc","d","$23f961d93aca4e45$export$ebf1ecb9197f27e","$7d8d6c745cb85c4e$var$whitespace","$35afcb4041d84e02$export$2e2bcd8739ae039","formula","absA","abs","bMod","sign","readSign","number","readNumber","charAt","skipWhitespace","$73f0aac9eef44ea3$var$getChildFunc","adapter","getParent","isTag","$73f0aac9eef44ea3$export$82462a21aead86ed","contains","getText","icontains","itext","rule","equals","func","getSiblings","currentSibling","_rule","scope","hover","$73f0aac9eef44ea3$var$dynamicStatePseudo","visited","active","$7db6ef9e5e533fe0$export$8dc723548151ed12","empty","getChildren","prevElementSibling","elemName","every","$7db6ef9e5e533fe0$export$d62f7d28fa725e36","subselect","argIndex","$5b03c4a18b37e361$export$9af93bb9e9126a2","disabled","enabled","required","optional","selected","checkbox","file","password","radio","reset","image","submit","header","button","input","$0b42720a09cf7c92$export$f2f25fe26aaee026","$0b42720a09cf7c92$export$a48279061b25ff7","$0b42720a09cf7c92$export$8666503a05bdce46","elemIndex","$0b42720a09cf7c92$var$copyOptions","lowerCaseAttributeNames","lowerCaseTags","quirksMode","cacheResults","pseudos","$0b42720a09cf7c92$var$is","compileToken","$0b42720a09cf7c92$export$f3666d140abaf082","is","matches","not","_context","relativeSelector","compiled","hasElement","shouldTestNextSiblings","nextElements","existsOne","$153123c67a28bf54$var$getElementParent","$de88d041f0c89979$export$bbd36b99ab1dd6af","$de88d041f0c89979$export$9ac76eb524b317ec","$de88d041f0c89979$var$includesScopePseudo","t","$de88d041f0c89979$var$DESCENDANT_TOKEN","$de88d041f0c89979$var$FLEXIBLE_DESCENDANT_TOKEN","$de88d041f0c89979$var$SCOPE_TOKEN","isArrayContext","finalContext","$de88d041f0c89979$var$absolutize","hasContext","query","rules","first","second","previous","userPseudo","stringPseudo","alias","pseudo","WeakSet","isFalseCache","add","lastElement","rootFunc","$de88d041f0c89979$var$reduceRules","$f410c3bb47955b9f$var$defaultEquals","$f410c3bb47955b9f$var$defaultOptions","$f410c3bb47955b9f$var$convertOptionFormats","_c","_d","$f410c3bb47955b9f$var$wrapCompile","$f410c3bb47955b9f$export$3ed2edee2e7c5e35","$f410c3bb47955b9f$var$getSelectorFunc","searchFunc","filteredElements","$f410c3bb47955b9f$export$9c634076e0a91d1f","$f410c3bb47955b9f$var$appendNextSiblings","elemsLength","nextSiblings","removeSubsets","findAll","findOne","$081d6eb11a64f3f7$export$899efafbba5f734f","$081d6eb11a64f3f7$export$b169a94581f05ec","$a14ff1cb26f79621$export$12837f7a14c656c9","selectors","filteredSelectors","plainSelectors","$5001d4900bd59287$var$UNIVERSAL_SELECTOR","$5001d4900bd59287$var$SCOPE_PSEUDO","$5001d4900bd59287$export$226b3eccf92c9ed9","$5001d4900bd59287$export$ad14ef4001db2bcd","plain","filtered","sel","$5001d4900bd59287$var$filterBySelector","$5001d4900bd59287$export$3dea766d36a8935f","$5001d4900bd59287$var$filterParsed","found","$5001d4900bd59287$var$filterElements","size","filteredSelector","missing","$5001d4900bd59287$var$findFilterElements","queryForSelector","totalLimit","filterIndex","findIndex","sub","partLimit","num","NaN","isFinite","elemsNoLimit","$5001d4900bd59287$var$findElements","$5001d4900bd59287$var$filterByPosition","remainingSelector","remainingHasTraversal","$5001d4900bd59287$var$find","els","$bb3edb5ec381eef7$var$reSiblingSelector","selectorOrHaystack","_make","haystack","$5001d4900bd59287$export$2e6c959c16ff56b8","results","uniqueSort","$bb3edb5ec381eef7$var$_getMatcher","matchMap","postFns","matched","$bb3edb5ec381eef7$var$_matcher","concat","$bb3edb5ec381eef7$var$_singleMatcher","$bb3edb5ec381eef7$var$_matchUntil","nextElem","innerMatcher","filterSelector","$bb3edb5ec381eef7$var$getFilterFn","$bb3edb5ec381eef7$var$_removeDuplicates","from","reverse","selectOpts","selectFn","newElems","filterFn","selectorOrNeedle","$haystack","needle","prevObject","other","selection","contents","$b8417ab04485f985$exports","$b8417ab04485f985$export$badf47413dd1dfee","$b8417ab04485f985$export$9ceefe31f12a3778","$b8417ab04485f985$export$44da2b52169043ea","$b8417ab04485f985$export$10d8903dec122b9d","$b8417ab04485f985$export$68159836694e22c1","$b8417ab04485f985$export$4997ffc0176396a6","$b8417ab04485f985$export$8e43de5b24cc2c01","$b8417ab04485f985$export$debb760848ca95a","$b8417ab04485f985$export$4b2e99c55a88c77b","$b8417ab04485f985$export$742acabee3dd6465","$b8417ab04485f985$export$c4f94c8b3850a5a9","$b8417ab04485f985$export$1c4c1e3098bf5ebe","$b8417ab04485f985$export$86b68c7dbeb53c22","$b8417ab04485f985$export$cd7f480d6b8286c3","$b8417ab04485f985$export$e6a6680780233a77","$b8417ab04485f985$export$6e22c362a0406a2c","$b8417ab04485f985$export$c0bb0b647f701bb5","$b8417ab04485f985$export$f84e8e69fd4488a5","$b8417ab04485f985$export$6f093cfa640b7166","$b8417ab04485f985$export$9cd59f9826255e47","uint8","tmp","extraBytes","parts","len2","$eeb0961446aae8e3$var$encodeChunk","$eeb0961446aae8e3$var$lookup","$eeb0961446aae8e3$var$revLookup","$eeb0961446aae8e3$var$Arr","Uint8Array","$eeb0961446aae8e3$var$code","$eeb0961446aae8e3$var$i","$eeb0961446aae8e3$var$len","buffer","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","rt","isNaN","floor","log","LN2","$51861dfc7ca9d588$var$customInspectSymbol","Symbol","$51861dfc7ca9d588$var$createBuffer","RangeError","buf","setPrototypeOf","$51861dfc7ca9d588$var$Buffer","arg","encodingOrOffset","$51861dfc7ca9d588$var$allocUnsafe","$51861dfc7ca9d588$var$from","$51861dfc7ca9d588$var$fromString","encoding","isEncoding","$51861dfc7ca9d588$var$byteLength","actual","ArrayBuffer","isView","$51861dfc7ca9d588$var$fromArrayView","arrayView","$51861dfc7ca9d588$var$isInstance","copy","$51861dfc7ca9d588$var$fromArrayBuffer","byteOffset","byteLength","$51861dfc7ca9d588$var$fromArrayLike","SharedArrayBuffer","valueOf","$51861dfc7ca9d588$var$fromObject","isBuffer","$51861dfc7ca9d588$var$checked","toPrimitive","$51861dfc7ca9d588$var$assertSize","mustMatch","loweredCase","$51861dfc7ca9d588$var$utf8ToBytes","$51861dfc7ca9d588$var$base64ToBytes","$51861dfc7ca9d588$var$slowToString","$51861dfc7ca9d588$var$hexSlice","out","$51861dfc7ca9d588$var$hexSliceLookupTable","$51861dfc7ca9d588$var$utf8Slice","$51861dfc7ca9d588$var$asciiSlice","$51861dfc7ca9d588$var$latin1Slice","$51861dfc7ca9d588$var$utf16leSlice","bytes","res","$51861dfc7ca9d588$var$swap","$51861dfc7ca9d588$var$bidirectionalIndexOf","dir","$51861dfc7ca9d588$var$arrayIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","$51861dfc7ca9d588$var$decodeCodePointsArray","codePoints","apply","$51861dfc7ca9d588$var$checkOffset","ext","$51861dfc7ca9d588$var$checkInt","$51861dfc7ca9d588$var$wrtBigUInt64LE","$51861dfc7ca9d588$var$checkIntBI","BigInt","$51861dfc7ca9d588$var$wrtBigUInt64BE","$51861dfc7ca9d588$var$checkIEEE754","$51861dfc7ca9d588$var$writeFloat","littleEndian","noAssert","$51861dfc7ca9d588$var$writeDouble","TYPED_ARRAY_SUPPORT","$51861dfc7ca9d588$var$typedArraySupport","proto","foo","console","poolSize","alloc","fill","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","y","list","swap16","swap32","swap64","toLocaleString","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","remaining","$51861dfc7ca9d588$var$hexWrite","strLen","$51861dfc7ca9d588$var$blitBuffer","$51861dfc7ca9d588$var$asciiToBytes","byteArray","$51861dfc7ca9d588$var$utf16leToBytes","units","toJSON","_arr","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$51861dfc7ca9d588$var$defineBigIntMethod","$51861dfc7ca9d588$var$validateNumber","last","$51861dfc7ca9d588$var$boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$51861dfc7ca9d588$var$errors","$51861dfc7ca9d588$var$E","sym","getMessage","Base","writable","stack","message","$51861dfc7ca9d588$var$addNumericalSeparator","range","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","msg","received","isInteger","$51861dfc7ca9d588$var$INVALID_BASE64_RE","leadSurrogate","$eeb0961446aae8e3$export$d622b2ad8d90c771","b64","lens","$eeb0961446aae8e3$var$getLens","validLen","placeHoldersLen","curByte","$51861dfc7ca9d588$var$base64clean","src","dst","alphabet","table","i16","$51861dfc7ca9d588$var$BufferBigIntNotDefined","$79cd7463df39241d$export$722fbec263ad908a","newChilds","_makeDomArray","_parse","$b8417ab04485f985$var$_insert","concatenator","domSrc","_render","$b8417ab04485f985$var$uniqueSplice","spliceIdx","spliceCount","spliceArgs","oldParent","oldSiblings","prevIdx","appendTarget","append","prependTarget","prepend","$b8417ab04485f985$var$_wrap","insert","wrapper","lastParent","parents","wrapperDom","elInsertLocation","each","replaceWith","insertBefore","clones","clonedSelf","targetArr","content","cont","textNode","$345cc7ac382021f7$exports","$345cc7ac382021f7$export$dbf350e5966cf602","$345cc7ac382021f7$var$getCss","$345cc7ac382021f7$var$setCss","styles","k","$345cc7ac382021f7$var$parse","trimmed","trimEnd","newStyles","$795b9badd05f4e5a$exports","$795b9badd05f4e5a$export$dfdc1655ccc5b9cb","$795b9badd05f4e5a$export$f01be45804d2885c","$795b9badd05f4e5a$var$submittableSelector","$795b9badd05f4e5a$var$r20","$795b9badd05f4e5a$var$rCRLF","serializeArray","retArr","encodeURIComponent","$elem","$605a7f365381d1d5$export$a25e727e7f7b9892","iterator","$13b6aff9b77366c5$var$UNDEFINED_CODE_POINTS","CODE_POINTS","$13b6aff9b77366c5$export$5abac700f947e2","DASH_DASH","CDATA_START","DOCTYPE","SCRIPT","PUBLIC","SYSTEM","$13b6aff9b77366c5$export$7e678b42035e707f","cp","$13b6aff9b77366c5$export$d6953a6077926e","$13b6aff9b77366c5$export$b3484aaf321bda02","ERR","$18505f1274889f1f$export$35db5c8036a15ad1","handler","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","line","lastErrOffset","col","getError","startLine","endLine","startCol","endCol","startOffset","endOffset","_err","onParseError","_addGap","_processSurrogate","nextCp","cp1","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","chunk","isLastChunk","insertHtmlAtCurrentPos","pattern","caseSensitive","peek","CARRIAGE_RETURN","LINE_FEED","advance","isCommonValidRange","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","count","$05436e75d13cd0ed$export$df33bba014b5841e","attrs","TokenType","$108ddd412d07cc89$exports","$108ddd412d07cc89$var$__createBinding","__createBinding","create","o","k2","desc","getOwnPropertyDescriptor","$108ddd412d07cc89$var$__setModuleDefault","__setModuleDefault","$108ddd412d07cc89$var$__importStar","__importStar","mod","$108ddd412d07cc89$var$__importDefault","__importDefault","decodeXML","decodeHTMLStrict","decodeHTMLAttribute","decodeHTML","determineBranch","EntityDecoder","decodeCodePoint","xmlDecodeTree","htmlDecodeTree","$108ddd412d07cc89$var$decode_data_html_js_1","$108ddd412d07cc89$var$decode_data_xml_js_1","$108ddd412d07cc89$var$decode_codepoint_js_1","$108ddd412d07cc89$var$isNumber","$108ddd412d07cc89$var$EntityDecoder","$108ddd412d07cc89$var$determineBranch","$108ddd412d07cc89$var$isEntityInAttributeInvalidEnd","$108ddd412d07cc89$var$getDecoder","$108ddd412d07cc89$var$htmlDecoder","$108ddd412d07cc89$var$xmlDecoder","mode","Legacy","$5deb0c47e1a27c89$exports","$5deb0c47e1a27c89$export$39db8a1315f68282","$5deb0c47e1a27c89$export$7e5172336f7d2bbb","$5deb0c47e1a27c89$export$5ed5f14a3d15367","$5deb0c47e1a27c89$export$4ce4f8c09f921aed","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","$5deb0c47e1a27c89$var$TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","UNKNOWN","$5deb0c47e1a27c89$var$$","MATHML","XLINK","XML","XMLNS","tn","$5deb0c47e1a27c89$var$UNESCAPED_TEXT","scriptingEnabled","$2c4fc6157fdd925a$var$C1_CONTROLS_REFERENCE_REPLACEMENTS","State","$2c4fc6157fdd925a$export$d0c9fb8d2ebe5159","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","$2c4fc6157fdd925a$var$isAsciiDigit","DIGIT_0","DIGIT_9","$2c4fc6157fdd925a$var$isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","$2c4fc6157fdd925a$var$isAsciiLetter","$2c4fc6157fdd925a$var$isAsciiLower","LATIN_SMALL_A","LATIN_SMALL_Z","$2c4fc6157fdd925a$var$isAsciiAlphaNumeric","$2c4fc6157fdd925a$var$isAsciiUpperHexDigit","LATIN_CAPITAL_F","$2c4fc6157fdd925a$var$isAsciiLowerHexDigit","LATIN_SMALL_F","$2c4fc6157fdd925a$var$isWhitespace","SPACE","TABULATION","FORM_FEED","$2c4fc6157fdd925a$var$isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","$2c4fc6157fdd925a$export$55e8b082af4aa63e","paused","inLoop","inForeignNode","lastStartTagName","returnState","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","_unconsume","_reconsumeInState","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","location","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","forceQuirks","publicId","systemId","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","attrLocations","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","NULL","_emitChars","_matchNamedCharacterReference","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_flushCodePointConsumedAsCharacterReference","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","matchResult","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","nullCharacterReference","REPLACEMENT_CHARACTER","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","$03dd88514dcbaecb$var$IMPLICIT_END_TAG_REQUIRED","$03dd88514dcbaecb$var$IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","$03dd88514dcbaecb$var$SCOPING_ELEMENT_NS","$03dd88514dcbaecb$var$NAMED_HEADERS","$03dd88514dcbaecb$var$TABLE_ROW_CONTEXT","$03dd88514dcbaecb$var$TABLE_BODY_CONTEXT","$03dd88514dcbaecb$var$TABLE_CONTEXT","$03dd88514dcbaecb$var$TABLE_CELLS","$03dd88514dcbaecb$export$56decf886ed987d6","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","document","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","newElement","insertAfter","referenceElement","newElementID","insertionIdx","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","tryPeekProperlyNestedBodyElement","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","ns","hasNumberedHeaderInScope","hasInListItemScope","hasInButtonScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","$3a77e1f54f03a4f4$var$MARKER","Marker","$3a77e1f54f03a4f4$export$20023318d9d5bbce","entries","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","cAttr","insertMarker","pushElement","insertElementAfterBookmark","bookmarkIdx","removeEntry","entryIndex","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","$96d1b2ecef66ec3e$var$createTextNode","nodeName","$96d1b2ecef66ec3e$export$7ddbba828dfa4796","createDocument","NO_QUIRKS","createDocumentFragment","createElement","namespaceURI","createCommentNode","appendChild","newNode","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","$a06b9e6616f0f275$var$VALID_DOCTYPE_NAME","$a06b9e6616f0f275$var$QUIRKS_MODE_PUBLIC_ID_PREFIXES","$a06b9e6616f0f275$var$QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","$a06b9e6616f0f275$var$QUIRKS_MODE_PUBLIC_IDS","$a06b9e6616f0f275$var$LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","$a06b9e6616f0f275$var$LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","$a06b9e6616f0f275$var$hasPrefix","prefixes","$a7b4b99c1048c081$var$MIME_TYPES","TEXT_HTML","APPLICATION_XML","$a7b4b99c1048c081$var$SVG_ATTRS_ADJUSTMENT_MAP","$a7b4b99c1048c081$var$XML_ATTRS_ADJUSTMENT_MAP","$a7b4b99c1048c081$export$86512877756eb1b1","$a7b4b99c1048c081$var$EXITS_FOREIGN_CONTENT","$a7b4b99c1048c081$export$c583cc5a9d633feb","$a7b4b99c1048c081$export$74ce06f755fb8f68","adjustedAttrName","$a7b4b99c1048c081$export$a5192af02995cbdc","adjustedAttrEntry","InsertionMode","$546dc23fbaaf59e4$var$BASE_LOC","$546dc23fbaaf59e4$var$TABLE_STRUCTURE_TAGS","$546dc23fbaaf59e4$var$defaultParserOptions","$546dc23fbaaf59e4$export$7acfa6ed01010e37","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","getFragmentParser","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","fragment","_adoptNodes","beforeToken","loc","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","documentChildren","docTypeNode","_attachElementToTree","startTag","_shouldFosterParentOnInsertion","_fosterParentElement","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","textNodeIdx","tnLoc","donor","closingToken","ctLoc","endLoc","endTag","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","foreignNS","$a7b4b99c1048c081$var$isHtmlIntegrationPoint","ENCODING","_reconstructActiveFormattingElements","listLength","unopenIdx","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","$546dc23fbaaf59e4$var$tokenInInitialMode","BEFORE_HTML","$546dc23fbaaf59e4$var$tokenBeforeHtml","$546dc23fbaaf59e4$var$tokenBeforeHead","$546dc23fbaaf59e4$var$tokenInHead","IN_HEAD_NO_SCRIPT","$546dc23fbaaf59e4$var$tokenInHeadNoScript","$546dc23fbaaf59e4$var$tokenAfterHead","$546dc23fbaaf59e4$var$characterInBody","$546dc23fbaaf59e4$var$characterInTable","IN_TABLE_TEXT","$546dc23fbaaf59e4$var$characterInTableText","$546dc23fbaaf59e4$var$tokenInColumnGroup","AFTER_BODY","$546dc23fbaaf59e4$var$tokenAfterBody","AFTER_AFTER_BODY","$546dc23fbaaf59e4$var$tokenAfterAfterBody","$546dc23fbaaf59e4$var$appendComment","AFTER_FRAMESET","$546dc23fbaaf59e4$var$tokenInTableText","$546dc23fbaaf59e4$var$appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","$546dc23fbaaf59e4$var$appendCommentToDocument","$546dc23fbaaf59e4$var$doctypeInInitialMode","QUIRKS","$a06b9e6616f0f275$export$64782beacef87b30","LIMITED_QUIRKS","nonConformingDoctype","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","$546dc23fbaaf59e4$var$startTagInForeignContent","$a7b4b99c1048c081$export$3435eb4ab4d2ed2d","startTagToken","isFontWithAttrs","COLOR","SIZE","FACE","$546dc23fbaaf59e4$var$popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","$a7b4b99c1048c081$export$95df78fe2e7f33e3","adjustedTagName","$546dc23fbaaf59e4$var$startTagBeforeHead","$546dc23fbaaf59e4$var$startTagInBody","$546dc23fbaaf59e4$var$startTagInHead","$546dc23fbaaf59e4$var$startTagInHeadNoScript","nestedNoscriptInHead","$546dc23fbaaf59e4$var$startTagAfterHead","abandonedHeadElementChild","misplacedStartTagForHeadElement","$546dc23fbaaf59e4$var$startTagInTable","$546dc23fbaaf59e4$var$startTagInCaption","$546dc23fbaaf59e4$var$TABLE_VOID_ELEMENTS","$546dc23fbaaf59e4$var$startTagInColumnGroup","$546dc23fbaaf59e4$var$startTagInTableBody","$546dc23fbaaf59e4$var$startTagInRow","$546dc23fbaaf59e4$var$startTagInCell","$546dc23fbaaf59e4$var$startTagInSelect","$546dc23fbaaf59e4$var$startTagInSelectInTable","$546dc23fbaaf59e4$var$startTagInTemplate","$546dc23fbaaf59e4$var$startTagInFrameset","$546dc23fbaaf59e4$var$startTagAfterFrameset","$546dc23fbaaf59e4$var$startTagAfterAfterFrameset","$546dc23fbaaf59e4$var$endTagInForeignContent","_endTagOutsideForeignContent","$546dc23fbaaf59e4$var$endTagBeforeHtml","$546dc23fbaaf59e4$var$endTagBeforeHead","endTagWithoutMatchingOpenElement","$546dc23fbaaf59e4$var$endTagInHead","$546dc23fbaaf59e4$var$templateEndTagInHead","$546dc23fbaaf59e4$var$endTagInHeadNoScript","$546dc23fbaaf59e4$var$endTagAfterHead","$546dc23fbaaf59e4$var$endTagInBody","$546dc23fbaaf59e4$var$endTagInTable","$546dc23fbaaf59e4$var$endTagInCaption","$546dc23fbaaf59e4$var$endTagInColumnGroup","$546dc23fbaaf59e4$var$endTagInTableBody","$546dc23fbaaf59e4$var$endTagInRow","$546dc23fbaaf59e4$var$endTagInCell","$546dc23fbaaf59e4$var$endTagInSelect","$546dc23fbaaf59e4$var$endTagInSelectInTable","$546dc23fbaaf59e4$var$endTagAfterBody","$546dc23fbaaf59e4$var$eofInBody","eofInElementThatCanContainOnlyText","$546dc23fbaaf59e4$var$eofInTemplate","$546dc23fbaaf59e4$var$stopParsing","$546dc23fbaaf59e4$var$whitespaceCharacterInBody","$546dc23fbaaf59e4$var$whitespaceCharacterInTableText","$546dc23fbaaf59e4$var$callAdoptionAgency","formattingElementEntry","$546dc23fbaaf59e4$var$aaObtainFormattingElementEntry","$546dc23fbaaf59e4$var$genericEndTagInBody","furthestBlock","$546dc23fbaaf59e4$var$aaObtainFurthestBlock","$546dc23fbaaf59e4$var$aaInnerLoop","formattingElement","nextElement","elementEntry","counterOverflow","shouldRemoveFromOpenElements","$546dc23fbaaf59e4$var$aaRecreateElementFromEntry","commonAncestor","$546dc23fbaaf59e4$var$aaInsertLastNodeInCommonAncestor","$546dc23fbaaf59e4$var$aaReplaceFormattingElement","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","$546dc23fbaaf59e4$var$modeInBody","$546dc23fbaaf59e4$var$areaStartTagInBody","$546dc23fbaaf59e4$var$isHiddenInput","inputType","TYPE","$546dc23fbaaf59e4$var$noembedStartTagInBody","$546dc23fbaaf59e4$var$genericStartTagInBody","$546dc23fbaaf59e4$var$aStartTagInBody","activeElementEntry","$546dc23fbaaf59e4$var$listItemStartTagInBody","elementId","$546dc23fbaaf59e4$var$bodyStartTagInBody","$546dc23fbaaf59e4$var$formStartTagInBody","inTemplate","$546dc23fbaaf59e4$var$framesetStartTagInBody","$546dc23fbaaf59e4$var$addressEndTagInBody","$546dc23fbaaf59e4$var$ddEndTagInBody","$546dc23fbaaf59e4$var$bodyEndTagInBody","$546dc23fbaaf59e4$var$formEndTagInBody","$546dc23fbaaf59e4$var$appletEndTagInBody","$546dc23fbaaf59e4$var$tokenInTable","savedFosterParentingState","$69316fb51a1a0332$exports","escapeText","escapeAttribute","escapeUTF8","escape","encodeXML","getCodePoint","xmlReplacer","$69316fb51a1a0332$var$xmlCodeMap","$69316fb51a1a0332$var$encodeXML","$69316fb51a1a0332$var$getEscaper","$6c820babda949dde$var$VOID_ELEMENTS","$6c820babda949dde$var$defaultOpts","$acbd03306e728ee4$var$enquoteDoctypeId","$acbd03306e728ee4$export$e00c9c6684b0ace","attribsNamespace","attribsPrefix","$ed5b76e098a38311$var$renderOpts","$361de31a633664d8$var$isWhitespace","Space","NewLine","Tab","FormFeed","CarriageReturn","$361de31a633664d8$var$isEndOfTagSection","Slash","Gt","$361de31a633664d8$var$isNumber","Zero","Nine","QuoteType","$361de31a633664d8$var$Sequences","Cdata","CdataEnd","CommentEnd","ScriptEnd","StyleEnd","TitleEnd","$361de31a633664d8$export$2e2bcd8739ae039","cbs","sectionStart","baseState","isSpecial","running","currentSequence","sequenceIndex","trieIndex","trieCurrent","entityResult","entityExcess","entityTrie","finish","getIndex","getSectionStart","stateText","Lt","fastForwardTo","BeforeTagName","Amp","BeforeEntity","stateSpecialStartSequence","isEnd","isMatch","InTagName","stateInTagName","stateInSpecialTag","endOfText","actualIndex","stateInClosingTagName","stateCDATASequence","InCommentLike","InDeclaration","stateInDeclaration","stateInCommentLike","oncdata","isTagStartChar","startSpecial","sequence","SpecialStartSequence","stateBeforeTagName","ExclamationMark","BeforeDeclaration","Questionmark","InProcessingInstruction","lower","BeforeSpecialS","BeforeClosingTagName","onopentagname","BeforeAttributeName","stateBeforeAttributeName","stateBeforeClosingTagName","InClosingTagName","InSpecialComment","AfterClosingTagName","stateAfterClosingTagName","onopentagend","InSpecialTag","InSelfClosingTag","InAttributeName","stateInSelfClosingTag","onselfclosingtag","stateInAttributeName","Eq","onattribname","AfterAttributeName","stateAfterAttributeName","BeforeAttributeValue","onattribend","NoValue","stateBeforeAttributeValue","DoubleQuote","InAttributeValueDq","SingleQuote","InAttributeValueSq","InAttributeValueNq","stateInAttributeValueNoQuotes","handleInAttributeValue","onattribdata","Double","Single","stateInAttributeValueDoubleQuotes","stateInAttributeValueSingleQuotes","Unquoted","stateBeforeDeclaration","OpeningSquareBracket","CDATASequence","Dash","BeforeComment","ondeclaration","stateInProcessingInstruction","stateBeforeComment","stateInSpecialComment","stateBeforeSpecialS","stateBeforeEntity","BeforeNumericEntity","InNamedEntity","stateInNamedEntity","emitNamedEntity","allowLegacyEntity","Semi","entityStart","emitPartial","stateBeforeNumericEntity","LowerX","InHexEntity","InNumericEntity","stateInNumericEntity","strict","numberStart","stateInHexEntity","UpperF","LowerF","cleanup","shouldContinue","handleTrailingData","onattribentity","ontextentity","$d52f9a6bad7ddacb$var$formTags","$d52f9a6bad7ddacb$var$pTag","$d52f9a6bad7ddacb$var$tableSectionTags","$d52f9a6bad7ddacb$var$ddtTags","$d52f9a6bad7ddacb$var$rtpTags","$d52f9a6bad7ddacb$var$openImpliesClose","$d52f9a6bad7ddacb$var$voidElements","$d52f9a6bad7ddacb$var$foreignContextElements","$d52f9a6bad7ddacb$var$htmlIntegrationElements","$d52f9a6bad7ddacb$var$reNameEnd","$d52f9a6bad7ddacb$export$7acfa6ed01010e37","_e","openTagStart","tagname","attribname","attribvalue","foreignContext","buffers","bufferOffset","writeIndex","ended","lowerCaseTagNames","Tokenizer","getSlice","isVoidElement","emitOpenTag","impliesClose","endOpenTag","isImplied","_f","closeCurrentTag","recognizeSelfClosing","isOpenImplied","onattribute","getInstructionName","search","_g","_h","_j","_k","recognizeCDATA","parseComplete","shiftBuffer","parseChunk","$f3e04a7c11f77f94$var$parse","isDocument","$79cd7463df39241d$require$Buffer","$f3e04a7c11f77f94$export$11e63f7b0f3d9900","render","internalOpts","initialRoot","LoadedCheerio","initialize","r","rootInstance","$d2f5fbf8095a538d$var$isNode","instance","searchContext","$6c820babda949dde$var$serializeNode","$6c820babda949dde$var$serializeElement","$6c820babda949dde$var$serializeAttributes","$6c820babda949dde$var$isVoidElement","$6c820babda949dde$var$serializeChildNodes","currentNode","$6c820babda949dde$var$serializeTextNode","parentTn","$6c820babda949dde$var$serializeCommentNode","$6c820babda949dde$var$serializeDocumentTypeNode","$f3e04a7c11f77f94$export$2344b14b097df817","merge","$f3e04a7c11f77f94$export$4950aa0f605343fb","parseHTML","$f3e04a7c11f77f94$export$8a49393be2d55148","$f3e04a7c11f77f94$export$e8e78c978b129247","$30033f2c615b9910$var$isWhitespace","$30033f2c615b9910$var$isEndOfTagSection","$30033f2c615b9910$var$Sequences","$30033f2c615b9910$export$2e2bcd8739ae039","entityDecoder","InEntity","stateInEntity","$c835fa8cb49db29b$var$formTags","$c835fa8cb49db29b$var$pTag","$c835fa8cb49db29b$var$tableSectionTags","$c835fa8cb49db29b$var$ddtTags","$c835fa8cb49db29b$var$rtpTags","$c835fa8cb49db29b$var$openImpliesClose","$c835fa8cb49db29b$var$voidElements","$c835fa8cb49db29b$var$foreignContextElements","$c835fa8cb49db29b$var$htmlIntegrationElements","$c835fa8cb49db29b$var$reNameEnd","$c835fa8cb49db29b$export$7acfa6ed01010e37","htmlMode","$3fb77fbe57d68b10$var$repeat","$3fb77fbe57d68b10$var$blockElements","$3fb77fbe57d68b10$var$isBlock","$3fb77fbe57d68b10$var$is","$3fb77fbe57d68b10$var$voidElements","$3fb77fbe57d68b10$var$isVoid","$3fb77fbe57d68b10$var$meaningfulWhenBlankElements","$3fb77fbe57d68b10$var$has","getElementsByTagName","$3fb77fbe57d68b10$var$rules","$3fb77fbe57d68b10$var$cleanAttribute","attribute","$3fb77fbe57d68b10$var$Rules","_keep","_remove","blankRule","blankReplacement","keepReplacement","defaultRule","defaultReplacement","$3fb77fbe57d68b10$var$findRule","$3fb77fbe57d68b10$var$filterValue","$3fb77fbe57d68b10$var$remove","removeChild","$3fb77fbe57d68b10$var$next","isPre","paragraph","lineBreak","br","heading","hLevel","headingStyle","underline","blockquote","lastElementChild","listItem","bulletListMarker","getAttribute","indentedCodeBlock","codeBlockStyle","textContent","fencedCodeBlock","language","fenceChar","fence","fenceSize","fenceInCodeRegex","horizontalRule","hr","inlineLink","linkStyle","title","referenceLink","reference","linkReferenceStyle","references","emphasis","emDelimiter","strong","strongDelimiter","hasSiblings","isCodeBlock","extraSpace","delimiter","alt","keep","forNode","isBlank","$3fb77fbe57d68b10$var$root","$3fb77fbe57d68b10$var$HTMLParser","$3fb77fbe57d68b10$var$canParseHTMLNatively","Parser","DOMParser","canParse","parseFromString","$3fb77fbe57d68b10$var$createHTMLParser","$3fb77fbe57d68b10$var$shouldUseActiveX","useActiveX","implementation","createHTMLDocument","open","ActiveXObject","close","designMode","$3fb77fbe57d68b10$var$RootNode","$3fb77fbe57d68b10$var$collapseWhitespace","isBlock","isVoid","prevText","keepLeadingWs","nextNode","$3fb77fbe57d68b10$var$htmlParser","getElementById","preformattedCode","$3fb77fbe57d68b10$var$isPreOrCode","$3fb77fbe57d68b10$var$Node","isCode","flankingWhitespace","$3fb77fbe57d68b10$var$flankingWhitespace","leading","trailing","edges","leadingAscii","leadingNonAscii","trailingNonAscii","trailingAscii","$3fb77fbe57d68b10$var$isFlankedByWhitespace","side","regExp","isFlanked","$3fb77fbe57d68b10$var$reduce","$3fb77fbe57d68b10$var$escapes","$3fb77fbe57d68b10$var$TurndownService","$3fb77fbe57d68b10$var$extend","destination","outerHTML","$3fb77fbe57d68b10$var$process","$3fb77fbe57d68b10$var$replacementForNode","$3fb77fbe57d68b10$var$join","$3fb77fbe57d68b10$var$postProcess","whitespace","s1","$3fb77fbe57d68b10$var$trimTrailingNewlines","indexEnd","s2","nls","turndown","use","plugin","addRule","accumulator","TextAlignment","TableCellMerge","TableCaptionPosition","$663deac50d96ff47$var$IndexOutOfBoundsError","$663deac50d96ff47$export$35468a455d619eb3","label","position","top","getLabel","$663deac50d96ff47$export$1e4baea7053fc0e3","row","column","merged","isHeader","textAlign","none","isHeaderCell","getTextAlignment","setText","getColspan","left","indexOfColumn","columnCount","colspan","cells","getCellsInRow","getRowspan","above","indexOfRow","rowCount","rowspan","getCellsInColumn","$663deac50d96ff47$export$b05581f4e764e162","isMultiline","startsNewSection","updateCells","getCells","cell","getCell","at","$663deac50d96ff47$export$8b338ed8502b024","wrappable","$663deac50d96ff47$export$54ec01a60f47d33d","rows","columns","caption","beforeTable","afterTable","rowNum","colNum","addRow","addColumn","getRow","getColumn","removeColumn","colObj","columnCells","removeRow","rowObj","rowCells","moveColumn","newIndex","moveRow","getHeaderRows","getNormalRows","getRows","getColumns","getCellByObjs","columnObj","newCell","addCell","update","colIndex","rowIndex","sanitize","mergeMultilineRows","newRows","merging","actualRowIndex","parentCell","CSVTableRendererMode","$663deac50d96ff47$var$ParsingError","$663deac50d96ff47$var$rowRegex$2","$663deac50d96ff47$var$delimiterRowRegex","$663deac50d96ff47$var$removeInvisibleCharacters","$663deac50d96ff47$var$escapeMarkdown","mdStr","$663deac50d96ff47$var$mdToHtml","markdown","inline","lines","quoted","$663deac50d96ff47$var$htmlToMd","turndownService","$663deac50d96ff47$var$cssToTextAlign","center","right","ParsingState","HTMLTableParserMode","$663deac50d96ff47$var$rowRegex$1","$663deac50d96ff47$var$separatorRegex","$663deac50d96ff47$var$captionRegex","$663deac50d96ff47$var$rowRegex","$2b6e161c9edcf319$require$HTMLTableRenderer","prettify","indent","renderOutsideTable","headerRows","normalRows","indentString","renderRow","renderedCell","renderCell","cellProps","$663deac50d96ff47$var$textAlignToCSS","cellTag","indentLevel","repeat","$2b6e161c9edcf319$require$MultiMarkdownTableParser","parsedTable","BeforeTable","startNewSection","hasSeparator","wasMultiline","TopCaption","Header","AfterTable","endsWith","Separator","Row","BottomCaption","tableRow","cellContent","slashEscaped","fenceEscaped","tableColumn","alignment","separator","bottom","$2b6e161c9edcf319$require$GitHubFlavoredMarkdownTableParser","hasDelimiterRow","HeaderRow","DataRows","DelimiterRow","$2b6e161c9edcf319$require$HTMLTableParser","ConvertHTMLElements","$663deac50d96ff47$var$getTurndownService","$677e3d995fee76db$export$b6a9369736b19f4d","$","$tables","$table","hasSections","tableTextAlign","$theads","sectionTextAlign","parseSection","$tbodies","domTBody","$captions","$caption","$rows","defaultTextAlign","allowHeaderDetection","firstRowStartsNewSection","rowspanGhostCells","rowOffset","domRowIndex","colOffset","$row","$cells","allCellsAreTH","domColIndex","$cell","ghost","parseCell","hasClass","cellIsHeader","nextColumn","mergedCell","nextRow","PreserveHTMLElements","StripHTMLElements","$2b6e161c9edcf319$require$CSVTableParser","assumeFirstLineIsHeader","csv","isQuoted","lastChar","tableCell","$2b6e161c9edcf319$require$CSVTableRenderer","EscapeWithQuotes","specialCharactersRegex","specialCharactersRegexGlobal","quoteRegex","renderedRow","AlwaysUseQuotes","OmitSpecialCharacters","$2b6e161c9edcf319$require$PrettyMultiMarkdownTableRenderer","columnWidths","determineColumnWidths","renderCaption","renderSeparator","cellWidth","textLength","ceil","textWidth","pv","cv","$2b6e161c9edcf319$require$MinifiedMultiMarkdownTableRenderer","$2b6e161c9edcf319$require$GitHubFlavoredMarkdownTableRenderer","headerRow","dataRows","renderDelimiterRow","determineColumnWidth","cellTextLength","$2b6e161c9edcf319$require$DokuWikiTableParser","convertMarkup","spaces","leftHasSpaces","rightHasSpaces","foundCellContent","rowIsHeader","markup","$2b6e161c9edcf319$require$DokuWikiTableRenderer","lastCellIsHeader","renderText","colWidth","$2b6e161c9edcf319$var$mmdParser","$2b6e161c9edcf319$var$gfmParser","$2b6e161c9edcf319$var$htmlParser","$2b6e161c9edcf319$var$dokuWikiParser","$2b6e161c9edcf319$var$csvParser","$2b6e161c9edcf319$var$csvSemicolonParser","$2b6e161c9edcf319$var$mmdPrettyRenderer","$2b6e161c9edcf319$var$mmdMinifiedRenderer","$2b6e161c9edcf319$var$gfmPrettyRenderer","$2b6e161c9edcf319$var$gfmMinifiedRenderer","$2b6e161c9edcf319$var$htmlPrettyRenderer","$2b6e161c9edcf319$var$htmlMinifiedRenderer","$2b6e161c9edcf319$var$dokuWikiRenderer","$2b6e161c9edcf319$var$csvRenderer","$2b6e161c9edcf319$var$csvSemicolonRenderer","$2b6e161c9edcf319$var$escapeHTML","$2b6e161c9edcf319$var$separatorRegex","$2b6e161c9edcf319$var$captionRegex","$2b6e161c9edcf319$var$getInputFormat","format","$2b6e161c9edcf319$var$detectFormat","$2b6e161c9edcf319$var$getInput","$2b6e161c9edcf319$var$setInput","$2b6e161c9edcf319$var$getLine","$2b6e161c9edcf319$var$getOutputFormat","$2b6e161c9edcf319$var$setOutputRaw","innerHTML","$2b6e161c9edcf319$var$setOutputPre","$2b6e161c9edcf319$var$setErrorOutput","style","visibility","$2b6e161c9edcf319$var$hideError","$2b6e161c9edcf319$var$parseInput","$2b6e161c9edcf319$var$renderOutput","$2b6e161c9edcf319$var$onChange","inputFormat","classList","outputFormat","$2b6e161c9edcf319$var$actionWrapper","cursor","$2b6e161c9edcf319$var$getTableCursor","$2b6e161c9edcf319$var$getCursor","textarea","$2b6e161c9edcf319$var$determineCursorPosition","selectionEnd","rememberEmptyLine","$2b6e161c9edcf319$var$determineColumnIndex","lineStr","newCursorIndex","$2b6e161c9edcf319$var$determineCursorIndex","currentLine","currentCh","currentIndex","focus","addEventListener","$2b6e161c9edcf319$var$formatInput","$2b6e161c9edcf319$var$tooltipTriggerList","querySelectorAll","tooltipTriggerEl","bootstrap","Tooltip","rowRegex"],"version":3,"file":"index.aeae72dc.js.map"}